TranslationUnitDecl 0xffd118 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xffd9f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xffd6b0 '__int128'
|-TypedefDecl 0xffda60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xffd6d0 'unsigned __int128'
|-TypedefDecl 0xffddd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0xffdb50 '__NSConstantString_tag'
|   `-CXXRecord 0xffdab8 '__NSConstantString_tag'
|-TypedefDecl 0xffde70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xffde30 'char *'
|   `-BuiltinType 0xffd1b0 'char'
|-TypedefDecl 0x103aeb8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x103ae60 '__va_list_tag [1]' 1 
|   `-RecordType 0xffdf60 '__va_list_tag'
|     `-CXXRecord 0xffdec8 '__va_list_tag'
|-NamespaceDecl 0x103af10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:256:1, line:264:1> line:256:11 std
| |-TypedefDecl 0x103af98 <line:258:3, col:26> col:26 referenced size_t 'unsigned long'
| | `-BuiltinType 0xffd2d0 'unsigned long'
| |-TypedefDecl 0x103b008 <line:259:3, col:28> col:28 referenced ptrdiff_t 'long'
| | `-BuiltinType 0xffd230 'long'
| `-TypedefDecl 0x103b0a8 <line:262:3, col:29> col:29 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 0x103b070 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 0x103b060 <col:20> 'nullptr_t'
|     `-BuiltinType 0xffd9a0 'nullptr_t'
|-NamespaceDecl 0x103b100 prev 0x103af10 <line:278:1, line:281:1> line:278:11 std
| |-original Namespace 0x103af10 'std'
| `-NamespaceDecl 0x103b208 <line:280:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x103b278 <col:43, col:63> cxx11
|-NamespaceDecl 0x103b2f8 <line:282:1, line:285:1> line:282:11 __gnu_cxx
| `-NamespaceDecl 0x103b388 <line:284:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x103b3f8 <col:43, col:63> cxx11
|-NamespaceDecl 0x103b518 prev 0x103b100 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/memoryfwd.h:50:1, line:78:1> line:50:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x103b588 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x103b738 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/memoryfwd.h:63:3, line:64:11> col:11 allocator
| | |-TemplateTypeParmDecl 0x103b5e0 <line:63:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x103b6a8 <line:64:5, col:11> col:11 class allocator
| | |-ClassTemplateSpecialization 0x14926d8 'allocator'
| | |-ClassTemplateSpecialization 0x107ecf0 'allocator'
| | |-ClassTemplateSpecialization 0x107f160 'allocator'
| | |-ClassTemplateSpecializationDecl 0x107f5d0 <line:63:3, line:64:11> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:111:11 class allocator definition
| | | |-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public '__allocator_base<char16_t>':'__gnu_cxx::new_allocator<char16_t>'
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0x1722a68 prev 0x107f5d0 <col:5, col:11> col:11 implicit class allocator
| | | |-AccessSpecDecl 0x1722af8 <line:113:4, col:10> col:4 public
| | | |-TypedefDecl 0x1722b20 <line:114:7, col:26> col:26 size_type 'std::size_t':'unsigned long'
| | | | `-TypedefType 0x10f2c80 'std::size_t' sugar
| | | |   |-Typedef 0x103af98 'size_t'
| | | |   `-BuiltinType 0xffd2d0 'unsigned long'
| | | |-TypedefDecl 0x1722b78 <line:115:7, col:26> col:26 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1722c08 <line:116:7, col:26> col:26 pointer 'char16_t *'
| | | | `-PointerType 0x1722bd0 'char16_t *'
| | | |   `-SubstTemplateTypeParmType 0x171fc40 'char16_t' sugar
| | | |     |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x14940b0 '_Tp'
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1722c98 <line:117:7, col:26> col:26 const_pointer 'const char16_t *'
| | | | `-PointerType 0x1722c60 'const char16_t *'
| | | |   `-QualType 0x171fc41 'const char16_t' const
| | | |     `-SubstTemplateTypeParmType 0x171fc40 'char16_t' sugar
| | | |       |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x14940b0 '_Tp'
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1722d28 <line:118:7, col:26> col:26 reference 'char16_t &'
| | | | `-LValueReferenceType 0x1722cf0 'char16_t &'
| | | |   `-SubstTemplateTypeParmType 0x171fc40 'char16_t' sugar
| | | |     |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x14940b0 '_Tp'
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1722db8 <line:119:7, col:26> col:26 const_reference 'const char16_t &'
| | | | `-LValueReferenceType 0x1722d80 'const char16_t &'
| | | |   `-QualType 0x171fc41 'const char16_t' const
| | | |     `-SubstTemplateTypeParmType 0x171fc40 'char16_t' sugar
| | | |       |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x14940b0 '_Tp'
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1722e20 <line:120:7, col:26> col:26 referenced value_type 'char16_t':'char16_t'
| | | | `-SubstTemplateTypeParmType 0x171fc40 'char16_t' sugar
| | | |   |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x14940b0 '_Tp'
| | | |   `-BuiltinType 0xffd730 'char16_t'
| | | |-ClassTemplateDecl 0x1722fa8 <line:122:7, line:123:9> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1722e78 <line:122:16, col:25> col:25 typename depth 0 index 0 _Tp1
| | | | `-CXXRecordDecl 0x1722f18 <line:123:2, col:9> col:9 struct rebind
| | | |-TypedefDecl 0x1723198 <line:129:7, col:25> col:25 propagate_on_container_move_assignment 'std::true_type':'std::integral_constant<bool, true>'
| | | | `-TypedefType 0x113fc30 'std::true_type' sugar
| | | |   |-Typedef 0x11374d8 'true_type'
| | | |   `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| | | |     |-TemplateArgument type 'bool'
| | | |     |-TemplateArgument expr
| | | |     | `-ConstantExpr 0x11372b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| | | |     |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| | | |     `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| | | |       `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| | | |-TypedefDecl 0x17231f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:131:7, col:25> col:25 is_always_equal 'std::true_type':'std::integral_constant<bool, true>'
| | | | `-TypedefType 0x113fc30 'std::true_type' sugar
| | | |   |-Typedef 0x11374d8 'true_type'
| | | |   `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| | | |     |-TemplateArgument type 'bool'
| | | |     |-TemplateArgument expr
| | | |     | `-ConstantExpr 0x11372b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| | | |     |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| | | |     `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| | | |       `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| | | |-CXXConstructorDecl 0x1723280 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:137:7, col:38> col:7 used allocator 'void () noexcept'
| | | | |-CXXCtorInitializer '__allocator_base<char16_t>':'__gnu_cxx::new_allocator<char16_t>'
| | | | | `-CXXConstructExpr 0x1ad8660 <col:7> '__allocator_base<char16_t>':'__gnu_cxx::new_allocator<char16_t>' 'void () noexcept'
| | | | `-CompoundStmt 0x1496f38 <col:36, col:38>
| | | |-CXXConstructorDecl 0x1723490 <line:140:7, line:141:38> line:140:7 used allocator 'void (const std::allocator<char16_t> &) noexcept'
| | | | |-ParmVarDecl 0x1723378 <col:17, col:34> col:34 used __a 'const std::allocator<char16_t> &'
| | | | |-CXXCtorInitializer '__allocator_base<char16_t>':'__gnu_cxx::new_allocator<char16_t>'
| | | | | `-CXXConstructExpr 0x1adb858 <line:141:9, col:34> '__allocator_base<char16_t>':'__gnu_cxx::new_allocator<char16_t>' 'void (const __gnu_cxx::new_allocator<char16_t> &) noexcept'
| | | | |   `-ImplicitCastExpr 0x1adb838 <col:31> 'const __gnu_cxx::new_allocator<char16_t>' lvalue <DerivedToBase (new_allocator)>
| | | | |     `-DeclRefExpr 0x1adb360 <col:31> 'const std::allocator<char16_t>' lvalue ParmVar 0x1723378 '__a' 'const std::allocator<char16_t> &'
| | | | `-CompoundStmt 0x1497158 <col:36, col:38>
| | | |-CXXMethodDecl 0x1723648 <line:145:7, col:54> col:18 operator= 'std::allocator<char16_t> &(const std::allocator<char16_t> &)' default trivial noexcept-unevaluated 0x1723648
| | | | `-ParmVarDecl 0x1723588 <col:28, col:43> col:44 'const std::allocator<char16_t> &'
| | | |-FunctionTemplateDecl 0x17239e8 <line:148:7, line:150:55> col:2 allocator
| | | | |-TemplateTypeParmDecl 0x1723700 <line:148:16, col:25> col:25 typename depth 0 index 0 _Tp1
| | | | |-CXXConstructorDecl 0x1723940 <line:150:2, col:55> col:2 allocator 'void (const allocator<_Tp1> &) noexcept'
| | | | | `-ParmVarDecl 0x1723850 <col:12, col:33> col:34 'const allocator<_Tp1> &'
| | | | `-CXXConstructorDecl 0x172fa50 <col:2, col:55> col:2 allocator 'void (const allocator<char16_t> &) noexcept'
| | | |   |-TemplateArgument type 'char16_t'
| | | |   `-ParmVarDecl 0x172f980 <col:12, col:33> col:34 'const allocator<char16_t> &'
| | | |-CXXDestructorDecl 0x1723af0 <line:152:7, col:39> col:7 used ~allocator 'void () noexcept'
| | | | `-CompoundStmt 0x1497178 <col:37, col:39>
| | | |-FriendDecl 0x1723e20 <line:154:7, line:156:22> line:155:7
| | | | `-FunctionDecl 0x1723d50 parent 0x14925e8 <line:154:7, line:156:22> line:155:7 operator== 'bool (const std::allocator<char16_t> &, const std::allocator<char16_t> &) noexcept'
| | | |   |-ParmVarDecl 0x1723bc0 <col:18, col:33> col:34 'const std::allocator<char16_t> &'
| | | |   `-ParmVarDecl 0x1723c38 <col:36, col:51> col:52 'const std::allocator<char16_t> &'
| | | `-FriendDecl 0x1724058 <line:158:7, line:160:23> line:159:7
| | |   `-FunctionDecl 0x1723f88 parent 0x14925e8 <line:158:7, line:160:23> line:159:7 operator!= 'bool (const std::allocator<char16_t> &, const std::allocator<char16_t> &) noexcept'
| | |     |-ParmVarDecl 0x1723e70 <col:18, col:33> col:34 'const std::allocator<char16_t> &'
| | |     `-ParmVarDecl 0x1723ee8 <col:36, col:51> col:52 'const std::allocator<char16_t> &'
| | `-ClassTemplateSpecializationDecl 0x10af5e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/memoryfwd.h:63:3, line:64:11> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:111:11 class allocator definition
| |   |-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor exists non_trivial user_provided
| |   | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |   | |-MoveConstructor needs_overload_resolution
| |   | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| |   | |-MoveAssignment needs_overload_resolution
| |   | `-Destructor non_trivial user_declared needs_overload_resolution
| |   |-public '__allocator_base<char32_t>':'__gnu_cxx::new_allocator<char32_t>'
| |   |-TemplateArgument type 'char32_t'
| |   |-CXXRecordDecl 0x1754758 prev 0x10af5e0 <col:5, col:11> col:11 implicit class allocator
| |   |-AccessSpecDecl 0x17547e8 <line:113:4, col:10> col:4 public
| |   |-TypedefDecl 0x1754810 <line:114:7, col:26> col:26 size_type 'std::size_t':'unsigned long'
| |   | `-TypedefType 0x10f2c80 'std::size_t' sugar
| |   |   |-Typedef 0x103af98 'size_t'
| |   |   `-BuiltinType 0xffd2d0 'unsigned long'
| |   |-TypedefDecl 0x1754868 <line:115:7, col:26> col:26 difference_type 'std::ptrdiff_t':'long'
| |   | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   |   |-Typedef 0x103b008 'ptrdiff_t'
| |   |   `-BuiltinType 0xffd230 'long'
| |   |-TypedefDecl 0x17548f8 <line:116:7, col:26> col:26 pointer 'char32_t *'
| |   | `-PointerType 0x17548c0 'char32_t *'
| |   |   `-SubstTemplateTypeParmType 0x1751930 'char32_t' sugar
| |   |     |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| |   |     | `-TemplateTypeParm 0x14940b0 '_Tp'
| |   |     `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1754988 <line:117:7, col:26> col:26 const_pointer 'const char32_t *'
| |   | `-PointerType 0x1754950 'const char32_t *'
| |   |   `-QualType 0x1751931 'const char32_t' const
| |   |     `-SubstTemplateTypeParmType 0x1751930 'char32_t' sugar
| |   |       |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x14940b0 '_Tp'
| |   |       `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1754a18 <line:118:7, col:26> col:26 reference 'char32_t &'
| |   | `-LValueReferenceType 0x17549e0 'char32_t &'
| |   |   `-SubstTemplateTypeParmType 0x1751930 'char32_t' sugar
| |   |     |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| |   |     | `-TemplateTypeParm 0x14940b0 '_Tp'
| |   |     `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1754aa8 <line:119:7, col:26> col:26 const_reference 'const char32_t &'
| |   | `-LValueReferenceType 0x1754a70 'const char32_t &'
| |   |   `-QualType 0x1751931 'const char32_t' const
| |   |     `-SubstTemplateTypeParmType 0x1751930 'char32_t' sugar
| |   |       |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x14940b0 '_Tp'
| |   |       `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1754b10 <line:120:7, col:26> col:26 referenced value_type 'char32_t':'char32_t'
| |   | `-SubstTemplateTypeParmType 0x1751930 'char32_t' sugar
| |   |   |-TemplateTypeParmType 0x1494100 '_Tp' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x14940b0 '_Tp'
| |   |   `-BuiltinType 0xffd750 'char32_t'
| |   |-ClassTemplateDecl 0x1754c98 <line:122:7, line:123:9> col:9 rebind
| |   | |-TemplateTypeParmDecl 0x1754b68 <line:122:16, col:25> col:25 typename depth 0 index 0 _Tp1
| |   | `-CXXRecordDecl 0x1754c08 <line:123:2, col:9> col:9 struct rebind
| |   |-TypedefDecl 0x1754e88 <line:129:7, col:25> col:25 propagate_on_container_move_assignment 'std::true_type':'std::integral_constant<bool, true>'
| |   | `-TypedefType 0x113fc30 'std::true_type' sugar
| |   |   |-Typedef 0x11374d8 'true_type'
| |   |   `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| |   |     |-TemplateArgument type 'bool'
| |   |     |-TemplateArgument expr
| |   |     | `-ConstantExpr 0x11372b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| |   |     |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| |   |     `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| |   |       `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| |   |-TypedefDecl 0x1754ee0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:131:7, col:25> col:25 is_always_equal 'std::true_type':'std::integral_constant<bool, true>'
| |   | `-TypedefType 0x113fc30 'std::true_type' sugar
| |   |   |-Typedef 0x11374d8 'true_type'
| |   |   `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| |   |     |-TemplateArgument type 'bool'
| |   |     |-TemplateArgument expr
| |   |     | `-ConstantExpr 0x11372b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| |   |     |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| |   |     `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| |   |       `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| |   |-CXXConstructorDecl 0x1754f70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:137:7, col:38> col:7 used allocator 'void () noexcept'
| |   | |-CXXCtorInitializer '__allocator_base<char32_t>':'__gnu_cxx::new_allocator<char32_t>'
| |   | | `-CXXConstructExpr 0x1aeeba0 <col:7> '__allocator_base<char32_t>':'__gnu_cxx::new_allocator<char32_t>' 'void () noexcept'
| |   | `-CompoundStmt 0x1496f38 <col:36, col:38>
| |   |-CXXConstructorDecl 0x1755180 <line:140:7, line:141:38> line:140:7 used allocator 'void (const std::allocator<char32_t> &) noexcept'
| |   | |-ParmVarDecl 0x1755068 <col:17, col:34> col:34 used __a 'const std::allocator<char32_t> &'
| |   | |-CXXCtorInitializer '__allocator_base<char32_t>':'__gnu_cxx::new_allocator<char32_t>'
| |   | | `-CXXConstructExpr 0x1af1d78 <line:141:9, col:34> '__allocator_base<char32_t>':'__gnu_cxx::new_allocator<char32_t>' 'void (const __gnu_cxx::new_allocator<char32_t> &) noexcept'
| |   | |   `-ImplicitCastExpr 0x1af1d58 <col:31> 'const __gnu_cxx::new_allocator<char32_t>' lvalue <DerivedToBase (new_allocator)>
| |   | |     `-DeclRefExpr 0x1af1880 <col:31> 'const std::allocator<char32_t>' lvalue ParmVar 0x1755068 '__a' 'const std::allocator<char32_t> &'
| |   | `-CompoundStmt 0x1497158 <col:36, col:38>
| |   |-CXXMethodDecl 0x1755338 <line:145:7, col:54> col:18 operator= 'std::allocator<char32_t> &(const std::allocator<char32_t> &)' default trivial noexcept-unevaluated 0x1755338
| |   | `-ParmVarDecl 0x1755278 <col:28, col:43> col:44 'const std::allocator<char32_t> &'
| |   |-FunctionTemplateDecl 0x17556d8 <line:148:7, line:150:55> col:2 allocator
| |   | |-TemplateTypeParmDecl 0x17553f0 <line:148:16, col:25> col:25 typename depth 0 index 0 _Tp1
| |   | |-CXXConstructorDecl 0x1755630 <line:150:2, col:55> col:2 allocator 'void (const allocator<_Tp1> &) noexcept'
| |   | | `-ParmVarDecl 0x1755540 <col:12, col:33> col:34 'const allocator<_Tp1> &'
| |   | `-CXXConstructorDecl 0x175ff50 <col:2, col:55> col:2 allocator 'void (const allocator<char32_t> &) noexcept'
| |   |   |-TemplateArgument type 'char32_t'
| |   |   `-ParmVarDecl 0x175fe80 <col:12, col:33> col:34 'const allocator<char32_t> &'
| |   |-CXXDestructorDecl 0x17557e0 <line:152:7, col:39> col:7 used ~allocator 'void () noexcept'
| |   | `-CompoundStmt 0x1497178 <col:37, col:39>
| |   |-FriendDecl 0x1755b10 <line:154:7, line:156:22> line:155:7
| |   | `-FunctionDecl 0x1755a40 parent 0x14925e8 <line:154:7, line:156:22> line:155:7 operator== 'bool (const std::allocator<char32_t> &, const std::allocator<char32_t> &) noexcept'
| |   |   |-ParmVarDecl 0x17558b0 <col:18, col:33> col:34 'const std::allocator<char32_t> &'
| |   |   `-ParmVarDecl 0x1755928 <col:36, col:51> col:52 'const std::allocator<char32_t> &'
| |   `-FriendDecl 0x1755d48 <line:158:7, line:160:23> line:159:7
| |     `-FunctionDecl 0x1755c78 parent 0x14925e8 <line:158:7, line:160:23> line:159:7 operator!= 'bool (const std::allocator<char32_t> &, const std::allocator<char32_t> &) noexcept'
| |       |-ParmVarDecl 0x1755b60 <col:18, col:33> col:34 'const std::allocator<char32_t> &'
| |       `-ParmVarDecl 0x1755bd8 <col:36, col:51> col:52 'const std::allocator<char32_t> &'
| |-ClassTemplateSpecializationDecl 0x103b950 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/memoryfwd.h:66:3, line:67:25> col:11 class allocator
| | `-TemplateArgument type 'void'
| `-ClassTemplateDecl 0x103bce0 <line:71:3, line:72:12> col:12 uses_allocator
|   |-TemplateTypeParmDecl 0x103bb00 <line:71:12> col:20 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x103bb78 <col:22> col:30 typename depth 0 index 1
|   `-CXXRecordDecl 0x103bc50 <line:72:5, col:12> col:12 struct uses_allocator
|-NamespaceDecl 0x10a90c8 prev 0x103b518 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stringfwd.h:42:1, line:102:1> line:42:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x10a9138 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x10a92b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stringfwd.h:52:3, line:53:12> col:12 char_traits
| | |-TemplateTypeParmDecl 0x10a9190 <line:52:12, col:18> col:18 class depth 0 index 0 _CharT
| | |-CXXRecordDecl 0x10a9228 <line:53:5, col:12> col:12 struct char_traits
| | |-ClassTemplateSpecialization 0x13be008 'char_traits'
| | |-ClassTemplateSpecialization 0x13c2f70 'char_traits'
| | |-ClassTemplateSpecialization 0x13df968 'char_traits'
| | `-ClassTemplateSpecialization 0x13eda08 'char_traits'
| |-ClassTemplateSpecializationDecl 0x10a94d0 <line:55:3, col:37> col:21 struct char_traits
| | `-TemplateArgument type 'char'
| |-ClassTemplateSpecializationDecl 0x10a96a8 <line:58:3, col:40> col:21 struct char_traits
| | `-TemplateArgument type 'wchar_t'
| |-ClassTemplateSpecializationDecl 0x10a9888 <line:66:3, col:41> col:21 struct char_traits
| | `-TemplateArgument type 'char16_t'
| |-ClassTemplateSpecializationDecl 0x10a9a68 <line:67:3, col:41> col:21 struct char_traits
| | `-TemplateArgument type 'char32_t'
| |-NamespaceDecl 0x10a9c20 prev 0x103b208 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | `-ClassTemplateDecl 0x107e968 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stringfwd.h:72:3, line:74:11> col:11 basic_string
| |   |-TemplateTypeParmDecl 0x10a9c90 <line:72:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |   |-TemplateTypeParmDecl 0x10a9dc0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| |   | `-TemplateArgument type 'char_traits<_CharT>'
| |   |-TemplateTypeParmDecl 0x107e800 <line:73:12, col:46> col:21 typename depth 0 index 2 _Alloc
| |   | `-TemplateArgument type 'allocator<_CharT>'
| |   |-CXXRecordDecl 0x107e8d8 <line:74:5, col:11> col:11 class basic_string
| |   | `-OwnerAttr 0x107ebb8 <<invalid sloc>> Implicit
| |   |-ClassTemplateSpecialization 0x107ee60 'basic_string'
| |   |-ClassTemplateSpecialization 0x107f2d0 'basic_string'
| |   |-ClassTemplateSpecializationDecl 0x10af2e0 <line:72:3, line:74:11> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:81:11 class basic_string definition
| |   | |-DefinitionData standard_layout has_user_declared_ctor has_variant_members can_const_default_init
| |   | | |-DefaultConstructor exists non_trivial user_provided
| |   | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |   | | |-MoveConstructor exists non_trivial user_declared
| |   | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |   | | |-MoveAssignment exists non_trivial user_declared
| |   | | `-Destructor non_trivial user_declared
| |   | |-TemplateArgument type 'char16_t'
| |   | |-TemplateArgument type 'std::char_traits<char16_t>'
| |   | |-TemplateArgument type 'std::allocator<char16_t>'
| |   | |-OwnerAttr 0x171f930 <<invalid sloc>> Inherited Implicit
| |   | |-CXXRecordDecl 0x171f9f8 prev 0x10af2e0 <col:5, col:11> col:11 implicit class basic_string
| |   | |-TypedefDecl 0x172daa0 <line:83:7, line:84:24> col:24 _Char_alloc_type 'typename __gnu_cxx::__alloc_traits<allocator<char16_t> >::rebind<char16_t>::other':'std::allocator<char16_t>'
| |   | | `-ElaboratedType 0x172da50 'typename __gnu_cxx::__alloc_traits<allocator<char16_t> >::rebind<char16_t>::other' sugar
| |   | |   `-TypedefType 0x172da30 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::rebind<char16_t>::other' sugar
| |   | |     |-Typedef 0x172d9c0 'other'
| |   | |     `-ElaboratedType 0x172d950 'typename _Base_type::rebind_alloc<char16_t>' sugar
| |   | |       `-TemplateSpecializationType 0x172d900 'rebind_alloc<char16_t>' sugar alias rebind_alloc
| |   | |         |-TemplateArgument type 'char16_t':'char16_t'
| |   | |         |-TemplateSpecializationType 0x172d890 'allocator<char16_t>' sugar allocator
| |   | |         | |-TemplateArgument type 'char16_t':'char16_t'
| |   | |         | `-RecordType 0x107f6b0 'std::allocator<char16_t>'
| |   | |         |   `-ClassTemplateSpecialization 0x107f5d0 'allocator'
| |   | |         `-TemplateSpecializationType 0x172d890 'allocator<char16_t>' sugar allocator
| |   | |           |-TemplateArgument type 'char16_t':'char16_t'
| |   | |           `-RecordType 0x107f6b0 'std::allocator<char16_t>'
| |   | |             `-ClassTemplateSpecialization 0x107f5d0 'allocator'
| |   | |-TypedefDecl 0x172dc20 <line:85:7, col:59> col:59 _Alloc_traits '__gnu_cxx::__alloc_traits<_Char_alloc_type>':'__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>'
| |   | | `-ElaboratedType 0x172dbb0 '__gnu_cxx::__alloc_traits<_Char_alloc_type>' sugar
| |   | |   `-TemplateSpecializationType 0x172db70 '__alloc_traits<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Char_alloc_type>' sugar __alloc_traits
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Char_alloc_type':'std::allocator<char16_t>'
| |   | |     `-RecordType 0x1724400 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>'
| |   | |       `-ClassTemplateSpecialization 0x1724300 '__alloc_traits'
| |   | |-AccessSpecDecl 0x172dc78 <line:88:5, col:11> col:5 public
| |   | |-TypedefDecl 0x172dcd8 <line:89:7, col:27> col:27 traits_type 'std::char_traits<char16_t>':'std::char_traits<char16_t>'
| |   | | `-SubstTemplateTypeParmType 0x172dca0 'std::char_traits<char16_t>' sugar
| |   | |   |-TemplateTypeParmType 0x1574520 '_Traits' dependent depth 0 index 1
| |   | |   | `-TemplateTypeParm 0x15744c8 '_Traits'
| |   | |   `-RecordType 0x10a9970 'std::char_traits<char16_t>'
| |   | |     `-ClassTemplateSpecialization 0x13df968 'char_traits'
| |   | |-TypedefDecl 0x172ddc0 <line:90:7, col:44> col:44 value_type 'typename char_traits<char16_t>::char_type':'char16_t'
| |   | | `-ElaboratedType 0x172dd70 'typename char_traits<char16_t>::char_type' sugar
| |   | |   `-TypedefType 0x13dfe40 'std::char_traits<char16_t>::char_type' sugar
| |   | |     |-Typedef 0x13dfc08 'char_type'
| |   | |     `-BuiltinType 0xffd730 'char16_t'
| |   | |-TypedefDecl 0x172de28 <line:91:7, col:35> col:35 allocator_type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Char_alloc_type':'std::allocator<char16_t>'
| |   | | `-TypedefType 0x172db00 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Char_alloc_type' sugar
| |   | |   |-Typedef 0x172daa0 '_Char_alloc_type'
| |   | |   `-ElaboratedType 0x172da50 'typename __gnu_cxx::__alloc_traits<allocator<char16_t> >::rebind<char16_t>::other' sugar
| |   | |     `-TypedefType 0x172da30 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::rebind<char16_t>::other' sugar
| |   | |       |-Typedef 0x172d9c0 'other'
| |   | |       `-ElaboratedType 0x172d950 'typename _Base_type::rebind_alloc<char16_t>' sugar
| |   | |         `-TemplateSpecializationType 0x172d900 'rebind_alloc<char16_t>' sugar alias rebind_alloc
| |   | |           |-TemplateArgument type 'char16_t':'char16_t'
| |   | |           |-TemplateSpecializationType 0x172d890 'allocator<char16_t>' sugar allocator
| |   | |           | |-TemplateArgument type 'char16_t':'char16_t'
| |   | |           | `-RecordType 0x107f6b0 'std::allocator<char16_t>'
| |   | |           |   `-ClassTemplateSpecialization 0x107f5d0 'allocator'
| |   | |           `-TemplateSpecializationType 0x172d890 'allocator<char16_t>' sugar allocator
| |   | |             |-TemplateArgument type 'char16_t':'char16_t'
| |   | |             `-RecordType 0x107f6b0 'std::allocator<char16_t>'
| |   | |               `-ClassTemplateSpecialization 0x107f5d0 'allocator'
| |   | |-TypedefDecl 0x172df50 <line:92:7, col:50> col:50 size_type 'typename _Alloc_traits::size_type':'unsigned long'
| |   | | `-ElaboratedType 0x172df00 'typename _Alloc_traits::size_type' sugar
| |   | |   `-TypedefType 0x172dee0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::size_type' sugar
| |   | |     |-Typedef 0x1726eb0 'size_type'
| |   | |     `-ElaboratedType 0x1726e60 'typename _Base_type::size_type' sugar
| |   | |       `-TypedefType 0x1726530 'std::allocator_traits<std::allocator<char16_t> >::size_type' sugar
| |   | |         |-TypeAlias 0x1724c78 'size_type'
| |   | |         `-ElaboratedType 0x1560660 'std::size_t' sugar
| |   | |           `-TypedefType 0x10f2c80 'std::size_t' sugar
| |   | |             |-Typedef 0x103af98 'size_t'
| |   | |             `-BuiltinType 0xffd2d0 'unsigned long'
| |   | |-TypedefDecl 0x172e040 <line:93:7, col:55> col:55 difference_type 'typename _Alloc_traits::difference_type':'long'
| |   | | `-ElaboratedType 0x172dff0 'typename _Alloc_traits::difference_type' sugar
| |   | |   `-TypedefType 0x172dfd0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::difference_type' sugar
| |   | |     |-Typedef 0x172a490 'difference_type'
| |   | |     `-ElaboratedType 0x172a440 'typename _Base_type::difference_type' sugar
| |   | |       `-TypedefType 0x172a420 'std::allocator_traits<std::allocator<char16_t> >::difference_type' sugar
| |   | |         |-TypeAlias 0x1724c18 'difference_type'
| |   | |         `-ElaboratedType 0x1560580 'std::ptrdiff_t' sugar
| |   | |           `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   | |             |-Typedef 0x103b008 'ptrdiff_t'
| |   | |             `-BuiltinType 0xffd230 'long'
| |   | |-TypedefDecl 0x172e130 <line:94:7, col:50> col:50 reference 'typename _Alloc_traits::reference':'__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type &'
| |   | | `-ElaboratedType 0x172e0e0 'typename _Alloc_traits::reference' sugar
| |   | |   `-TypedefType 0x172e0c0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::reference' sugar
| |   | |     |-Typedef 0x172a548 'reference'
| |   | |     `-LValueReferenceType 0x172a510 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type &'
| |   | |       `-TypedefType 0x172a4f0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type' sugar
| |   | |         |-Typedef 0x1726c20 'value_type'
| |   | |         `-ElaboratedType 0x1726bd0 'typename _Base_type::value_type' sugar
| |   | |           `-TypedefType 0x1726bb0 'std::allocator_traits<std::allocator<char16_t> >::value_type' sugar
| |   | |             |-TypeAlias 0x17249c0 'value_type'
| |   | |             `-SubstTemplateTypeParmType 0x1724710 'char16_t' sugar
| |   | |               |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |   | |               | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |   | |               `-BuiltinType 0xffd730 'char16_t'
| |   | |-TypedefDecl 0x172e220 <line:95:7, col:55> col:55 const_reference 'typename _Alloc_traits::const_reference':'const __gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type &'
| |   | | `-ElaboratedType 0x172e1d0 'typename _Alloc_traits::const_reference' sugar
| |   | |   `-TypedefType 0x172e1b0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::const_reference' sugar
| |   | |     |-Typedef 0x172a5d8 'const_reference'
| |   | |     `-LValueReferenceType 0x172a5a0 'const __gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type &'
| |   | |       `-QualType 0x172a4f1 'const __gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type' const
| |   | |         `-TypedefType 0x172a4f0 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::value_type' sugar
| |   | |           |-Typedef 0x1726c20 'value_type'
| |   | |           `-ElaboratedType 0x1726bd0 'typename _Base_type::value_type' sugar
| |   | |             `-TypedefType 0x1726bb0 'std::allocator_traits<std::allocator<char16_t> >::value_type' sugar
| |   | |               |-TypeAlias 0x17249c0 'value_type'
| |   | |               `-SubstTemplateTypeParmType 0x1724710 'char16_t' sugar
| |   | |                 |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |   | |                 | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |   | |                 `-BuiltinType 0xffd730 'char16_t'
| |   | |-TypedefDecl 0x172e2f0 <line:96:7, col:48> col:48 referenced pointer 'typename _Alloc_traits::pointer':'char16_t *'
| |   | | `-ElaboratedType 0x172e2a0 'typename _Alloc_traits::pointer' sugar
| |   | |   `-TypedefType 0x172ab30 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::pointer' sugar
| |   | |     |-Typedef 0x1726cf0 'pointer'
| |   | |     `-ElaboratedType 0x1726ca0 'typename _Base_type::pointer' sugar
| |   | |       `-TypedefType 0x17252b0 'std::allocator_traits<std::allocator<char16_t> >::pointer' sugar
| |   | |         |-TypeAlias 0x1724a58 'pointer'
| |   | |         `-PointerType 0x1724a20 'char16_t *'
| |   | |           `-SubstTemplateTypeParmType 0x1724710 'char16_t' sugar
| |   | |             |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |   | |             | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |   | |             `-BuiltinType 0xffd730 'char16_t'
| |   | |-TypedefDecl 0x172e3e0 <line:97:7, col:53> col:53 const_pointer 'typename _Alloc_traits::const_pointer':'const char16_t *'
| |   | | `-ElaboratedType 0x172e390 'typename _Alloc_traits::const_pointer' sugar
| |   | |   `-TypedefType 0x172e370 '__gnu_cxx::__alloc_traits<std::allocator<char16_t>, char16_t>::const_pointer' sugar
| |   | |     |-Typedef 0x1726de0 'const_pointer'
| |   | |     `-ElaboratedType 0x1726d90 'typename _Base_type::const_pointer' sugar
| |   | |       `-TypedefType 0x1726d70 'std::allocator_traits<std::allocator<char16_t> >::const_pointer' sugar
| |   | |         |-TypeAlias 0x1724af8 'const_pointer'
| |   | |         `-PointerType 0x1724ac0 'const char16_t *'
| |   | |           `-QualType 0x1724711 'const char16_t' const
| |   | |             `-SubstTemplateTypeParmType 0x1724710 'char16_t' sugar
| |   | |               |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |   | |               | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |   | |               `-BuiltinType 0xffd730 'char16_t'
| |   | |-TypedefDecl 0x172e688 <line:98:7, col:68> col:68 iterator '__gnu_cxx::__normal_iterator<pointer, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ElaboratedType 0x172e600 '__gnu_cxx::__normal_iterator<pointer, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >' sugar
| |   | |   `-TemplateSpecializationType 0x172e5a0 '__normal_iterator<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >' sugar __normal_iterator
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| |   | |     `-RecordType 0x172e580 '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |       `-ClassTemplateSpecialization 0x172e480 '__normal_iterator'
| |   | |-TypedefDecl 0x172e928 <line:99:7, line:100:8> col:8 const_iterator '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ElaboratedType 0x172e8a0 '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >' sugar
| |   | |   `-TemplateSpecializationType 0x172e840 '__normal_iterator<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >' sugar __normal_iterator
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer':'const char16_t *'
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| |   | |     `-RecordType 0x172e820 '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |       `-ClassTemplateSpecialization 0x172e720 '__normal_iterator'
| |   | |-TypedefDecl 0x172eb60 <line:101:7, col:53> col:53 const_reverse_iterator 'std::reverse_iterator<const_iterator>':'std::reverse_iterator<__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >'
| |   | | `-ElaboratedType 0x172eaf0 'std::reverse_iterator<const_iterator>' sugar
| |   | |   `-TemplateSpecializationType 0x172eab0 'reverse_iterator<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator>' sugar reverse_iterator
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |     `-RecordType 0x172ea90 'std::reverse_iterator<__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >'
| |   | |       `-ClassTemplateSpecialization 0x172e9b0 'reverse_iterator'
| |   | |-TypedefDecl 0x172eda0 <line:102:7, col:48> col:48 reverse_iterator 'std::reverse_iterator<iterator>':'std::reverse_iterator<__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >'
| |   | | `-ElaboratedType 0x172ed30 'std::reverse_iterator<iterator>' sugar
| |   | |   `-TemplateSpecializationType 0x172ecf0 'reverse_iterator<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator>' sugar reverse_iterator
| |   | |     |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |     `-RecordType 0x172ecd0 'std::reverse_iterator<__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >'
| |   | |       `-ClassTemplateSpecialization 0x172ebf0 'reverse_iterator'
| |   | |-VarDecl 0x172ee30 <line:105:7, col:62> col:30 npos 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'const unsigned long' static cinit
| |   | | `-CXXStaticCastExpr 0x172eed0 <col:37, col:62> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' static_cast<std::__cxx11::basic_string<char16_t, struct std::char_traits<char16_t>, class std::allocator<char16_t> >::size_type> <NoOp>
| |   | |   `-ImplicitCastExpr 0x172eeb8 <col:60, col:61> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   | |     `-UnaryOperator 0x1577338 <col:60, col:61> 'int' prefix '-'
| |   | |       `-IntegerLiteral 0x1577318 <col:61> 'int' 1
| |   | |-AccessSpecDecl 0x172ef58 <line:107:5, col:14> col:5 protected
| |   | |-TypedefDecl 0x172ef90 <line:112:7, col:30> col:30 __const_iterator 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-TypedefType 0x172e980 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator' sugar
| |   | |   |-Typedef 0x172e928 'const_iterator'
| |   | |   `-ElaboratedType 0x172e8a0 '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >' sugar
| |   | |     `-TemplateSpecializationType 0x172e840 '__normal_iterator<std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >' sugar __normal_iterator
| |   | |       |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer':'const char16_t *'
| |   | |       |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| |   | |       `-RecordType 0x172e820 '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |         `-ClassTemplateSpecialization 0x172e720 '__normal_iterator'
| |   | |-AccessSpecDecl 0x172efe8 <line:115:5, col:12> col:5 private
| |   | |-CXXRecordDecl 0x172f010 <line:154:7, line:168:7> line:154:14 struct _Alloc_hider definition
| |   | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |   | | | |-DefaultConstructor
| |   | | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |   | | | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | | |-MoveAssignment exists simple trivial needs_overload_resolution
| |   | | | `-Destructor simple non_trivial needs_overload_resolution
| |   | | |-public 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>'
| |   | | |-CXXRecordDecl 0x172f1b0 prev 0x172f010 <col:7, col:14> col:14 implicit struct _Alloc_hider
| |   | | |-CXXConstructorDecl 0x172f440 <line:160:2, line:161:39> line:160:2 used _Alloc_hider 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer, const std::allocator<char16_t> &)'
| |   | | | |-ParmVarDecl 0x172f250 <col:15, col:23> col:23 used __dat 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | |-ParmVarDecl 0x172f2f8 <col:30, col:44> col:44 used __a 'const std::allocator<char16_t> &'
| |   | | | |-CXXCtorInitializer 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>'
| |   | | | | `-CXXConstructExpr 0x1adb278 <line:161:4, col:22> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' 'void (const std::allocator<char16_t> &) noexcept'
| |   | | | |   `-DeclRefExpr 0x1adb1f0 <col:19> 'const std::allocator<char16_t>':'const std::allocator<char16_t>' lvalue ParmVar 0x172f2f8 '__a' 'const std::allocator<char16_t> &'
| |   | | | |-CXXCtorInitializer Field 0x172f7f0 '_M_p' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | | `-ImplicitCastExpr 0x1adb310 <col:30> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' <LValueToRValue>
| |   | | | |   `-DeclRefExpr 0x1adb2d0 <col:30> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' lvalue ParmVar 0x172f250 '__dat' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | `-CompoundStmt 0x15c2218 <col:37, col:39>
| |   | | |-CXXConstructorDecl 0x172f718 <line:163:2, line:164:50> line:163:2 used _Alloc_hider 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer, std::allocator<char16_t> &&)'
| |   | | | |-ParmVarDecl 0x172f518 <col:15, col:23> col:23 used __dat 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | |-ParmVarDecl 0x172f5e8 <col:30, col:52> col:39 used __a 'std::allocator<char16_t> &&'
| |   | | | |-CXXCtorInitializer 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>'
| |   | | | | `-CXXConstructExpr 0x1aeeab8 <line:164:4, col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' 'void (const std::allocator<char16_t> &) noexcept'
| |   | | | |   `-ImplicitCastExpr 0x1aeeaa0 <col:19, col:32> 'const typename std::remove_reference<allocator<char16_t> &>::type':'const std::allocator<char16_t>' xvalue <NoOp>
| |   | | | |     `-CallExpr 0x1aeea10 <col:19, col:32> 'typename std::remove_reference<allocator<char16_t> &>::type':'std::allocator<char16_t>' xvalue
| |   | | | |       |-ImplicitCastExpr 0x1aee9f8 <col:19, col:24> 'typename std::remove_reference<allocator<char16_t> &>::type &&(*)(std::allocator<char16_t> &) noexcept' <FunctionToPointerDecay>
| |   | | | |       | `-DeclRefExpr 0x1aee9c0 <col:19, col:24> 'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept' lvalue Function 0x1aed828 'move' 'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept' (FunctionTemplate 0x12759e8 'move')
| |   | | | |       `-DeclRefExpr 0x1aee938 <col:29> 'std::allocator<char16_t>':'std::allocator<char16_t>' lvalue ParmVar 0x172f5e8 '__a' 'std::allocator<char16_t> &&'
| |   | | | |-CXXCtorInitializer Field 0x172f7f0 '_M_p' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | | `-ImplicitCastExpr 0x1aeeb50 <col:41> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' <LValueToRValue>
| |   | | | |   `-DeclRefExpr 0x1aeeb10 <col:41> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' lvalue ParmVar 0x172f518 '__dat' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | | `-CompoundStmt 0x15c23b0 <col:48, col:50>
| |   | | |-FieldDecl 0x172f7f0 <line:167:2, col:10> col:10 referenced _M_p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | |-CXXConstructorDecl 0x172fb58 <line:154:14> col:14 implicit _Alloc_hider 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &)' inline default noexcept-unevaluated 0x172fb58
| |   | | | `-ParmVarDecl 0x172fc68 <col:14> col:14 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &'
| |   | | |-CXXConstructorDecl 0x172fd40 <col:14> col:14 implicit _Alloc_hider 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &&)' inline default noexcept-unevaluated 0x172fd40
| |   | | | `-ParmVarDecl 0x172fe58 <col:14> col:14 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &&'
| |   | | |-CXXMethodDecl 0x172fef8 <col:14> col:14 implicit operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &&)' inline default trivial noexcept-unevaluated 0x172fef8
| |   | | | `-ParmVarDecl 0x1730008 <col:14> col:14 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider &&'
| |   | | `-CXXDestructorDecl 0x1730090 <col:14> col:14 implicit used ~_Alloc_hider 'void () noexcept' inline default
| |   | |   `-CompoundStmt 0x1ad8888 <col:14>
| |   | |-FieldDecl 0x1730170 <line:170:7, col:20> col:20 referenced _M_dataplus 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider'
| |   | |-FieldDecl 0x17301d0 <line:171:7, col:18> col:18 referenced _M_string_length 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-EnumDecl 0x1730220 <line:173:7> col:7
| |   | | `-EnumConstantDecl 0x1730378 <col:14, col:52> col:14 referenced _S_local_capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |   | |   `-ImplicitCastExpr 0x17303c8 <col:34, col:52> 'unsigned int' <IntegralCast>
| |   | |     `-ConstantExpr 0x1730358 <col:34, col:52> 'unsigned long' Int: 7
| |   | |       `-BinaryOperator 0x1730338 <col:34, col:52> 'unsigned long' '/'
| |   | |         |-ImplicitCastExpr 0x1730320 <col:34> 'unsigned long' <IntegralCast>
| |   | |         | `-IntegerLiteral 0x1577dd0 <col:34> 'int' 15
| |   | |         `-UnaryExprOrTypeTraitExpr 0x1730300 <col:39, col:52> 'unsigned long' sizeof 'char16_t':'char16_t'
| |   | |-CXXRecordDecl 0x17303e0 <line:175:7, line:179:7> line:175:7 union definition
| |   | | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |   | | | |-DefaultConstructor exists trivial needs_implicit
| |   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | | | |-MoveConstructor exists simple trivial needs_implicit
| |   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | | |-MoveAssignment exists simple trivial needs_implicit
| |   | | | `-Destructor simple irrelevant trivial
| |   | | |-FieldDecl 0x1730958 <line:177:2, col:53> col:19 referenced _M_local_buf 'char16_t [8]'
| |   | | |-FieldDecl 0x17309b8 <line:178:2, col:19> col:19 referenced _M_allocated_capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CXXDestructorDecl 0x1785338 <line:175:7> col:7 implicit ~ 'void () noexcept' inline default trivial
| |   | |-FieldDecl 0x1730a20 <col:7> col:7 implicit referenced 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |   | |-IndirectFieldDecl 0x1730a80 <line:177:19> col:19 implicit _M_local_buf 'char16_t [8]'
| |   | | |-Field 0x1730a20 '' 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |   | | `-Field 0x1730958 '_M_local_buf' 'char16_t [8]'
| |   | |-IndirectFieldDecl 0x1730ad8 <line:178:19> col:19 implicit _M_allocated_capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-Field 0x1730a20 '' 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |   | | `-Field 0x17309b8 '_M_allocated_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1730c28 <line:181:7, line:183:33> line:182:7 used _M_data 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer)'
| |   | | |-ParmVarDecl 0x1730b30 <col:15, col:23> col:23 used __p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | `-CompoundStmt 0x1ae76c0 <line:183:7, col:33>
| |   | |   `-BinaryOperator 0x1ae76a0 <col:9, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' lvalue '='
| |   | |     |-MemberExpr 0x1ae7638 <col:9, col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' lvalue ._M_p 0x172f7f0
| |   | |     | `-MemberExpr 0x1ae7608 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1730170
| |   | |     |   `-CXXThisExpr 0x1ae75f8 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     `-ImplicitCastExpr 0x1ae7688 <col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' <LValueToRValue>
| |   | |       `-DeclRefExpr 0x1ae7668 <col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' lvalue ParmVar 0x1730b30 '__p' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |-CXXMethodDecl 0x1730db8 <line:185:7, line:187:38> line:186:7 used _M_length 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1730cf0 <col:17, col:27> col:27 used __length 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1aecf50 <line:187:7, col:38>
| |   | |   `-BinaryOperator 0x1aecf30 <col:9, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue '='
| |   | |     |-MemberExpr 0x1aecec8 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ->_M_string_length 0x17301d0
| |   | |     | `-CXXThisExpr 0x1aeceb8 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     `-ImplicitCastExpr 0x1aecf18 <col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |       `-DeclRefExpr 0x1aecef8 <col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1730cf0 '__length' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1730ee8 <line:189:7, line:191:34> line:190:7 used _M_data 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer () const'
| |   | | `-CompoundStmt 0x1acbfa8 <line:191:7, col:34>
| |   | |   `-ReturnStmt 0x1acbf98 <col:9, col:28>
| |   | |     `-ImplicitCastExpr 0x1acbf80 <col:16, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *' <LValueToRValue>
| |   | |       `-MemberExpr 0x1acbf50 <col:16, col:28> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *const' lvalue ._M_p 0x172f7f0
| |   | |         `-MemberExpr 0x1acbf20 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1730170
| |   | |           `-CXXThisExpr 0x1acbf10 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x1731018 <line:193:7, line:201:7> line:194:7 used _M_local_data 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer ()'
| |   | | `-CompoundStmt 0x1ada698 <line:195:7, line:201:7>
| |   | |   `-ReturnStmt 0x1ada688 <line:197:2, col:63>
| |   | |     `-CallExpr 0x1ada660 <col:9, col:63> 'std::pointer_traits<char16_t *>::pointer':'char16_t *'
| |   | |       |-ImplicitCastExpr 0x1ada648 <col:9, col:39> 'std::pointer_traits<char16_t *>::pointer (*)(__make_not_void<std::pointer_traits<char16_t *>::element_type> &) noexcept' <FunctionToPointerDecay>
| |   | |       | `-DeclRefExpr 0x1ada500 <col:9, col:39> 'std::pointer_traits<char16_t *>::pointer (__make_not_void<std::pointer_traits<char16_t *>::element_type> &) noexcept' lvalue CXXMethod 0x1ada430 'pointer_to' 'std::pointer_traits<char16_t *>::pointer (__make_not_void<std::pointer_traits<char16_t *>::element_type> &) noexcept'
| |   | |       `-UnaryOperator 0x1ada5d0 <col:50, col:51> 'char16_t':'char16_t' lvalue prefix '*' cannot overflow
| |   | |         `-ImplicitCastExpr 0x1ada5b8 <col:51> 'char16_t *' <ArrayToPointerDecay>
| |   | |           `-MemberExpr 0x1ada588 <col:51> 'char16_t [8]' lvalue ._M_local_buf 0x1730958
| |   | |             `-MemberExpr 0x1ada540 <col:51> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1730a20
| |   | |               `-CXXThisExpr 0x1ada530 <col:51> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x1731148 <line:203:7, line:211:7> line:204:7 used _M_local_data 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer () const'
| |   | | `-CompoundStmt 0x1aebc78 <line:205:7, line:211:7>
| |   | |   `-ReturnStmt 0x1aebc68 <line:207:2, col:69>
| |   | |     `-CallExpr 0x1aebc40 <col:9, col:69> 'std::pointer_traits<const char16_t *>::pointer':'const char16_t *'
| |   | |       |-ImplicitCastExpr 0x1aebc28 <col:9, col:45> 'std::pointer_traits<const char16_t *>::pointer (*)(__make_not_void<std::pointer_traits<const char16_t *>::element_type> &) noexcept' <FunctionToPointerDecay>
| |   | |       | `-DeclRefExpr 0x1aebaa0 <col:9, col:45> 'std::pointer_traits<const char16_t *>::pointer (__make_not_void<std::pointer_traits<const char16_t *>::element_type> &) noexcept' lvalue CXXMethod 0x1aeb9d0 'pointer_to' 'std::pointer_traits<const char16_t *>::pointer (__make_not_void<std::pointer_traits<const char16_t *>::element_type> &) noexcept'
| |   | |       `-UnaryOperator 0x1aebbb0 <col:56, col:57> 'const char16_t':'const char16_t' lvalue prefix '*' cannot overflow
| |   | |         `-ImplicitCastExpr 0x1aebb98 <col:57> 'const char16_t *' <ArrayToPointerDecay>
| |   | |           `-MemberExpr 0x1aebb28 <col:57> 'char16_t const[8]' lvalue ._M_local_buf 0x1730958
| |   | |             `-MemberExpr 0x1aebae0 <col:57> 'const union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1730a20
| |   | |               `-CXXThisExpr 0x1aebad0 <col:57> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x1731298 <line:213:7, line:215:45> line:214:7 used _M_capacity 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1731208 <col:19, col:29> col:29 used __capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1ae77b8 <line:215:7, col:45>
| |   | |   `-BinaryOperator 0x1ae7798 <col:9, col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue '='
| |   | |     |-MemberExpr 0x1ae7730 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x17309b8
| |   | |     | `-MemberExpr 0x1ae76e8 <col:9> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1730a20
| |   | |     |   `-CXXThisExpr 0x1ae76d8 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     `-ImplicitCastExpr 0x1ae7780 <col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |       `-DeclRefExpr 0x1ae7760 <col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731208 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17313f0 <line:217:7, line:222:7> line:218:7 used _M_set_length 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1731360 <col:21, col:31> col:31 used __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1aece98 <line:219:7, line:222:7>
| |   | |   |-CXXMemberCallExpr 0x1aecb98 <line:220:2, col:15> 'void'
| |   | |   | |-MemberExpr 0x1aecb48 <col:2> '<bound member function type>' ->_M_length 0x1730db8
| |   | |   | | `-CXXThisExpr 0x1aecb38 <col:2> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   | `-ImplicitCastExpr 0x1aecbc0 <col:12> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   |   `-DeclRefExpr 0x1aecb78 <col:12> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731360 '__n' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   `-ExprWithCleanups 0x1aece80 <line:221:2, col:46> 'void'
| |   | |     `-CallExpr 0x1aece38 <col:2, col:46> 'void'
| |   | |       |-ImplicitCastExpr 0x1aece20 <col:2, col:15> 'void (*)(std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   | |       | `-DeclRefExpr 0x1aecdf0 <col:2, col:15> 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e00e0 'assign' 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   | |       |-ArraySubscriptExpr 0x1aecda8 <col:22, col:35> 'char16_t':'char16_t' lvalue
| |   | |       | |-CXXMemberCallExpr 0x1aecd38 <col:22, col:30> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |       | | `-MemberExpr 0x1aecd08 <col:22> '<bound member function type>' ->_M_data 0x1730ee8
| |   | |       | |   `-ImplicitCastExpr 0x1aecd58 <col:22> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |       | |     `-CXXThisExpr 0x1aeccf8 <col:22> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       | `-ImplicitCastExpr 0x1aecd90 <col:32> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |       |   `-DeclRefExpr 0x1aecd70 <col:32> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731360 '__n' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |       `-MaterializeTemporaryExpr 0x1aece68 <col:38, col:45> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   | |         `-CXXScalarValueInitExpr 0x1aecdd8 <col:38, col:45> 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x17314a8 <line:224:7, line:226:46> line:225:7 used _M_is_local 'bool () const'
| |   | | `-CompoundStmt 0x1ae82e8 <line:226:7, col:46>
| |   | |   `-ReturnStmt 0x1ae82d8 <col:9, col:43>
| |   | |     `-BinaryOperator 0x1ae82b8 <col:16, col:43> 'bool' '=='
| |   | |       |-ImplicitCastExpr 0x1ae82a0 <col:16, col:24> 'const char16_t *' <NoOp>
| |   | |       | `-CXXMemberCallExpr 0x1ae81a0 <col:16, col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |       |   `-MemberExpr 0x1ae8170 <col:16> '<bound member function type>' ->_M_data 0x1730ee8
| |   | |       |     `-CXXThisExpr 0x1ae8160 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       `-CXXMemberCallExpr 0x1ae8280 <col:29, col:43> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_pointer':'const char16_t *'
| |   | |         `-MemberExpr 0x1ae8250 <col:29> '<bound member function type>' ->_M_local_data 0x1731148
| |   | |           `-CXXThisExpr 0x1ae8240 <col:29> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x1731728 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:131:5, line:154:5> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:230:7 used _M_create 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1731598 <col:17, col:27> col:27 used __capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | | |-ParmVarDecl 0x1731610 <col:29, col:38> col:38 used __old_capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1ae6bf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:134:5, line:154:5>
| |   | |   |-IfStmt 0x1ae62d0 <line:137:7, line:138:58>
| |   | |   | |-BinaryOperator 0x1ae6258 <line:137:11, col:33> 'bool' '>'
| |   | |   | | |-ImplicitCastExpr 0x1ae6240 <col:11> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   | | | `-DeclRefExpr 0x1ae61a8 <col:11> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   | | `-CXXMemberCallExpr 0x1ae6208 <col:24, col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   | |   `-MemberExpr 0x1ae61d8 <col:24> '<bound member function type>' ->max_size 0x173dac0
| |   | |   | |     `-ImplicitCastExpr 0x1ae6228 <col:24> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |   | |       `-CXXThisExpr 0x1ae61c8 <col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   | `-CallExpr 0x1ae6290 <line:138:2, col:58> 'void'
| |   | |   |   |-ImplicitCastExpr 0x1ae6278 <col:2, col:7> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| |   | |   |   | `-DeclRefExpr 0x17925f0 <col:2, col:7> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x1281ed8 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
| |   | |   |   `-ImplicitCastExpr 0x1ae62b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:590:24, col:30> 'const char *' <ArrayToPointerDecay>
| |   | |   |     `-ParenExpr 0x1792650 <col:24, col:30> 'const char [24]' lvalue
| |   | |   |       `-StringLiteral 0x1792620 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:138:32> 'const char [24]' lvalue "basic_string::_M_create"
| |   | |   |-IfStmt 0x1ae6850 <line:143:7, line:149:2>
| |   | |   | |-BinaryOperator 0x1ae6540 <line:143:11, col:59> 'bool' '&&'
| |   | |   | | |-BinaryOperator 0x1ae63d8 <col:11, col:24> 'bool' '>'
| |   | |   | | | |-ImplicitCastExpr 0x1ae63a8 <col:11> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   | | | | `-DeclRefExpr 0x1ae6368 <col:11> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   | | | `-ImplicitCastExpr 0x1ae63c0 <col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   | | |   `-DeclRefExpr 0x1ae6388 <col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731610 '__old_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   | | `-BinaryOperator 0x1ae6520 <col:42, col:59> 'bool' '<'
| |   | |   | |   |-ImplicitCastExpr 0x1ae6508 <col:42> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   | |   | `-DeclRefExpr 0x1ae6478 <col:42> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   | |   `-BinaryOperator 0x1ae64e8 <col:55, col:59> 'unsigned long' '*'
| |   | |   | |     |-ImplicitCastExpr 0x1ae64d0 <col:55> 'unsigned long' <IntegralCast>
| |   | |   | |     | `-IntegerLiteral 0x17927f8 <col:55> 'int' 2
| |   | |   | |     `-ImplicitCastExpr 0x1ae64b8 <col:59> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   | |       `-DeclRefExpr 0x1ae6498 <col:59> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731610 '__old_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   | `-CompoundStmt 0x1ae6830 <line:144:2, line:149:2>
| |   | |   |   |-BinaryOperator 0x1ae65f0 <line:145:4, col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue '='
| |   | |   |   | |-DeclRefExpr 0x1ae6560 <col:4> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   |   | `-BinaryOperator 0x1ae65d0 <col:17, col:21> 'unsigned long' '*'
| |   | |   |   |   |-ImplicitCastExpr 0x1ae65b8 <col:17> 'unsigned long' <IntegralCast>
| |   | |   |   |   | `-IntegerLiteral 0x1792950 <col:17> 'int' 2
| |   | |   |   |   `-ImplicitCastExpr 0x1ae65a0 <col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   |   |     `-DeclRefExpr 0x1ae6580 <col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731610 '__old_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   |   `-IfStmt 0x1ae6818 <line:147:4, line:148:28>
| |   | |   |     |-BinaryOperator 0x1ae6740 <line:147:8, col:30> 'bool' '>'
| |   | |   |     | |-ImplicitCastExpr 0x1ae6728 <col:8> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   |     | | `-DeclRefExpr 0x1ae6690 <col:8> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   |     | `-CXXMemberCallExpr 0x1ae66f0 <col:21, col:30> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   |     |   `-MemberExpr 0x1ae66c0 <col:21> '<bound member function type>' ->max_size 0x173dac0
| |   | |   |     |     `-ImplicitCastExpr 0x1ae6710 <col:21> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |   |     |       `-CXXThisExpr 0x1ae66b0 <col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   |     `-BinaryOperator 0x1ae67f8 <line:148:6, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue '='
| |   | |   |       |-DeclRefExpr 0x1ae6760 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |   |       `-CXXMemberCallExpr 0x1ae67c0 <col:19, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   |         `-MemberExpr 0x1ae6790 <col:19> '<bound member function type>' ->max_size 0x173dac0
| |   | |   |           `-ImplicitCastExpr 0x1ae67e0 <col:19> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |   |             `-CXXThisExpr 0x1ae6780 <col:19> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   `-ReturnStmt 0x1ae6be0 <line:153:7, col:72>
| |   | |     `-CallExpr 0x1ae6bb0 <col:14, col:72> 'std::allocator_traits<std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |       |-ImplicitCastExpr 0x1ae6b98 <col:14, col:29> 'std::allocator_traits<std::allocator<char16_t> >::pointer (*)(std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' <FunctionToPointerDecay>
| |   | |       | `-DeclRefExpr 0x1ae6b08 <col:14, col:29> 'std::allocator_traits<std::allocator<char16_t> >::pointer (std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' lvalue CXXMethod 0x17254a8 'allocate' 'std::allocator_traits<std::allocator<char16_t> >::pointer (std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' (UsingShadow 0x172a6a8 'allocate')
| |   | |       |-CXXMemberCallExpr 0x1ae69c8 <col:38, col:55> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' lvalue
| |   | |       | `-MemberExpr 0x1ae6998 <col:38> '<bound member function type>' ->_M_get_allocator 0x1736168
| |   | |       |   `-CXXThisExpr 0x1ae6988 <col:38> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       `-BinaryOperator 0x1ae6ae8 <col:58, col:71> 'unsigned long' '+'
| |   | |         |-ImplicitCastExpr 0x1ae6ab8 <col:58> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1ae6a98 <col:58> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1731598 '__capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type &'
| |   | |         `-ImplicitCastExpr 0x1ae6ad0 <col:71> 'unsigned long' <IntegralCast>
| |   | |           `-IntegerLiteral 0x1792d28 <col:71> 'int' 1
| |   | |-CXXMethodDecl 0x17317e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:232:7, line:237:7> line:233:7 used _M_dispose 'void ()'
| |   | | `-CompoundStmt 0x1ae8050 <line:234:7, line:237:7>
| |   | |   `-IfStmt 0x1ae8038 <line:235:2, line:236:36>
| |   | |     |-UnaryOperator 0x1ae7f18 <line:235:6, col:19> 'bool' prefix '!' cannot overflow
| |   | |     | `-CXXMemberCallExpr 0x1ae7ee0 <col:7, col:19> 'bool'
| |   | |     |   `-MemberExpr 0x1ae7eb0 <col:7> '<bound member function type>' ->_M_is_local 0x17314a8
| |   | |     |     `-ImplicitCastExpr 0x1ae7f00 <col:7> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |     |       `-CXXThisExpr 0x1ae7ea0 <col:7> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     `-CXXMemberCallExpr 0x1ae7ff8 <line:236:4, col:36> 'void'
| |   | |       |-MemberExpr 0x1ae7f40 <col:4> '<bound member function type>' ->_M_destroy 0x1731970
| |   | |       | `-CXXThisExpr 0x1ae7f30 <col:4> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       `-ImplicitCastExpr 0x1ae8020 <col:15> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |         `-MemberExpr 0x1ae7fc8 <col:15> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x17309b8
| |   | |           `-MemberExpr 0x1ae7f80 <col:15> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1730a20
| |   | |             `-CXXThisExpr 0x1ae7f70 <col:15> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x1731970 <line:239:7, line:241:79> line:240:7 used _M_destroy 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) throw()'
| |   | | |-ParmVarDecl 0x17318a8 <col:18, col:28> col:28 used __size 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1aec8c8 <line:241:7, col:79>
| |   | |   `-CallExpr 0x1aec890 <col:9, col:76> 'void'
| |   | |     |-ImplicitCastExpr 0x1aec878 <col:9, col:24> 'void (*)(std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<std::allocator<char16_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' <FunctionToPointerDecay>
| |   | |     | `-DeclRefExpr 0x1aec550 <col:9, col:24> 'void (std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<std::allocator<char16_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' lvalue CXXMethod 0x1725a48 'deallocate' 'void (std::allocator_traits<std::allocator<char16_t> >::allocator_type &, std::allocator_traits<std::allocator<char16_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' (UsingShadow 0x172a7c0 'deallocate')
| |   | |     |-CXXMemberCallExpr 0x1aec648 <col:35, col:52> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' lvalue
| |   | |     | `-MemberExpr 0x1aec618 <col:35> '<bound member function type>' ->_M_get_allocator 0x1736168
| |   | |     |   `-CXXThisExpr 0x1aec608 <col:35> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |-CXXMemberCallExpr 0x1aec728 <col:55, col:63> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |     | `-MemberExpr 0x1aec6f8 <col:55> '<bound member function type>' ->_M_data 0x1730ee8
| |   | |     |   `-ImplicitCastExpr 0x1aec748 <col:55> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |     |     `-CXXThisExpr 0x1aec6e8 <col:55> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     `-BinaryOperator 0x1aec800 <col:66, col:75> 'unsigned long' '+'
| |   | |       |-ImplicitCastExpr 0x1aec7d0 <col:66> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |       | `-DeclRefExpr 0x1aec7b0 <col:66> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x17318a8 '__size' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |       `-ImplicitCastExpr 0x1aec7e8 <col:75> 'unsigned long' <IntegralCast>
| |   | |         `-IntegerLiteral 0x15c3388 <col:75> 'int' 1
| |   | |-FunctionTemplateDecl 0x1731d38 <line:245:7, line:252:2> line:247:9 _M_construct_aux
| |   | | |-TemplateTypeParmDecl 0x1731a28 <line:245:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |   | | |-CXXMethodDecl 0x1731c98 <line:246:9, line:252:2> line:247:9 _M_construct_aux 'void (_InIterator, _InIterator, std::__false_type)'
| |   | | | |-ParmVarDecl 0x1731ad8 <col:26, col:38> col:38 __beg '_InIterator'
| |   | | | |-ParmVarDecl 0x1731b50 <col:45, col:57> col:57 __end '_InIterator'
| |   | | | `-ParmVarDecl 0x1731bb8 <line:248:5, col:10> col:22 'std::__false_type':'std::__false_type'
| |   | | `-CXXMethodDecl 0x1adc208 <line:246:9, line:252:2> line:247:9 used _M_construct_aux 'void (const char16_t *, const char16_t *, std::__false_type)'
| |   | |   |-TemplateArgument type 'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adc008 <col:26, col:38> col:38 used __beg 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adc080 <col:45, col:57> col:57 used __end 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adc0e8 <line:248:5, col:10> col:22 'std::__false_type':'std::__false_type'
| |   | |   `-CompoundStmt 0x1add5b0 <line:249:2, line:252:2>
| |   | |     |-DeclStmt 0x1adcc08 <line:250:11, col:80>
| |   | |     | `-TypedefDecl 0x1adcbb0 <col:11, col:76> col:76 _Tag 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'
| |   | |     |   `-ElaboratedType 0x1adcb60 'typename iterator_traits<const char16_t *>::iterator_category' sugar
| |   | |     |     `-TypedefType 0x1adcb40 'std::iterator_traits<const char16_t *>::iterator_category' sugar
| |   | |     |       |-Typedef 0x1adc910 'iterator_category'
| |   | |     |       `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |   | |     |         `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |   | |     `-ExprWithCleanups 0x1add598 <line:251:11, col:44> 'void'
| |   | |       `-CXXMemberCallExpr 0x1add4c0 <col:11, col:44> 'void'
| |   | |         |-MemberExpr 0x1add478 <col:11> '<bound member function type>' ->_M_construct 0x1adcfc8
| |   | |         | `-CXXThisExpr 0x1add468 <col:11> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |         |-ImplicitCastExpr 0x1add4f8 <col:24> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1adccb0 <col:24> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adc008 '__beg' 'const char16_t *':'const char16_t *'
| |   | |         |-ImplicitCastExpr 0x1add510 <col:31> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1adccd0 <col:31> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adc080 '__end' 'const char16_t *':'const char16_t *'
| |   | |         `-CXXConstructExpr 0x1add568 <col:38, col:43> 'std::forward_iterator_tag':'std::forward_iterator_tag' 'void (std::forward_iterator_tag &&) noexcept'
| |   | |           `-ImplicitCastExpr 0x1add540 <col:38, col:43> 'std::forward_iterator_tag' xvalue <DerivedToBase (bidirectional_iterator_tag -> forward_iterator_tag)>
| |   | |             `-MaterializeTemporaryExpr 0x1add528 <col:38, col:43> '_Tag':'std::random_access_iterator_tag' xvalue
| |   | |               `-CXXTemporaryObjectExpr 0x1adcd20 <col:38, col:43> '_Tag':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| |   | |-FunctionTemplateDecl 0x1732138 <line:256:7, line:259:62> line:258:9 _M_construct_aux
| |   | | |-TemplateTypeParmDecl 0x1731e28 <line:256:16, col:25> col:25 typename depth 0 index 0 _Integer
| |   | | `-CXXMethodDecl 0x1732098 <line:257:9, line:259:62> line:258:9 _M_construct_aux 'void (_Integer, _Integer, std::__true_type)'
| |   | |   |-ParmVarDecl 0x1731ed8 <col:26, col:35> col:35 __beg '_Integer'
| |   | |   |-ParmVarDecl 0x1731f50 <col:42, col:51> col:51 __end '_Integer'
| |   | |   `-ParmVarDecl 0x1731fb8 <col:58, col:63> col:74 'std::__true_type':'std::__true_type'
| |   | |-CXXMethodDecl 0x17352a0 <line:261:7, line:263:35> line:262:7 _M_construct_aux_2 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1732238 <col:26, col:36> col:36 __req 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17322b0 <col:43, col:50> col:50 __c 'char16_t':'char16_t'
| |   | |-FunctionTemplateDecl 0x17355f8 <line:265:7, line:271:9> line:267:9 _M_construct
| |   | | |-TemplateTypeParmDecl 0x1735360 <line:265:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |   | | |-CXXMethodDecl 0x1735558 <line:266:9, line:271:9> line:267:9 _M_construct 'void (_InIterator, _InIterator)'
| |   | | | |-ParmVarDecl 0x1735408 <col:22, col:34> col:34 __beg '_InIterator'
| |   | | | `-ParmVarDecl 0x1735480 <col:41, col:53> col:53 __end '_InIterator'
| |   | | `-CXXMethodDecl 0x1ad8c38 <line:266:9, line:271:9> line:267:9 used _M_construct 'void (const char16_t *, const char16_t *)'
| |   | |   |-TemplateArgument type 'const char16_t *'
| |   | |   |-ParmVarDecl 0x1ad8aa8 <col:22, col:34> col:34 used __beg 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1ad8b20 <col:41, col:53> col:53 used __end 'const char16_t *':'const char16_t *'
| |   | |   `-CompoundStmt 0x1adc438 <line:268:2, line:271:9>
| |   | |     |-DeclStmt 0x1adbe38 <line:269:4, col:69>
| |   | |     | `-TypedefDecl 0x1adbde0 <col:4, col:60> col:60 _Integral 'typename std::__is_integer<const char16_t *>::__type':'std::__false_type'
| |   | |     |   `-ElaboratedType 0x1adbd90 'typename std::__is_integer<const char16_t *>::__type' sugar
| |   | |     |     `-TypedefType 0x1adbd70 'std::__is_integer<const char16_t *>::__type' sugar
| |   | |     |       |-Typedef 0x1adbcf8 '__type'
| |   | |     |       `-RecordType 0x1285390 'std::__false_type'
| |   | |     |         `-CXXRecord 0x1285300 '__false_type'
| |   | |     `-ExprWithCleanups 0x1adc420 <line:270:4, col:46> 'void'
| |   | |       `-CXXMemberCallExpr 0x1adc370 <col:4, col:46> 'void'
| |   | |         |-MemberExpr 0x1adc328 <col:4> '<bound member function type>' ->_M_construct_aux 0x1adc208
| |   | |         | `-CXXThisExpr 0x1adc318 <col:4> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |         |-ImplicitCastExpr 0x1adc3a8 <col:21> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1adbed0 <col:21> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ad8aa8 '__beg' 'const char16_t *':'const char16_t *'
| |   | |         |-ImplicitCastExpr 0x1adc3c0 <col:28> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1adbef0 <col:28> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ad8b20 '__end' 'const char16_t *':'const char16_t *'
| |   | |         `-CXXConstructExpr 0x1adc3f0 <col:35, col:45> 'std::__false_type':'std::__false_type' 'void (std::__false_type &&) noexcept' elidable
| |   | |           `-MaterializeTemporaryExpr 0x1adc3d8 <col:35, col:45> '_Integral':'std::__false_type' xvalue
| |   | |             `-CXXTemporaryObjectExpr 0x1adbf40 <col:35, col:45> '_Integral':'std::__false_type' 'void () noexcept' zeroing
| |   | |-FunctionTemplateDecl 0x17359e8 <line:274:7, line:277:31> line:276:9 _M_construct
| |   | | |-TemplateTypeParmDecl 0x17356e0 <line:274:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |   | | |-CXXMethodDecl 0x1735948 <line:275:9, line:277:31> line:276:9 _M_construct 'void (_InIterator, _InIterator, std::input_iterator_tag)'
| |   | | | |-ParmVarDecl 0x1735788 <col:22, col:34> col:34 __beg '_InIterator'
| |   | | | |-ParmVarDecl 0x1735800 <col:41, col:53> col:53 __end '_InIterator'
| |   | | | `-ParmVarDecl 0x1735868 <line:277:8, col:13> col:31 'std::input_iterator_tag':'std::input_iterator_tag'
| |   | | `-CXXMethodDecl 0x1add358 <line:275:9, line:277:31> line:276:9 _M_construct 'void (const char16_t *, const char16_t *, std::input_iterator_tag)'
| |   | |   |-TemplateArgument type 'const char16_t *'
| |   | |   |-ParmVarDecl 0x1add158 <col:22, col:34> col:34 __beg 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1add1d0 <col:41, col:53> col:53 __end 'const char16_t *':'const char16_t *'
| |   | |   `-ParmVarDecl 0x1add238 <line:277:8, col:13> col:31 'std::input_iterator_tag':'std::input_iterator_tag'
| |   | |-FunctionTemplateDecl 0x1735de8 <line:281:7, line:284:33> line:283:9 _M_construct
| |   | | |-TemplateTypeParmDecl 0x1735ad8 <line:281:16, col:25> col:25 typename depth 0 index 0 _FwdIterator
| |   | | |-CXXMethodDecl 0x1735d48 <line:282:9, line:284:33> line:283:9 _M_construct 'void (_FwdIterator, _FwdIterator, std::forward_iterator_tag)'
| |   | | | |-ParmVarDecl 0x1735b88 <col:22, col:35> col:35 __beg '_FwdIterator'
| |   | | | |-ParmVarDecl 0x1735c00 <col:42, col:55> col:55 __end '_FwdIterator'
| |   | | | `-ParmVarDecl 0x1735c68 <line:284:8, col:13> col:33 'std::forward_iterator_tag':'std::forward_iterator_tag'
| |   | | `-CXXMethodDecl 0x1adcfc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:205:7, line:233:7> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:283:9 used _M_construct 'void (const char16_t *, const char16_t *, std::forward_iterator_tag)'
| |   | |   |-TemplateArgument type 'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adcdc8 <col:22, col:35> col:35 used __beg 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adce40 <col:42, col:55> col:55 used __end 'const char16_t *':'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adcea8 <line:284:8, col:13> col:33 'std::forward_iterator_tag':'std::forward_iterator_tag'
| |   | |   `-CompoundStmt 0x1ae4b60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:209:7, line:233:7>
| |   | |     |-IfStmt 0x1addf88 <line:211:2, line:213:42>
| |   | |     | |-BinaryOperator 0x1addf10 <line:211:6, col:54> 'bool' '&&'
| |   | |     | | |-CallExpr 0x1adddb0 <col:6, col:40> 'bool'
| |   | |     | | | |-ImplicitCastExpr 0x1addd98 <col:6, col:17> 'bool (*)(const char16_t *)' <FunctionToPointerDecay>
| |   | |     | | | | `-DeclRefExpr 0x1addd08 <col:6, col:17> 'bool (const char16_t *)' lvalue Function 0x1add9c8 '__is_null_pointer' 'bool (const char16_t *)' (FunctionTemplate 0x12b9d58 '__is_null_pointer')
| |   | |     | | | `-ImplicitCastExpr 0x1adddd8 <col:35> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     | | |   `-DeclRefExpr 0x1add810 <col:35> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adcdc8 '__beg' 'const char16_t *':'const char16_t *'
| |   | |     | | `-BinaryOperator 0x1addef0 <col:45, col:54> 'bool' '!='
| |   | |     | |   |-ImplicitCastExpr 0x1addec0 <col:45> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     | |   | `-DeclRefExpr 0x1adde80 <col:45> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adcdc8 '__beg' 'const char16_t *':'const char16_t *'
| |   | |     | |   `-ImplicitCastExpr 0x1added8 <col:54> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     | |     `-DeclRefExpr 0x1addea0 <col:54> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adce40 '__end' 'const char16_t *':'const char16_t *'
| |   | |     | `-CallExpr 0x1addf48 <line:212:4, line:213:42> 'void'
| |   | |     |   |-ImplicitCastExpr 0x1addf30 <line:212:4, col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| |   | |     |   | `-DeclRefExpr 0x17952c8 <col:4, col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x1281ae8 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'
| |   | |     |   `-ImplicitCastExpr 0x1addf70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:590:24, col:30> 'const char *' <ArrayToPointerDecay>
| |   | |     |     `-ParenExpr 0x17953c0 <col:24, col:30> 'const char [42]' lvalue
| |   | |     |       `-StringLiteral 0x1795378 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:212:33, line:213:12> 'const char [42]' lvalue "basic_string::_M_construct null not valid"
| |   | |     |-DeclStmt 0x1ade628 <line:215:2, col:72>
| |   | |     | `-VarDecl 0x1addfb0 <col:2, col:71> col:12 used __dnew 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' cinit
| |   | |     |   `-CXXStaticCastExpr 0x1ade5f8 <col:21, col:71> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' static_cast<std::__cxx11::basic_string<char16_t, struct std::char_traits<char16_t>, class std::allocator<char16_t> >::size_type> <NoOp>
| |   | |     |     `-ImplicitCastExpr 0x1ade5e0 <col:44, col:70> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   | |     |       `-CallExpr 0x1ade580 <col:44, col:70> 'typename iterator_traits<const char16_t *>::difference_type':'long'
| |   | |     |         |-ImplicitCastExpr 0x1ade568 <col:44, col:49> 'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *)' <FunctionToPointerDecay>
| |   | |     |         | `-DeclRefExpr 0x1ade4d0 <col:44, col:49> 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)' lvalue Function 0x1ade3c8 'distance' 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)' (FunctionTemplate 0x1314008 'distance')
| |   | |     |         |-ImplicitCastExpr 0x1ade5b0 <col:58> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     |         | `-DeclRefExpr 0x1ade070 <col:58> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adcdc8 '__beg' 'const char16_t *':'const char16_t *'
| |   | |     |         `-ImplicitCastExpr 0x1ade5c8 <col:65> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     |           `-DeclRefExpr 0x1ade090 <col:65> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adce40 '__end' 'const char16_t *':'const char16_t *'
| |   | |     |-IfStmt 0x1adea10 <line:217:2, line:221:4>
| |   | |     | |-BinaryOperator 0x1ade768 <line:217:6, col:42> 'bool' '>'
| |   | |     | | |-ImplicitCastExpr 0x1ade750 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |     | | | `-DeclRefExpr 0x1ade6c0 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue Var 0x1addfb0 '__dnew' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |     | | `-CXXFunctionalCastExpr 0x1ade728 <col:15, col:42> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' functional cast to std::__cxx11::basic_string<char16_t, struct std::char_traits<char16_t>, class std::allocator<char16_t> >::size_type <NoOp>
| |   | |     | |   `-ImplicitCastExpr 0x1ade710 <col:25> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   | |     | |     `-DeclRefExpr 0x1ade6f0 <col:25> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)' EnumConstant 0x1730378 '_S_local_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |   | |     | `-CompoundStmt 0x1ade9f0 <line:218:4, line:221:4>
| |   | |     |   |-CXXMemberCallExpr 0x1ade928 <line:219:6, col:45> 'void'
| |   | |     |   | |-MemberExpr 0x1ade8f8 <col:6> '<bound member function type>' ->_M_data 0x1730c28
| |   | |     |   | | `-CXXThisExpr 0x1ade8e8 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |   | `-CXXMemberCallExpr 0x1ade8b8 <col:14, col:44> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |     |   |   |-MemberExpr 0x1ade818 <col:14> '<bound member function type>' ->_M_create 0x1731728
| |   | |     |   |   | `-CXXThisExpr 0x1ade808 <col:14> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |   |   |-DeclRefExpr 0x1ade848 <col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue Var 0x1addfb0 '__dnew' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |     |   |   `-CXXFunctionalCastExpr 0x1ade890 <col:32, col:43> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' functional cast to std::__cxx11::basic_string<char16_t, struct std::char_traits<char16_t>, class std::allocator<char16_t> >::size_type <NoOp>
| |   | |     |   |     `-ImplicitCastExpr 0x1ade878 <col:42> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   | |     |   |       `-IntegerLiteral 0x1795808 <col:42> 'int' 0
| |   | |     |   `-CXXMemberCallExpr 0x1ade9b0 <line:220:6, col:24> 'void'
| |   | |     |     |-MemberExpr 0x1ade960 <col:6> '<bound member function type>' ->_M_capacity 0x1731298
| |   | |     |     | `-CXXThisExpr 0x1ade950 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |     `-ImplicitCastExpr 0x1ade9d8 <col:18> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |     |       `-DeclRefExpr 0x1ade990 <col:18> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue Var 0x1addfb0 '__dnew' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |     |-CXXTryStmt 0x1ae4aa0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:40:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:230:4>
| |   | |     | |-CompoundStmt 0x1ae49e8 <line:225:4, col:52>
| |   | |     | | `-CallExpr 0x1ae4980 <col:6, col:49> 'void'
| |   | |     | |   |-ImplicitCastExpr 0x1ae4968 <col:6, col:12> 'void (*)(char16_t *, const char16_t *, const char16_t *) noexcept' <FunctionToPointerDecay>
| |   | |     | |   | `-MemberExpr 0x1ae48d8 <col:6, col:12> 'void (char16_t *, const char16_t *, const char16_t *) noexcept' lvalue ->_S_copy_chars 0x17383f0
| |   | |     | |   |   `-CXXThisExpr 0x1adea28 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' this
| |   | |     | |   |-CXXMemberCallExpr 0x1adeb70 <col:26, col:34> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |     | |   | `-MemberExpr 0x1adeb40 <col:26> '<bound member function type>' ->_M_data 0x1730ee8
| |   | |     | |   |   `-ImplicitCastExpr 0x1adeb90 <col:26> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' <NoOp>
| |   | |     | |   |     `-CXXThisExpr 0x1adeb30 <col:26> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     | |   |-ImplicitCastExpr 0x1ae49b8 <col:37> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     | |   | `-DeclRefExpr 0x1adeba8 <col:37> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adcdc8 '__beg' 'const char16_t *':'const char16_t *'
| |   | |     | |   `-ImplicitCastExpr 0x1ae49d0 <col:44> 'const char16_t *':'const char16_t *' <LValueToRValue>
| |   | |     | |     `-DeclRefExpr 0x1adebc8 <col:44> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1adce40 '__end' 'const char16_t *':'const char16_t *'
| |   | |     | `-CXXCatchStmt 0x1ae4a80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:41:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:230:4>
| |   | |     |   |-<<<NULL>>>
| |   | |     |   `-CompoundStmt 0x1ae4a60 <line:227:4, line:230:4>
| |   | |     |     |-CXXMemberCallExpr 0x1ae4a40 <line:228:6, col:17> 'void'
| |   | |     |     | `-MemberExpr 0x1ae4a10 <col:6> '<bound member function type>' ->_M_dispose 0x17317e8
| |   | |     |     |   `-CXXThisExpr 0x1ae4a00 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |     `-CXXThrowExpr 0x1795b40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:42:34> 'void'
| |   | |     `-CXXMemberCallExpr 0x1ae4b20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:232:2, col:22> 'void'
| |   | |       |-MemberExpr 0x1ae4ad0 <col:2> '<bound member function type>' ->_M_set_length 0x17313f0
| |   | |       | `-CXXThisExpr 0x1ae4ac0 <col:2> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       `-ImplicitCastExpr 0x1ae4b48 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |         `-DeclRefExpr 0x1ae4b00 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue Var 0x1addfb0 '__dnew' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1735ff8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:286:7, line:287:47> col:7 _M_construct 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1735ee8 <col:20, col:30> col:30 __req 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1735f60 <col:37, col:44> col:44 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1736168 <line:289:7, line:291:29> line:290:7 used _M_get_allocator 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type &()'
| |   | | `-CompoundStmt 0x1ae71a0 <line:291:7, col:29>
| |   | |   `-ReturnStmt 0x1ae7190 <col:9, col:16>
| |   | |     `-ImplicitCastExpr 0x1ae7170 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' lvalue <DerivedToBase (allocator)>
| |   | |       `-MemberExpr 0x1ae7140 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1730170
| |   | |         `-CXXThisExpr 0x1ae7130 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x17362c8 <line:293:7, line:295:29> line:294:7 used _M_get_allocator 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type &() const'
| |   | | `-CompoundStmt 0x1ae7118 <line:295:7, col:29>
| |   | |   `-ReturnStmt 0x1ae7108 <col:9, col:16>
| |   | |     `-ImplicitCastExpr 0x1ae70e8 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'const std::allocator<char16_t>' lvalue <DerivedToBase (allocator)>
| |   | |       `-MemberExpr 0x1ae70b8 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1730170
| |   | |         `-CXXThisExpr 0x1ae70a8 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-AccessSpecDecl 0x1736378 <line:297:5, col:12> col:5 private
| |   | |-CXXMethodDecl 0x17364e8 <line:313:7, line:321:7> line:314:7 _M_check 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char *) const'
| |   | | |-ParmVarDecl 0x17363b0 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1736418 <col:33, col:45> col:45 __s 'const char *'
| |   | |-CXXMethodDecl 0x1736778 <line:323:7, line:328:7> line:324:7 _M_check_length 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char *) const'
| |   | | |-ParmVarDecl 0x17365b8 <col:23, col:33> col:33 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1736630 <col:39, col:49> col:49 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1736698 <col:55, col:67> col:67 __s 'const char *'
| |   | |-CXXMethodDecl 0x17369a0 <line:332:7, line:337:7> line:333:7 _M_limit 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x1736850 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17368c8 <col:33, col:43> col:43 __off 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1736b90 <line:340:7, line:345:7> line:341:7 _M_disjunct 'bool (const char16_t *) const noexcept'
| |   | | `-ParmVarDecl 0x1736a98 <col:19, col:33> col:33 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x1736e98 <line:349:7, line:356:7> line:350:7 used _S_copy 'void (char16_t *, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)' static
| |   | | |-ParmVarDecl 0x1736c88 <col:15, col:23> col:23 used __d 'char16_t *'
| |   | | |-ParmVarDecl 0x1736d00 <col:28, col:42> col:42 used __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x1736d78 <col:47, col:57> col:57 used __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-CompoundStmt 0x1ae7e88 <line:351:7, line:356:7>
| |   | |   `-IfStmt 0x1ae7e60 <line:352:2, line:355:35> has_else
| |   | |     |-BinaryOperator 0x1ae7ae0 <line:352:6, col:13> 'bool' '=='
| |   | |     | |-ImplicitCastExpr 0x1ae7ab0 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |     | | `-DeclRefExpr 0x1ae7a90 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1736d78 '__n' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |     | `-ImplicitCastExpr 0x1ae7ac8 <col:13> 'unsigned long' <IntegralCast>
| |   | |     |   `-IntegerLiteral 0x15c4f78 <col:13> 'int' 1
| |   | |     |-CallExpr 0x1ae7c90 <line:353:4, col:34> 'void'
| |   | |     | |-ImplicitCastExpr 0x1ae7c78 <col:4, col:17> 'void (*)(std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   | |     | | `-DeclRefExpr 0x1ae7c48 <col:4, col:17> 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e00e0 'assign' 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   | |     | |-UnaryOperator 0x1ae7be0 <col:24, col:25> 'char16_t':'char16_t' lvalue prefix '*' cannot overflow
| |   | |     | | `-ImplicitCastExpr 0x1ae7bc8 <col:25> 'char16_t *' <LValueToRValue>
| |   | |     | |   `-DeclRefExpr 0x1ae7ba8 <col:25> 'char16_t *' lvalue ParmVar 0x1736c88 '__d' 'char16_t *'
| |   | |     | `-UnaryOperator 0x1ae7c30 <col:30, col:31> 'const char16_t':'const char16_t' lvalue prefix '*' cannot overflow
| |   | |     |   `-ImplicitCastExpr 0x1ae7c18 <col:31> 'const char16_t *' <LValueToRValue>
| |   | |     |     `-DeclRefExpr 0x1ae7bf8 <col:31> 'const char16_t *' lvalue ParmVar 0x1736d00 '__s' 'const char16_t *'
| |   | |     `-CallExpr 0x1ae7de0 <line:355:4, col:35> 'std::char_traits<char16_t>::char_type *'
| |   | |       |-ImplicitCastExpr 0x1ae7dc8 <col:4, col:17> 'std::char_traits<char16_t>::char_type *(*)(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' <FunctionToPointerDecay>
| |   | |       | `-DeclRefExpr 0x1ae7ce0 <col:4, col:17> 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' lvalue CXXMethod 0x13eabe0 'copy' 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)'
| |   | |       |-ImplicitCastExpr 0x1ae7e18 <col:22> 'char16_t *' <LValueToRValue>
| |   | |       | `-DeclRefExpr 0x1ae7d10 <col:22> 'char16_t *' lvalue ParmVar 0x1736c88 '__d' 'char16_t *'
| |   | |       |-ImplicitCastExpr 0x1ae7e30 <col:27> 'const char16_t *' <LValueToRValue>
| |   | |       | `-DeclRefExpr 0x1ae7d30 <col:27> 'const char16_t *' lvalue ParmVar 0x1736d00 '__s' 'const char16_t *'
| |   | |       `-ImplicitCastExpr 0x1ae7e48 <col:32> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |         `-DeclRefExpr 0x1ae7d50 <col:32> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1736d78 '__n' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1737100 <line:358:7, line:365:7> line:359:7 _S_move 'void (char16_t *, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)' static
| |   | | |-ParmVarDecl 0x1736f70 <col:15, col:23> col:23 __d 'char16_t *'
| |   | | |-ParmVarDecl 0x1736fe8 <col:28, col:42> col:42 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1737060 <col:47, col:57> col:57 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17373e8 <line:367:7, line:374:7> line:368:7 _S_assign 'void (char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)' static
| |   | | |-ParmVarDecl 0x17371d8 <col:17, col:25> col:25 __d 'char16_t *'
| |   | | |-ParmVarDecl 0x1737250 <col:30, col:40> col:40 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17372c8 <col:45, col:52> col:52 __c 'char16_t':'char16_t'
| |   | |-FunctionTemplateDecl 0x1737808 <line:378:7, line:384:2> line:380:9 _S_copy_chars
| |   | | |-TemplateTypeParmDecl 0x17374b0 <line:378:16, col:22> col:22 class depth 0 index 0 _Iterator
| |   | | |-CXXMethodDecl 0x1737768 <line:379:9, line:384:2> line:380:9 _S_copy_chars 'void (char16_t *, _Iterator, _Iterator)' static
| |   | | | |-ParmVarDecl 0x1737558 <col:23, col:31> col:31 __p 'char16_t *'
| |   | | | |-ParmVarDecl 0x17375d0 <col:36, col:46> col:46 __k1 '_Iterator'
| |   | | | `-ParmVarDecl 0x1737648 <col:52, col:62> col:62 __k2 '_Iterator'
| |   | | `-CXXMethodDecl 0x1adee28 <line:379:9, line:384:2> line:380:9 _S_copy_chars 'void (char16_t *, const char16_t *, const char16_t *)' static
| |   | |   |-TemplateArgument type 'const char16_t *'
| |   | |   |-ParmVarDecl 0x1adec28 <col:23, col:31> col:31 __p 'char16_t *'
| |   | |   |-ParmVarDecl 0x1adecc8 <col:36, col:46> col:46 __k1 'const char16_t *':'const char16_t *'
| |   | |   `-ParmVarDecl 0x1aded40 <col:52, col:62> col:62 __k2 'const char16_t *':'const char16_t *'
| |   | |-CXXMethodDecl 0x1737b20 <line:386:7, line:388:55> line:387:7 _S_copy_chars 'void (char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator) noexcept' static
| |   | | |-ParmVarDecl 0x1737908 <col:21, col:29> col:29 __p 'char16_t *'
| |   | | |-ParmVarDecl 0x1737980 <col:34, col:43> col:43 __k1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x17379f8 <col:49, col:58> col:58 __k2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x1737e10 <line:390:7, line:393:55> line:391:7 _S_copy_chars 'void (char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator) noexcept' static
| |   | | |-ParmVarDecl 0x1737bf8 <col:21, col:29> col:29 __p 'char16_t *'
| |   | | |-ParmVarDecl 0x1737c70 <col:34, col:49> col:49 __k1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1737ce8 <col:55, col:70> col:70 __k2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x1738100 <line:395:7, line:397:42> line:396:7 _S_copy_chars 'void (char16_t *, char16_t *, char16_t *) noexcept' static
| |   | | |-ParmVarDecl 0x1737ee8 <col:21, col:29> col:29 __p 'char16_t *'
| |   | | |-ParmVarDecl 0x1737f60 <col:34, col:42> col:42 __k1 'char16_t *'
| |   | | `-ParmVarDecl 0x1737fd8 <col:48, col:56> col:56 __k2 'char16_t *'
| |   | |-CXXMethodDecl 0x17383f0 <line:399:7, line:402:42> line:400:7 used _S_copy_chars 'void (char16_t *, const char16_t *, const char16_t *) noexcept' static
| |   | | |-ParmVarDecl 0x17381d8 <col:21, col:29> col:29 used __p 'char16_t *'
| |   | | |-ParmVarDecl 0x1738250 <col:34, col:48> col:48 used __k1 'const char16_t *'
| |   | | |-ParmVarDecl 0x17382c8 <col:54, col:68> col:68 used __k2 'const char16_t *'
| |   | | `-CompoundStmt 0x1ae7a00 <line:402:7, col:42>
| |   | |   `-CallExpr 0x1ae7980 <col:9, col:39> 'void'
| |   | |     |-ImplicitCastExpr 0x1ae7968 <col:9> 'void (*)(char16_t *, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)' <FunctionToPointerDecay>
| |   | |     | `-DeclRefExpr 0x1ae77d0 <col:9> 'void (char16_t *, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)' lvalue CXXMethod 0x1736e98 '_S_copy' 'void (char16_t *, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | |     |-ImplicitCastExpr 0x1ae79b8 <col:17> 'char16_t *' <LValueToRValue>
| |   | |     | `-DeclRefExpr 0x1ae77f0 <col:17> 'char16_t *' lvalue ParmVar 0x17381d8 '__p' 'char16_t *'
| |   | |     |-ImplicitCastExpr 0x1ae79d0 <col:22> 'const char16_t *' <LValueToRValue>
| |   | |     | `-DeclRefExpr 0x1ae7810 <col:22> 'const char16_t *' lvalue ParmVar 0x1738250 '__k1' 'const char16_t *'
| |   | |     `-ImplicitCastExpr 0x1ae79e8 <col:28, col:35> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast>
| |   | |       `-BinaryOperator 0x1ae78f0 <col:28, col:35> 'long' '-'
| |   | |         |-ImplicitCastExpr 0x1ae78c0 <col:28> 'const char16_t *' <LValueToRValue>
| |   | |         | `-DeclRefExpr 0x1ae7880 <col:28> 'const char16_t *' lvalue ParmVar 0x17382c8 '__k2' 'const char16_t *'
| |   | |         `-ImplicitCastExpr 0x1ae78d8 <col:35> 'const char16_t *' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x1ae78a0 <col:35> 'const char16_t *' lvalue ParmVar 0x1738250 '__k1' 'const char16_t *'
| |   | |-CXXMethodDecl 0x1738628 <line:404:7, line:415:7> line:405:7 _S_compare 'int (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) noexcept' static
| |   | | |-ParmVarDecl 0x17384c8 <col:18, col:28> col:28 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1738540 <col:34, col:44> col:44 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17387b8 <line:417:7, line:418:36> col:7 _M_assign 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x17386f8 <col:17, col:35> col:36 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x1738b28 <line:420:7, line:422:19> line:421:7 _M_mutate 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1738880 <col:17, col:27> col:27 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17388f8 <col:34, col:44> col:44 __len1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1738970 <col:52, col:66> col:66 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x17389e8 <line:422:3, col:13> col:13 __len2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1738d58 <line:424:7, line:425:46> col:7 _M_erase 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1738c08 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1738c80 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-AccessSpecDecl 0x1738e18 <line:427:5, col:11> col:5 public
| |   | |-CXXConstructorDecl 0x1738ea0 <line:435:7, line:438:27> line:435:7 basic_string 'void ()' noexcept-uninstantiated 0x157e9a0
| |   | |-CXXConstructorDecl 0x1739090 <line:443:7, line:446:27> line:444:7 basic_string 'void (const std::allocator<char16_t> &) noexcept'
| |   | | `-ParmVarDecl 0x1738fa8 <col:20, col:34> col:34 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x1739210 <line:452:7, line:455:74> line:452:7 basic_string 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x1739160 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXConstructorDecl 0x1739518 <line:465:7, line:472:7> line:465:7 basic_string 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x17392e0 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x1739358 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17393d0 <line:466:6, col:33> col:20 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x1739828 <line:480:7, line:487:7> line:480:7 basic_string 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17395f8 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x1739670 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17396e8 <line:481:6, col:16> col:16 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXConstructorDecl 0x1739bd8 <line:496:7, line:503:7> line:496:7 basic_string 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x1739908 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x1739980 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17399f8 <line:497:6, col:16> col:16 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1739a70 <col:21, col:35> col:35 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x1739ef8 <line:514:7, line:517:39> line:514:7 used basic_string 'void (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x1739cc0 <col:20, col:34> col:34 used __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x1739d38 <col:39, col:49> col:49 used __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1739db0 <line:515:6, col:33> col:20 used __a 'const std::allocator<char16_t> &' cinit
| |   | | | `-ExprWithCleanups 0x17852b8 <col:26, col:33> 'const std::allocator<char16_t>':'const std::allocator<char16_t>' lvalue
| |   | | |   `-MaterializeTemporaryExpr 0x17852a0 <col:26, col:33> 'const std::allocator<char16_t>':'const std::allocator<char16_t>' lvalue
| |   | | |     `-ImplicitCastExpr 0x1785288 <col:26, col:33> 'const std::allocator<char16_t>':'const std::allocator<char16_t>' <NoOp>
| |   | | |       `-CXXBindTemporaryExpr 0x1785268 <col:26, col:33> 'std::allocator<char16_t>':'std::allocator<char16_t>' (CXXTemporary 0x1785268)
| |   | | |         `-CXXTemporaryObjectExpr 0x1785230 <col:26, col:33> 'std::allocator<char16_t>':'std::allocator<char16_t>' 'void () noexcept'
| |   | | |-CXXCtorInitializer Field 0x1730170 '_M_dataplus' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider'
| |   | | | `-CXXConstructExpr 0x1ad8820 <line:516:9, col:41> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer, const std::allocator<char16_t> &)'
| |   | | |   |-CXXMemberCallExpr 0x1ad87b8 <col:21, col:35> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | |   | `-MemberExpr 0x1ad8788 <col:21> '<bound member function type>' ->_M_local_data 0x1731018
| |   | | |   |   `-CXXThisExpr 0x1ad8778 <col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | | |   `-DeclRefExpr 0x1ad87d8 <col:38> 'const std::allocator<char16_t>':'const std::allocator<char16_t>' lvalue ParmVar 0x1739db0 '__a' 'const std::allocator<char16_t> &'
| |   | | `-CompoundStmt 0x1ad8de0 <line:517:7, col:39>
| |   | |   `-CXXMemberCallExpr 0x1ad8d98 <col:9, col:36> 'void'
| |   | |     |-MemberExpr 0x1ad8d50 <col:9> '<bound member function type>' ->_M_construct 0x1ad8c38
| |   | |     | `-CXXThisExpr 0x1ad8d40 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |     |-ImplicitCastExpr 0x1ad8dc8 <col:22> 'const char16_t *' <LValueToRValue>
| |   | |     | `-DeclRefExpr 0x1ad8928 <col:22> 'const char16_t *' lvalue ParmVar 0x1739cc0 '__s' 'const char16_t *'
| |   | |     `-BinaryOperator 0x1ad8a08 <col:27, col:33> 'const char16_t *' '+'
| |   | |       |-ImplicitCastExpr 0x1ad89d8 <col:27> 'const char16_t *' <LValueToRValue>
| |   | |       | `-DeclRefExpr 0x1ad8998 <col:27> 'const char16_t *' lvalue ParmVar 0x1739cc0 '__s' 'const char16_t *'
| |   | |       `-ImplicitCastExpr 0x1ad89f0 <col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |         `-DeclRefExpr 0x1ad89b8 <col:33> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ParmVar 0x1739d38 '__n' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXConstructorDecl 0x173a188 <line:529:7, line:531:77> line:529:7 basic_string 'void (const char16_t *, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x1739fd8 <col:20, col:34> col:34 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x173a050 <col:39, col:66> col:53 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x173a498 <line:544:7, line:546:33> line:544:7 basic_string 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x173a260 <col:20, col:30> col:30 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x173a2d8 <col:35, col:42> col:42 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x173a350 <col:47, col:74> col:61 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x173a6c0 <line:556:7, line:576:7> line:556:7 used basic_string 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&) noexcept'
| |   | | |-ParmVarDecl 0x173a5a8 <col:20, col:35> col:35 used __str 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | | |-CXXCtorInitializer Field 0x1730170 '_M_dataplus' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider'
| |   | | | `-CXXConstructExpr 0x1aedbd0 <line:557:9, col:73> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_Alloc_hider' 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer, std::allocator<char16_t> &&)'
| |   | | |   |-CXXMemberCallExpr 0x1aed0a0 <col:21, col:35> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | | |   | `-MemberExpr 0x1aed070 <col:21> '<bound member function type>' ->_M_local_data 0x1731018
| |   | | |   |   `-CXXThisExpr 0x1aed060 <col:21> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | | |   `-CallExpr 0x1aedb80 <col:38, col:72> 'typename std::remove_reference<allocator<char16_t> &>::type':'std::allocator<char16_t>' xvalue
| |   | | |     |-ImplicitCastExpr 0x1aedb68 <col:38, col:43> 'typename std::remove_reference<allocator<char16_t> &>::type &&(*)(std::allocator<char16_t> &) noexcept' <FunctionToPointerDecay>
| |   | | |     | `-DeclRefExpr 0x1aed928 <col:38, col:43> 'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept' lvalue Function 0x1aed828 'move' 'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept' (FunctionTemplate 0x12759e8 'move')
| |   | | |     `-CXXMemberCallExpr 0x1aed1c0 <col:48, col:71> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'std::allocator<char16_t>' lvalue
| |   | | |       `-MemberExpr 0x1aed190 <col:48, col:54> '<bound member function type>' ._M_get_allocator 0x1736168
| |   | | |         `-DeclRefExpr 0x1aed110 <col:48> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | | `-CompoundStmt 0x1aee8b8 <line:558:7, line:576:7>
| |   | |   |-IfStmt 0x1aee568 <line:559:2, line:568:4> has_else
| |   | |   | |-CXXMemberCallExpr 0x1aedc88 <line:559:6, col:24> 'bool'
| |   | |   | | `-MemberExpr 0x1aedc58 <col:6, col:12> '<bound member function type>' ._M_is_local 0x17314a8
| |   | |   | |   `-ImplicitCastExpr 0x1aedca8 <col:6> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue <NoOp>
| |   | |   | |     `-DeclRefExpr 0x1aedc38 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   | |-CompoundStmt 0x1aee248 <line:560:4, line:563:4>
| |   | |   | | `-CallExpr 0x1aee1b0 <line:561:6, line:562:31> 'std::char_traits<char16_t>::char_type *'
| |   | |   | |   |-ImplicitCastExpr 0x1aee198 <line:561:6, col:19> 'std::char_traits<char16_t>::char_type *(*)(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' <FunctionToPointerDecay>
| |   | |   | |   | `-DeclRefExpr 0x1aedd00 <col:6, col:19> 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' lvalue CXXMethod 0x13eabe0 'copy' 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)'
| |   | |   | |   |-ImplicitCastExpr 0x1aee1e8 <col:24> 'char16_t *' <ArrayToPointerDecay>
| |   | |   | |   | `-MemberExpr 0x1aedd88 <col:24> 'char16_t [8]' lvalue ._M_local_buf 0x1730958
| |   | |   | |   |   `-MemberExpr 0x1aedd40 <col:24> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1730a20
| |   | |   | |   |     `-CXXThisExpr 0x1aedd30 <col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   | |   |-ImplicitCastExpr 0x1aee218 <col:38, col:44> 'const std::char_traits<char16_t>::char_type *' <NoOp>
| |   | |   | |   | `-ImplicitCastExpr 0x1aee200 <col:38, col:44> 'char16_t *' <ArrayToPointerDecay>
| |   | |   | |   |   `-MemberExpr 0x1aede20 <col:38, col:44> 'char16_t [8]' lvalue ._M_local_buf 0x1730958
| |   | |   | |   |     `-MemberExpr 0x1aeddd8 <col:38, col:44> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue . 0x1730a20
| |   | |   | |   |       `-DeclRefExpr 0x1aeddb8 <col:38> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   | |   `-ImplicitCastExpr 0x1aee230 <line:562:10, col:30> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |   | |     `-BinaryOperator 0x1aee178 <col:10, col:30> 'int' '+'
| |   | |   | |       |-ImplicitCastExpr 0x1aee160 <col:10> 'int' <IntegralCast>
| |   | |   | |       | `-DeclRefExpr 0x1aedea0 <col:10> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)' EnumConstant 0x1730378 '_S_local_capacity' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |   | |   | |       `-IntegerLiteral 0x15d19f0 <col:30> 'int' 1
| |   | |   | `-CompoundStmt 0x1aee548 <line:565:4, line:568:4>
| |   | |   |   |-CXXMemberCallExpr 0x1aee408 <line:566:6, col:29> 'void'
| |   | |   |   | |-MemberExpr 0x1aee3d8 <col:6> '<bound member function type>' ->_M_data 0x1730c28
| |   | |   |   | | `-CXXThisExpr 0x1aee3c8 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   |   | `-CXXMemberCallExpr 0x1aee390 <col:14, col:28> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |   |   |   `-MemberExpr 0x1aee360 <col:14, col:20> '<bound member function type>' ._M_data 0x1730ee8
| |   | |   |   |     `-ImplicitCastExpr 0x1aee3b0 <col:14> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue <NoOp>
| |   | |   |   |       `-DeclRefExpr 0x1aee2e0 <col:14> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   |   `-CXXMemberCallExpr 0x1aee508 <line:567:6, col:45> 'void'
| |   | |   |     |-MemberExpr 0x1aee440 <col:6> '<bound member function type>' ->_M_capacity 0x1731298
| |   | |   |     | `-CXXThisExpr 0x1aee430 <col:6> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   |     `-ImplicitCastExpr 0x1aee530 <col:18, col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |   |       `-MemberExpr 0x1aee4d8 <col:18, col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x17309b8
| |   | |   |         `-MemberExpr 0x1aee490 <col:18, col:24> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue . 0x1730a20
| |   | |   |           `-DeclRefExpr 0x1aee470 <col:18> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   |-CXXMemberCallExpr 0x1aee658 <line:573:2, col:26> 'void'
| |   | |   | |-MemberExpr 0x1aee5a0 <col:2> '<bound member function type>' ->_M_length 0x1730db8
| |   | |   | | `-CXXThisExpr 0x1aee590 <col:2> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |   | `-CXXMemberCallExpr 0x1aee620 <col:12, col:25> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |   |   `-MemberExpr 0x1aee5f0 <col:12, col:18> '<bound member function type>' .length 0x173d1b8
| |   | |   |     `-ImplicitCastExpr 0x1aee640 <col:12> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue <NoOp>
| |   | |   |       `-DeclRefExpr 0x1aee5d0 <col:12> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   |-CXXMemberCallExpr 0x1aee800 <line:574:2, col:37> 'void'
| |   | |   | |-MemberExpr 0x1aee7d0 <col:2, col:8> '<bound member function type>' ._M_data 0x1730c28
| |   | |   | | `-DeclRefExpr 0x1aee680 <col:2> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   | `-CXXMemberCallExpr 0x1aee7b0 <col:16, col:36> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |   |   `-MemberExpr 0x1aee780 <col:16, col:22> '<bound member function type>' ._M_local_data 0x1731018
| |   | |   |     `-DeclRefExpr 0x1aee700 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |   `-CXXMemberCallExpr 0x1aee878 <line:575:2, col:23> 'void'
| |   | |     |-MemberExpr 0x1aee848 <col:2, col:8> '<bound member function type>' ._M_set_length 0x17313f0
| |   | |     | `-DeclRefExpr 0x1aee828 <col:2> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >' lvalue ParmVar 0x173a5a8 '__str' 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |     `-ImplicitCastExpr 0x1aee8a0 <col:22> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <IntegralCast>
| |   | |       `-IntegerLiteral 0x15d1f90 <col:22> 'int' 0
| |   | |-CXXConstructorDecl 0x173aaa8 <line:583:7, line:585:47> line:583:7 basic_string 'void (initializer_list<char16_t>, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x173a900 <col:20, col:45> col:45 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | | `-ParmVarDecl 0x173a978 <col:50, col:77> col:64 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x173ad28 <line:587:7, line:589:51> line:587:7 basic_string 'void (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, const std::allocator<char16_t> &)'
| |   | | |-ParmVarDecl 0x173ab80 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x173abf8 <col:47, col:61> col:61 __a 'const std::allocator<char16_t> &'
| |   | |-CXXConstructorDecl 0x173afb8 <line:591:7, line:613:7> line:591:7 basic_string 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&, const std::allocator<char16_t> &)' noexcept-uninstantiated 0x1585190
| |   | | |-ParmVarDecl 0x173ae00 <col:20, col:35> col:35 __str 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | | `-ParmVarDecl 0x173ae78 <col:42, col:56> col:56 __a 'const std::allocator<char16_t> &'
| |   | |-FunctionTemplateDecl 0x173b920 <line:624:7, line:632:32> line:629:9 basic_string
| |   | | |-TemplateTypeParmDecl 0x173b0c8 <line:624:16, col:25> col:25 typename depth 0 index 0 _InputIterator
| |   | | |-TemplateTypeParmDecl 0x173b148 <line:625:9, <scratch space>:275:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:625:18 typename depth 0 index 1
| |   | | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |   | | `-CXXConstructorDecl 0x173b878 <line:629:9, line:632:32> line:629:9 basic_string 'void (_InputIterator, _InputIterator, const std::allocator<char16_t> &)'
| |   | |   |-ParmVarDecl 0x173b648 <col:22, col:37> col:37 __beg '_InputIterator'
| |   | |   |-ParmVarDecl 0x173b6c0 <col:44, col:59> col:59 __end '_InputIterator'
| |   | |   `-ParmVarDecl 0x173b738 <line:630:8, col:35> col:22 __a 'const std::allocator<char16_t> &'
| |   | |-CXXDestructorDecl 0x173ba38 <line:661:7, line:662:23> line:661:7 used ~basic_string 'void () noexcept'
| |   | | `-CompoundStmt 0x1aecfc8 <line:662:7, col:23>
| |   | |   `-CXXMemberCallExpr 0x1aecfa8 <col:9, col:20> 'void'
| |   | |     `-MemberExpr 0x1aecf78 <col:9> '<bound member function type>' ->_M_dispose 0x17317e8
| |   | |       `-CXXThisExpr 0x1aecf68 <col:9> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x173bc28 <line:668:7, line:701:7> line:669:7 operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x173bb68 <col:17, col:37> col:37 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x173bde8 <line:707:7, line:709:35> line:708:7 operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *)'
| |   | | `-ParmVarDecl 0x173bcf0 <col:17, col:31> col:31 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x173bfa8 <line:718:7, line:723:7> line:719:7 operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(char16_t)'
| |   | | `-ParmVarDecl 0x173beb0 <col:17, col:24> col:24 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x173c178 <line:735:7, line:792:7> line:736:7 operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&)' noexcept-uninstantiated 0x1586420
| |   | | `-ParmVarDecl 0x173c070 <col:17, col:32> col:32 __str 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |-CXXMethodDecl 0x173c3e8 <line:798:7, line:803:7> line:799:7 operator= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(initializer_list<char16_t>)'
| |   | | `-ParmVarDecl 0x173c2f0 <col:17, col:42> col:42 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-CXXMethodDecl 0x173c520 <line:829:7, line:831:37> line:830:7 begin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator () noexcept'
| |   | |-CXXMethodDecl 0x173c650 <line:837:7, line:839:43> line:838:7 begin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173c728 <line:845:7, line:847:52> line:846:7 end 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator () noexcept'
| |   | |-CXXMethodDecl 0x173c800 <line:853:7, line:855:58> line:854:7 end 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173c950 <line:862:7, line:864:47> line:863:7 rbegin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reverse_iterator () noexcept'
| |   | |-CXXMethodDecl 0x173caa0 <line:871:7, line:873:53> line:872:7 rbegin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reverse_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173cb78 <line:880:7, line:882:49> line:881:7 rend 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reverse_iterator () noexcept'
| |   | |-CXXMethodDecl 0x173cc50 <line:889:7, line:891:55> line:890:7 rend 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reverse_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173cd28 <line:898:7, line:900:49> line:899:7 cbegin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173ce00 <line:906:7, line:908:64> line:907:7 cend 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173ced8 <line:915:7, line:917:53> line:916:7 crbegin 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reverse_iterator () const noexcept'
| |   | |-CXXMethodDecl 0x173cfb0 <line:924:7, line:926:55> line:925:7 crend 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reverse_iterator () const noexcept'
| |   | |-AccessSpecDecl 0x173d060 <line:929:5, col:11> col:5 public
| |   | |-CXXMethodDecl 0x173d0e0 <line:933:7, line:935:34> line:934:7 size 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type () const noexcept'
| |   | |-CXXMethodDecl 0x173d1b8 <line:939:7, line:941:34> line:940:7 used length 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type () const noexcept'
| |   | | `-CompoundStmt 0x1acc028 <line:941:7, col:34>
| |   | |   `-ReturnStmt 0x1acc018 <col:9, col:16>
| |   | |     `-ImplicitCastExpr 0x1acc000 <col:16> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long' <LValueToRValue>
| |   | |       `-MemberExpr 0x1acbfd0 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'const unsigned long' lvalue ->_M_string_length 0x17301d0
| |   | |         `-CXXThisExpr 0x1acbfc0 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x173dac0 <line:944:7, line:946:71> line:945:7 used max_size 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type () const noexcept'
| |   | | `-CompoundStmt 0x1ae6ef8 <line:946:7, col:71>
| |   | |   `-ReturnStmt 0x1ae6ee8 <col:9, col:68>
| |   | |     `-BinaryOperator 0x1ae6ec8 <col:16, col:68> 'unsigned long' '/'
| |   | |       |-ParenExpr 0x1ae6e90 <col:16, col:64> 'unsigned long'
| |   | |       | `-BinaryOperator 0x1ae6e70 <col:17, col:63> 'unsigned long' '-'
| |   | |       |   |-CallExpr 0x1ae6e30 <col:17, col:59> 'std::allocator_traits<std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |       |   | |-ImplicitCastExpr 0x1ae6e18 <col:17, col:32> 'std::allocator_traits<std::allocator<char16_t> >::size_type (*)(const std::allocator_traits<std::allocator<char16_t> >::allocator_type &) noexcept' <FunctionToPointerDecay>
| |   | |       |   | | `-DeclRefExpr 0x1ae6ca8 <col:17, col:32> 'std::allocator_traits<std::allocator<char16_t> >::size_type (const std::allocator_traits<std::allocator<char16_t> >::allocator_type &) noexcept' lvalue CXXMethod 0x1726680 'max_size' 'std::allocator_traits<std::allocator<char16_t> >::size_type (const std::allocator_traits<std::allocator<char16_t> >::allocator_type &) noexcept' (UsingShadow 0x172aa18 'max_size')
| |   | |       |   | `-CXXMemberCallExpr 0x1ae6da0 <col:41, col:58> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type':'const std::allocator<char16_t>' lvalue
| |   | |       |   |   `-MemberExpr 0x1ae6d70 <col:41> '<bound member function type>' ->_M_get_allocator 0x17362c8
| |   | |       |   |     `-CXXThisExpr 0x1ae6d60 <col:41> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |       |   `-ImplicitCastExpr 0x1ae6e58 <col:63> 'unsigned long' <IntegralCast>
| |   | |       |     `-IntegerLiteral 0x15d7bb0 <col:63> 'int' 1
| |   | |       `-ImplicitCastExpr 0x1ae6eb0 <col:68> 'unsigned long' <IntegralCast>
| |   | |         `-IntegerLiteral 0x15d7c78 <col:68> 'int' 2
| |   | |-CXXMethodDecl 0x173dc90 <line:958:7, line:959:39> col:7 resize 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x173db80 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x173dbf8 <col:29, col:36> col:36 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x173ddf0 <line:971:7, line:973:38> line:972:7 resize 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | `-ParmVarDecl 0x173dd60 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173dea8 <line:977:7, line:989:7> line:978:7 shrink_to_fit 'void () noexcept'
| |   | |-CXXMethodDecl 0x173df80 <line:996:7, line:1001:7> line:997:7 capacity 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type () const noexcept'
| |   | |-CXXMethodDecl 0x173e0d0 <line:1020:7, line:1021:38> col:7 reserve 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | `-ParmVarDecl 0x173e040 <col:15, col:37> col:25 __res_arg 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173e188 <line:1026:7, line:1028:27> line:1027:7 clear 'void () noexcept'
| |   | |-CXXMethodDecl 0x173e238 <line:1034:26, line:1036:35> line:1035:7 empty 'bool () const noexcept'
| |   | |-CXXMethodDecl 0x173e420 <line:1049:7, line:1054:7> line:1050:7 operator[] 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reference (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | `-ParmVarDecl 0x173e320 <col:19, col:29> col:29 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173e608 <line:1066:7, line:1075:7> line:1067:7 operator[] 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reference (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | `-ParmVarDecl 0x173e510 <col:18, col:28> col:28 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173e798 <line:1087:7, line:1096:7> line:1088:7 at 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reference (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | `-ParmVarDecl 0x173e6d0 <col:10, col:20> col:20 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173e8f0 <line:1108:7, line:1117:7> line:1109:7 at 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reference (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | `-ParmVarDecl 0x173e860 <col:10, col:20> col:20 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173ea30 <line:1124:7, line:1129:7> line:1125:7 front 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reference () noexcept'
| |   | |-CXXMethodDecl 0x173eb60 <line:1135:7, line:1140:7> line:1136:7 front 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reference () const noexcept'
| |   | |-CXXMethodDecl 0x173ec38 <line:1146:7, line:1151:7> line:1147:7 back 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::reference () noexcept'
| |   | |-CXXMethodDecl 0x173ed10 <line:1157:7, line:1162:7> line:1158:7 back 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_reference () const noexcept'
| |   | |-CXXMethodDecl 0x173ee60 <line:1171:7, line:1173:37> line:1172:7 operator+= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x173edd0 <col:18, col:38> col:38 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x173efb8 <line:1180:7, line:1182:35> line:1181:7 operator+= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *)'
| |   | | `-ParmVarDecl 0x173ef28 <col:18, col:32> col:32 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x173f110 <line:1189:7, line:1194:7> line:1190:7 operator+= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(char16_t)'
| |   | | `-ParmVarDecl 0x173f080 <col:18, col:25> col:25 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x173f318 <line:1202:7, line:1204:55> line:1203:7 operator+= 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(initializer_list<char16_t>)'
| |   | | `-ParmVarDecl 0x173f250 <col:18, col:43> col:43 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-CXXMethodDecl 0x173f470 <line:1224:7, line:1226:58> line:1225:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x173f3e0 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x173f748 <line:1241:7, line:1245:34> line:1242:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x173f538 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x173f5b0 <col:41, col:51> col:51 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x173f628 <col:58, col:74> col:68 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173f9a8 <line:1253:7, line:1259:7> line:1254:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x173f820 <col:14, col:28> col:28 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x173f898 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x173fb08 <line:1266:7, line:1273:7> line:1267:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *)'
| |   | | `-ParmVarDecl 0x173fa78 <col:14, col:28> col:28 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x173fd58 <line:1283:7, line:1285:70> line:1284:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x173fbd0 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x173fc48 <col:29, col:36> col:36 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x173ff68 <line:1293:7, line:1295:55> line:1294:7 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(initializer_list<char16_t>)'
| |   | | `-ParmVarDecl 0x173fea0 <col:14, col:39> col:39 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-FunctionTemplateDecl 0x17407c8 <line:1307:7, line:1314:64> line:1313:9 append
| |   | | |-TemplateTypeParmDecl 0x1740020 <line:1307:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |   | | |-TemplateTypeParmDecl 0x1740098 <line:1308:9, <scratch space>:276:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1308:18 typename depth 0 index 1
| |   | | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |   | | `-CXXMethodDecl 0x1740728 <line:1312:9, line:1314:64> line:1313:9 append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(_InputIterator, _InputIterator)'
| |   | |   |-ParmVarDecl 0x1740598 <col:16, col:31> col:31 __first '_InputIterator'
| |   | |   `-ParmVarDecl 0x1740610 <col:40, col:55> col:55 __last '_InputIterator'
| |   | |-CXXMethodDecl 0x17409b8 <line:1352:7, line:1360:7> line:1353:7 push_back 'void (char16_t)'
| |   | | `-ParmVarDecl 0x17408c0 <col:17, col:24> col:24 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1740b10 <line:1367:7, line:1372:7> line:1368:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | `-ParmVarDecl 0x1740a80 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x1740ca8 <line:1383:7, line:1390:7> line:1384:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&)' noexcept-uninstantiated 0x1596570
| |   | | `-ParmVarDecl 0x1740bd8 <col:14, col:29> col:29 __str 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &&'
| |   | |-CXXMethodDecl 0x1740f40 <line:1406:7, line:1410:35> line:1407:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1740db0 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x1740e28 <col:41, col:51> col:51 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1740ea0 <col:58, col:74> col:68 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1741128 <line:1422:7, line:1427:7> line:1423:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1741018 <col:14, col:28> col:28 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1741090 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1741288 <line:1438:7, line:1444:7> line:1439:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *)'
| |   | | `-ParmVarDecl 0x17411f8 <col:14, col:28> col:28 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x1741460 <line:1455:7, line:1457:70> line:1456:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1741350 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17413c8 <col:29, col:36> col:36 __c 'char16_t':'char16_t'
| |   | |-FunctionTemplateDecl 0x1741c88 <line:1468:7, line:1475:66> line:1474:9 assign
| |   | | |-TemplateTypeParmDecl 0x1741520 <line:1468:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |   | | |-TemplateTypeParmDecl 0x1741598 <line:1469:9, <scratch space>:277:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1469:18 typename depth 0 index 1
| |   | | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |   | | `-CXXMethodDecl 0x1741be8 <line:1473:9, line:1475:66> line:1474:9 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(_InputIterator, _InputIterator)'
| |   | |   |-ParmVarDecl 0x1741a98 <col:16, col:31> col:31 __first '_InputIterator'
| |   | |   `-ParmVarDecl 0x1741b10 <col:40, col:55> col:55 __last '_InputIterator'
| |   | |-CXXMethodDecl 0x1741eb8 <line:1483:7, line:1485:55> line:1484:7 assign 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(initializer_list<char16_t>)'
| |   | | `-ParmVarDecl 0x1741df0 <col:14, col:39> col:39 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-CXXMethodDecl 0x1742198 <line:1537:7, line:1544:7> line:1538:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1741f80 <col:14, col:29> col:29 __p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1741ff8 <col:34, col:44> col:44 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1742070 <col:49, col:56> col:56 __c 'char16_t':'char16_t'
| |   | |-FunctionTemplateDecl 0x1742a88 <line:1579:7, line:1588:2> line:1582:9 insert
| |   | | |-TemplateTypeParmDecl 0x1742260 <line:1579:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |   | | |-TemplateTypeParmDecl 0x17422d8 <line:1580:9, <scratch space>:278:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1580:18 typename depth 0 index 1
| |   | | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |   | | `-CXXMethodDecl 0x17429e8 <line:1581:2, line:1588:2> line:1582:9 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, _InputIterator, _InputIterator)'
| |   | |   |-ParmVarDecl 0x17427d8 <col:16, col:31> col:31 __p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1742850 <col:36, col:51> col:51 __beg '_InputIterator'
| |   | |   `-ParmVarDecl 0x17428c8 <col:58, col:73> col:73 __end '_InputIterator'
| |   | |-CXXMethodDecl 0x1742d88 <line:1615:7, line:1617:59> line:1616:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, initializer_list<char16_t>)'
| |   | | |-ParmVarDecl 0x1742b88 <col:14, col:29> col:29 __p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1742c70 <col:34, col:59> col:59 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-CXXMethodDecl 0x1742fe8 <line:1642:7, line:1645:41> line:1643:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | |-ParmVarDecl 0x1742e58 <col:14, col:24> col:24 __pos1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1742ed0 <col:32, col:52> col:52 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x1743368 <line:1665:7, line:1670:39> line:1666:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17430b8 <col:14, col:24> col:24 __pos1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1743130 <col:32, col:52> col:52 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x17431a8 <line:1667:7, col:17> col:17 __pos2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1743220 <col:25, col:41> col:35 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1743658 <line:1688:7, line:1690:62> line:1689:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1743448 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17434c0 <col:31, col:45> col:45 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1743538 <col:50, col:60> col:60 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17438b8 <line:1707:7, line:1713:7> line:1708:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *)'
| |   | | |-ParmVarDecl 0x1743730 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17437a8 <col:31, col:45> col:45 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x1743b98 <line:1731:7, line:1734:35> line:1732:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1743988 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1743a00 <col:31, col:41> col:41 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1743a78 <col:46, col:53> col:53 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1743e18 <line:1749:7, line:1756:7> line:1750:7 insert 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, char16_t)'
| |   | | |-ParmVarDecl 0x1743c90 <col:14, col:31> col:31 __p 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1743d08 <col:36, col:43> col:43 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1744078 <line:1810:7, line:1819:7> line:1811:7 erase 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1743ee8 <col:13, col:31> col:23 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1743f60 <col:34, col:50> col:44 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1744238 <line:1829:7, line:1837:7> line:1830:7 erase 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator)'
| |   | | `-ParmVarDecl 0x1744148 <col:13, col:30> col:30 __position 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x1744488 <line:1848:7, line:1859:7> line:1849:7 erase 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator)'
| |   | | |-ParmVarDecl 0x1744300 <col:13, col:30> col:30 __first 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1744378 <col:39, col:56> col:56 __last 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x1744548 <line:1867:7, line:1872:7> line:1868:7 pop_back 'void () noexcept'
| |   | |-CXXMethodDecl 0x1744818 <line:1892:7, line:1894:74> line:1893:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | |-ParmVarDecl 0x1744608 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1744680 <col:32, col:42> col:42 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17446f8 <col:47, col:67> col:67 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x1744c28 <line:1914:7, line:1919:40> line:1915:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17448f0 <col:15, col:25> col:25 __pos1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1744968 <col:33, col:43> col:43 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17449e0 <col:49, col:69> col:69 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x1744a58 <line:1916:8, col:18> col:18 __pos2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1744ad0 <col:26, col:43> col:36 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1744fb8 <line:1939:7, line:1946:7> line:1940:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x1744d10 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1744d88 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1744e00 <col:48, col:62> col:62 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1744e78 <line:1941:8, col:18> col:18 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17452a8 <line:1964:7, line:1969:7> line:1965:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *)'
| |   | | |-ParmVarDecl 0x1745098 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1745110 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1745188 <col:48, col:62> col:62 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x1745628 <line:1988:7, line:1991:45> line:1989:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x1745380 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17453f8 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1745470 <col:48, col:58> col:58 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x17454e8 <col:64, col:71> col:71 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1745918 <line:2006:7, line:2009:74> line:2007:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &)'
| |   | | |-ParmVarDecl 0x1745708 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1745780 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x17457f8 <line:2008:8, col:28> col:28 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x1746608 <line:2026:7, line:2033:7> line:2027:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17459f0 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x17463d0 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1746448 <line:2028:8, col:22> col:22 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x17464c0 <col:27, col:37> col:37 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x17468f8 <line:2048:7, line:2053:7> line:2049:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, const char16_t *)'
| |   | | |-ParmVarDecl 0x17466e8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1746760 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x17467d8 <col:61, col:75> col:75 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x1746c78 <line:2069:7, line:2076:7> line:2070:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x17469d0 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1746a48 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1746ac0 <col:61, col:71> col:71 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1746b38 <line:2071:8, col:15> col:15 __c 'char16_t':'char16_t'
| |   | |-FunctionTemplateDecl 0x1747618 <line:2094:7, line:2105:2> line:2097:9 replace
| |   | | |-TemplateTypeParmDecl 0x1746d48 <line:2094:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |   | | |-TemplateTypeParmDecl 0x1746dc8 <line:2095:9, <scratch space>:279:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2095:18 typename depth 0 index 1
| |   | | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |   | | `-CXXMethodDecl 0x1747578 <line:2096:9, line:2105:2> line:2097:9 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, _InputIterator, _InputIterator)'
| |   | |   |-ParmVarDecl 0x17472c8 <col:17, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1747340 <col:38, col:53> col:53 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x17473b8 <line:2098:3, col:18> col:18 __k1 '_InputIterator'
| |   | |   `-ParmVarDecl 0x1747430 <col:24, col:39> col:39 __k2 '_InputIterator'
| |   | |-CXXMethodDecl 0x17479c8 <line:2126:7, line:2135:7> line:2127:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, char16_t *, char16_t *)'
| |   | | |-ParmVarDecl 0x1747720 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747798 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747810 <line:2128:8, col:16> col:16 __k1 'char16_t *'
| |   | | `-ParmVarDecl 0x1747888 <col:22, col:30> col:30 __k2 'char16_t *'
| |   | |-CXXMethodDecl 0x1747d58 <line:2137:7, line:2146:7> line:2138:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, const char16_t *, const char16_t *)'
| |   | | |-ParmVarDecl 0x1747aa8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747b20 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747b98 <line:2139:8, col:22> col:22 __k1 'const char16_t *'
| |   | | `-ParmVarDecl 0x1747c10 <col:28, col:42> col:42 __k2 'const char16_t *'
| |   | |-CXXMethodDecl 0x17480e8 <line:2148:7, line:2157:7> line:2149:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator)'
| |   | | |-ParmVarDecl 0x1747e38 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747eb0 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1747f28 <line:2150:8, col:17> col:17 __k1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1747fa0 <col:23, col:32> col:32 __k2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::iterator':'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x1748478 <line:2159:7, line:2168:7> line:2160:7 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator)'
| |   | | |-ParmVarDecl 0x17481c8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x1748240 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x17482b8 <line:2161:8, col:23> col:23 __k1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x1748330 <col:29, col:44> col:44 __k2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |-CXXMethodDecl 0x17487e8 <line:2185:7, line:2187:68> line:2185:21 replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, initializer_list<char16_t>)'
| |   | | |-ParmVarDecl 0x1748558 <col:29, col:44> col:44 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | |-ParmVarDecl 0x17485d0 <col:50, col:65> col:65 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | | `-ParmVarDecl 0x17486c0 <line:2186:8, col:33> col:33 __l 'initializer_list<char16_t>':'std::initializer_list<char16_t>'
| |   | |-AccessSpecDecl 0x17488b0 <line:2245:5, col:12> col:5 private
| |   | |-FunctionTemplateDecl 0x1748d48 <line:2246:7, line:2250:75> line:2248:2 _M_replace_dispatch
| |   | | |-TemplateTypeParmDecl 0x17488d8 <line:2246:16, col:22> col:22 class depth 0 index 0 _Integer
| |   | | `-CXXMethodDecl 0x1748ca8 <line:2247:2, line:2250:75> line:2248:2 _M_replace_dispatch 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, _Integer, _Integer, std::__true_type)'
| |   | |   |-ParmVarDecl 0x1748988 <col:22, col:37> col:37 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1748a00 <col:43, col:58> col:58 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1748a78 <line:2249:8, col:17> col:17 __n '_Integer'
| |   | |   |-ParmVarDecl 0x1748af0 <col:22, col:31> col:31 __val '_Integer'
| |   | |   `-ParmVarDecl 0x1748b58 <col:38> col:49 'std::__true_type'
| |   | |-FunctionTemplateDecl 0x17492b8 <line:2252:7, line:2256:20> line:2254:2 _M_replace_dispatch
| |   | | |-TemplateTypeParmDecl 0x1748e48 <line:2252:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |   | | `-CXXMethodDecl 0x1749218 <line:2253:2, line:2256:20> line:2254:2 _M_replace_dispatch 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator, _InputIterator, _InputIterator, std::__false_type)'
| |   | |   |-ParmVarDecl 0x1748ef8 <col:22, col:37> col:37 __i1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1748f70 <col:43, col:58> col:58 __i2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| |   | |   |-ParmVarDecl 0x1748fe8 <line:2255:8, col:23> col:23 __k1 '_InputIterator'
| |   | |   |-ParmVarDecl 0x1749060 <col:29, col:44> col:44 __k2 '_InputIterator'
| |   | |   `-ParmVarDecl 0x17490c8 <line:2256:8> col:20 'std::__false_type'
| |   | |-CXXMethodDecl 0x17495d8 <line:2258:7, line:2260:18> line:2259:7 _M_replace_aux 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, char16_t)'
| |   | | |-ParmVarDecl 0x17493c8 <col:22, col:32> col:32 __pos1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1749440 <col:40, col:50> col:50 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17494b8 <col:56, col:66> col:66 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1749530 <line:2260:8, col:15> col:15 __c 'char16_t':'char16_t'
| |   | |-CXXMethodDecl 0x1749918 <line:2262:7, line:2264:26> line:2263:7 _M_replace 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17496b8 <col:18, col:28> col:28 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1749730 <col:35, col:45> col:45 __len1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x17497a8 <col:53, col:67> col:67 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1749820 <line:2264:4, col:20> col:20 __len2 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'const unsigned long'
| |   | |-CXXMethodDecl 0x1749b08 <line:2266:7, line:2267:49> col:7 _M_append 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &(const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type)'
| |   | | |-ParmVarDecl 0x17499f8 <col:17, col:31> col:31 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x1749a70 <col:36, col:46> col:46 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-AccessSpecDecl 0x1749bc8 <line:2269:5, col:11> col:5 public
| |   | |-CXXMethodDecl 0x1749e18 <line:2283:7, line:2284:61> col:7 copy 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | |-ParmVarDecl 0x1749c00 <col:12, col:20> col:20 __s 'char16_t *'
| |   | | |-ParmVarDecl 0x1749c78 <col:25, col:35> col:35 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x1749cf0 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x1749ff0 <line:2293:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2294:7 swap 'void (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &) noexcept'
| |   | | `-ParmVarDecl 0x1749ef0 <col:12, col:26> col:26 __s 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x174a100 <line:2303:7, line:2305:27> line:2304:7 c_str 'const char16_t *() const noexcept'
| |   | |-CXXMethodDecl 0x174a1d8 <line:2315:7, line:2317:27> line:2316:7 used data 'const char16_t *() const noexcept'
| |   | | `-CompoundStmt 0x1acbef8 <line:2317:7, col:27>
| |   | |   `-ReturnStmt 0x1acbee8 <col:9, col:24>
| |   | |     `-ImplicitCastExpr 0x1acbed0 <col:16, col:24> 'const char16_t *' <NoOp>
| |   | |       `-CXXMemberCallExpr 0x1acbeb0 <col:16, col:24> 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::pointer':'char16_t *'
| |   | |         `-MemberExpr 0x1acbe80 <col:16> '<bound member function type>' ->_M_data 0x1730ee8
| |   | |           `-CXXThisExpr 0x1acbe70 <col:16> 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > *' implicit this
| |   | |-CXXMethodDecl 0x174a310 <line:2334:7, line:2336:36> line:2335:7 get_allocator 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::allocator_type () const noexcept'
| |   | |-CXXMethodDecl 0x174a5f0 <line:2350:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2351:7 find 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174a3d0 <col:12, col:26> col:26 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174a448 <col:31, col:41> col:41 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174a4c0 <col:48, col:58> col:58 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174a860 <line:2364:7, line:2367:63> line:2365:7 find 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174a6c8 <col:12, col:32> col:32 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174a740 <col:39, col:57> col:49 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174aac0 <line:2396:7, line:2401:7> line:2397:7 find 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174a930 <col:12, col:26> col:26 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174a9a8 <col:31, col:49> col:41 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174ad20 <line:2413:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2414:7 find 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174ab90 <col:12, col:19> col:19 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174ac08 <col:24, col:42> col:34 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174af08 <line:2426:7, line:2429:64> line:2427:7 rfind 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174adf0 <col:13, col:33> col:33 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174ae68 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174b170 <line:2460:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2461:7 rfind 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174afd8 <col:13, col:27> col:27 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174b050 <col:32, col:42> col:42 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174b0c8 <col:49, col:59> col:59 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174b398 <line:2474:7, line:2479:7> line:2475:7 rfind 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | |-ParmVarDecl 0x174b248 <col:13, col:27> col:27 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174b2c0 <col:32, col:50> col:42 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174b580 <line:2491:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2492:7 rfind 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174b468 <col:13, col:20> col:20 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174b4e0 <col:25, col:43> col:35 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174b768 <line:2505:7, line:2508:72> line:2506:7 find_first_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174b650 <col:21, col:41> col:41 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174b6c8 <col:48, col:66> col:58 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174b9d0 <line:2540:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2541:7 find_first_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174b838 <col:21, col:35> col:35 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174b8b0 <col:40, col:50> col:50 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174b928 <col:57, col:67> col:67 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174bbc0 <line:2554:7, line:2560:7> line:2555:7 find_first_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174baa8 <col:21, col:35> col:35 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174bb20 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174bda8 <line:2574:7, line:2576:40> line:2575:7 find_first_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174bc90 <col:21, col:28> col:28 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174bd08 <col:33, col:51> col:43 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174bf90 <line:2589:7, line:2592:71> line:2590:7 find_last_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174be78 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174bef0 <col:47, col:65> col:57 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174c1f8 <line:2624:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2625:7 find_last_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174c060 <col:20, col:34> col:34 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174c0d8 <col:39, col:49> col:49 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174c150 <col:56, col:66> col:66 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174c3e8 <line:2638:7, line:2644:7> line:2639:7 find_last_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174c2d0 <col:20, col:34> col:34 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174c348 <col:39, col:57> col:49 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174c5d0 <line:2658:7, line:2660:41> line:2659:7 find_last_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174c4b8 <col:20, col:27> col:27 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174c530 <col:32, col:50> col:42 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174c7b8 <line:2672:7, line:2675:76> line:2673:7 find_first_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174c6a0 <col:25, col:45> col:45 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174c718 <col:52, col:70> col:62 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174ca20 <line:2707:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2708:7 find_first_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174c888 <col:25, col:39> col:39 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174c900 <col:44, col:54> col:54 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174c978 <line:2709:4, col:14> col:14 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174cc10 <line:2721:7, line:2727:7> line:2722:7 find_first_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174caf8 <col:25, col:39> col:39 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174cb70 <col:44, col:62> col:54 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174cdf8 <line:2739:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2740:7 find_first_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174cce0 <col:25, col:32> col:32 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174cd58 <col:37, col:55> col:47 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174cfe0 <line:2754:7, line:2757:75> line:2755:7 find_last_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174cec8 <col:24, col:44> col:44 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | `-ParmVarDecl 0x174cf40 <col:51, col:69> col:61 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174d248 <line:2789:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2790:7 find_last_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174d0b0 <col:24, col:38> col:38 __s 'const char16_t *'
| |   | | |-ParmVarDecl 0x174d128 <col:43, col:53> col:53 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174d1a0 <line:2791:10, col:20> col:20 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174d438 <line:2803:7, line:2809:7> line:2804:7 find_last_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174d320 <col:24, col:38> col:38 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x174d398 <col:43, col:61> col:53 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174d620 <line:2821:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2822:7 find_last_not_of 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type (char16_t, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const noexcept'
| |   | | |-ParmVarDecl 0x174d508 <col:24, col:31> col:31 __c 'char16_t':'char16_t'
| |   | | `-ParmVarDecl 0x174d580 <col:36, col:54> col:46 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174d878 <line:2837:7, line:2840:55> line:2838:7 substr 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | |-ParmVarDecl 0x174d6f0 <col:14, col:32> col:24 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174d768 <col:35, col:51> col:45 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174da10 <line:2856:7, line:2867:7> line:2857:7 compare 'int (const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &) const'
| |   | | `-ParmVarDecl 0x174d948 <col:15, col:35> col:35 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x174dcf0 <line:2949:7, line:2950:74> col:7 compare 'int (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &) const'
| |   | | |-ParmVarDecl 0x174dad8 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x174db50 <col:32, col:42> col:42 __n 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174dbc8 <col:47, col:67> col:67 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | |-CXXMethodDecl 0x174e100 <line:2975:7, line:2977:49> line:2976:7 compare 'int (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | |-ParmVarDecl 0x174ddc8 <col:15, col:25> col:25 __pos1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x174de40 <col:33, col:43> col:43 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x174deb8 <col:49, col:69> col:69 __str 'const std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > &'
| |   | | |-ParmVarDecl 0x174df30 <line:2977:8, col:18> col:18 __pos2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174dfa8 <col:26, col:43> col:36 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | |-CXXMethodDecl 0x174e2e8 <line:2993:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2994:7 compare 'int (const char16_t *) const noexcept'
| |   | | `-ParmVarDecl 0x174e1e8 <col:15, col:29> col:29 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x174fe60 <line:3017:7, line:3018:67> col:7 compare 'int (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *) const'
| |   | | |-ParmVarDecl 0x174fc40 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x174fcb8 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | `-ParmVarDecl 0x174fd30 <col:48, col:62> col:62 __s 'const char16_t *'
| |   | |-CXXMethodDecl 0x17501f0 <line:3044:7, line:3046:24> line:3045:7 compare 'int (std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type, const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type) const'
| |   | | |-ParmVarDecl 0x174ff38 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x174ffb0 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x1750028 <col:48, col:62> col:62 __s 'const char16_t *'
| |   | | `-ParmVarDecl 0x17500a0 <line:3046:8, col:18> col:18 __n2 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::size_type':'unsigned long'
| |   | `-FriendDecl 0x1750570 <line:3075:7, col:59> col:59
| |   |   `-ClassTemplateDecl 0x17504f8 parent 0x10fad58 prev 0x16e9f68 <col:7, col:59> col:59 basic_stringbuf
| |   |     |-TemplateTypeParmDecl 0x17502c0 <col:16> col:24 typename depth 0 index 0
| |   |     |-TemplateTypeParmDecl 0x1750338 <col:26> col:34 typename depth 0 index 1
| |   |     | `-TemplateArgument type 'char_traits<_CharT>'
| |   |     |   `-inherited from TemplateTypeParm 0x10faf00 '_Traits'
| |   |     |-TemplateTypeParmDecl 0x17503b8 <col:36> col:44 typename depth 0 index 2
| |   |     | `-TemplateArgument type 'allocator<_CharT>'
| |   |     |   `-inherited from TemplateTypeParm 0x10fb030 '_Alloc'
| |   |     |-CXXRecordDecl 0x1750468 parent 0x10fad58 prev 0x16e9ed8 <col:53, col:59> col:59 class basic_stringbuf
| |   |     |-ClassTemplateSpecialization 0x1104240 'basic_stringbuf'
| |   |     `-ClassTemplateSpecialization 0x1109a30 'basic_stringbuf'
| |   `-ClassTemplateSpecializationDecl 0x10af750 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stringfwd.h:72:3, line:74:11> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:81:11 class basic_string definition
| |     |-DefinitionData standard_layout has_user_declared_ctor has_variant_members can_const_default_init
| |     | |-DefaultConstructor exists non_trivial user_provided
| |     | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |     | |-MoveConstructor exists non_trivial user_declared
| |     | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |     | |-MoveAssignment exists non_trivial user_declared
| |     | `-Destructor non_trivial user_declared
| |     |-TemplateArgument type 'char32_t'
| |     |-TemplateArgument type 'std::char_traits<char32_t>'
| |     |-TemplateArgument type 'std::allocator<char32_t>'
| |     |-OwnerAttr 0x1751620 <<invalid sloc>> Inherited Implicit
| |     |-CXXRecordDecl 0x17516e8 prev 0x10af750 <col:5, col:11> col:11 implicit class basic_string
| |     |-TypedefDecl 0x175dfa0 <line:83:7, line:84:24> col:24 _Char_alloc_type 'typename __gnu_cxx::__alloc_traits<allocator<char32_t> >::rebind<char32_t>::other':'std::allocator<char32_t>'
| |     | `-ElaboratedType 0x175df50 'typename __gnu_cxx::__alloc_traits<allocator<char32_t> >::rebind<char32_t>::other' sugar
| |     |   `-TypedefType 0x175df30 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::rebind<char32_t>::other' sugar
| |     |     |-Typedef 0x175dec0 'other'
| |     |     `-ElaboratedType 0x175de50 'typename _Base_type::rebind_alloc<char32_t>' sugar
| |     |       `-TemplateSpecializationType 0x175de00 'rebind_alloc<char32_t>' sugar alias rebind_alloc
| |     |         |-TemplateArgument type 'char32_t':'char32_t'
| |     |         |-TemplateSpecializationType 0x175dd90 'allocator<char32_t>' sugar allocator
| |     |         | |-TemplateArgument type 'char32_t':'char32_t'
| |     |         | `-RecordType 0x10af6c0 'std::allocator<char32_t>'
| |     |         |   `-ClassTemplateSpecialization 0x10af5e0 'allocator'
| |     |         `-TemplateSpecializationType 0x175dd90 'allocator<char32_t>' sugar allocator
| |     |           |-TemplateArgument type 'char32_t':'char32_t'
| |     |           `-RecordType 0x10af6c0 'std::allocator<char32_t>'
| |     |             `-ClassTemplateSpecialization 0x10af5e0 'allocator'
| |     |-TypedefDecl 0x175e120 <line:85:7, col:59> col:59 _Alloc_traits '__gnu_cxx::__alloc_traits<_Char_alloc_type>':'__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>'
| |     | `-ElaboratedType 0x175e0b0 '__gnu_cxx::__alloc_traits<_Char_alloc_type>' sugar
| |     |   `-TemplateSpecializationType 0x175e070 '__alloc_traits<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Char_alloc_type>' sugar __alloc_traits
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Char_alloc_type':'std::allocator<char32_t>'
| |     |     `-RecordType 0x17560f0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>'
| |     |       `-ClassTemplateSpecialization 0x1755ff0 '__alloc_traits'
| |     |-AccessSpecDecl 0x175e178 <line:88:5, col:11> col:5 public
| |     |-TypedefDecl 0x175e1d8 <line:89:7, col:27> col:27 traits_type 'std::char_traits<char32_t>':'std::char_traits<char32_t>'
| |     | `-SubstTemplateTypeParmType 0x175e1a0 'std::char_traits<char32_t>' sugar
| |     |   |-TemplateTypeParmType 0x1574520 '_Traits' dependent depth 0 index 1
| |     |   | `-TemplateTypeParm 0x15744c8 '_Traits'
| |     |   `-RecordType 0x10a9b50 'std::char_traits<char32_t>'
| |     |     `-ClassTemplateSpecialization 0x13eda08 'char_traits'
| |     |-TypedefDecl 0x175e2c0 <line:90:7, col:44> col:44 value_type 'typename char_traits<char32_t>::char_type':'char32_t'
| |     | `-ElaboratedType 0x175e270 'typename char_traits<char32_t>::char_type' sugar
| |     |   `-TypedefType 0x13edee0 'std::char_traits<char32_t>::char_type' sugar
| |     |     |-Typedef 0x13edca8 'char_type'
| |     |     `-BuiltinType 0xffd750 'char32_t'
| |     |-TypedefDecl 0x175e328 <line:91:7, col:35> col:35 allocator_type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Char_alloc_type':'std::allocator<char32_t>'
| |     | `-TypedefType 0x175e000 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Char_alloc_type' sugar
| |     |   |-Typedef 0x175dfa0 '_Char_alloc_type'
| |     |   `-ElaboratedType 0x175df50 'typename __gnu_cxx::__alloc_traits<allocator<char32_t> >::rebind<char32_t>::other' sugar
| |     |     `-TypedefType 0x175df30 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::rebind<char32_t>::other' sugar
| |     |       |-Typedef 0x175dec0 'other'
| |     |       `-ElaboratedType 0x175de50 'typename _Base_type::rebind_alloc<char32_t>' sugar
| |     |         `-TemplateSpecializationType 0x175de00 'rebind_alloc<char32_t>' sugar alias rebind_alloc
| |     |           |-TemplateArgument type 'char32_t':'char32_t'
| |     |           |-TemplateSpecializationType 0x175dd90 'allocator<char32_t>' sugar allocator
| |     |           | |-TemplateArgument type 'char32_t':'char32_t'
| |     |           | `-RecordType 0x10af6c0 'std::allocator<char32_t>'
| |     |           |   `-ClassTemplateSpecialization 0x10af5e0 'allocator'
| |     |           `-TemplateSpecializationType 0x175dd90 'allocator<char32_t>' sugar allocator
| |     |             |-TemplateArgument type 'char32_t':'char32_t'
| |     |             `-RecordType 0x10af6c0 'std::allocator<char32_t>'
| |     |               `-ClassTemplateSpecialization 0x10af5e0 'allocator'
| |     |-TypedefDecl 0x175e450 <line:92:7, col:50> col:50 size_type 'typename _Alloc_traits::size_type':'unsigned long'
| |     | `-ElaboratedType 0x175e400 'typename _Alloc_traits::size_type' sugar
| |     |   `-TypedefType 0x175e3e0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::size_type' sugar
| |     |     |-Typedef 0x175a8a0 'size_type'
| |     |     `-ElaboratedType 0x175a850 'typename _Base_type::size_type' sugar
| |     |       `-TypedefType 0x1759f20 'std::allocator_traits<std::allocator<char32_t> >::size_type' sugar
| |     |         |-TypeAlias 0x1756968 'size_type'
| |     |         `-ElaboratedType 0x1560660 'std::size_t' sugar
| |     |           `-TypedefType 0x10f2c80 'std::size_t' sugar
| |     |             |-Typedef 0x103af98 'size_t'
| |     |             `-BuiltinType 0xffd2d0 'unsigned long'
| |     |-TypedefDecl 0x175e540 <line:93:7, col:55> col:55 difference_type 'typename _Alloc_traits::difference_type':'long'
| |     | `-ElaboratedType 0x175e4f0 'typename _Alloc_traits::difference_type' sugar
| |     |   `-TypedefType 0x175e4d0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::difference_type' sugar
| |     |     |-Typedef 0x175a990 'difference_type'
| |     |     `-ElaboratedType 0x175a940 'typename _Base_type::difference_type' sugar
| |     |       `-TypedefType 0x175a920 'std::allocator_traits<std::allocator<char32_t> >::difference_type' sugar
| |     |         |-TypeAlias 0x1756908 'difference_type'
| |     |         `-ElaboratedType 0x1560580 'std::ptrdiff_t' sugar
| |     |           `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |     |             |-Typedef 0x103b008 'ptrdiff_t'
| |     |             `-BuiltinType 0xffd230 'long'
| |     |-TypedefDecl 0x175e630 <line:94:7, col:50> col:50 reference 'typename _Alloc_traits::reference':'__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type &'
| |     | `-ElaboratedType 0x175e5e0 'typename _Alloc_traits::reference' sugar
| |     |   `-TypedefType 0x175e5c0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::reference' sugar
| |     |     |-Typedef 0x175aa48 'reference'
| |     |     `-LValueReferenceType 0x175aa10 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type &'
| |     |       `-TypedefType 0x175a9f0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type' sugar
| |     |         |-Typedef 0x175a610 'value_type'
| |     |         `-ElaboratedType 0x175a5c0 'typename _Base_type::value_type' sugar
| |     |           `-TypedefType 0x175a5a0 'std::allocator_traits<std::allocator<char32_t> >::value_type' sugar
| |     |             |-TypeAlias 0x17566b0 'value_type'
| |     |             `-SubstTemplateTypeParmType 0x1756400 'char32_t' sugar
| |     |               |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |     |               | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |     |               `-BuiltinType 0xffd750 'char32_t'
| |     |-TypedefDecl 0x175e720 <line:95:7, col:55> col:55 const_reference 'typename _Alloc_traits::const_reference':'const __gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type &'
| |     | `-ElaboratedType 0x175e6d0 'typename _Alloc_traits::const_reference' sugar
| |     |   `-TypedefType 0x175e6b0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::const_reference' sugar
| |     |     |-Typedef 0x175aad8 'const_reference'
| |     |     `-LValueReferenceType 0x175aaa0 'const __gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type &'
| |     |       `-QualType 0x175a9f1 'const __gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type' const
| |     |         `-TypedefType 0x175a9f0 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::value_type' sugar
| |     |           |-Typedef 0x175a610 'value_type'
| |     |           `-ElaboratedType 0x175a5c0 'typename _Base_type::value_type' sugar
| |     |             `-TypedefType 0x175a5a0 'std::allocator_traits<std::allocator<char32_t> >::value_type' sugar
| |     |               |-TypeAlias 0x17566b0 'value_type'
| |     |               `-SubstTemplateTypeParmType 0x1756400 'char32_t' sugar
| |     |                 |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |     |                 | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |     |                 `-BuiltinType 0xffd750 'char32_t'
| |     |-TypedefDecl 0x175e7f0 <line:96:7, col:48> col:48 referenced pointer 'typename _Alloc_traits::pointer':'char32_t *'
| |     | `-ElaboratedType 0x175e7a0 'typename _Alloc_traits::pointer' sugar
| |     |   `-TypedefType 0x175b030 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::pointer' sugar
| |     |     |-Typedef 0x175a6e0 'pointer'
| |     |     `-ElaboratedType 0x175a690 'typename _Base_type::pointer' sugar
| |     |       `-TypedefType 0x1756fa0 'std::allocator_traits<std::allocator<char32_t> >::pointer' sugar
| |     |         |-TypeAlias 0x1756748 'pointer'
| |     |         `-PointerType 0x1756710 'char32_t *'
| |     |           `-SubstTemplateTypeParmType 0x1756400 'char32_t' sugar
| |     |             |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |     |             | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |     |             `-BuiltinType 0xffd750 'char32_t'
| |     |-TypedefDecl 0x175e8e0 <line:97:7, col:53> col:53 const_pointer 'typename _Alloc_traits::const_pointer':'const char32_t *'
| |     | `-ElaboratedType 0x175e890 'typename _Alloc_traits::const_pointer' sugar
| |     |   `-TypedefType 0x175e870 '__gnu_cxx::__alloc_traits<std::allocator<char32_t>, char32_t>::const_pointer' sugar
| |     |     |-Typedef 0x175a7d0 'const_pointer'
| |     |     `-ElaboratedType 0x175a780 'typename _Base_type::const_pointer' sugar
| |     |       `-TypedefType 0x175a760 'std::allocator_traits<std::allocator<char32_t> >::const_pointer' sugar
| |     |         |-TypeAlias 0x17567e8 'const_pointer'
| |     |         `-PointerType 0x17567b0 'const char32_t *'
| |     |           `-QualType 0x1756401 'const char32_t' const
| |     |             `-SubstTemplateTypeParmType 0x1756400 'char32_t' sugar
| |     |               |-TemplateTypeParmType 0x155fd10 '_Tp' dependent depth 0 index 0
| |     |               | `-TemplateTypeParm 0x155fcb8 '_Tp'
| |     |               `-BuiltinType 0xffd750 'char32_t'
| |     |-TypedefDecl 0x175eb88 <line:98:7, col:68> col:68 iterator '__gnu_cxx::__normal_iterator<pointer, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ElaboratedType 0x175eb00 '__gnu_cxx::__normal_iterator<pointer, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >' sugar
| |     |   `-TemplateSpecializationType 0x175eaa0 '__normal_iterator<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >' sugar __normal_iterator
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
| |     |     `-RecordType 0x175ea80 '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |       `-ClassTemplateSpecialization 0x175e980 '__normal_iterator'
| |     |-TypedefDecl 0x175ee28 <line:99:7, line:100:8> col:8 const_iterator '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ElaboratedType 0x175eda0 '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >' sugar
| |     |   `-TemplateSpecializationType 0x175ed40 '__normal_iterator<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >' sugar __normal_iterator
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer':'const char32_t *'
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
| |     |     `-RecordType 0x175ed20 '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |       `-ClassTemplateSpecialization 0x175ec20 '__normal_iterator'
| |     |-TypedefDecl 0x175f060 <line:101:7, col:53> col:53 const_reverse_iterator 'std::reverse_iterator<const_iterator>':'std::reverse_iterator<__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >'
| |     | `-ElaboratedType 0x175eff0 'std::reverse_iterator<const_iterator>' sugar
| |     |   `-TemplateSpecializationType 0x175efb0 'reverse_iterator<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator>' sugar reverse_iterator
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |     `-RecordType 0x175ef90 'std::reverse_iterator<__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >'
| |     |       `-ClassTemplateSpecialization 0x175eeb0 'reverse_iterator'
| |     |-TypedefDecl 0x175f2a0 <line:102:7, col:48> col:48 reverse_iterator 'std::reverse_iterator<iterator>':'std::reverse_iterator<__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >'
| |     | `-ElaboratedType 0x175f230 'std::reverse_iterator<iterator>' sugar
| |     |   `-TemplateSpecializationType 0x175f1f0 'reverse_iterator<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator>' sugar reverse_iterator
| |     |     |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |     `-RecordType 0x175f1d0 'std::reverse_iterator<__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >'
| |     |       `-ClassTemplateSpecialization 0x175f0f0 'reverse_iterator'
| |     |-VarDecl 0x175f330 <line:105:7, col:62> col:30 npos 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'const unsigned long' static cinit
| |     | `-CXXStaticCastExpr 0x175f3d0 <col:37, col:62> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' static_cast<std::__cxx11::basic_string<char32_t, struct std::char_traits<char32_t>, class std::allocator<char32_t> >::size_type> <NoOp>
| |     |   `-ImplicitCastExpr 0x175f3b8 <col:60, col:61> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |     |     `-UnaryOperator 0x1577338 <col:60, col:61> 'int' prefix '-'
| |     |       `-IntegerLiteral 0x1577318 <col:61> 'int' 1
| |     |-AccessSpecDecl 0x175f458 <line:107:5, col:14> col:5 protected
| |     |-TypedefDecl 0x175f490 <line:112:7, col:30> col:30 __const_iterator 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-TypedefType 0x175ee80 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator' sugar
| |     |   |-Typedef 0x175ee28 'const_iterator'
| |     |   `-ElaboratedType 0x175eda0 '__gnu_cxx::__normal_iterator<const_pointer, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >' sugar
| |     |     `-TemplateSpecializationType 0x175ed40 '__normal_iterator<std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >' sugar __normal_iterator
| |     |       |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer':'const char32_t *'
| |     |       |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
| |     |       `-RecordType 0x175ed20 '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |         `-ClassTemplateSpecialization 0x175ec20 '__normal_iterator'
| |     |-AccessSpecDecl 0x175f4e8 <line:115:5, col:12> col:5 private
| |     |-CXXRecordDecl 0x175f510 <line:154:7, line:168:7> line:154:14 struct _Alloc_hider definition
| |     | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |     | | |-DefaultConstructor
| |     | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |     | | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_overload_resolution
| |     | | `-Destructor simple non_trivial needs_overload_resolution
| |     | |-public 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>'
| |     | |-CXXRecordDecl 0x175f6b0 prev 0x175f510 <col:7, col:14> col:14 implicit struct _Alloc_hider
| |     | |-CXXConstructorDecl 0x175f940 <line:160:2, line:161:39> line:160:2 used _Alloc_hider 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer, const std::allocator<char32_t> &)'
| |     | | |-ParmVarDecl 0x175f750 <col:15, col:23> col:23 used __dat 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | |-ParmVarDecl 0x175f7f8 <col:30, col:44> col:44 used __a 'const std::allocator<char32_t> &'
| |     | | |-CXXCtorInitializer 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>'
| |     | | | `-CXXConstructExpr 0x1af1798 <line:161:4, col:22> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' 'void (const std::allocator<char32_t> &) noexcept'
| |     | | |   `-DeclRefExpr 0x1af1710 <col:19> 'const std::allocator<char32_t>':'const std::allocator<char32_t>' lvalue ParmVar 0x175f7f8 '__a' 'const std::allocator<char32_t> &'
| |     | | |-CXXCtorInitializer Field 0x175fcf0 '_M_p' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | | `-ImplicitCastExpr 0x1af1830 <col:30> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' <LValueToRValue>
| |     | | |   `-DeclRefExpr 0x1af17f0 <col:30> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' lvalue ParmVar 0x175f750 '__dat' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | `-CompoundStmt 0x15c2218 <col:37, col:39>
| |     | |-CXXConstructorDecl 0x175fc18 <line:163:2, line:164:50> line:163:2 used _Alloc_hider 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer, std::allocator<char32_t> &&)'
| |     | | |-ParmVarDecl 0x175fa18 <col:15, col:23> col:23 used __dat 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | |-ParmVarDecl 0x175fae8 <col:30, col:52> col:39 used __a 'std::allocator<char32_t> &&'
| |     | | |-CXXCtorInitializer 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>'
| |     | | | `-CXXConstructExpr 0x1b05538 <line:164:4, col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' 'void (const std::allocator<char32_t> &) noexcept'
| |     | | |   `-ImplicitCastExpr 0x1b05520 <col:19, col:32> 'const typename std::remove_reference<allocator<char32_t> &>::type':'const std::allocator<char32_t>' xvalue <NoOp>
| |     | | |     `-CallExpr 0x1b05490 <col:19, col:32> 'typename std::remove_reference<allocator<char32_t> &>::type':'std::allocator<char32_t>' xvalue
| |     | | |       |-ImplicitCastExpr 0x1b05478 <col:19, col:24> 'typename std::remove_reference<allocator<char32_t> &>::type &&(*)(std::allocator<char32_t> &) noexcept' <FunctionToPointerDecay>
| |     | | |       | `-DeclRefExpr 0x1b05440 <col:19, col:24> 'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept' lvalue Function 0x1b042a8 'move' 'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept' (FunctionTemplate 0x12759e8 'move')
| |     | | |       `-DeclRefExpr 0x1b053b8 <col:29> 'std::allocator<char32_t>':'std::allocator<char32_t>' lvalue ParmVar 0x175fae8 '__a' 'std::allocator<char32_t> &&'
| |     | | |-CXXCtorInitializer Field 0x175fcf0 '_M_p' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | | `-ImplicitCastExpr 0x1b055d0 <col:41> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' <LValueToRValue>
| |     | | |   `-DeclRefExpr 0x1b05590 <col:41> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' lvalue ParmVar 0x175fa18 '__dat' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | | `-CompoundStmt 0x15c23b0 <col:48, col:50>
| |     | |-FieldDecl 0x175fcf0 <line:167:2, col:10> col:10 referenced _M_p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | |-CXXConstructorDecl 0x1760058 <line:154:14> col:14 implicit _Alloc_hider 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &)' inline default noexcept-unevaluated 0x1760058
| |     | | `-ParmVarDecl 0x1760168 <col:14> col:14 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &'
| |     | |-CXXConstructorDecl 0x1760240 <col:14> col:14 implicit _Alloc_hider 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &&)' inline default noexcept-unevaluated 0x1760240
| |     | | `-ParmVarDecl 0x1760358 <col:14> col:14 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &&'
| |     | |-CXXMethodDecl 0x17603f8 <col:14> col:14 implicit operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &&)' inline default trivial noexcept-unevaluated 0x17603f8
| |     | | `-ParmVarDecl 0x1760508 <col:14> col:14 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider &&'
| |     | `-CXXDestructorDecl 0x1760590 <col:14> col:14 implicit used ~_Alloc_hider 'void () noexcept' inline default
| |     |   `-CompoundStmt 0x1aeedc8 <col:14>
| |     |-FieldDecl 0x1760670 <line:170:7, col:20> col:20 referenced _M_dataplus 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider'
| |     |-FieldDecl 0x17606d0 <line:171:7, col:18> col:18 referenced _M_string_length 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-EnumDecl 0x1760720 <line:173:7> col:7
| |     | `-EnumConstantDecl 0x1760878 <col:14, col:52> col:14 referenced _S_local_capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |     |   `-ImplicitCastExpr 0x17608c8 <col:34, col:52> 'unsigned int' <IntegralCast>
| |     |     `-ConstantExpr 0x1760858 <col:34, col:52> 'unsigned long' Int: 3
| |     |       `-BinaryOperator 0x1760838 <col:34, col:52> 'unsigned long' '/'
| |     |         |-ImplicitCastExpr 0x1760820 <col:34> 'unsigned long' <IntegralCast>
| |     |         | `-IntegerLiteral 0x1577dd0 <col:34> 'int' 15
| |     |         `-UnaryExprOrTypeTraitExpr 0x1760800 <col:39, col:52> 'unsigned long' sizeof 'char32_t':'char32_t'
| |     |-CXXRecordDecl 0x17608e0 <line:175:7, line:179:7> line:175:7 union definition
| |     | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |     | | |-DefaultConstructor exists trivial needs_implicit
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial
| |     | |-FieldDecl 0x1760e58 <line:177:2, col:53> col:19 referenced _M_local_buf 'char32_t [4]'
| |     | |-FieldDecl 0x1760eb8 <line:178:2, col:19> col:19 referenced _M_allocated_capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CXXDestructorDecl 0x1786c88 <line:175:7> col:7 implicit ~ 'void () noexcept' inline default trivial
| |     |-FieldDecl 0x1760f20 <col:7> col:7 implicit referenced 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |     |-IndirectFieldDecl 0x1760f80 <line:177:19> col:19 implicit _M_local_buf 'char32_t [4]'
| |     | |-Field 0x1760f20 '' 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |     | `-Field 0x1760e58 '_M_local_buf' 'char32_t [4]'
| |     |-IndirectFieldDecl 0x1760fd8 <line:178:19> col:19 implicit _M_allocated_capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-Field 0x1760f20 '' 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)'
| |     | `-Field 0x1760eb8 '_M_allocated_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1761128 <line:181:7, line:183:33> line:182:7 used _M_data 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer)'
| |     | |-ParmVarDecl 0x1761030 <col:15, col:23> col:23 used __p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | `-CompoundStmt 0x1aff990 <line:183:7, col:33>
| |     |   `-BinaryOperator 0x1aff970 <col:9, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' lvalue '='
| |     |     |-MemberExpr 0x1aff908 <col:9, col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' lvalue ._M_p 0x175fcf0
| |     |     | `-MemberExpr 0x1aff8d8 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1760670
| |     |     |   `-CXXThisExpr 0x1aff8c8 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     `-ImplicitCastExpr 0x1aff958 <col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' <LValueToRValue>
| |     |       `-DeclRefExpr 0x1aff938 <col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' lvalue ParmVar 0x1761030 '__p' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |-CXXMethodDecl 0x17612b8 <line:185:7, line:187:38> line:186:7 used _M_length 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x17611f0 <col:17, col:27> col:27 used __length 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1b039d0 <line:187:7, col:38>
| |     |   `-BinaryOperator 0x1b039b0 <col:9, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue '='
| |     |     |-MemberExpr 0x1b03948 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ->_M_string_length 0x17606d0
| |     |     | `-CXXThisExpr 0x1b03938 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     `-ImplicitCastExpr 0x1b03998 <col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |       `-DeclRefExpr 0x1b03978 <col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x17611f0 '__length' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17613e8 <line:189:7, line:191:34> line:190:7 used _M_data 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer () const'
| |     | `-CompoundStmt 0x1acc1f8 <line:191:7, col:34>
| |     |   `-ReturnStmt 0x1acc1e8 <col:9, col:28>
| |     |     `-ImplicitCastExpr 0x1acc1d0 <col:16, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *' <LValueToRValue>
| |     |       `-MemberExpr 0x1acc1a0 <col:16, col:28> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *const' lvalue ._M_p 0x175fcf0
| |     |         `-MemberExpr 0x1acc170 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1760670
| |     |           `-CXXThisExpr 0x1acc160 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1761518 <line:193:7, line:201:7> line:194:7 used _M_local_data 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer ()'
| |     | `-CompoundStmt 0x1af0bb8 <line:195:7, line:201:7>
| |     |   `-ReturnStmt 0x1af0ba8 <line:197:2, col:63>
| |     |     `-CallExpr 0x1af0b80 <col:9, col:63> 'std::pointer_traits<char32_t *>::pointer':'char32_t *'
| |     |       |-ImplicitCastExpr 0x1af0b68 <col:9, col:39> 'std::pointer_traits<char32_t *>::pointer (*)(__make_not_void<std::pointer_traits<char32_t *>::element_type> &) noexcept' <FunctionToPointerDecay>
| |     |       | `-DeclRefExpr 0x1af0a20 <col:9, col:39> 'std::pointer_traits<char32_t *>::pointer (__make_not_void<std::pointer_traits<char32_t *>::element_type> &) noexcept' lvalue CXXMethod 0x1af0950 'pointer_to' 'std::pointer_traits<char32_t *>::pointer (__make_not_void<std::pointer_traits<char32_t *>::element_type> &) noexcept'
| |     |       `-UnaryOperator 0x1af0af0 <col:50, col:51> 'char32_t':'char32_t' lvalue prefix '*' cannot overflow
| |     |         `-ImplicitCastExpr 0x1af0ad8 <col:51> 'char32_t *' <ArrayToPointerDecay>
| |     |           `-MemberExpr 0x1af0aa8 <col:51> 'char32_t [4]' lvalue ._M_local_buf 0x1760e58
| |     |             `-MemberExpr 0x1af0a60 <col:51> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1760f20
| |     |               `-CXXThisExpr 0x1af0a50 <col:51> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1761648 <line:203:7, line:211:7> line:204:7 used _M_local_data 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer () const'
| |     | `-CompoundStmt 0x1b026f8 <line:205:7, line:211:7>
| |     |   `-ReturnStmt 0x1b026e8 <line:207:2, col:69>
| |     |     `-CallExpr 0x1b026c0 <col:9, col:69> 'std::pointer_traits<const char32_t *>::pointer':'const char32_t *'
| |     |       |-ImplicitCastExpr 0x1b026a8 <col:9, col:45> 'std::pointer_traits<const char32_t *>::pointer (*)(__make_not_void<std::pointer_traits<const char32_t *>::element_type> &) noexcept' <FunctionToPointerDecay>
| |     |       | `-DeclRefExpr 0x1b02520 <col:9, col:45> 'std::pointer_traits<const char32_t *>::pointer (__make_not_void<std::pointer_traits<const char32_t *>::element_type> &) noexcept' lvalue CXXMethod 0x1b02450 'pointer_to' 'std::pointer_traits<const char32_t *>::pointer (__make_not_void<std::pointer_traits<const char32_t *>::element_type> &) noexcept'
| |     |       `-UnaryOperator 0x1b02630 <col:56, col:57> 'const char32_t':'const char32_t' lvalue prefix '*' cannot overflow
| |     |         `-ImplicitCastExpr 0x1b02618 <col:57> 'const char32_t *' <ArrayToPointerDecay>
| |     |           `-MemberExpr 0x1b025a8 <col:57> 'char32_t const[4]' lvalue ._M_local_buf 0x1760e58
| |     |             `-MemberExpr 0x1b02560 <col:57> 'const union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1760f20
| |     |               `-CXXThisExpr 0x1b02550 <col:57> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1761798 <line:213:7, line:215:45> line:214:7 used _M_capacity 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1761708 <col:19, col:29> col:29 used __capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1affa88 <line:215:7, col:45>
| |     |   `-BinaryOperator 0x1affa68 <col:9, col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue '='
| |     |     |-MemberExpr 0x1affa00 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x1760eb8
| |     |     | `-MemberExpr 0x1aff9b8 <col:9> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1760f20
| |     |     |   `-CXXThisExpr 0x1aff9a8 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     `-ImplicitCastExpr 0x1affa50 <col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |       `-DeclRefExpr 0x1affa30 <col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1761708 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1764a80 <line:217:7, line:222:7> line:218:7 used _M_set_length 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1761860 <col:21, col:31> col:31 used __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1b03918 <line:219:7, line:222:7>
| |     |   |-CXXMemberCallExpr 0x1b03618 <line:220:2, col:15> 'void'
| |     |   | |-MemberExpr 0x1b035c8 <col:2> '<bound member function type>' ->_M_length 0x17612b8
| |     |   | | `-CXXThisExpr 0x1b035b8 <col:2> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   | `-ImplicitCastExpr 0x1b03640 <col:12> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   |   `-DeclRefExpr 0x1b035f8 <col:12> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1761860 '__n' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   `-ExprWithCleanups 0x1b03900 <line:221:2, col:46> 'void'
| |     |     `-CallExpr 0x1b038b8 <col:2, col:46> 'void'
| |     |       |-ImplicitCastExpr 0x1b038a0 <col:2, col:15> 'void (*)(std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |     |       | `-DeclRefExpr 0x1b03870 <col:2, col:15> 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee180 'assign' 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
| |     |       |-ArraySubscriptExpr 0x1b03828 <col:22, col:35> 'char32_t':'char32_t' lvalue
| |     |       | |-CXXMemberCallExpr 0x1b037b8 <col:22, col:30> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |       | | `-MemberExpr 0x1b03788 <col:22> '<bound member function type>' ->_M_data 0x17613e8
| |     |       | |   `-ImplicitCastExpr 0x1b037d8 <col:22> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |       | |     `-CXXThisExpr 0x1b03778 <col:22> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       | `-ImplicitCastExpr 0x1b03810 <col:32> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |       |   `-DeclRefExpr 0x1b037f0 <col:32> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1761860 '__n' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |       `-MaterializeTemporaryExpr 0x1b038e8 <col:38, col:45> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
| |     |         `-CXXScalarValueInitExpr 0x1b03858 <col:38, col:45> 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1764b38 <line:224:7, line:226:46> line:225:7 used _M_is_local 'bool () const'
| |     | `-CompoundStmt 0x1b005b8 <line:226:7, col:46>
| |     |   `-ReturnStmt 0x1b005a8 <col:9, col:43>
| |     |     `-BinaryOperator 0x1b00588 <col:16, col:43> 'bool' '=='
| |     |       |-ImplicitCastExpr 0x1b00570 <col:16, col:24> 'const char32_t *' <NoOp>
| |     |       | `-CXXMemberCallExpr 0x1b00470 <col:16, col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |       |   `-MemberExpr 0x1b00440 <col:16> '<bound member function type>' ->_M_data 0x17613e8
| |     |       |     `-CXXThisExpr 0x1b00430 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       `-CXXMemberCallExpr 0x1b00550 <col:29, col:43> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_pointer':'const char32_t *'
| |     |         `-MemberExpr 0x1b00520 <col:29> '<bound member function type>' ->_M_local_data 0x1761648
| |     |           `-CXXThisExpr 0x1b00510 <col:29> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1764db8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:131:5, line:154:5> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:230:7 used _M_create 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1764c28 <col:17, col:27> col:27 used __capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     | |-ParmVarDecl 0x1764ca0 <col:29, col:38> col:38 used __old_capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1afeec0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:134:5, line:154:5>
| |     |   |-IfStmt 0x1afe5a0 <line:137:7, line:138:58>
| |     |   | |-BinaryOperator 0x1afe528 <line:137:11, col:33> 'bool' '>'
| |     |   | | |-ImplicitCastExpr 0x1afe510 <col:11> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   | | | `-DeclRefExpr 0x1afe478 <col:11> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   | | `-CXXMemberCallExpr 0x1afe4d8 <col:24, col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   | |   `-MemberExpr 0x1afe4a8 <col:24> '<bound member function type>' ->max_size 0x176f300
| |     |   | |     `-ImplicitCastExpr 0x1afe4f8 <col:24> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |   | |       `-CXXThisExpr 0x1afe498 <col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   | `-CallExpr 0x1afe560 <line:138:2, col:58> 'void'
| |     |   |   |-ImplicitCastExpr 0x1afe548 <col:2, col:7> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| |     |   |   | `-DeclRefExpr 0x17925f0 <col:2, col:7> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x1281ed8 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
| |     |   |   `-ImplicitCastExpr 0x1afe588 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:590:24, col:30> 'const char *' <ArrayToPointerDecay>
| |     |   |     `-ParenExpr 0x1792650 <col:24, col:30> 'const char [24]' lvalue
| |     |   |       `-StringLiteral 0x1792620 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:138:32> 'const char [24]' lvalue "basic_string::_M_create"
| |     |   |-IfStmt 0x1afeb20 <line:143:7, line:149:2>
| |     |   | |-BinaryOperator 0x1afe810 <line:143:11, col:59> 'bool' '&&'
| |     |   | | |-BinaryOperator 0x1afe6a8 <col:11, col:24> 'bool' '>'
| |     |   | | | |-ImplicitCastExpr 0x1afe678 <col:11> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   | | | | `-DeclRefExpr 0x1afe638 <col:11> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   | | | `-ImplicitCastExpr 0x1afe690 <col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   | | |   `-DeclRefExpr 0x1afe658 <col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764ca0 '__old_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   | | `-BinaryOperator 0x1afe7f0 <col:42, col:59> 'bool' '<'
| |     |   | |   |-ImplicitCastExpr 0x1afe7d8 <col:42> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   | |   | `-DeclRefExpr 0x1afe748 <col:42> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   | |   `-BinaryOperator 0x1afe7b8 <col:55, col:59> 'unsigned long' '*'
| |     |   | |     |-ImplicitCastExpr 0x1afe7a0 <col:55> 'unsigned long' <IntegralCast>
| |     |   | |     | `-IntegerLiteral 0x17927f8 <col:55> 'int' 2
| |     |   | |     `-ImplicitCastExpr 0x1afe788 <col:59> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   | |       `-DeclRefExpr 0x1afe768 <col:59> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764ca0 '__old_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   | `-CompoundStmt 0x1afeb00 <line:144:2, line:149:2>
| |     |   |   |-BinaryOperator 0x1afe8c0 <line:145:4, col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue '='
| |     |   |   | |-DeclRefExpr 0x1afe830 <col:4> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   |   | `-BinaryOperator 0x1afe8a0 <col:17, col:21> 'unsigned long' '*'
| |     |   |   |   |-ImplicitCastExpr 0x1afe888 <col:17> 'unsigned long' <IntegralCast>
| |     |   |   |   | `-IntegerLiteral 0x1792950 <col:17> 'int' 2
| |     |   |   |   `-ImplicitCastExpr 0x1afe870 <col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   |   |     `-DeclRefExpr 0x1afe850 <col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764ca0 '__old_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   |   `-IfStmt 0x1afeae8 <line:147:4, line:148:28>
| |     |   |     |-BinaryOperator 0x1afea10 <line:147:8, col:30> 'bool' '>'
| |     |   |     | |-ImplicitCastExpr 0x1afe9f8 <col:8> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   |     | | `-DeclRefExpr 0x1afe960 <col:8> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   |     | `-CXXMemberCallExpr 0x1afe9c0 <col:21, col:30> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   |     |   `-MemberExpr 0x1afe990 <col:21> '<bound member function type>' ->max_size 0x176f300
| |     |   |     |     `-ImplicitCastExpr 0x1afe9e0 <col:21> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |   |     |       `-CXXThisExpr 0x1afe980 <col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   |     `-BinaryOperator 0x1afeac8 <line:148:6, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue '='
| |     |   |       |-DeclRefExpr 0x1afea30 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |   |       `-CXXMemberCallExpr 0x1afea90 <col:19, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   |         `-MemberExpr 0x1afea60 <col:19> '<bound member function type>' ->max_size 0x176f300
| |     |   |           `-ImplicitCastExpr 0x1afeab0 <col:19> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |   |             `-CXXThisExpr 0x1afea50 <col:19> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   `-ReturnStmt 0x1afeeb0 <line:153:7, col:72>
| |     |     `-CallExpr 0x1afee80 <col:14, col:72> 'std::allocator_traits<std::allocator<char32_t> >::pointer':'char32_t *'
| |     |       |-ImplicitCastExpr 0x1afee68 <col:14, col:29> 'std::allocator_traits<std::allocator<char32_t> >::pointer (*)(std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' <FunctionToPointerDecay>
| |     |       | `-DeclRefExpr 0x1afedd8 <col:14, col:29> 'std::allocator_traits<std::allocator<char32_t> >::pointer (std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' lvalue CXXMethod 0x1757198 'allocate' 'std::allocator_traits<std::allocator<char32_t> >::pointer (std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' (UsingShadow 0x175aba8 'allocate')
| |     |       |-CXXMemberCallExpr 0x1afec98 <col:38, col:55> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' lvalue
| |     |       | `-MemberExpr 0x1afec68 <col:38> '<bound member function type>' ->_M_get_allocator 0x1766928
| |     |       |   `-CXXThisExpr 0x1afec58 <col:38> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       `-BinaryOperator 0x1afedb8 <col:58, col:71> 'unsigned long' '+'
| |     |         |-ImplicitCastExpr 0x1afed88 <col:58> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1afed68 <col:58> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764c28 '__capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type &'
| |     |         `-ImplicitCastExpr 0x1afeda0 <col:71> 'unsigned long' <IntegralCast>
| |     |           `-IntegerLiteral 0x1792d28 <col:71> 'int' 1
| |     |-CXXMethodDecl 0x1764e78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:232:7, line:237:7> line:233:7 used _M_dispose 'void ()'
| |     | `-CompoundStmt 0x1b00320 <line:234:7, line:237:7>
| |     |   `-IfStmt 0x1b00308 <line:235:2, line:236:36>
| |     |     |-UnaryOperator 0x1b001e8 <line:235:6, col:19> 'bool' prefix '!' cannot overflow
| |     |     | `-CXXMemberCallExpr 0x1b001b0 <col:7, col:19> 'bool'
| |     |     |   `-MemberExpr 0x1b00180 <col:7> '<bound member function type>' ->_M_is_local 0x1764b38
| |     |     |     `-ImplicitCastExpr 0x1b001d0 <col:7> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |     |       `-CXXThisExpr 0x1b00170 <col:7> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     `-CXXMemberCallExpr 0x1b002c8 <line:236:4, col:36> 'void'
| |     |       |-MemberExpr 0x1b00210 <col:4> '<bound member function type>' ->_M_destroy 0x1765000
| |     |       | `-CXXThisExpr 0x1b00200 <col:4> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       `-ImplicitCastExpr 0x1b002f0 <col:15> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |         `-MemberExpr 0x1b00298 <col:15> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x1760eb8
| |     |           `-MemberExpr 0x1b00250 <col:15> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1760f20
| |     |             `-CXXThisExpr 0x1b00240 <col:15> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1765000 <line:239:7, line:241:79> line:240:7 used _M_destroy 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) throw()'
| |     | |-ParmVarDecl 0x1764f38 <col:18, col:28> col:28 used __size 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1b03348 <line:241:7, col:79>
| |     |   `-CallExpr 0x1b03310 <col:9, col:76> 'void'
| |     |     |-ImplicitCastExpr 0x1b032f8 <col:9, col:24> 'void (*)(std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<std::allocator<char32_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' <FunctionToPointerDecay>
| |     |     | `-DeclRefExpr 0x1b02fd0 <col:9, col:24> 'void (std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<std::allocator<char32_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' lvalue CXXMethod 0x1757738 'deallocate' 'void (std::allocator_traits<std::allocator<char32_t> >::allocator_type &, std::allocator_traits<std::allocator<char32_t> >::pointer, std::allocator_traits<allocator<type-parameter-0-0> >::size_type)' (UsingShadow 0x175acc0 'deallocate')
| |     |     |-CXXMemberCallExpr 0x1b030c8 <col:35, col:52> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' lvalue
| |     |     | `-MemberExpr 0x1b03098 <col:35> '<bound member function type>' ->_M_get_allocator 0x1766928
| |     |     |   `-CXXThisExpr 0x1b03088 <col:35> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |-CXXMemberCallExpr 0x1b031a8 <col:55, col:63> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |     | `-MemberExpr 0x1b03178 <col:55> '<bound member function type>' ->_M_data 0x17613e8
| |     |     |   `-ImplicitCastExpr 0x1b031c8 <col:55> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |     |     `-CXXThisExpr 0x1b03168 <col:55> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     `-BinaryOperator 0x1b03280 <col:66, col:75> 'unsigned long' '+'
| |     |       |-ImplicitCastExpr 0x1b03250 <col:66> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |       | `-DeclRefExpr 0x1b03230 <col:66> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1764f38 '__size' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |       `-ImplicitCastExpr 0x1b03268 <col:75> 'unsigned long' <IntegralCast>
| |     |         `-IntegerLiteral 0x15c3388 <col:75> 'int' 1
| |     |-FunctionTemplateDecl 0x17653c8 <line:245:7, line:252:2> line:247:9 _M_construct_aux
| |     | |-TemplateTypeParmDecl 0x17650b8 <line:245:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |     | |-CXXMethodDecl 0x1765328 <line:246:9, line:252:2> line:247:9 _M_construct_aux 'void (_InIterator, _InIterator, std::__false_type)'
| |     | | |-ParmVarDecl 0x1765168 <col:26, col:38> col:38 __beg '_InIterator'
| |     | | |-ParmVarDecl 0x17651e0 <col:45, col:57> col:57 __end '_InIterator'
| |     | | `-ParmVarDecl 0x1765248 <line:248:5, col:10> col:22 'std::__false_type':'std::__false_type'
| |     | `-CXXMethodDecl 0x1af2728 <line:246:9, line:252:2> line:247:9 used _M_construct_aux 'void (const char32_t *, const char32_t *, std::__false_type)'
| |     |   |-TemplateArgument type 'const char32_t *'
| |     |   |-ParmVarDecl 0x1af2528 <col:26, col:38> col:38 used __beg 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1af25a0 <col:45, col:57> col:57 used __end 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1af2608 <line:248:5, col:10> col:22 'std::__false_type':'std::__false_type'
| |     |   `-CompoundStmt 0x1af53a0 <line:249:2, line:252:2>
| |     |     |-DeclStmt 0x1af3128 <line:250:11, col:80>
| |     |     | `-TypedefDecl 0x1af30d0 <col:11, col:76> col:76 _Tag 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'
| |     |     |   `-ElaboratedType 0x1af3080 'typename iterator_traits<const char32_t *>::iterator_category' sugar
| |     |     |     `-TypedefType 0x1af3060 'std::iterator_traits<const char32_t *>::iterator_category' sugar
| |     |     |       |-Typedef 0x1af2e30 'iterator_category'
| |     |     |       `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |     |     |         `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |     |     `-ExprWithCleanups 0x1af5388 <line:251:11, col:44> 'void'
| |     |       `-CXXMemberCallExpr 0x1af52b0 <col:11, col:44> 'void'
| |     |         |-MemberExpr 0x1af5268 <col:11> '<bound member function type>' ->_M_construct 0x1af34e8
| |     |         | `-CXXThisExpr 0x1af5258 <col:11> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |         |-ImplicitCastExpr 0x1af52e8 <col:24> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1af31d0 <col:24> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af2528 '__beg' 'const char32_t *':'const char32_t *'
| |     |         |-ImplicitCastExpr 0x1af5300 <col:31> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1af31f0 <col:31> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af25a0 '__end' 'const char32_t *':'const char32_t *'
| |     |         `-CXXConstructExpr 0x1af5358 <col:38, col:43> 'std::forward_iterator_tag':'std::forward_iterator_tag' 'void (std::forward_iterator_tag &&) noexcept'
| |     |           `-ImplicitCastExpr 0x1af5330 <col:38, col:43> 'std::forward_iterator_tag' xvalue <DerivedToBase (bidirectional_iterator_tag -> forward_iterator_tag)>
| |     |             `-MaterializeTemporaryExpr 0x1af5318 <col:38, col:43> '_Tag':'std::random_access_iterator_tag' xvalue
| |     |               `-CXXTemporaryObjectExpr 0x1af3240 <col:38, col:43> '_Tag':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| |     |-FunctionTemplateDecl 0x17657c8 <line:256:7, line:259:62> line:258:9 _M_construct_aux
| |     | |-TemplateTypeParmDecl 0x17654b8 <line:256:16, col:25> col:25 typename depth 0 index 0 _Integer
| |     | `-CXXMethodDecl 0x1765728 <line:257:9, line:259:62> line:258:9 _M_construct_aux 'void (_Integer, _Integer, std::__true_type)'
| |     |   |-ParmVarDecl 0x1765568 <col:26, col:35> col:35 __beg '_Integer'
| |     |   |-ParmVarDecl 0x17655e0 <col:42, col:51> col:51 __end '_Integer'
| |     |   `-ParmVarDecl 0x1765648 <col:58, col:63> col:74 'std::__true_type':'std::__true_type'
| |     |-CXXMethodDecl 0x1765a58 <line:261:7, line:263:35> line:262:7 _M_construct_aux_2 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x17658c8 <col:26, col:36> col:36 __req 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1765940 <col:43, col:50> col:50 __c 'char32_t':'char32_t'
| |     |-FunctionTemplateDecl 0x1765db8 <line:265:7, line:271:9> line:267:9 _M_construct
| |     | |-TemplateTypeParmDecl 0x1765b18 <line:265:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |     | |-CXXMethodDecl 0x1765d18 <line:266:9, line:271:9> line:267:9 _M_construct 'void (_InIterator, _InIterator)'
| |     | | |-ParmVarDecl 0x1765bc8 <col:22, col:34> col:34 __beg '_InIterator'
| |     | | `-ParmVarDecl 0x1765c40 <col:41, col:53> col:53 __end '_InIterator'
| |     | `-CXXMethodDecl 0x1aef178 <line:266:9, line:271:9> line:267:9 used _M_construct 'void (const char32_t *, const char32_t *)'
| |     |   |-TemplateArgument type 'const char32_t *'
| |     |   |-ParmVarDecl 0x1aeefe8 <col:22, col:34> col:34 used __beg 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1aef060 <col:41, col:53> col:53 used __end 'const char32_t *':'const char32_t *'
| |     |   `-CompoundStmt 0x1af2958 <line:268:2, line:271:9>
| |     |     |-DeclStmt 0x1af2358 <line:269:4, col:69>
| |     |     | `-TypedefDecl 0x1af2300 <col:4, col:60> col:60 _Integral 'typename std::__is_integer<const char32_t *>::__type':'std::__false_type'
| |     |     |   `-ElaboratedType 0x1af22b0 'typename std::__is_integer<const char32_t *>::__type' sugar
| |     |     |     `-TypedefType 0x1af2290 'std::__is_integer<const char32_t *>::__type' sugar
| |     |     |       |-Typedef 0x1af2218 '__type'
| |     |     |       `-RecordType 0x1285390 'std::__false_type'
| |     |     |         `-CXXRecord 0x1285300 '__false_type'
| |     |     `-ExprWithCleanups 0x1af2940 <line:270:4, col:46> 'void'
| |     |       `-CXXMemberCallExpr 0x1af2890 <col:4, col:46> 'void'
| |     |         |-MemberExpr 0x1af2848 <col:4> '<bound member function type>' ->_M_construct_aux 0x1af2728
| |     |         | `-CXXThisExpr 0x1af2838 <col:4> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |         |-ImplicitCastExpr 0x1af28c8 <col:21> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1af23f0 <col:21> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1aeefe8 '__beg' 'const char32_t *':'const char32_t *'
| |     |         |-ImplicitCastExpr 0x1af28e0 <col:28> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1af2410 <col:28> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1aef060 '__end' 'const char32_t *':'const char32_t *'
| |     |         `-CXXConstructExpr 0x1af2910 <col:35, col:45> 'std::__false_type':'std::__false_type' 'void (std::__false_type &&) noexcept' elidable
| |     |           `-MaterializeTemporaryExpr 0x1af28f8 <col:35, col:45> '_Integral':'std::__false_type' xvalue
| |     |             `-CXXTemporaryObjectExpr 0x1af2460 <col:35, col:45> '_Integral':'std::__false_type' 'void () noexcept' zeroing
| |     |-FunctionTemplateDecl 0x17661a8 <line:274:7, line:277:31> line:276:9 _M_construct
| |     | |-TemplateTypeParmDecl 0x1765ea0 <line:274:16, col:25> col:25 typename depth 0 index 0 _InIterator
| |     | |-CXXMethodDecl 0x1766108 <line:275:9, line:277:31> line:276:9 _M_construct 'void (_InIterator, _InIterator, std::input_iterator_tag)'
| |     | | |-ParmVarDecl 0x1765f48 <col:22, col:34> col:34 __beg '_InIterator'
| |     | | |-ParmVarDecl 0x1765fc0 <col:41, col:53> col:53 __end '_InIterator'
| |     | | `-ParmVarDecl 0x1766028 <line:277:8, col:13> col:31 'std::input_iterator_tag':'std::input_iterator_tag'
| |     | `-CXXMethodDecl 0x1af5148 <line:275:9, line:277:31> line:276:9 _M_construct 'void (const char32_t *, const char32_t *, std::input_iterator_tag)'
| |     |   |-TemplateArgument type 'const char32_t *'
| |     |   |-ParmVarDecl 0x1af3678 <col:22, col:34> col:34 __beg 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1af36f0 <col:41, col:53> col:53 __end 'const char32_t *':'const char32_t *'
| |     |   `-ParmVarDecl 0x1af3758 <line:277:8, col:13> col:31 'std::input_iterator_tag':'std::input_iterator_tag'
| |     |-FunctionTemplateDecl 0x17665a8 <line:281:7, line:284:33> line:283:9 _M_construct
| |     | |-TemplateTypeParmDecl 0x1766298 <line:281:16, col:25> col:25 typename depth 0 index 0 _FwdIterator
| |     | |-CXXMethodDecl 0x1766508 <line:282:9, line:284:33> line:283:9 _M_construct 'void (_FwdIterator, _FwdIterator, std::forward_iterator_tag)'
| |     | | |-ParmVarDecl 0x1766348 <col:22, col:35> col:35 __beg '_FwdIterator'
| |     | | |-ParmVarDecl 0x17663c0 <col:42, col:55> col:55 __end '_FwdIterator'
| |     | | `-ParmVarDecl 0x1766428 <line:284:8, col:13> col:33 'std::forward_iterator_tag':'std::forward_iterator_tag'
| |     | `-CXXMethodDecl 0x1af34e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:205:7, line:233:7> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:283:9 used _M_construct 'void (const char32_t *, const char32_t *, std::forward_iterator_tag)'
| |     |   |-TemplateArgument type 'const char32_t *'
| |     |   |-ParmVarDecl 0x1af32e8 <col:22, col:35> col:35 used __beg 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1af3360 <col:42, col:55> col:55 used __end 'const char32_t *':'const char32_t *'
| |     |   |-ParmVarDecl 0x1af33c8 <line:284:8, col:13> col:33 'std::forward_iterator_tag':'std::forward_iterator_tag'
| |     |   `-CompoundStmt 0x1afc4e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:209:7, line:233:7>
| |     |     |-IfStmt 0x1af5d78 <line:211:2, line:213:42>
| |     |     | |-BinaryOperator 0x1af5d00 <line:211:6, col:54> 'bool' '&&'
| |     |     | | |-CallExpr 0x1af5ba0 <col:6, col:40> 'bool'
| |     |     | | | |-ImplicitCastExpr 0x1af5b88 <col:6, col:17> 'bool (*)(const char32_t *)' <FunctionToPointerDecay>
| |     |     | | | | `-DeclRefExpr 0x1af5af8 <col:6, col:17> 'bool (const char32_t *)' lvalue Function 0x1af57b8 '__is_null_pointer' 'bool (const char32_t *)' (FunctionTemplate 0x12b9d58 '__is_null_pointer')
| |     |     | | | `-ImplicitCastExpr 0x1af5bc8 <col:35> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     | | |   `-DeclRefExpr 0x1af5600 <col:35> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af32e8 '__beg' 'const char32_t *':'const char32_t *'
| |     |     | | `-BinaryOperator 0x1af5ce0 <col:45, col:54> 'bool' '!='
| |     |     | |   |-ImplicitCastExpr 0x1af5cb0 <col:45> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     | |   | `-DeclRefExpr 0x1af5c70 <col:45> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af32e8 '__beg' 'const char32_t *':'const char32_t *'
| |     |     | |   `-ImplicitCastExpr 0x1af5cc8 <col:54> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     | |     `-DeclRefExpr 0x1af5c90 <col:54> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af3360 '__end' 'const char32_t *':'const char32_t *'
| |     |     | `-CallExpr 0x1af5d38 <line:212:4, line:213:42> 'void'
| |     |     |   |-ImplicitCastExpr 0x1af5d20 <line:212:4, col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| |     |     |   | `-DeclRefExpr 0x17952c8 <col:4, col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x1281ae8 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'
| |     |     |   `-ImplicitCastExpr 0x1af5d60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:590:24, col:30> 'const char *' <ArrayToPointerDecay>
| |     |     |     `-ParenExpr 0x17953c0 <col:24, col:30> 'const char [42]' lvalue
| |     |     |       `-StringLiteral 0x1795378 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:212:33, line:213:12> 'const char [42]' lvalue "basic_string::_M_construct null not valid"
| |     |     |-DeclStmt 0x1af6418 <line:215:2, col:72>
| |     |     | `-VarDecl 0x1af5da0 <col:2, col:71> col:12 used __dnew 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' cinit
| |     |     |   `-CXXStaticCastExpr 0x1af63e8 <col:21, col:71> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' static_cast<std::__cxx11::basic_string<char32_t, struct std::char_traits<char32_t>, class std::allocator<char32_t> >::size_type> <NoOp>
| |     |     |     `-ImplicitCastExpr 0x1af63d0 <col:44, col:70> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |     |     |       `-CallExpr 0x1af6370 <col:44, col:70> 'typename iterator_traits<const char32_t *>::difference_type':'long'
| |     |     |         |-ImplicitCastExpr 0x1af6358 <col:44, col:49> 'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *)' <FunctionToPointerDecay>
| |     |     |         | `-DeclRefExpr 0x1af62c0 <col:44, col:49> 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)' lvalue Function 0x1af61b8 'distance' 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)' (FunctionTemplate 0x1314008 'distance')
| |     |     |         |-ImplicitCastExpr 0x1af63a0 <col:58> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     |         | `-DeclRefExpr 0x1af5e60 <col:58> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af32e8 '__beg' 'const char32_t *':'const char32_t *'
| |     |     |         `-ImplicitCastExpr 0x1af63b8 <col:65> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     |           `-DeclRefExpr 0x1af5e80 <col:65> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af3360 '__end' 'const char32_t *':'const char32_t *'
| |     |     |-IfStmt 0x1af6800 <line:217:2, line:221:4>
| |     |     | |-BinaryOperator 0x1af6558 <line:217:6, col:42> 'bool' '>'
| |     |     | | |-ImplicitCastExpr 0x1af6540 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |     | | | `-DeclRefExpr 0x1af64b0 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue Var 0x1af5da0 '__dnew' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |     | | `-CXXFunctionalCastExpr 0x1af6518 <col:15, col:42> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' functional cast to std::__cxx11::basic_string<char32_t, struct std::char_traits<char32_t>, class std::allocator<char32_t> >::size_type <NoOp>
| |     |     | |   `-ImplicitCastExpr 0x1af6500 <col:25> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |     |     | |     `-DeclRefExpr 0x1af64e0 <col:25> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)' EnumConstant 0x1760878 '_S_local_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |     |     | `-CompoundStmt 0x1af67e0 <line:218:4, line:221:4>
| |     |     |   |-CXXMemberCallExpr 0x1af6718 <line:219:6, col:45> 'void'
| |     |     |   | |-MemberExpr 0x1af66e8 <col:6> '<bound member function type>' ->_M_data 0x1761128
| |     |     |   | | `-CXXThisExpr 0x1af66d8 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |   | `-CXXMemberCallExpr 0x1af66a8 <col:14, col:44> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |     |   |   |-MemberExpr 0x1af6608 <col:14> '<bound member function type>' ->_M_create 0x1764db8
| |     |     |   |   | `-CXXThisExpr 0x1af65f8 <col:14> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |   |   |-DeclRefExpr 0x1af6638 <col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue Var 0x1af5da0 '__dnew' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |     |   |   `-CXXFunctionalCastExpr 0x1af6680 <col:32, col:43> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' functional cast to std::__cxx11::basic_string<char32_t, struct std::char_traits<char32_t>, class std::allocator<char32_t> >::size_type <NoOp>
| |     |     |   |     `-ImplicitCastExpr 0x1af6668 <col:42> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast> part_of_explicit_cast
| |     |     |   |       `-IntegerLiteral 0x1795808 <col:42> 'int' 0
| |     |     |   `-CXXMemberCallExpr 0x1af67a0 <line:220:6, col:24> 'void'
| |     |     |     |-MemberExpr 0x1af6750 <col:6> '<bound member function type>' ->_M_capacity 0x1761798
| |     |     |     | `-CXXThisExpr 0x1af6740 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |     `-ImplicitCastExpr 0x1af67c8 <col:18> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |     |       `-DeclRefExpr 0x1af6780 <col:18> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue Var 0x1af5da0 '__dnew' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |     |-CXXTryStmt 0x1afc420 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:40:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:230:4>
| |     |     | |-CompoundStmt 0x1afc368 <line:225:4, col:52>
| |     |     | | `-CallExpr 0x1afc300 <col:6, col:49> 'void'
| |     |     | |   |-ImplicitCastExpr 0x1afc2e8 <col:6, col:12> 'void (*)(char32_t *, const char32_t *, const char32_t *) noexcept' <FunctionToPointerDecay>
| |     |     | |   | `-MemberExpr 0x1afc258 <col:6, col:12> 'void (char32_t *, const char32_t *, const char32_t *) noexcept' lvalue ->_S_copy_chars 0x1768bb0
| |     |     | |   |   `-CXXThisExpr 0x1af6818 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' this
| |     |     | |   |-CXXMemberCallExpr 0x1af6960 <col:26, col:34> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |     | |   | `-MemberExpr 0x1af6930 <col:26> '<bound member function type>' ->_M_data 0x17613e8
| |     |     | |   |   `-ImplicitCastExpr 0x1af6980 <col:26> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' <NoOp>
| |     |     | |   |     `-CXXThisExpr 0x1af6920 <col:26> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     | |   |-ImplicitCastExpr 0x1afc338 <col:37> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     | |   | `-DeclRefExpr 0x1af6998 <col:37> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af32e8 '__beg' 'const char32_t *':'const char32_t *'
| |     |     | |   `-ImplicitCastExpr 0x1afc350 <col:44> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |     |     | |     `-DeclRefExpr 0x1af69b8 <col:44> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af3360 '__end' 'const char32_t *':'const char32_t *'
| |     |     | `-CXXCatchStmt 0x1afc400 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:41:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:230:4>
| |     |     |   |-<<<NULL>>>
| |     |     |   `-CompoundStmt 0x1afc3e0 <line:227:4, line:230:4>
| |     |     |     |-CXXMemberCallExpr 0x1afc3c0 <line:228:6, col:17> 'void'
| |     |     |     | `-MemberExpr 0x1afc390 <col:6> '<bound member function type>' ->_M_dispose 0x1764e78
| |     |     |     |   `-CXXThisExpr 0x1afc380 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |     `-CXXThrowExpr 0x1795b40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_defines.h:42:34> 'void'
| |     |     `-CXXMemberCallExpr 0x1afc4a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.tcc:232:2, col:22> 'void'
| |     |       |-MemberExpr 0x1afc450 <col:2> '<bound member function type>' ->_M_set_length 0x1764a80
| |     |       | `-CXXThisExpr 0x1afc440 <col:2> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       `-ImplicitCastExpr 0x1afc4c8 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |         `-DeclRefExpr 0x1afc480 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue Var 0x1af5da0 '__dnew' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17667b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:286:7, line:287:47> col:7 _M_construct 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x17666a8 <col:20, col:30> col:30 __req 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1766720 <col:37, col:44> col:44 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1766928 <line:289:7, line:291:29> line:290:7 used _M_get_allocator 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type &()'
| |     | `-CompoundStmt 0x1aff470 <line:291:7, col:29>
| |     |   `-ReturnStmt 0x1aff460 <col:9, col:16>
| |     |     `-ImplicitCastExpr 0x1aff440 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' lvalue <DerivedToBase (allocator)>
| |     |       `-MemberExpr 0x1aff410 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1760670
| |     |         `-CXXThisExpr 0x1aff400 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x1766a88 <line:293:7, line:295:29> line:294:7 used _M_get_allocator 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type &() const'
| |     | `-CompoundStmt 0x1aff3e8 <line:295:7, col:29>
| |     |   `-ReturnStmt 0x1aff3d8 <col:9, col:16>
| |     |     `-ImplicitCastExpr 0x1aff3b8 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'const std::allocator<char32_t>' lvalue <DerivedToBase (allocator)>
| |     |       `-MemberExpr 0x1aff388 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x1760670
| |     |         `-CXXThisExpr 0x1aff378 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-AccessSpecDecl 0x1766b38 <line:297:5, col:12> col:5 private
| |     |-CXXMethodDecl 0x1766ca8 <line:313:7, line:321:7> line:314:7 _M_check 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char *) const'
| |     | |-ParmVarDecl 0x1766b70 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1766bd8 <col:33, col:45> col:45 __s 'const char *'
| |     |-CXXMethodDecl 0x1766f38 <line:323:7, line:328:7> line:324:7 _M_check_length 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char *) const'
| |     | |-ParmVarDecl 0x1766d78 <col:23, col:33> col:33 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1766df0 <col:39, col:49> col:49 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1766e58 <col:55, col:67> col:67 __s 'const char *'
| |     |-CXXMethodDecl 0x1767160 <line:332:7, line:337:7> line:333:7 _M_limit 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x1767010 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1767088 <col:33, col:43> col:43 __off 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1767350 <line:340:7, line:345:7> line:341:7 _M_disjunct 'bool (const char32_t *) const noexcept'
| |     | `-ParmVarDecl 0x1767258 <col:19, col:33> col:33 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1767658 <line:349:7, line:356:7> line:350:7 used _S_copy 'void (char32_t *, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)' static
| |     | |-ParmVarDecl 0x1767448 <col:15, col:23> col:23 used __d 'char32_t *'
| |     | |-ParmVarDecl 0x17674c0 <col:28, col:42> col:42 used __s 'const char32_t *'
| |     | |-ParmVarDecl 0x1767538 <col:47, col:57> col:57 used __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-CompoundStmt 0x1b00158 <line:351:7, line:356:7>
| |     |   `-IfStmt 0x1b00130 <line:352:2, line:355:35> has_else
| |     |     |-BinaryOperator 0x1affdb0 <line:352:6, col:13> 'bool' '=='
| |     |     | |-ImplicitCastExpr 0x1affd80 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |     | | `-DeclRefExpr 0x1affd60 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1767538 '__n' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |     | `-ImplicitCastExpr 0x1affd98 <col:13> 'unsigned long' <IntegralCast>
| |     |     |   `-IntegerLiteral 0x15c4f78 <col:13> 'int' 1
| |     |     |-CallExpr 0x1afff60 <line:353:4, col:34> 'void'
| |     |     | |-ImplicitCastExpr 0x1afff48 <col:4, col:17> 'void (*)(std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |     |     | | `-DeclRefExpr 0x1afff18 <col:4, col:17> 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee180 'assign' 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
| |     |     | |-UnaryOperator 0x1affeb0 <col:24, col:25> 'char32_t':'char32_t' lvalue prefix '*' cannot overflow
| |     |     | | `-ImplicitCastExpr 0x1affe98 <col:25> 'char32_t *' <LValueToRValue>
| |     |     | |   `-DeclRefExpr 0x1affe78 <col:25> 'char32_t *' lvalue ParmVar 0x1767448 '__d' 'char32_t *'
| |     |     | `-UnaryOperator 0x1afff00 <col:30, col:31> 'const char32_t':'const char32_t' lvalue prefix '*' cannot overflow
| |     |     |   `-ImplicitCastExpr 0x1affee8 <col:31> 'const char32_t *' <LValueToRValue>
| |     |     |     `-DeclRefExpr 0x1affec8 <col:31> 'const char32_t *' lvalue ParmVar 0x17674c0 '__s' 'const char32_t *'
| |     |     `-CallExpr 0x1b000b0 <line:355:4, col:35> 'std::char_traits<char32_t>::char_type *'
| |     |       |-ImplicitCastExpr 0x1b00098 <col:4, col:17> 'std::char_traits<char32_t>::char_type *(*)(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' <FunctionToPointerDecay>
| |     |       | `-DeclRefExpr 0x1afffb0 <col:4, col:17> 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' lvalue CXXMethod 0x13f0bd0 'copy' 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)'
| |     |       |-ImplicitCastExpr 0x1b000e8 <col:22> 'char32_t *' <LValueToRValue>
| |     |       | `-DeclRefExpr 0x1afffe0 <col:22> 'char32_t *' lvalue ParmVar 0x1767448 '__d' 'char32_t *'
| |     |       |-ImplicitCastExpr 0x1b00100 <col:27> 'const char32_t *' <LValueToRValue>
| |     |       | `-DeclRefExpr 0x1b00000 <col:27> 'const char32_t *' lvalue ParmVar 0x17674c0 '__s' 'const char32_t *'
| |     |       `-ImplicitCastExpr 0x1b00118 <col:32> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |         `-DeclRefExpr 0x1b00020 <col:32> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x1767538 '__n' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17678c0 <line:358:7, line:365:7> line:359:7 _S_move 'void (char32_t *, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)' static
| |     | |-ParmVarDecl 0x1767730 <col:15, col:23> col:23 __d 'char32_t *'
| |     | |-ParmVarDecl 0x17677a8 <col:28, col:42> col:42 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x1767820 <col:47, col:57> col:57 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1767ba8 <line:367:7, line:374:7> line:368:7 _S_assign 'void (char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)' static
| |     | |-ParmVarDecl 0x1767998 <col:17, col:25> col:25 __d 'char32_t *'
| |     | |-ParmVarDecl 0x1767a10 <col:30, col:40> col:40 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1767a88 <col:45, col:52> col:52 __c 'char32_t':'char32_t'
| |     |-FunctionTemplateDecl 0x1767fc8 <line:378:7, line:384:2> line:380:9 _S_copy_chars
| |     | |-TemplateTypeParmDecl 0x1767c70 <line:378:16, col:22> col:22 class depth 0 index 0 _Iterator
| |     | |-CXXMethodDecl 0x1767f28 <line:379:9, line:384:2> line:380:9 _S_copy_chars 'void (char32_t *, _Iterator, _Iterator)' static
| |     | | |-ParmVarDecl 0x1767d18 <col:23, col:31> col:31 __p 'char32_t *'
| |     | | |-ParmVarDecl 0x1767d90 <col:36, col:46> col:46 __k1 '_Iterator'
| |     | | `-ParmVarDecl 0x1767e08 <col:52, col:62> col:62 __k2 '_Iterator'
| |     | `-CXXMethodDecl 0x1af6c18 <line:379:9, line:384:2> line:380:9 _S_copy_chars 'void (char32_t *, const char32_t *, const char32_t *)' static
| |     |   |-TemplateArgument type 'const char32_t *'
| |     |   |-ParmVarDecl 0x1af6a18 <col:23, col:31> col:31 __p 'char32_t *'
| |     |   |-ParmVarDecl 0x1af6ab8 <col:36, col:46> col:46 __k1 'const char32_t *':'const char32_t *'
| |     |   `-ParmVarDecl 0x1af6b30 <col:52, col:62> col:62 __k2 'const char32_t *':'const char32_t *'
| |     |-CXXMethodDecl 0x17682e0 <line:386:7, line:388:55> line:387:7 _S_copy_chars 'void (char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator) noexcept' static
| |     | |-ParmVarDecl 0x17680c8 <col:21, col:29> col:29 __p 'char32_t *'
| |     | |-ParmVarDecl 0x1768140 <col:34, col:43> col:43 __k1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x17681b8 <col:49, col:58> col:58 __k2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x17685d0 <line:390:7, line:393:55> line:391:7 _S_copy_chars 'void (char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator) noexcept' static
| |     | |-ParmVarDecl 0x17683b8 <col:21, col:29> col:29 __p 'char32_t *'
| |     | |-ParmVarDecl 0x1768430 <col:34, col:49> col:49 __k1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x17684a8 <col:55, col:70> col:70 __k2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x17688c0 <line:395:7, line:397:42> line:396:7 _S_copy_chars 'void (char32_t *, char32_t *, char32_t *) noexcept' static
| |     | |-ParmVarDecl 0x17686a8 <col:21, col:29> col:29 __p 'char32_t *'
| |     | |-ParmVarDecl 0x1768720 <col:34, col:42> col:42 __k1 'char32_t *'
| |     | `-ParmVarDecl 0x1768798 <col:48, col:56> col:56 __k2 'char32_t *'
| |     |-CXXMethodDecl 0x1768bb0 <line:399:7, line:402:42> line:400:7 used _S_copy_chars 'void (char32_t *, const char32_t *, const char32_t *) noexcept' static
| |     | |-ParmVarDecl 0x1768998 <col:21, col:29> col:29 used __p 'char32_t *'
| |     | |-ParmVarDecl 0x1768a10 <col:34, col:48> col:48 used __k1 'const char32_t *'
| |     | |-ParmVarDecl 0x1768a88 <col:54, col:68> col:68 used __k2 'const char32_t *'
| |     | `-CompoundStmt 0x1affcd0 <line:402:7, col:42>
| |     |   `-CallExpr 0x1affc50 <col:9, col:39> 'void'
| |     |     |-ImplicitCastExpr 0x1affc38 <col:9> 'void (*)(char32_t *, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)' <FunctionToPointerDecay>
| |     |     | `-DeclRefExpr 0x1affaa0 <col:9> 'void (char32_t *, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)' lvalue CXXMethod 0x1767658 '_S_copy' 'void (char32_t *, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     |     |-ImplicitCastExpr 0x1affc88 <col:17> 'char32_t *' <LValueToRValue>
| |     |     | `-DeclRefExpr 0x1affac0 <col:17> 'char32_t *' lvalue ParmVar 0x1768998 '__p' 'char32_t *'
| |     |     |-ImplicitCastExpr 0x1affca0 <col:22> 'const char32_t *' <LValueToRValue>
| |     |     | `-DeclRefExpr 0x1affae0 <col:22> 'const char32_t *' lvalue ParmVar 0x1768a10 '__k1' 'const char32_t *'
| |     |     `-ImplicitCastExpr 0x1affcb8 <col:28, col:35> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast>
| |     |       `-BinaryOperator 0x1affbc0 <col:28, col:35> 'long' '-'
| |     |         |-ImplicitCastExpr 0x1affb90 <col:28> 'const char32_t *' <LValueToRValue>
| |     |         | `-DeclRefExpr 0x1affb50 <col:28> 'const char32_t *' lvalue ParmVar 0x1768a88 '__k2' 'const char32_t *'
| |     |         `-ImplicitCastExpr 0x1affba8 <col:35> 'const char32_t *' <LValueToRValue>
| |     |           `-DeclRefExpr 0x1affb70 <col:35> 'const char32_t *' lvalue ParmVar 0x1768a10 '__k1' 'const char32_t *'
| |     |-CXXMethodDecl 0x1768de8 <line:404:7, line:415:7> line:405:7 _S_compare 'int (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) noexcept' static
| |     | |-ParmVarDecl 0x1768c88 <col:18, col:28> col:28 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1768d00 <col:34, col:44> col:44 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1768f78 <line:417:7, line:418:36> col:7 _M_assign 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x1768eb8 <col:17, col:35> col:36 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x17692e8 <line:420:7, line:422:19> line:421:7 _M_mutate 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1769040 <col:17, col:27> col:27 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17690b8 <col:34, col:44> col:44 __len1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1769130 <col:52, col:66> col:66 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x17691a8 <line:422:3, col:13> col:13 __len2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1769518 <line:424:7, line:425:46> col:7 _M_erase 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x17693c8 <col:16, col:26> col:26 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1769440 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-AccessSpecDecl 0x17695d8 <line:427:5, col:11> col:5 public
| |     |-CXXConstructorDecl 0x1769660 <line:435:7, line:438:27> line:435:7 basic_string 'void ()' noexcept-uninstantiated 0x157e9a0
| |     |-CXXConstructorDecl 0x1769850 <line:443:7, line:446:27> line:444:7 basic_string 'void (const std::allocator<char32_t> &) noexcept'
| |     | `-ParmVarDecl 0x1769768 <col:20, col:34> col:34 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x17699d0 <line:452:7, line:455:74> line:452:7 basic_string 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x1769920 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXConstructorDecl 0x1769cd8 <line:465:7, line:472:7> line:465:7 basic_string 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x1769aa0 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x1769b18 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1769b90 <line:466:6, col:33> col:20 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x1769fe8 <line:480:7, line:487:7> line:480:7 basic_string 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1769db8 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x1769e30 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1769ea8 <line:481:6, col:16> col:16 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXConstructorDecl 0x176a398 <line:496:7, line:503:7> line:496:7 basic_string 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176a0c8 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x176a140 <col:47, col:57> col:57 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x176a1b8 <line:497:6, col:16> col:16 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x176a230 <col:21, col:35> col:35 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x176a6b8 <line:514:7, line:517:39> line:514:7 used basic_string 'void (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176a480 <col:20, col:34> col:34 used __s 'const char32_t *'
| |     | |-ParmVarDecl 0x176a4f8 <col:39, col:49> col:49 used __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x176a570 <line:515:6, col:33> col:20 used __a 'const std::allocator<char32_t> &' cinit
| |     | | `-ExprWithCleanups 0x1786c08 <col:26, col:33> 'const std::allocator<char32_t>':'const std::allocator<char32_t>' lvalue
| |     | |   `-MaterializeTemporaryExpr 0x1786bf0 <col:26, col:33> 'const std::allocator<char32_t>':'const std::allocator<char32_t>' lvalue
| |     | |     `-ImplicitCastExpr 0x1786bd8 <col:26, col:33> 'const std::allocator<char32_t>':'const std::allocator<char32_t>' <NoOp>
| |     | |       `-CXXBindTemporaryExpr 0x1786bb8 <col:26, col:33> 'std::allocator<char32_t>':'std::allocator<char32_t>' (CXXTemporary 0x1786bb8)
| |     | |         `-CXXTemporaryObjectExpr 0x1786b80 <col:26, col:33> 'std::allocator<char32_t>':'std::allocator<char32_t>' 'void () noexcept'
| |     | |-CXXCtorInitializer Field 0x1760670 '_M_dataplus' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider'
| |     | | `-CXXConstructExpr 0x1aeed60 <line:516:9, col:41> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer, const std::allocator<char32_t> &)'
| |     | |   |-CXXMemberCallExpr 0x1aeecf8 <col:21, col:35> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | |   | `-MemberExpr 0x1aeecc8 <col:21> '<bound member function type>' ->_M_local_data 0x1761518
| |     | |   |   `-CXXThisExpr 0x1aeecb8 <col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     | |   `-DeclRefExpr 0x1aeed18 <col:38> 'const std::allocator<char32_t>':'const std::allocator<char32_t>' lvalue ParmVar 0x176a570 '__a' 'const std::allocator<char32_t> &'
| |     | `-CompoundStmt 0x1aef320 <line:517:7, col:39>
| |     |   `-CXXMemberCallExpr 0x1aef2d8 <col:9, col:36> 'void'
| |     |     |-MemberExpr 0x1aef290 <col:9> '<bound member function type>' ->_M_construct 0x1aef178
| |     |     | `-CXXThisExpr 0x1aef280 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |     |-ImplicitCastExpr 0x1aef308 <col:22> 'const char32_t *' <LValueToRValue>
| |     |     | `-DeclRefExpr 0x1aeee68 <col:22> 'const char32_t *' lvalue ParmVar 0x176a480 '__s' 'const char32_t *'
| |     |     `-BinaryOperator 0x1aeef48 <col:27, col:33> 'const char32_t *' '+'
| |     |       |-ImplicitCastExpr 0x1aeef18 <col:27> 'const char32_t *' <LValueToRValue>
| |     |       | `-DeclRefExpr 0x1aeeed8 <col:27> 'const char32_t *' lvalue ParmVar 0x176a480 '__s' 'const char32_t *'
| |     |       `-ImplicitCastExpr 0x1aeef30 <col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |         `-DeclRefExpr 0x1aeeef8 <col:33> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ParmVar 0x176a4f8 '__n' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXConstructorDecl 0x176a948 <line:529:7, line:531:77> line:529:7 basic_string 'void (const char32_t *, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176a798 <col:20, col:34> col:34 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x176a810 <col:39, col:66> col:53 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x176ac58 <line:544:7, line:546:33> line:544:7 basic_string 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176aa20 <col:20, col:30> col:30 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x176aa98 <col:35, col:42> col:42 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x176ab10 <col:47, col:74> col:61 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x176ae80 <line:556:7, line:576:7> line:556:7 used basic_string 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&) noexcept'
| |     | |-ParmVarDecl 0x176ad68 <col:20, col:35> col:35 used __str 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     | |-CXXCtorInitializer Field 0x1760670 '_M_dataplus' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider'
| |     | | `-CXXConstructExpr 0x1b04650 <line:557:9, col:73> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::_Alloc_hider' 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer, std::allocator<char32_t> &&)'
| |     | |   |-CXXMemberCallExpr 0x1b03b20 <col:21, col:35> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     | |   | `-MemberExpr 0x1b03af0 <col:21> '<bound member function type>' ->_M_local_data 0x1761518
| |     | |   |   `-CXXThisExpr 0x1b03ae0 <col:21> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     | |   `-CallExpr 0x1b04600 <col:38, col:72> 'typename std::remove_reference<allocator<char32_t> &>::type':'std::allocator<char32_t>' xvalue
| |     | |     |-ImplicitCastExpr 0x1b045e8 <col:38, col:43> 'typename std::remove_reference<allocator<char32_t> &>::type &&(*)(std::allocator<char32_t> &) noexcept' <FunctionToPointerDecay>
| |     | |     | `-DeclRefExpr 0x1b043a8 <col:38, col:43> 'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept' lvalue Function 0x1b042a8 'move' 'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept' (FunctionTemplate 0x12759e8 'move')
| |     | |     `-CXXMemberCallExpr 0x1b03c40 <col:48, col:71> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'std::allocator<char32_t>' lvalue
| |     | |       `-MemberExpr 0x1b03c10 <col:48, col:54> '<bound member function type>' ._M_get_allocator 0x1766928
| |     | |         `-DeclRefExpr 0x1b03b90 <col:48> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     | `-CompoundStmt 0x1b05338 <line:558:7, line:576:7>
| |     |   |-IfStmt 0x1b04fe8 <line:559:2, line:568:4> has_else
| |     |   | |-CXXMemberCallExpr 0x1b04708 <line:559:6, col:24> 'bool'
| |     |   | | `-MemberExpr 0x1b046d8 <col:6, col:12> '<bound member function type>' ._M_is_local 0x1764b38
| |     |   | |   `-ImplicitCastExpr 0x1b04728 <col:6> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue <NoOp>
| |     |   | |     `-DeclRefExpr 0x1b046b8 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   | |-CompoundStmt 0x1b04cc8 <line:560:4, line:563:4>
| |     |   | | `-CallExpr 0x1b04c30 <line:561:6, line:562:31> 'std::char_traits<char32_t>::char_type *'
| |     |   | |   |-ImplicitCastExpr 0x1b04c18 <line:561:6, col:19> 'std::char_traits<char32_t>::char_type *(*)(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' <FunctionToPointerDecay>
| |     |   | |   | `-DeclRefExpr 0x1b04780 <col:6, col:19> 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' lvalue CXXMethod 0x13f0bd0 'copy' 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)'
| |     |   | |   |-ImplicitCastExpr 0x1b04c68 <col:24> 'char32_t *' <ArrayToPointerDecay>
| |     |   | |   | `-MemberExpr 0x1b04808 <col:24> 'char32_t [4]' lvalue ._M_local_buf 0x1760e58
| |     |   | |   |   `-MemberExpr 0x1b047c0 <col:24> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue -> 0x1760f20
| |     |   | |   |     `-CXXThisExpr 0x1b047b0 <col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   | |   |-ImplicitCastExpr 0x1b04c98 <col:38, col:44> 'const std::char_traits<char32_t>::char_type *' <NoOp>
| |     |   | |   | `-ImplicitCastExpr 0x1b04c80 <col:38, col:44> 'char32_t *' <ArrayToPointerDecay>
| |     |   | |   |   `-MemberExpr 0x1b048a0 <col:38, col:44> 'char32_t [4]' lvalue ._M_local_buf 0x1760e58
| |     |   | |   |     `-MemberExpr 0x1b04858 <col:38, col:44> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue . 0x1760f20
| |     |   | |   |       `-DeclRefExpr 0x1b04838 <col:38> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   | |   `-ImplicitCastExpr 0x1b04cb0 <line:562:10, col:30> 'std::size_t':'unsigned long' <IntegralCast>
| |     |   | |     `-BinaryOperator 0x1b04bf8 <col:10, col:30> 'int' '+'
| |     |   | |       |-ImplicitCastExpr 0x1b04be0 <col:10> 'int' <IntegralCast>
| |     |   | |       | `-DeclRefExpr 0x1b04920 <col:10> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)' EnumConstant 0x1760878 '_S_local_capacity' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:173:7)'
| |     |   | |       `-IntegerLiteral 0x15d19f0 <col:30> 'int' 1
| |     |   | `-CompoundStmt 0x1b04fc8 <line:565:4, line:568:4>
| |     |   |   |-CXXMemberCallExpr 0x1b04e88 <line:566:6, col:29> 'void'
| |     |   |   | |-MemberExpr 0x1b04e58 <col:6> '<bound member function type>' ->_M_data 0x1761128
| |     |   |   | | `-CXXThisExpr 0x1b04e48 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   |   | `-CXXMemberCallExpr 0x1b04e10 <col:14, col:28> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |   |   |   `-MemberExpr 0x1b04de0 <col:14, col:20> '<bound member function type>' ._M_data 0x17613e8
| |     |   |   |     `-ImplicitCastExpr 0x1b04e30 <col:14> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue <NoOp>
| |     |   |   |       `-DeclRefExpr 0x1b04d60 <col:14> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   |   `-CXXMemberCallExpr 0x1b04f88 <line:567:6, col:45> 'void'
| |     |   |     |-MemberExpr 0x1b04ec0 <col:6> '<bound member function type>' ->_M_capacity 0x1761798
| |     |   |     | `-CXXThisExpr 0x1b04eb0 <col:6> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   |     `-ImplicitCastExpr 0x1b04fb0 <col:18, col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |   |       `-MemberExpr 0x1b04f58 <col:18, col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' lvalue ._M_allocated_capacity 0x1760eb8
| |     |   |         `-MemberExpr 0x1b04f10 <col:18, col:24> 'union (anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::(anonymous union at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:175:7)' lvalue . 0x1760f20
| |     |   |           `-DeclRefExpr 0x1b04ef0 <col:18> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   |-CXXMemberCallExpr 0x1b050d8 <line:573:2, col:26> 'void'
| |     |   | |-MemberExpr 0x1b05020 <col:2> '<bound member function type>' ->_M_length 0x17612b8
| |     |   | | `-CXXThisExpr 0x1b05010 <col:2> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |   | `-CXXMemberCallExpr 0x1b050a0 <col:12, col:25> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |   |   `-MemberExpr 0x1b05070 <col:12, col:18> '<bound member function type>' .length 0x176f228
| |     |   |     `-ImplicitCastExpr 0x1b050c0 <col:12> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue <NoOp>
| |     |   |       `-DeclRefExpr 0x1b05050 <col:12> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   |-CXXMemberCallExpr 0x1b05280 <line:574:2, col:37> 'void'
| |     |   | |-MemberExpr 0x1b05250 <col:2, col:8> '<bound member function type>' ._M_data 0x1761128
| |     |   | | `-DeclRefExpr 0x1b05100 <col:2> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   | `-CXXMemberCallExpr 0x1b05230 <col:16, col:36> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |   |   `-MemberExpr 0x1b05200 <col:16, col:22> '<bound member function type>' ._M_local_data 0x1761518
| |     |   |     `-DeclRefExpr 0x1b05180 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |   `-CXXMemberCallExpr 0x1b052f8 <line:575:2, col:23> 'void'
| |     |     |-MemberExpr 0x1b052c8 <col:2, col:8> '<bound member function type>' ._M_set_length 0x1764a80
| |     |     | `-DeclRefExpr 0x1b052a8 <col:2> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >' lvalue ParmVar 0x176ad68 '__str' 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |     `-ImplicitCastExpr 0x1b05320 <col:22> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <IntegralCast>
| |     |       `-IntegerLiteral 0x15d1f90 <col:22> 'int' 0
| |     |-CXXConstructorDecl 0x176b268 <line:583:7, line:585:47> line:583:7 basic_string 'void (initializer_list<char32_t>, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176b0c0 <col:20, col:45> col:45 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     | `-ParmVarDecl 0x176b138 <col:50, col:77> col:64 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x176b4e8 <line:587:7, line:589:51> line:587:7 basic_string 'void (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, const std::allocator<char32_t> &)'
| |     | |-ParmVarDecl 0x176b340 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x176b3b8 <col:47, col:61> col:61 __a 'const std::allocator<char32_t> &'
| |     |-CXXConstructorDecl 0x176b778 <line:591:7, line:613:7> line:591:7 basic_string 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&, const std::allocator<char32_t> &)' noexcept-uninstantiated 0x1585190
| |     | |-ParmVarDecl 0x176b5c0 <col:20, col:35> col:35 __str 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     | `-ParmVarDecl 0x176b638 <col:42, col:56> col:56 __a 'const std::allocator<char32_t> &'
| |     |-FunctionTemplateDecl 0x176c0e0 <line:624:7, line:632:32> line:629:9 basic_string
| |     | |-TemplateTypeParmDecl 0x176b888 <line:624:16, col:25> col:25 typename depth 0 index 0 _InputIterator
| |     | |-TemplateTypeParmDecl 0x176b908 <line:625:9, <scratch space>:275:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:625:18 typename depth 0 index 1
| |     | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |     | `-CXXConstructorDecl 0x176c038 <line:629:9, line:632:32> line:629:9 basic_string 'void (_InputIterator, _InputIterator, const std::allocator<char32_t> &)'
| |     |   |-ParmVarDecl 0x176be08 <col:22, col:37> col:37 __beg '_InputIterator'
| |     |   |-ParmVarDecl 0x176be80 <col:44, col:59> col:59 __end '_InputIterator'
| |     |   `-ParmVarDecl 0x176bef8 <line:630:8, col:35> col:22 __a 'const std::allocator<char32_t> &'
| |     |-CXXDestructorDecl 0x176c1f8 <line:661:7, line:662:23> line:661:7 used ~basic_string 'void () noexcept'
| |     | `-CompoundStmt 0x1b03a48 <line:662:7, col:23>
| |     |   `-CXXMemberCallExpr 0x1b03a28 <col:9, col:20> 'void'
| |     |     `-MemberExpr 0x1b039f8 <col:9> '<bound member function type>' ->_M_dispose 0x1764e78
| |     |       `-CXXThisExpr 0x1b039e8 <col:9> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x176c3e8 <line:668:7, line:701:7> line:669:7 operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x176c328 <col:17, col:37> col:37 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x176c5a8 <line:707:7, line:709:35> line:708:7 operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *)'
| |     | `-ParmVarDecl 0x176c4b0 <col:17, col:31> col:31 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x176c768 <line:718:7, line:723:7> line:719:7 operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(char32_t)'
| |     | `-ParmVarDecl 0x176c670 <col:17, col:24> col:24 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x176c938 <line:735:7, line:792:7> line:736:7 operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&)' noexcept-uninstantiated 0x1586420
| |     | `-ParmVarDecl 0x176c830 <col:17, col:32> col:32 __str 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |-CXXMethodDecl 0x176e458 <line:798:7, line:803:7> line:799:7 operator= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(initializer_list<char32_t>)'
| |     | `-ParmVarDecl 0x176e360 <col:17, col:42> col:42 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-CXXMethodDecl 0x176e590 <line:829:7, line:831:37> line:830:7 begin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator () noexcept'
| |     |-CXXMethodDecl 0x176e6c0 <line:837:7, line:839:43> line:838:7 begin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176e798 <line:845:7, line:847:52> line:846:7 end 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator () noexcept'
| |     |-CXXMethodDecl 0x176e870 <line:853:7, line:855:58> line:854:7 end 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176e9c0 <line:862:7, line:864:47> line:863:7 rbegin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reverse_iterator () noexcept'
| |     |-CXXMethodDecl 0x176eb10 <line:871:7, line:873:53> line:872:7 rbegin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reverse_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176ebe8 <line:880:7, line:882:49> line:881:7 rend 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reverse_iterator () noexcept'
| |     |-CXXMethodDecl 0x176ecc0 <line:889:7, line:891:55> line:890:7 rend 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reverse_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176ed98 <line:898:7, line:900:49> line:899:7 cbegin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176ee70 <line:906:7, line:908:64> line:907:7 cend 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176ef48 <line:915:7, line:917:53> line:916:7 crbegin 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reverse_iterator () const noexcept'
| |     |-CXXMethodDecl 0x176f020 <line:924:7, line:926:55> line:925:7 crend 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reverse_iterator () const noexcept'
| |     |-AccessSpecDecl 0x176f0d0 <line:929:5, col:11> col:5 public
| |     |-CXXMethodDecl 0x176f150 <line:933:7, line:935:34> line:934:7 size 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type () const noexcept'
| |     |-CXXMethodDecl 0x176f228 <line:939:7, line:941:34> line:940:7 used length 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type () const noexcept'
| |     | `-CompoundStmt 0x1acc278 <line:941:7, col:34>
| |     |   `-ReturnStmt 0x1acc268 <col:9, col:16>
| |     |     `-ImplicitCastExpr 0x1acc250 <col:16> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long' <LValueToRValue>
| |     |       `-MemberExpr 0x1acc220 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'const unsigned long' lvalue ->_M_string_length 0x17606d0
| |     |         `-CXXThisExpr 0x1acc210 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x176f300 <line:944:7, line:946:71> line:945:7 used max_size 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type () const noexcept'
| |     | `-CompoundStmt 0x1aff1c8 <line:946:7, col:71>
| |     |   `-ReturnStmt 0x1aff1b8 <col:9, col:68>
| |     |     `-BinaryOperator 0x1aff198 <col:16, col:68> 'unsigned long' '/'
| |     |       |-ParenExpr 0x1aff160 <col:16, col:64> 'unsigned long'
| |     |       | `-BinaryOperator 0x1aff140 <col:17, col:63> 'unsigned long' '-'
| |     |       |   |-CallExpr 0x1aff100 <col:17, col:59> 'std::allocator_traits<std::allocator<char32_t> >::size_type':'unsigned long'
| |     |       |   | |-ImplicitCastExpr 0x1aff0e8 <col:17, col:32> 'std::allocator_traits<std::allocator<char32_t> >::size_type (*)(const std::allocator_traits<std::allocator<char32_t> >::allocator_type &) noexcept' <FunctionToPointerDecay>
| |     |       |   | | `-DeclRefExpr 0x1afef78 <col:17, col:32> 'std::allocator_traits<std::allocator<char32_t> >::size_type (const std::allocator_traits<std::allocator<char32_t> >::allocator_type &) noexcept' lvalue CXXMethod 0x175a070 'max_size' 'std::allocator_traits<std::allocator<char32_t> >::size_type (const std::allocator_traits<std::allocator<char32_t> >::allocator_type &) noexcept' (UsingShadow 0x175af18 'max_size')
| |     |       |   | `-CXXMemberCallExpr 0x1aff070 <col:41, col:58> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type':'const std::allocator<char32_t>' lvalue
| |     |       |   |   `-MemberExpr 0x1aff040 <col:41> '<bound member function type>' ->_M_get_allocator 0x1766a88
| |     |       |   |     `-CXXThisExpr 0x1aff030 <col:41> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |       |   `-ImplicitCastExpr 0x1aff128 <col:63> 'unsigned long' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x15d7bb0 <col:63> 'int' 1
| |     |       `-ImplicitCastExpr 0x1aff180 <col:68> 'unsigned long' <IntegralCast>
| |     |         `-IntegerLiteral 0x15d7c78 <col:68> 'int' 2
| |     |-CXXMethodDecl 0x176f4d0 <line:958:7, line:959:39> col:7 resize 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x176f3c0 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x176f438 <col:29, col:36> col:36 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x176f630 <line:971:7, line:973:38> line:972:7 resize 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | `-ParmVarDecl 0x176f5a0 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x176f6e8 <line:977:7, line:989:7> line:978:7 shrink_to_fit 'void () noexcept'
| |     |-CXXMethodDecl 0x176f7c0 <line:996:7, line:1001:7> line:997:7 capacity 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type () const noexcept'
| |     |-CXXMethodDecl 0x176f910 <line:1020:7, line:1021:38> col:7 reserve 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | `-ParmVarDecl 0x176f880 <col:15, col:37> col:25 __res_arg 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x176f9c8 <line:1026:7, line:1028:27> line:1027:7 clear 'void () noexcept'
| |     |-CXXMethodDecl 0x176fa78 <line:1034:26, line:1036:35> line:1035:7 empty 'bool () const noexcept'
| |     |-CXXMethodDecl 0x176fc60 <line:1049:7, line:1054:7> line:1050:7 operator[] 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reference (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | `-ParmVarDecl 0x176fb60 <col:19, col:29> col:29 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x176fe48 <line:1066:7, line:1075:7> line:1067:7 operator[] 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reference (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | `-ParmVarDecl 0x176fd50 <col:18, col:28> col:28 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x176ffd8 <line:1087:7, line:1096:7> line:1088:7 at 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reference (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | `-ParmVarDecl 0x176ff10 <col:10, col:20> col:20 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1770130 <line:1108:7, line:1117:7> line:1109:7 at 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reference (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | `-ParmVarDecl 0x17700a0 <col:10, col:20> col:20 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1770270 <line:1124:7, line:1129:7> line:1125:7 front 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reference () noexcept'
| |     |-CXXMethodDecl 0x17703a0 <line:1135:7, line:1140:7> line:1136:7 front 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reference () const noexcept'
| |     |-CXXMethodDecl 0x1770478 <line:1146:7, line:1151:7> line:1147:7 back 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::reference () noexcept'
| |     |-CXXMethodDecl 0x1770550 <line:1157:7, line:1162:7> line:1158:7 back 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_reference () const noexcept'
| |     |-CXXMethodDecl 0x17706a0 <line:1171:7, line:1173:37> line:1172:7 operator+= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x1770610 <col:18, col:38> col:38 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x17707f8 <line:1180:7, line:1182:35> line:1181:7 operator+= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *)'
| |     | `-ParmVarDecl 0x1770768 <col:18, col:32> col:32 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1770950 <line:1189:7, line:1194:7> line:1190:7 operator+= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(char32_t)'
| |     | `-ParmVarDecl 0x17708c0 <col:18, col:25> col:25 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1770b58 <line:1202:7, line:1204:55> line:1203:7 operator+= 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(initializer_list<char32_t>)'
| |     | `-ParmVarDecl 0x1770a90 <col:18, col:43> col:43 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-CXXMethodDecl 0x1770cb0 <line:1224:7, line:1226:58> line:1225:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x1770c20 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1770f88 <line:1241:7, line:1245:34> line:1242:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1770d78 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x1770df0 <col:41, col:51> col:51 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1770e68 <col:58, col:74> col:68 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17711e8 <line:1253:7, line:1259:7> line:1254:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1771060 <col:14, col:28> col:28 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x17710d8 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1771348 <line:1266:7, line:1273:7> line:1267:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *)'
| |     | `-ParmVarDecl 0x17712b8 <col:14, col:28> col:28 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1771598 <line:1283:7, line:1285:70> line:1284:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x1771410 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1771488 <col:29, col:36> col:36 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x17717a8 <line:1293:7, line:1295:55> line:1294:7 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(initializer_list<char32_t>)'
| |     | `-ParmVarDecl 0x17716e0 <col:14, col:39> col:39 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-FunctionTemplateDecl 0x1772008 <line:1307:7, line:1314:64> line:1313:9 append
| |     | |-TemplateTypeParmDecl 0x1771860 <line:1307:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |     | |-TemplateTypeParmDecl 0x17718d8 <line:1308:9, <scratch space>:276:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1308:18 typename depth 0 index 1
| |     | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |     | `-CXXMethodDecl 0x1771f68 <line:1312:9, line:1314:64> line:1313:9 append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(_InputIterator, _InputIterator)'
| |     |   |-ParmVarDecl 0x1771dd8 <col:16, col:31> col:31 __first '_InputIterator'
| |     |   `-ParmVarDecl 0x1771e50 <col:40, col:55> col:55 __last '_InputIterator'
| |     |-CXXMethodDecl 0x17721f8 <line:1352:7, line:1360:7> line:1353:7 push_back 'void (char32_t)'
| |     | `-ParmVarDecl 0x1772100 <col:17, col:24> col:24 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1772350 <line:1367:7, line:1372:7> line:1368:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | `-ParmVarDecl 0x17722c0 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x17724e8 <line:1383:7, line:1390:7> line:1384:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&)' noexcept-uninstantiated 0x1596570
| |     | `-ParmVarDecl 0x1772418 <col:14, col:29> col:29 __str 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &&'
| |     |-CXXMethodDecl 0x1772780 <line:1406:7, line:1410:35> line:1407:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x17725f0 <col:14, col:34> col:34 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x1772668 <col:41, col:51> col:51 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x17726e0 <col:58, col:74> col:68 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1772968 <line:1422:7, line:1427:7> line:1423:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1772858 <col:14, col:28> col:28 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x17728d0 <col:33, col:43> col:43 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1772ac8 <line:1438:7, line:1444:7> line:1439:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *)'
| |     | `-ParmVarDecl 0x1772a38 <col:14, col:28> col:28 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1772ca0 <line:1455:7, line:1457:70> line:1456:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x1772b90 <col:14, col:24> col:24 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1772c08 <col:29, col:36> col:36 __c 'char32_t':'char32_t'
| |     |-FunctionTemplateDecl 0x17734c8 <line:1468:7, line:1475:66> line:1474:9 assign
| |     | |-TemplateTypeParmDecl 0x1772d60 <line:1468:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |     | |-TemplateTypeParmDecl 0x1772dd8 <line:1469:9, <scratch space>:277:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1469:18 typename depth 0 index 1
| |     | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |     | `-CXXMethodDecl 0x1773428 <line:1473:9, line:1475:66> line:1474:9 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(_InputIterator, _InputIterator)'
| |     |   |-ParmVarDecl 0x17732d8 <col:16, col:31> col:31 __first '_InputIterator'
| |     |   `-ParmVarDecl 0x1773350 <col:40, col:55> col:55 __last '_InputIterator'
| |     |-CXXMethodDecl 0x17736f8 <line:1483:7, line:1485:55> line:1484:7 assign 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(initializer_list<char32_t>)'
| |     | `-ParmVarDecl 0x1773630 <col:14, col:39> col:39 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-CXXMethodDecl 0x17739d8 <line:1537:7, line:1544:7> line:1538:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x17737c0 <col:14, col:29> col:29 __p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1773838 <col:34, col:44> col:44 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x17738b0 <col:49, col:56> col:56 __c 'char32_t':'char32_t'
| |     |-FunctionTemplateDecl 0x17742c8 <line:1579:7, line:1588:2> line:1582:9 insert
| |     | |-TemplateTypeParmDecl 0x1773aa0 <line:1579:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |     | |-TemplateTypeParmDecl 0x1773b18 <line:1580:9, <scratch space>:278:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:1580:18 typename depth 0 index 1
| |     | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |     | `-CXXMethodDecl 0x1774228 <line:1581:2, line:1588:2> line:1582:9 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, _InputIterator, _InputIterator)'
| |     |   |-ParmVarDecl 0x1774018 <col:16, col:31> col:31 __p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x1774090 <col:36, col:51> col:51 __beg '_InputIterator'
| |     |   `-ParmVarDecl 0x1774108 <col:58, col:73> col:73 __end '_InputIterator'
| |     |-CXXMethodDecl 0x17745c8 <line:1615:7, line:1617:59> line:1616:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, initializer_list<char32_t>)'
| |     | |-ParmVarDecl 0x17743c8 <col:14, col:29> col:29 __p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x17744b0 <col:34, col:59> col:59 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-CXXMethodDecl 0x1774828 <line:1642:7, line:1645:41> line:1643:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | |-ParmVarDecl 0x1774698 <col:14, col:24> col:24 __pos1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1774710 <col:32, col:52> col:52 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1774ba8 <line:1665:7, line:1670:39> line:1666:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x17748f8 <col:14, col:24> col:24 __pos1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1774970 <col:32, col:52> col:52 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x17749e8 <line:1667:7, col:17> col:17 __pos2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1774a60 <col:25, col:41> col:35 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1774e98 <line:1688:7, line:1690:62> line:1689:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1774c88 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1774d00 <col:31, col:45> col:45 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x1774d78 <col:50, col:60> col:60 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17750f8 <line:1707:7, line:1713:7> line:1708:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *)'
| |     | |-ParmVarDecl 0x1774f70 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1774fe8 <col:31, col:45> col:45 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x17753d8 <line:1731:7, line:1734:35> line:1732:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x17751c8 <col:14, col:24> col:24 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1775240 <col:31, col:41> col:41 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x17752b8 <col:46, col:53> col:53 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1775658 <line:1749:7, line:1756:7> line:1750:7 insert 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, char32_t)'
| |     | |-ParmVarDecl 0x17754d0 <col:14, col:31> col:31 __p 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x1775548 <col:36, col:43> col:43 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x17758b8 <line:1810:7, line:1819:7> line:1811:7 erase 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1775728 <col:13, col:31> col:23 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x17757a0 <col:34, col:50> col:44 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1775a78 <line:1829:7, line:1837:7> line:1830:7 erase 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator)'
| |     | `-ParmVarDecl 0x1775988 <col:13, col:30> col:30 __position 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x1775cc8 <line:1848:7, line:1859:7> line:1849:7 erase 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator)'
| |     | |-ParmVarDecl 0x1775b40 <col:13, col:30> col:30 __first 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x1775bb8 <col:39, col:56> col:56 __last 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x1775d88 <line:1867:7, line:1872:7> line:1868:7 pop_back 'void () noexcept'
| |     |-CXXMethodDecl 0x1776058 <line:1892:7, line:1894:74> line:1893:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | |-ParmVarDecl 0x1775e48 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1775ec0 <col:32, col:42> col:42 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1775f38 <col:47, col:67> col:67 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1776fc8 <line:1914:7, line:1919:40> line:1915:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1776130 <col:15, col:25> col:25 __pos1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17761a8 <col:33, col:43> col:43 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1776220 <col:49, col:69> col:69 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x1776298 <line:1916:8, col:18> col:18 __pos2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1776e70 <col:26, col:43> col:36 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1777358 <line:1939:7, line:1946:7> line:1940:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x17770b0 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1777128 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17771a0 <col:48, col:62> col:62 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x1777218 <line:1941:8, col:18> col:18 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1777648 <line:1964:7, line:1969:7> line:1965:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *)'
| |     | |-ParmVarDecl 0x1777438 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17774b0 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1777528 <col:48, col:62> col:62 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x17779c8 <line:1988:7, line:1991:45> line:1989:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x1777720 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1777798 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1777810 <col:48, col:58> col:58 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1777888 <col:64, col:71> col:71 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x1777cb8 <line:2006:7, line:2009:74> line:2007:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &)'
| |     | |-ParmVarDecl 0x1777aa8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1777b20 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x1777b98 <line:2008:8, col:28> col:28 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1778038 <line:2026:7, line:2033:7> line:2027:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x1777d90 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1777e08 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1777e80 <line:2028:8, col:22> col:22 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x1777ef8 <col:27, col:37> col:37 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1778328 <line:2048:7, line:2053:7> line:2049:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, const char32_t *)'
| |     | |-ParmVarDecl 0x1778118 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1778190 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x1778208 <col:61, col:75> col:75 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x17786a8 <line:2069:7, line:2076:7> line:2070:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x1778400 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1778478 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x17784f0 <col:61, col:71> col:71 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1778568 <line:2071:8, col:15> col:15 __c 'char32_t':'char32_t'
| |     |-FunctionTemplateDecl 0x1779048 <line:2094:7, line:2105:2> line:2097:9 replace
| |     | |-TemplateTypeParmDecl 0x1778778 <line:2094:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |     | |-TemplateTypeParmDecl 0x17787f8 <line:2095:9, <scratch space>:279:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2095:18 typename depth 0 index 1
| |     | | `-TemplateArgument type 'std::_RequireInputIter<_InputIterator>':'typename enable_if<is_convertible<typename iterator_traits<type-parameter-0-0>::iterator_category, input_iterator_tag>::value>::type'
| |     | `-CXXMethodDecl 0x1778fa8 <line:2096:9, line:2105:2> line:2097:9 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, _InputIterator, _InputIterator)'
| |     |   |-ParmVarDecl 0x1778cf8 <col:17, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x1778d70 <col:38, col:53> col:53 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x1778de8 <line:2098:3, col:18> col:18 __k1 '_InputIterator'
| |     |   `-ParmVarDecl 0x1778e60 <col:24, col:39> col:39 __k2 '_InputIterator'
| |     |-CXXMethodDecl 0x17793f8 <line:2126:7, line:2135:7> line:2127:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, char32_t *, char32_t *)'
| |     | |-ParmVarDecl 0x1779150 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x17791c8 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1779240 <line:2128:8, col:16> col:16 __k1 'char32_t *'
| |     | `-ParmVarDecl 0x17792b8 <col:22, col:30> col:30 __k2 'char32_t *'
| |     |-CXXMethodDecl 0x1779788 <line:2137:7, line:2146:7> line:2138:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, const char32_t *, const char32_t *)'
| |     | |-ParmVarDecl 0x17794d8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1779550 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x17795c8 <line:2139:8, col:22> col:22 __k1 'const char32_t *'
| |     | `-ParmVarDecl 0x1779640 <col:28, col:42> col:42 __k2 'const char32_t *'
| |     |-CXXMethodDecl 0x1779b18 <line:2148:7, line:2157:7> line:2149:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator)'
| |     | |-ParmVarDecl 0x1779868 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x17798e0 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1779958 <line:2150:8, col:17> col:17 __k1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x17799d0 <col:23, col:32> col:32 __k2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::iterator':'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x1779ea8 <line:2159:7, line:2168:7> line:2160:7 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator)'
| |     | |-ParmVarDecl 0x1779bf8 <col:15, col:32> col:32 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1779c70 <col:38, col:55> col:55 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::__const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x1779ce8 <line:2161:8, col:23> col:23 __k1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x1779d60 <col:29, col:44> col:44 __k2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |-CXXMethodDecl 0x177a218 <line:2185:7, line:2187:68> line:2185:21 replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, initializer_list<char32_t>)'
| |     | |-ParmVarDecl 0x1779f88 <col:29, col:44> col:44 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | |-ParmVarDecl 0x177a000 <col:50, col:65> col:65 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     | `-ParmVarDecl 0x177a0f0 <line:2186:8, col:33> col:33 __l 'initializer_list<char32_t>':'std::initializer_list<char32_t>'
| |     |-AccessSpecDecl 0x177a2e0 <line:2245:5, col:12> col:5 private
| |     |-FunctionTemplateDecl 0x177a778 <line:2246:7, line:2250:75> line:2248:2 _M_replace_dispatch
| |     | |-TemplateTypeParmDecl 0x177a308 <line:2246:16, col:22> col:22 class depth 0 index 0 _Integer
| |     | `-CXXMethodDecl 0x177a6d8 <line:2247:2, line:2250:75> line:2248:2 _M_replace_dispatch 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, _Integer, _Integer, std::__true_type)'
| |     |   |-ParmVarDecl 0x177a3b8 <col:22, col:37> col:37 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x177a430 <col:43, col:58> col:58 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x177a4a8 <line:2249:8, col:17> col:17 __n '_Integer'
| |     |   |-ParmVarDecl 0x177a520 <col:22, col:31> col:31 __val '_Integer'
| |     |   `-ParmVarDecl 0x177a588 <col:38> col:49 'std::__true_type'
| |     |-FunctionTemplateDecl 0x177ace8 <line:2252:7, line:2256:20> line:2254:2 _M_replace_dispatch
| |     | |-TemplateTypeParmDecl 0x177a878 <line:2252:16, col:22> col:22 class depth 0 index 0 _InputIterator
| |     | `-CXXMethodDecl 0x177ac48 <line:2253:2, line:2256:20> line:2254:2 _M_replace_dispatch 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator, _InputIterator, _InputIterator, std::__false_type)'
| |     |   |-ParmVarDecl 0x177a928 <col:22, col:37> col:37 __i1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x177a9a0 <col:43, col:58> col:58 __i2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::const_iterator':'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |     |   |-ParmVarDecl 0x177aa18 <line:2255:8, col:23> col:23 __k1 '_InputIterator'
| |     |   |-ParmVarDecl 0x177aa90 <col:29, col:44> col:44 __k2 '_InputIterator'
| |     |   `-ParmVarDecl 0x177aaf8 <line:2256:8> col:20 'std::__false_type'
| |     |-CXXMethodDecl 0x177b008 <line:2258:7, line:2260:18> line:2259:7 _M_replace_aux 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, char32_t)'
| |     | |-ParmVarDecl 0x177adf8 <col:22, col:32> col:32 __pos1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x177ae70 <col:40, col:50> col:50 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x177aee8 <col:56, col:66> col:66 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177af60 <line:2260:8, col:15> col:15 __c 'char32_t':'char32_t'
| |     |-CXXMethodDecl 0x177b348 <line:2262:7, line:2264:26> line:2263:7 _M_replace 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x177b0e8 <col:18, col:28> col:28 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x177b160 <col:35, col:45> col:45 __len1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x177b1d8 <col:53, col:67> col:67 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177b250 <line:2264:4, col:20> col:20 __len2 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'const unsigned long'
| |     |-CXXMethodDecl 0x177b538 <line:2266:7, line:2267:49> col:7 _M_append 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &(const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type)'
| |     | |-ParmVarDecl 0x177b428 <col:17, col:31> col:31 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177b4a0 <col:36, col:46> col:46 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-AccessSpecDecl 0x177b5f8 <line:2269:5, col:11> col:5 public
| |     |-CXXMethodDecl 0x177b848 <line:2283:7, line:2284:61> col:7 copy 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | |-ParmVarDecl 0x177b630 <col:12, col:20> col:20 __s 'char32_t *'
| |     | |-ParmVarDecl 0x177b6a8 <col:25, col:35> col:35 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177b720 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177ba20 <line:2293:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2294:7 swap 'void (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &) noexcept'
| |     | `-ParmVarDecl 0x177b920 <col:12, col:26> col:26 __s 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x177bb30 <line:2303:7, line:2305:27> line:2304:7 c_str 'const char32_t *() const noexcept'
| |     |-CXXMethodDecl 0x177bc08 <line:2315:7, line:2317:27> line:2316:7 used data 'const char32_t *() const noexcept'
| |     | `-CompoundStmt 0x1acc148 <line:2317:7, col:27>
| |     |   `-ReturnStmt 0x1acc138 <col:9, col:24>
| |     |     `-ImplicitCastExpr 0x1acc120 <col:16, col:24> 'const char32_t *' <NoOp>
| |     |       `-CXXMemberCallExpr 0x1acc100 <col:16, col:24> 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::pointer':'char32_t *'
| |     |         `-MemberExpr 0x1acc0d0 <col:16> '<bound member function type>' ->_M_data 0x17613e8
| |     |           `-CXXThisExpr 0x1acc0c0 <col:16> 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > *' implicit this
| |     |-CXXMethodDecl 0x177bd40 <line:2334:7, line:2336:36> line:2335:7 get_allocator 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::allocator_type () const noexcept'
| |     |-CXXMethodDecl 0x177c020 <line:2350:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2351:7 find 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177be00 <col:12, col:26> col:26 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177be78 <col:31, col:41> col:41 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177bef0 <col:48, col:58> col:58 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177c290 <line:2364:7, line:2367:63> line:2365:7 find 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177c0f8 <col:12, col:32> col:32 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177c170 <col:39, col:57> col:49 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177c4f0 <line:2396:7, line:2401:7> line:2397:7 find 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177c360 <col:12, col:26> col:26 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177c3d8 <col:31, col:49> col:41 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177c750 <line:2413:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2414:7 find 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177c5c0 <col:12, col:19> col:19 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x177c638 <col:24, col:42> col:34 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177c938 <line:2426:7, line:2429:64> line:2427:7 rfind 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177c820 <col:13, col:33> col:33 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177c898 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177cba0 <line:2460:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2461:7 rfind 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177ca08 <col:13, col:27> col:27 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177ca80 <col:32, col:42> col:42 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177caf8 <col:49, col:59> col:59 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177cdc8 <line:2474:7, line:2479:7> line:2475:7 rfind 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | |-ParmVarDecl 0x177cc78 <col:13, col:27> col:27 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177ccf0 <col:32, col:50> col:42 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177cfb0 <line:2491:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2492:7 rfind 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177ce98 <col:13, col:20> col:20 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x177cf10 <col:25, col:43> col:35 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177d198 <line:2505:7, line:2508:72> line:2506:7 find_first_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177d080 <col:21, col:41> col:41 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177d0f8 <col:48, col:66> col:58 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177d400 <line:2540:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2541:7 find_first_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177d268 <col:21, col:35> col:35 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177d2e0 <col:40, col:50> col:50 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177d358 <col:57, col:67> col:67 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177d5f0 <line:2554:7, line:2560:7> line:2555:7 find_first_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177d4d8 <col:21, col:35> col:35 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177d550 <col:40, col:58> col:50 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177d7d8 <line:2574:7, line:2576:40> line:2575:7 find_first_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177d6c0 <col:21, col:28> col:28 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x177d738 <col:33, col:51> col:43 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177d9c0 <line:2589:7, line:2592:71> line:2590:7 find_last_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177d8a8 <col:20, col:40> col:40 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177d920 <col:47, col:65> col:57 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177dc28 <line:2624:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2625:7 find_last_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177da90 <col:20, col:34> col:34 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177db08 <col:39, col:49> col:49 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177db80 <col:56, col:66> col:66 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177de18 <line:2638:7, line:2644:7> line:2639:7 find_last_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177dd00 <col:20, col:34> col:34 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177dd78 <col:39, col:57> col:49 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177e000 <line:2658:7, line:2660:41> line:2659:7 find_last_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177dee8 <col:20, col:27> col:27 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x177df60 <col:32, col:50> col:42 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177e1e8 <line:2672:7, line:2675:76> line:2673:7 find_first_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177e0d0 <col:25, col:45> col:45 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177e148 <col:52, col:70> col:62 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177e450 <line:2707:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2708:7 find_first_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177e2b8 <col:25, col:39> col:39 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177e330 <col:44, col:54> col:54 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177e3a8 <line:2709:4, col:14> col:14 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177e640 <line:2721:7, line:2727:7> line:2722:7 find_first_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177e528 <col:25, col:39> col:39 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177e5a0 <col:44, col:62> col:54 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177e828 <line:2739:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2740:7 find_first_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177e710 <col:25, col:32> col:32 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x177e788 <col:37, col:55> col:47 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177ea10 <line:2754:7, line:2757:75> line:2755:7 find_last_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177e8f8 <col:24, col:44> col:44 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | `-ParmVarDecl 0x177e970 <col:51, col:69> col:61 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x177ec78 <line:2789:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2790:7 find_last_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177eae0 <col:24, col:38> col:38 __s 'const char32_t *'
| |     | |-ParmVarDecl 0x177eb58 <col:43, col:53> col:53 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x177ebd0 <line:2791:10, col:20> col:20 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17807c0 <line:2803:7, line:2809:7> line:2804:7 find_last_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x177ed50 <col:24, col:38> col:38 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x177edc8 <col:43, col:61> col:53 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x17809a8 <line:2821:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2822:7 find_last_not_of 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type (char32_t, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const noexcept'
| |     | |-ParmVarDecl 0x1780890 <col:24, col:31> col:31 __c 'char32_t':'char32_t'
| |     | `-ParmVarDecl 0x1780908 <col:36, col:54> col:46 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1780c08 <line:2837:7, line:2840:55> line:2838:7 substr 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | |-ParmVarDecl 0x1780a78 <col:14, col:32> col:24 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1780af0 <col:35, col:51> col:45 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1780da0 <line:2856:7, line:2867:7> line:2857:7 compare 'int (const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &) const'
| |     | `-ParmVarDecl 0x1780cd8 <col:15, col:35> col:35 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1781080 <line:2949:7, line:2950:74> col:7 compare 'int (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &) const'
| |     | |-ParmVarDecl 0x1780e68 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1780ee0 <col:32, col:42> col:42 __n 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1780f58 <col:47, col:67> col:67 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     |-CXXMethodDecl 0x1781490 <line:2975:7, line:2977:49> line:2976:7 compare 'int (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | |-ParmVarDecl 0x1781158 <col:15, col:25> col:25 __pos1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17811d0 <col:33, col:43> col:43 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1781248 <col:49, col:69> col:69 __str 'const std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > &'
| |     | |-ParmVarDecl 0x17812c0 <line:2977:8, col:18> col:18 __pos2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1781338 <col:26, col:43> col:36 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     |-CXXMethodDecl 0x1781678 <line:2993:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:163:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:2994:7 compare 'int (const char32_t *) const noexcept'
| |     | `-ParmVarDecl 0x1781578 <col:15, col:29> col:29 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1781960 <line:3017:7, line:3018:67> col:7 compare 'int (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *) const'
| |     | |-ParmVarDecl 0x1781740 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x17817b8 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | `-ParmVarDecl 0x1781830 <col:48, col:62> col:62 __s 'const char32_t *'
| |     |-CXXMethodDecl 0x1781cf0 <line:3044:7, line:3046:24> line:3045:7 compare 'int (std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type, const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type) const'
| |     | |-ParmVarDecl 0x1781a38 <col:15, col:25> col:25 __pos 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1781ab0 <col:32, col:42> col:42 __n1 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     | |-ParmVarDecl 0x1781b28 <col:48, col:62> col:62 __s 'const char32_t *'
| |     | `-ParmVarDecl 0x1781ba0 <line:3046:8, col:18> col:18 __n2 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >::size_type':'unsigned long'
| |     `-FriendDecl 0x1782070 <line:3075:7, col:59> col:59
| |       `-ClassTemplateDecl 0x1781ff8 parent 0x10fad58 prev 0x17504f8 <col:7, col:59> col:59 basic_stringbuf
| |         |-TemplateTypeParmDecl 0x1781dc0 <col:16> col:24 typename depth 0 index 0
| |         |-TemplateTypeParmDecl 0x1781e38 <col:26> col:34 typename depth 0 index 1
| |         | `-TemplateArgument type 'char_traits<_CharT>'
| |         |   `-inherited from TemplateTypeParm 0x10faf00 '_Traits'
| |         |-TemplateTypeParmDecl 0x1781eb8 <col:36> col:44 typename depth 0 index 2
| |         | `-TemplateArgument type 'allocator<_CharT>'
| |         |   `-inherited from TemplateTypeParm 0x10fb030 '_Alloc'
| |         |-CXXRecordDecl 0x1781f68 parent 0x10fad58 prev 0x1750468 <col:53, col:59> col:59 class basic_stringbuf
| |         |-ClassTemplateSpecialization 0x1104240 'basic_stringbuf'
| |         `-ClassTemplateSpecialization 0x1109a30 'basic_stringbuf'
| |-TypedefDecl 0x107f030 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stringfwd.h:79:3, col:33> col:33 referenced string 'basic_string<char>':'std::__cxx11::basic_string<char>'
| | `-TemplateSpecializationType 0x107ef90 'basic_string<char>' sugar basic_string
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x107ef70 'std::__cxx11::basic_string<char>'
| |     `-ClassTemplateSpecialization 0x107ee60 'basic_string'
| |-TypedefDecl 0x107f4a0 <line:83:3, col:33> col:33 referenced wstring 'basic_string<wchar_t>':'std::__cxx11::basic_string<wchar_t>'
| | `-TemplateSpecializationType 0x107f400 'basic_string<wchar_t>' sugar basic_string
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x107f3e0 'std::__cxx11::basic_string<wchar_t>'
| |     `-ClassTemplateSpecialization 0x107f2d0 'basic_string'
| |-TypedefDecl 0x10af4b0 <line:93:3, col:34> col:34 referenced u16string 'basic_string<char16_t>':'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| | `-TemplateSpecializationType 0x10af410 'basic_string<char16_t>' sugar basic_string
| |   |-TemplateArgument type 'char16_t'
| |   `-RecordType 0x10af3f0 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| |     `-ClassTemplateSpecialization 0x10af2e0 'basic_string'
| `-TypedefDecl 0x10af920 <line:96:3, col:34> col:34 referenced u32string 'basic_string<char32_t>':'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
|   `-TemplateSpecializationType 0x10af880 'basic_string<char32_t>' sugar basic_string
|     |-TemplateArgument type 'char32_t'
|     `-RecordType 0x10af860 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
|       `-ClassTemplateSpecialization 0x10af750 'basic_string'
|-TypedefDecl 0x10af990 </usr/include/x86_64-linux-gnu/bits/floatn-common.h:214:1, col:15> col:15 referenced _Float32 'float'
| `-BuiltinType 0xffd310 'float'
|-TypedefDecl 0x10afa00 <line:251:1, col:16> col:16 referenced _Float64 'double'
| `-BuiltinType 0xffd330 'double'
|-TypedefDecl 0x10afa70 <line:268:1, col:16> col:16 referenced _Float32x 'double'
| `-BuiltinType 0xffd330 'double'
|-TypedefDecl 0x10afae0 <line:285:1, col:21> col:21 referenced _Float64x 'long double'
| `-BuiltinType 0xffd350 'long double'
|-TypedefDecl 0x10afb50 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x10afbe0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'__va_list_tag [1]'
| `-TypedefType 0x10afbb0 '__builtin_va_list' sugar
|   |-Typedef 0x103aeb8 '__builtin_va_list'
|   `-ConstantArrayType 0x103ae60 '__va_list_tag [1]' 1 
|     `-RecordType 0xffdf60 '__va_list_tag'
|       `-CXXRecord 0xffdec8 '__va_list_tag'
|-TypedefDecl 0x10afc48 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'__va_list_tag [1]'
| `-TypedefType 0x10afbb0 '__builtin_va_list' sugar
|   |-Typedef 0x103aeb8 '__builtin_va_list'
|   `-ConstantArrayType 0x103ae60 '__va_list_tag [1]' 1 
|     `-RecordType 0xffdf60 '__va_list_tag'
|       `-CXXRecord 0xffdec8 '__va_list_tag'
|-TypedefDecl 0x10afcb8 </usr/include/x86_64-linux-gnu/bits/types/wint_t.h:20:1, col:23> col:23 referenced wint_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-CXXRecordDecl 0x10afd10 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x10afe40 <line:15:3, col:7> col:7 __count 'int'
| |-CXXRecordDecl 0x10afe90 <line:16:3, line:20:3> line:16:3 union definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x10affc0 <<built-in>:125:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x10b00a8 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x10b0168 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'__mbstate_t::(anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x10b0248 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
|   `-RecordType 0x10afda0 '__mbstate_t'
|     `-CXXRecord 0x10afd10 ''
|-TypedefDecl 0x10c5e60 </usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h:6:1, col:21> col:21 referenced mbstate_t '__mbstate_t':'__mbstate_t'
| `-TypedefType 0x10b02c0 '__mbstate_t' sugar
|   |-Typedef 0x10b0248 '__mbstate_t'
|   `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
|     `-RecordType 0x10afda0 '__mbstate_t'
|       `-CXXRecord 0x10afd10 ''
|-CXXRecordDecl 0x10c5eb8 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x10c5fc0 <line:5:1, col:25> col:25 referenced __FILE 'struct _IO_FILE':'_IO_FILE'
| `-ElaboratedType 0x10c5f70 'struct _IO_FILE' sugar
|   `-RecordType 0x10c5f50 '_IO_FILE'
|     `-CXXRecord 0x163d3b8 '_IO_FILE'
|-CXXRecordDecl 0x10c6018 prev 0x10c5eb8 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x10c60c8 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'_IO_FILE'
| `-ElaboratedType 0x10c5f70 'struct _IO_FILE' sugar
|   `-RecordType 0x10c5f50 '_IO_FILE'
|     `-CXXRecord 0x163d3b8 '_IO_FILE'
|-CXXRecordDecl 0x10c6120 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x10c6238 <col:1, col:8> col:8 implicit struct __locale_struct
| |-CXXRecordDecl 0x10c62c8 parent 0xffd118 <line:31:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x10c6520 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x10c65d0 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x10c6638 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x10c66a0 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x10c6790 <line:39:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x10c68b0 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x10c6860 'struct __locale_struct *'
|   `-ElaboratedType 0x10c6800 'struct __locale_struct' sugar
|     `-RecordType 0x10c61b0 '__locale_struct'
|       `-CXXRecord 0x10c6120 '__locale_struct'
|-TypedefDecl 0x10c6940 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x10c6910 '__locale_t' sugar
|   |-Typedef 0x10c68b0 '__locale_t'
|   `-PointerType 0x10c6860 'struct __locale_struct *'
|     `-ElaboratedType 0x10c6800 'struct __locale_struct' sugar
|       `-RecordType 0x10c61b0 '__locale_struct'
|         `-CXXRecord 0x10c6120 '__locale_struct'
|-LinkageSpecDecl 0x10c6a38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-CXXRecordDecl 0x10c6a88 </usr/include/wchar.h:83:1, col:8> col:8 struct tm
| |-FunctionDecl 0x10c6d98 <line:87:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:87:17 wcscpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10c6b80 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10c6c30 <line:88:4, col:30> col:30 __src 'const wchar_t *__restrict'
| | `-NonNullAttr 0x10cd790 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/wchar.h:89:30> 1 2
| |-FunctionDecl 0x10cdae8 <line:92:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:92:17 wcsncpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10cd858 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10cd8d8 <line:93:5, col:31> col:31 __src 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10cd970 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| | `-NonNullAttr 0x10cdba0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/wchar.h:94:30> 1 2
| |-FunctionDecl 0x10cdd88 <line:97:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:97:17 wcscat 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10cdc20 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10cdca0 <line:98:4, col:30> col:30 __src 'const wchar_t *__restrict'
| | `-NonNullAttr 0x10cde38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/wchar.h:99:30> 1 2
| |-FunctionDecl 0x10ce0a8 <line:101:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:101:17 wcsncat 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10cdec0 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10cdf40 <line:102:5, col:31> col:31 __src 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10cdfb8 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| | `-NonNullAttr 0x10ce160 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/wchar.h:103:30> 1 2
| |-FunctionDecl 0x10ce3c8 <line:106:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:106:12 wcscmp 'int (const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10ce1e0 <col:20, col:35> col:35 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10ce260 <col:41, col:56> col:56 __s2 'const wchar_t *'
| | |-PureAttr 0x10ce478 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x10ce4d0 <line:293:44, /usr/include/wchar.h:107:49> 1 2
| |-FunctionDecl 0x10cfc30 <line:109:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/wchar.h:109:12 wcsncmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10ce520 <col:21, col:36> col:36 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10ce5a0 <col:42, col:57> col:57 __s2 'const wchar_t *'
| | |-ParmVarDecl 0x10ce618 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
| | |-PureAttr 0x10cfce8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x10cfd40 <line:293:44, /usr/include/wchar.h:110:49> 1 2
| |-FunctionDecl 0x10cfeb8 <line:114:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:114:12 wcscasecmp 'int (const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10cfd90 <col:24, col:39> col:39 __s1 'const wchar_t *'
| | `-ParmVarDecl 0x10cfe10 <col:45, col:60> col:60 __s2 'const wchar_t *'
| |-FunctionDecl 0x10d0128 <line:117:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:117:12 wcsncasecmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10cff80 <col:25, col:40> col:40 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10d0000 <col:46, col:61> col:61 __s2 'const wchar_t *'
| | `-ParmVarDecl 0x10d0078 <line:118:4, col:11> col:11 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d0448 <line:122:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:122:12 wcscasecmp_l 'int (const wchar_t *, const wchar_t *, locale_t) throw()' extern
| | |-ParmVarDecl 0x10d01f8 <col:26, col:41> col:41 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10d0278 <col:47, col:62> col:62 __s2 'const wchar_t *'
| | `-ParmVarDecl 0x10d0310 <line:123:5, col:14> col:14 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10d07d8 <line:125:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:125:12 wcsncasecmp_l 'int (const wchar_t *, const wchar_t *, size_t, locale_t) throw()' extern
| | |-ParmVarDecl 0x10d0518 <col:27, col:42> col:42 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10d0598 <col:48, col:63> col:63 __s2 'const wchar_t *'
| | |-ParmVarDecl 0x10d0610 <line:126:6, col:13> col:13 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d0688 <col:18, col:27> col:27 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10d09d8 <line:131:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:131:12 wcscoll 'int (const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d08b0 <col:21, col:36> col:36 __s1 'const wchar_t *'
| | `-ParmVarDecl 0x10d0930 <col:42, col:57> col:57 __s2 'const wchar_t *'
| |-FunctionDecl 0x10d11c0 <line:135:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:135:15 wcsxfrm 'size_t (wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10d0aa0 <col:24, col:44> col:44 __s1 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d0b20 <line:136:10, col:36> col:36 __s2 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d0b98 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d1438 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:144:12 wcscoll_l 'int (const wchar_t *, const wchar_t *, locale_t) throw()' extern
| | |-ParmVarDecl 0x10d1290 <col:23, col:38> col:38 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10d1310 <col:44, col:59> col:59 __s2 'const wchar_t *'
| | `-ParmVarDecl 0x10d1388 <line:145:9, col:18> col:18 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10d17c0 <line:150:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:150:15 wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, locale_t) throw()' extern
| | |-ParmVarDecl 0x10d1508 <col:26, col:35> col:35 __s1 'wchar_t *'
| | |-ParmVarDecl 0x10d1588 <col:41, col:56> col:56 __s2 'const wchar_t *'
| | |-ParmVarDecl 0x10d1600 <line:151:5, col:12> col:12 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d1678 <col:17, col:26> col:26 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10d1998 <line:154:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/wchar.h:154:17 wcsdup 'wchar_t *(const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d1898 <col:25, col:40> col:40 __s 'const wchar_t *'
| | `-RestrictAttr 0x10d1a40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0x10d1c48 </usr/include/wchar.h:164:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:164:17 used wcschr 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| | |-ParmVarDecl 0x10d1ab0 <col:25, col:40> col:40 __wcs 'const wchar_t *'
| | |-ParmVarDecl 0x10d1b28 <col:47, col:55> col:55 __wc 'wchar_t'
| | `-PureAttr 0x10d1cf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d1e88 </usr/include/wchar.h:174:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:174:17 used wcsrchr 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| | |-ParmVarDecl 0x10d1d68 <col:26, col:41> col:41 __wcs 'const wchar_t *'
| | |-ParmVarDecl 0x10d1de0 <col:48, col:56> col:56 __wc 'wchar_t'
| | `-PureAttr 0x10d1f38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d2110 </usr/include/wchar.h:181:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:181:17 wcschrnul 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| | |-ParmVarDecl 0x10d1fa8 <col:28, col:43> col:43 __s 'const wchar_t *'
| | |-ParmVarDecl 0x10d2020 <col:48, col:56> col:56 __wc 'wchar_t'
| | `-PureAttr 0x10d21c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d23d0 </usr/include/wchar.h:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:187:15 wcscspn 'size_t (const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d2230 <col:24, col:39> col:39 __wcs 'const wchar_t *'
| | |-ParmVarDecl 0x10d22b0 <col:46, col:61> col:61 __reject 'const wchar_t *'
| | `-PureAttr 0x10d2480 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d2610 </usr/include/wchar.h:191:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:191:15 wcsspn 'size_t (const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d24f0 <col:23, col:38> col:38 __wcs 'const wchar_t *'
| | |-ParmVarDecl 0x10d2570 <col:45, col:60> col:60 __accept 'const wchar_t *'
| | `-PureAttr 0x10d26c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d28d8 </usr/include/wchar.h:201:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:201:17 used wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d2730 <col:26, col:41> col:41 __wcs 'const wchar_t *'
| | |-ParmVarDecl 0x10d27b0 <col:48, col:63> col:63 __accept 'const wchar_t *'
| | `-PureAttr 0x10d2988 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d2b20 </usr/include/wchar.h:212:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:212:17 used wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d29f8 <col:25, col:40> col:40 __haystack 'const wchar_t *'
| | |-ParmVarDecl 0x10d2a78 <col:52, col:67> col:67 __needle 'const wchar_t *'
| | `-PureAttr 0x10d2bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d2ea8 </usr/include/wchar.h:217:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:217:17 wcstok 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d2c40 <col:25, col:45> col:45 __s 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d2cc0 <line:218:4, col:30> col:30 __delim 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d2d70 <line:219:4, col:25> col:25 __ptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d3070 <line:222:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:222:15 used wcslen 'size_t (const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d2f78 <col:23, col:38> col:38 __s 'const wchar_t *'
| | `-PureAttr 0x10d49e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d4b80 </usr/include/wchar.h:233:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:233:17 wcswcs 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| | |-ParmVarDecl 0x10d4a58 <col:25, col:40> col:40 __haystack 'const wchar_t *'
| | |-ParmVarDecl 0x10d4ad8 <col:52, col:67> col:67 __needle 'const wchar_t *'
| | `-PureAttr 0x10d4c30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d4e30 </usr/include/wchar.h:240:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:240:15 wcsnlen 'size_t (const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10d4ca0 <col:24, col:39> col:39 __s 'const wchar_t *'
| | |-ParmVarDecl 0x10d4d18 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| | `-PureAttr 0x10d4ee0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d5178 </usr/include/wchar.h:253:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:253:17 used wmemchr 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' extern
| | |-ParmVarDecl 0x10d4f50 <col:26, col:41> col:41 __s 'const wchar_t *'
| | |-ParmVarDecl 0x10d4fc8 <col:46, col:54> col:54 __c 'wchar_t'
| | |-ParmVarDecl 0x10d5040 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| | `-PureAttr 0x10d5230 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d5448 </usr/include/wchar.h:258:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:258:12 used wmemcmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10d52a0 <col:21, col:36> col:36 __s1 'const wchar_t *'
| | |-ParmVarDecl 0x10d5320 <col:42, col:57> col:57 __s2 'const wchar_t *'
| | |-ParmVarDecl 0x10d5398 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
| | `-PureAttr 0x10d5500 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d5718 </usr/include/wchar.h:262:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:262:17 used wmemcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10d5570 <col:26, col:46> col:46 __s1 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d55f0 <line:263:5, col:31> col:31 __s2 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d5668 <col:37, col:44> col:44 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d59f0 <line:267:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:267:17 used wmemmove 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10d57e8 <col:27, col:36> col:36 __s1 'wchar_t *'
| | |-ParmVarDecl 0x10d5868 <col:42, col:57> col:57 __s2 'const wchar_t *'
| | `-ParmVarDecl 0x10d58e0 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d5ce8 <line:271:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:271:17 used wmemset 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' extern
| | |-ParmVarDecl 0x10d5ac0 <col:26, col:35> col:35 __s 'wchar_t *'
| | |-ParmVarDecl 0x10d5b38 <col:40, col:48> col:48 __c 'wchar_t'
| | `-ParmVarDecl 0x10d5bb0 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d5f60 <line:276:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:276:17 wmempcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10d5db8 <col:27, col:47> col:47 __s1 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d5e38 <line:277:6, col:32> col:32 __s2 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d5eb0 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d6150 <line:284:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:284:15 btowc 'wint_t (int) throw()' extern
| | `-ParmVarDecl 0x10d6058 <col:22, col:26> col:26 __c 'int'
| |-FunctionDecl 0x10d6308 <line:288:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:288:12 wctob 'int (wint_t) throw()' extern
| | `-ParmVarDecl 0x10d6208 <col:19, col:26> col:26 __c 'wint_t':'unsigned int'
| |-FunctionDecl 0x10d6538 <line:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/wchar.h:292:12 mbsinit 'int (const mbstate_t *) throw()' extern
| | |-ParmVarDecl 0x10d6438 <col:21, col:38> col:38 __ps 'const mbstate_t *'
| | `-PureAttr 0x10d65e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x10d6a00 </usr/include/wchar.h:296:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:296:15 mbrtowc 'size_t (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d6650 <col:24, col:44> col:44 __pwc 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d66d0 <line:297:10, col:33> col:33 __s 'const char *__restrict'
| | |-ParmVarDecl 0x10d6748 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d6818 <line:298:10, col:32> col:32 __p 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d6cf0 <line:301:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:301:15 wcrtomb 'size_t (char *__restrict, wchar_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d6ad8 <col:24, col:41> col:41 __s 'char *__restrict'
| | |-ParmVarDecl 0x10d6b50 <col:46, col:54> col:54 __wc 'wchar_t'
| | `-ParmVarDecl 0x10d6bc8 <line:302:10, col:32> col:32 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d6fe0 <line:305:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:305:15 __mbrlen 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d6dc0 <col:25, col:48> col:48 __s 'const char *__restrict'
| | |-ParmVarDecl 0x10d6e38 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d6eb0 <line:306:4, col:26> col:26 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d7248 <line:307:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:307:15 mbrlen 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d70b0 <col:23, col:46> col:46 __s 'const char *__restrict'
| | |-ParmVarDecl 0x10d7128 <col:51, col:58> col:58 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d71a0 <line:308:9, col:31> col:31 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d7600 <line:337:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:337:15 mbsrtowcs 'size_t (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d7318 <col:26, col:46> col:46 __dst 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d73c0 <line:338:5, col:29> col:29 __src 'const char **__restrict'
| | |-ParmVarDecl 0x10d7438 <col:36, col:43> col:43 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d74b0 <line:339:5, col:27> col:27 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d7a10 <line:343:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:343:15 wcsrtombs 'size_t (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d76d8 <col:26, col:43> col:43 __dst 'char *__restrict'
| | |-ParmVarDecl 0x10d7780 <line:344:5, col:32> col:32 __src 'const wchar_t **__restrict'
| | |-ParmVarDecl 0x10d77f8 <col:39, col:46> col:46 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d7870 <line:345:5, col:27> col:27 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d7e30 <line:351:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:351:15 mbsnrtowcs 'size_t (wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d7ae8 <col:27, col:47> col:47 __dst 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10d7b68 <line:352:6, col:30> col:30 __src 'const char **__restrict'
| | |-ParmVarDecl 0x10d7be0 <col:37, col:44> col:44 __nmc 'size_t':'unsigned long'
| | |-ParmVarDecl 0x10d7c58 <line:353:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d7cd0 <col:20, col:42> col:42 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d8250 <line:357:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:357:15 wcsnrtombs 'size_t (char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10d7f10 <col:27, col:44> col:44 __dst 'char *__restrict'
| | |-ParmVarDecl 0x10d7f90 <line:358:6, col:33> col:33 __src 'const wchar_t **__restrict'
| | |-ParmVarDecl 0x10d8008 <line:359:6, col:13> col:13 __nwc 'size_t':'unsigned long'
| | |-ParmVarDecl 0x10d8080 <col:20, col:27> col:27 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10d80f8 <line:360:6, col:28> col:28 __ps 'mbstate_t *__restrict'
| |-FunctionDecl 0x10d8428 <line:367:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:367:12 wcwidth 'int (wchar_t) throw()' extern
| | `-ParmVarDecl 0x10d8328 <col:21, col:29> col:29 __c 'wchar_t'
| |-FunctionDecl 0x10d8688 <line:371:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:371:12 wcswidth 'int (const wchar_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x10d84e8 <col:22, col:37> col:37 __s 'const wchar_t *'
| | `-ParmVarDecl 0x10d8560 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10d88f8 <line:377:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:377:15 used wcstod 'double (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d8750 <col:23, col:49> col:49 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d87d0 <line:378:9, col:30> col:30 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d8bc8 <line:382:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:382:14 used wcstof 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d8a20 <col:22, col:48> col:48 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d8aa0 <line:383:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d8e38 <line:384:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:384:20 used wcstold 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d8c90 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d8d10 <line:385:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d9080 <line:396:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:396:17 wcstof32 '_Float32 (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d8f28 <col:27, col:53> col:53 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d8fa8 <line:397:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d92c0 <line:401:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:401:17 wcstof64 '_Float64 (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d9168 <col:27, col:53> col:53 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d91e8 <line:402:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d9500 <line:411:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:411:18 wcstof32x '_Float32x (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d93a8 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d9428 <line:412:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10d9740 <line:416:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:416:18 wcstof64x '_Float64x (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| | |-ParmVarDecl 0x10d95e8 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10d9668 <line:417:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| |-FunctionDecl 0x10aa348 <line:428:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:428:17 used wcstol 'long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10d9808 <col:25, col:51> col:51 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10d9888 <line:429:4, col:25> col:25 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10d9908 <col:35, col:39> col:39 __base 'int'
| |-FunctionDecl 0x10aa648 <line:433:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:433:26 used wcstoul 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10aa418 <col:35, col:61> col:61 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10aa498 <line:434:7, col:28> col:28 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10aa518 <col:38, col:42> col:42 __base 'int'
| |-FunctionDecl 0x10aa948 <line:441:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:441:22 used wcstoll 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10aa718 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10aa798 <line:442:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10aa818 <col:41, col:45> col:45 __base 'int'
| |-FunctionDecl 0x10aac48 <line:448:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:448:31 used wcstoull 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10aaa18 <col:41, col:67> col:67 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10aaa98 <line:449:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10aab18 <line:450:6, col:10> col:10 __base 'int'
| |-FunctionDecl 0x10aaec8 <line:457:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:457:22 wcstoq 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10aad18 <col:30, col:56> col:56 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10aad98 <line:458:9, col:30> col:30 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10aae18 <col:40, col:44> col:44 __base 'int'
| |-FunctionDecl 0x10ab148 <line:464:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:464:31 wcstouq 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x10aaf98 <col:40, col:66> col:66 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ab018 <line:465:12, col:33> col:33 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10ab098 <line:466:12, col:16> col:16 __base 'int'
| |-FunctionDecl 0x10ab4f8 <line:473:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:473:17 wcstol_l 'long (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ab218 <col:27, col:53> col:53 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ab298 <line:474:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| | |-ParmVarDecl 0x10ab328 <col:37, col:41> col:41 __base 'int'
| | `-ParmVarDecl 0x10ab3a0 <line:475:6, col:15> col:15 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ab898 <line:477:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:477:26 wcstoul_l 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ab5d0 <col:37, col:63> col:63 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ab650 <line:478:9, col:30> col:30 __endptr 'wchar_t **__restrict'
| | |-ParmVarDecl 0x10ab6d0 <line:479:9, col:13> col:13 __base 'int'
| | `-ParmVarDecl 0x10ab748 <col:21, col:30> col:30 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10abc38 <line:482:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:482:22 wcstoll_l 'long long (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ab970 <col:33, col:59> col:59 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ab9f0 <line:483:5, col:26> col:26 __endptr 'wchar_t **__restrict'
| | |-ParmVarDecl 0x10aba70 <line:484:5, col:9> col:9 __base 'int'
| | `-ParmVarDecl 0x10abae8 <col:17, col:26> col:26 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10abfd8 <line:487:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:487:31 wcstoull_l 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x10abd10 <col:43, col:69> col:69 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10abd90 <line:488:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| | |-ParmVarDecl 0x10abe10 <line:489:8, col:12> col:12 __base 'int'
| | `-ParmVarDecl 0x10abe88 <col:20, col:29> col:29 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ad320 <line:492:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:492:15 wcstod_l 'double (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ac0b0 <col:25, col:51> col:51 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ac130 <line:493:4, col:25> col:25 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10ac1a8 <col:35, col:44> col:44 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ad618 <line:496:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:496:14 wcstof_l 'float (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ad3f0 <col:24, col:50> col:50 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ad470 <line:497:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10ad4e8 <col:41, col:50> col:50 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ad918 <line:500:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:500:20 wcstold_l 'long double (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ad6e8 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ad768 <line:501:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10ad7e0 <line:502:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10adbd0 <line:511:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:511:17 wcstof32_l '_Float32 (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ad9e8 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ada68 <line:512:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10adae0 <line:513:8, col:17> col:17 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ade80 <line:517:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:517:17 wcstof64_l '_Float64 (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10adca0 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10add20 <line:518:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10add98 <line:519:8, col:17> col:17 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10ae130 <line:529:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:529:18 wcstof32x_l '_Float32x (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10adf50 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10adfd0 <line:530:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10ae048 <line:531:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10e4310 <line:535:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:535:18 wcstof64x_l '_Float64x (const wchar_t *__restrict, wchar_t **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x10ae200 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10ae280 <line:536:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| | `-ParmVarDecl 0x10e4220 <line:537:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x10e4508 <line:551:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:551:17 wcpcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x10e43e0 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| | `-ParmVarDecl 0x10e4460 <line:552:4, col:30> col:30 __src 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e4778 <line:556:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:556:17 wcpncpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x10e45d0 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10e4650 <line:557:5, col:31> col:31 __src 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e46c8 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x10e4ab0 <line:567:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:567:16 open_wmemstream '__FILE *(wchar_t **, size_t *) throw()' extern
| | |-ParmVarDecl 0x10e4868 <col:33, col:43> col:43 __bufloc 'wchar_t **'
| | `-ParmVarDecl 0x10e4938 <col:53, col:61> col:61 __sizeloc 'size_t *'
| |-FunctionDecl 0x10e4d18 <line:573:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:573:12 fwide 'int (__FILE *, int) throw()' extern
| | |-ParmVarDecl 0x10e4b70 <col:19, col:27> col:27 __fp '__FILE *'
| | `-ParmVarDecl 0x10e4bf0 <col:33, col:37> col:37 __mode 'int'
| |-FunctionDecl 0x10e4f78 <line:580:1, line:581:47> line:580:12 fwprintf 'int (__FILE *__restrict, const wchar_t *__restrict, ...)' extern
| | |-ParmVarDecl 0x10e4dd8 <col:22, col:41> col:41 __stream '__FILE *__restrict'
| | `-ParmVarDecl 0x10e4e58 <line:581:8, col:34> col:34 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e5158 <line:587:1, col:60> col:12 wprintf 'int (const wchar_t *__restrict, ...)' extern
| | `-ParmVarDecl 0x10e5040 <col:21, col:47> col:47 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e6480 <line:590:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:590:12 swprintf 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x10e6240 <col:22, col:42> col:42 __s 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10e62b8 <col:47, col:54> col:54 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x10e6338 <line:591:8, col:34> col:34 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e67f0 <line:598:1, line:600:29> line:598:12 vfwprintf 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e6548 <col:23, col:42> col:42 __s '__FILE *__restrict'
| | |-ParmVarDecl 0x10e65c8 <line:599:9, col:35> col:35 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e66c0 <line:600:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e6a50 <line:606:1, line:607:28> line:606:12 vwprintf 'int (const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e68c0 <col:22, col:48> col:48 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e6938 <line:607:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e6dd8 <line:611:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:611:12 used vswprintf 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x10e6b18 <col:23, col:43> col:43 __s 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10e6b90 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x10e6c10 <line:612:9, col:35> col:35 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e6c88 <line:613:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e6fc8 <line:621:1, line:622:46> line:621:12 fwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, ...)' extern
| | |-ParmVarDecl 0x10e6ea8 <col:21, col:40> col:40 __stream '__FILE *__restrict'
| | `-ParmVarDecl 0x10e6f28 <line:622:7, col:33> col:33 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e7128 <line:628:1, col:59> col:12 wscanf 'int (const wchar_t *__restrict, ...)' extern
| | `-ParmVarDecl 0x10e7090 <col:20, col:46> col:46 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e8410 <line:631:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:631:12 swscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x10e8260 <col:21, col:47> col:47 __s 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e82e0 <line:632:7, col:33> col:33 __format 'const wchar_t *__restrict'
| |-FunctionDecl 0x10e86a0 prev 0x10e6fc8 <line:640:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/wchar.h:640:24 fwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, ...)' extern
| | |-ParmVarDecl 0x10e84d0 <col:34, col:53> col:53 __stream '__FILE *__restrict'
| | |-ParmVarDecl 0x10e8550 <line:641:6, col:32> col:32 __format 'const wchar_t *__restrict'
| | `-AsmLabelAttr 0x10e8740 <<scratch space>:19:1> "__isoc99_fwscanf" IsLiteralLabel
| |-FunctionDecl 0x10e8928 prev 0x10e7128 </usr/include/wchar.h:644:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/wchar.h:644:24 wscanf 'int (const wchar_t *__restrict, ...)' extern
| | |-ParmVarDecl 0x10e87e0 <col:33, col:59> col:59 __format 'const wchar_t *__restrict'
| | `-AsmLabelAttr 0x10e89c8 <<scratch space>:21:1> "__isoc99_wscanf" IsLiteralLabel
| |-FunctionDecl 0x10e8bb8 prev 0x10e8410 </usr/include/wchar.h:647:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:177:52> /usr/include/wchar.h:647:28 swscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x10e8a60 <col:38, col:64> col:64 __s 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e8ae0 <line:648:10, col:36> col:36 __format 'const wchar_t *__restrict'
| | `-AsmLabelAttr 0x10e8c58 <<scratch space>:23:1> "__isoc99_swscanf" IsLiteralLabel
| |-FunctionDecl 0x10e8e90 </usr/include/wchar.h:671:1, line:673:28> line:671:12 vfwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e8cf0 <col:22, col:41> col:41 __s '__FILE *__restrict'
| | |-ParmVarDecl 0x10e8d70 <line:672:8, col:34> col:34 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e8de8 <line:673:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e9078 <line:679:1, line:680:27> line:679:12 vwscanf 'int (const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e8f60 <col:21, col:47> col:47 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e8fd8 <line:680:7, col:22> col:22 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e93a8 <line:683:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:683:12 vswscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x10e9140 <col:22, col:48> col:48 __s 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e91c0 <line:684:8, col:34> col:34 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10e9270 <line:685:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x10e96b8 prev 0x10e8e90 <line:693:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/wchar.h:693:24 vfwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e9470 <col:35, col:54> col:54 __s '__FILE *__restrict'
| | |-ParmVarDecl 0x10e94f0 <line:694:7, col:33> col:33 __format 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e9568 <line:695:7, col:22> col:22 __arg '__va_list_tag *':'__va_list_tag *'
| | `-AsmLabelAttr 0x10e9758 <<scratch space>:26:1> "__isoc99_vfwscanf" IsLiteralLabel
| |-FunctionDecl 0x10e9950 prev 0x10e9078 </usr/include/wchar.h:697:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/wchar.h:697:24 vwscanf 'int (const wchar_t *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x10e9808 <col:34, col:60> col:60 __format 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e9880 <line:698:6, col:21> col:21 __arg '__va_list_tag *':'__va_list_tag *'
| | `-AsmLabelAttr 0x10e99f0 <<scratch space>:28:1> "__isoc99_vwscanf" IsLiteralLabel
| |-FunctionDecl 0x10e9c68 prev 0x10e93a8 </usr/include/wchar.h:700:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:177:52> /usr/include/wchar.h:700:28 vswscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x10e9a90 <col:39, col:65> col:65 __s 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e9b10 <line:701:11, col:37> col:37 __format 'const wchar_t *__restrict'
| | |-ParmVarDecl 0x10e9b88 <line:702:11, col:26> col:26 __arg '__va_list_tag *':'__va_list_tag *'
| | `-AsmLabelAttr 0x10e9d08 <<scratch space>:30:1> "__isoc99_vswscanf" IsLiteralLabel
| |-FunctionDecl 0x10e9ea8 </usr/include/wchar.h:726:1, col:39> col:15 fgetwc 'wint_t (__FILE *)' extern
| | `-ParmVarDecl 0x10e9db0 <col:23, col:31> col:31 __stream '__FILE *'
| |-FunctionDecl 0x10e9ff0 <line:727:1, col:38> col:15 getwc 'wint_t (__FILE *)' extern
| | `-ParmVarDecl 0x10e9f60 <col:22, col:30> col:30 __stream '__FILE *'
| |-FunctionDecl 0x10ea188 <line:733:1, col:29> col:15 getwchar 'wint_t ()' extern
| |-FunctionDecl 0x10ea408 <line:740:1, col:53> col:15 fputwc 'wint_t (wchar_t, __FILE *)' extern
| | |-ParmVarDecl 0x10ea280 <col:23, col:31> col:31 __wc 'wchar_t'
| | `-ParmVarDecl 0x10ea2f8 <col:37, col:45> col:45 __stream '__FILE *'
| |-FunctionDecl 0x10ea5d8 <line:741:1, col:52> col:15 putwc 'wint_t (wchar_t, __FILE *)' extern
| | |-ParmVarDecl 0x10ea4c8 <col:22, col:30> col:30 __wc 'wchar_t'
| | `-ParmVarDecl 0x10ea540 <col:36, col:44> col:44 __stream '__FILE *'
| |-FunctionDecl 0x10ea788 <line:747:1, col:37> col:15 putwchar 'wint_t (wchar_t)' extern
| | `-ParmVarDecl 0x10ea698 <col:25, col:33> col:33 __wc 'wchar_t'
| |-FunctionDecl 0x10eaa70 <line:755:1, line:756:31> line:755:17 fgetws 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)' extern
| | |-ParmVarDecl 0x10ea848 <col:25, col:45> col:45 __ws 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10ea8c8 <col:51, col:55> col:55 __n 'int'
| | `-ParmVarDecl 0x10ea940 <line:756:4, col:23> col:23 __stream '__FILE *__restrict'
| |-FunctionDecl 0x10eacd0 <line:762:1, line:763:33> line:762:12 fputws 'int (const wchar_t *__restrict, __FILE *__restrict)' extern
| | |-ParmVarDecl 0x10eab40 <col:20, col:46> col:46 __ws 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10eabb8 <line:763:6, col:25> col:25 __stream '__FILE *__restrict'
| |-FunctionDecl 0x10eaf18 <line:770:1, col:53> col:15 ungetwc 'wint_t (wint_t, __FILE *)' extern
| | |-ParmVarDecl 0x10ead90 <col:24, col:31> col:31 __wc 'wint_t':'unsigned int'
| | `-ParmVarDecl 0x10eae08 <col:37, col:45> col:45 __stream '__FILE *'
| |-FunctionDecl 0x10eb068 <line:781:1, col:47> col:15 getwc_unlocked 'wint_t (__FILE *)' extern
| | `-ParmVarDecl 0x10eafd8 <col:31, col:39> col:39 __stream '__FILE *'
| |-FunctionDecl 0x10eb1a8 <line:782:1, col:38> col:15 getwchar_unlocked 'wint_t ()' extern
| |-FunctionDecl 0x10ec330 <line:790:1, col:48> col:15 fgetwc_unlocked 'wint_t (__FILE *)' extern
| | `-ParmVarDecl 0x10ec2a0 <col:32, col:40> col:40 __stream '__FILE *'
| |-FunctionDecl 0x10ec4f8 <line:798:1, col:62> col:15 fputwc_unlocked 'wint_t (wchar_t, __FILE *)' extern
| | |-ParmVarDecl 0x10ec3e8 <col:32, col:40> col:40 __wc 'wchar_t'
| | `-ParmVarDecl 0x10ec460 <col:46, col:54> col:54 __stream '__FILE *'
| |-FunctionDecl 0x10ec6c8 <line:807:1, col:61> col:15 putwc_unlocked 'wint_t (wchar_t, __FILE *)' extern
| | |-ParmVarDecl 0x10ec5b8 <col:31, col:39> col:39 __wc 'wchar_t'
| | `-ParmVarDecl 0x10ec630 <col:45, col:53> col:53 __stream '__FILE *'
| |-FunctionDecl 0x10ec818 <line:808:1, col:46> col:15 putwchar_unlocked 'wint_t (wchar_t)' extern
| | `-ParmVarDecl 0x10ec788 <col:34, col:42> col:42 __wc 'wchar_t'
| |-FunctionDecl 0x10eca78 <line:817:1, line:818:33> line:817:17 fgetws_unlocked 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)' extern
| | |-ParmVarDecl 0x10ec8d8 <col:34, col:54> col:54 __ws 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10ec958 <col:60, col:64> col:64 __n 'int'
| | `-ParmVarDecl 0x10ec9d0 <line:818:6, col:25> col:25 __stream '__FILE *__restrict'
| |-FunctionDecl 0x10ecc60 <line:826:1, line:827:35> line:826:12 fputws_unlocked 'int (const wchar_t *__restrict, __FILE *__restrict)' extern
| | |-ParmVarDecl 0x10ecb48 <col:29, col:55> col:55 __ws 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10ecbc0 <line:827:8, col:27> col:27 __stream '__FILE *__restrict'
| |-FunctionDecl 0x10ed090 <line:834:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:834:15 wcsftime 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0x10ecd28 <col:25, col:45> col:45 __s 'wchar_t *__restrict'
| | |-ParmVarDecl 0x10ecda0 <col:50, col:57> col:57 __maxsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x10ece20 <line:835:4, col:30> col:30 __format 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x10ecf40 <line:836:4, col:32> col:32 __tp 'const struct tm *__restrict'
| `-FunctionDecl 0x10ed510 <line:841:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/wchar.h:841:15 wcsftime_l 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict, locale_t) throw()' extern
|   |-ParmVarDecl 0x10ed168 <col:27, col:47> col:47 __s 'wchar_t *__restrict'
|   |-ParmVarDecl 0x10ed1e0 <col:52, col:59> col:59 __maxsize 'size_t':'unsigned long'
|   |-ParmVarDecl 0x10ed2b0 <line:842:6, col:32> col:32 __format 'const wchar_t *__restrict'
|   |-ParmVarDecl 0x10ed340 <line:843:6, col:34> col:34 __tp 'const struct tm *__restrict'
|   `-ParmVarDecl 0x10ed3b8 <line:844:6, col:15> col:15 __loc 'locale_t':'struct __locale_struct *'
|-NamespaceDecl 0x10ed5d8 prev 0x10a90c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cwchar:62:1, line:65:1> line:62:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x10ed668 <line:64:3, col:11> col:11 ::mbstate_t
| `-UsingShadowDecl 0x10ed6c0 <col:11> col:11 implicit Typedef 0x10c5e60 'mbstate_t'
|   `-TypedefType 0x10d63b0 'mbstate_t' sugar
|     |-Typedef 0x10c5e60 'mbstate_t'
|     `-TypedefType 0x10b02c0 '__mbstate_t' sugar
|       |-Typedef 0x10b0248 '__mbstate_t'
|       `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
|         `-RecordType 0x10afda0 '__mbstate_t'
|           `-CXXRecord 0x10afd10 ''
|-LinkageSpecDecl 0x10ed768 <line:135:1, line:236:1> line:135:8 C++
| `-NamespaceDecl 0x10ed7d8 prev 0x10ed5d8 <line:137:1, line:235:1> line:137:11 std
|   |-original Namespace 0x103af10 'std'
|   |-VisibilityAttr 0x10ed848 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-UsingDecl 0x10ed8a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cwchar:141:3, col:11> col:11 ::wint_t
|   |-UsingShadowDecl 0x10ed900 <col:11> col:11 implicit Typedef 0x10afcb8 'wint_t'
|   | `-TypedefType 0x10d6020 'wint_t' sugar
|   |   |-Typedef 0x10afcb8 'wint_t'
|   |   `-BuiltinType 0xffd2b0 'unsigned int'
|   |-UsingDecl 0x10ed958 <line:143:3, col:11> col:11 ::btowc
|   |-UsingShadowDecl 0x10ed9b0 <col:11> col:11 implicit Function 0x10d6150 'btowc' 'wint_t (int) throw()'
|   |-UsingDecl 0x10eda08 <line:144:3, col:11> col:11 ::fgetwc
|   |-UsingShadowDecl 0x10eda60 <col:11> col:11 implicit Function 0x10e9ea8 'fgetwc' 'wint_t (__FILE *)'
|   |-UsingDecl 0x10edab8 <line:145:3, col:11> col:11 ::fgetws
|   |-UsingShadowDecl 0x10edb10 <col:11> col:11 implicit Function 0x10eaa70 'fgetws' 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)'
|   |-UsingDecl 0x10edb68 <line:146:3, col:11> col:11 ::fputwc
|   |-UsingShadowDecl 0x10edbc0 <col:11> col:11 implicit Function 0x10ea408 'fputwc' 'wint_t (wchar_t, __FILE *)'
|   |-UsingDecl 0x10edc18 <line:147:3, col:11> col:11 ::fputws
|   |-UsingShadowDecl 0x10edc70 <col:11> col:11 implicit Function 0x10eacd0 'fputws' 'int (const wchar_t *__restrict, __FILE *__restrict)'
|   |-UsingDecl 0x10edcc8 <line:148:3, col:11> col:11 ::fwide
|   |-UsingShadowDecl 0x10edd20 <col:11> col:11 implicit Function 0x10e4d18 'fwide' 'int (__FILE *, int) throw()'
|   |-UsingDecl 0x10edd78 <line:149:3, col:11> col:11 ::fwprintf
|   |-UsingShadowDecl 0x10eddd0 <col:11> col:11 implicit Function 0x10e4f78 'fwprintf' 'int (__FILE *__restrict, const wchar_t *__restrict, ...)'
|   |-UsingDecl 0x10ede28 <line:150:3, col:11> col:11 ::fwscanf
|   |-UsingShadowDecl 0x10ede80 <col:11> col:11 implicit Function 0x10e86a0 'fwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, ...)'
|   |-UsingDecl 0x10eded8 <line:151:3, col:11> col:11 ::getwc
|   |-UsingShadowDecl 0x10edf30 <col:11> col:11 implicit Function 0x10e9ff0 'getwc' 'wint_t (__FILE *)'
|   |-UsingDecl 0x10edf88 <line:152:3, col:11> col:11 ::getwchar
|   |-UsingShadowDecl 0x10edfe0 <col:11> col:11 implicit Function 0x10ea188 'getwchar' 'wint_t ()'
|   |-UsingDecl 0x10ee038 <line:153:3, col:11> col:11 ::mbrlen
|   |-UsingShadowDecl 0x10ee090 <col:11> col:11 implicit Function 0x10d7248 'mbrlen' 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()'
|   |-UsingDecl 0x10ee0e8 <line:154:3, col:11> col:11 ::mbrtowc
|   |-UsingShadowDecl 0x10ee140 <col:11> col:11 implicit Function 0x10d6a00 'mbrtowc' 'size_t (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict) throw()'
|   |-UsingDecl 0x10ee198 <line:155:3, col:11> col:11 ::mbsinit
|   |-UsingShadowDecl 0x10ee1f0 <col:11> col:11 implicit Function 0x10d6538 'mbsinit' 'int (const mbstate_t *) throw()'
|   |-UsingDecl 0x10ee248 <line:156:3, col:11> col:11 ::mbsrtowcs
|   |-UsingShadowDecl 0x10ee2c0 <col:11> col:11 implicit Function 0x10d7600 'mbsrtowcs' 'size_t (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict) throw()'
|   |-UsingDecl 0x10ee318 <line:157:3, col:11> col:11 ::putwc
|   |-UsingShadowDecl 0x10ee370 <col:11> col:11 implicit Function 0x10ea5d8 'putwc' 'wint_t (wchar_t, __FILE *)'
|   |-UsingDecl 0x10ee3c8 <line:158:3, col:11> col:11 ::putwchar
|   |-UsingShadowDecl 0x10ee420 <col:11> col:11 implicit Function 0x10ea788 'putwchar' 'wint_t (wchar_t)'
|   |-UsingDecl 0x10ee478 <line:160:3, col:11> col:11 ::swprintf
|   |-UsingShadowDecl 0x10ee4d0 <col:11> col:11 implicit Function 0x10e6480 'swprintf' 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, ...) throw()'
|   |-UsingDecl 0x10ee528 <line:162:3, col:11> col:11 ::swscanf
|   |-UsingShadowDecl 0x10ee580 <col:11> col:11 implicit Function 0x10e8bb8 'swscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, ...) throw()'
|   |-UsingDecl 0x10ee5d8 <line:163:3, col:11> col:11 ::ungetwc
|   |-UsingShadowDecl 0x10ee630 <col:11> col:11 implicit Function 0x10eaf18 'ungetwc' 'wint_t (wint_t, __FILE *)'
|   |-UsingDecl 0x10ee688 <line:164:3, col:11> col:11 ::vfwprintf
|   |-UsingShadowDecl 0x10ee6e0 <col:11> col:11 implicit Function 0x10e67f0 'vfwprintf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
|   |-UsingDecl 0x10ee738 <line:166:3, col:11> col:11 ::vfwscanf
|   |-UsingShadowDecl 0x10ee790 <col:11> col:11 implicit Function 0x10e96b8 'vfwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
|   |-UsingDecl 0x10ee7e8 <line:169:3, col:11> col:11 ::vswprintf
|   |-UsingShadowDecl 0x10ee840 <col:11> col:11 implicit Function 0x10e6dd8 'vswprintf' 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, __va_list_tag *) throw()'
|   |-UsingDecl 0x10ee898 <line:172:3, col:11> col:11 ::vswscanf
|   |-UsingShadowDecl 0x10ee8f0 <col:11> col:11 implicit Function 0x10e9c68 'vswscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()'
|   |-UsingDecl 0x10ee948 <line:174:3, col:11> col:11 ::vwprintf
|   |-UsingShadowDecl 0x10ee9a0 <col:11> col:11 implicit Function 0x10e6a50 'vwprintf' 'int (const wchar_t *__restrict, __va_list_tag *)'
|   |-UsingDecl 0x10ee9f8 <line:176:3, col:11> col:11 ::vwscanf
|   |-UsingShadowDecl 0x10eea50 <col:11> col:11 implicit Function 0x10e9950 'vwscanf' 'int (const wchar_t *__restrict, __va_list_tag *)'
|   |-UsingDecl 0x10eeaa8 <line:178:3, col:11> col:11 ::wcrtomb
|   |-UsingShadowDecl 0x10eeb00 <col:11> col:11 implicit Function 0x10d6cf0 'wcrtomb' 'size_t (char *__restrict, wchar_t, mbstate_t *__restrict) throw()'
|   |-UsingDecl 0x10eeb58 <line:179:3, col:11> col:11 ::wcscat
|   |-UsingShadowDecl 0x10eebb0 <col:11> col:11 implicit Function 0x10cdd88 'wcscat' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()'
|   |-UsingDecl 0x10eec08 <line:180:3, col:11> col:11 ::wcscmp
|   |-UsingShadowDecl 0x10eec60 <col:11> col:11 implicit Function 0x10ce3c8 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10eecb8 <line:181:3, col:11> col:11 ::wcscoll
|   |-UsingShadowDecl 0x10eed10 <col:11> col:11 implicit Function 0x10d09d8 'wcscoll' 'int (const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10eed68 <line:182:3, col:11> col:11 ::wcscpy
|   |-UsingShadowDecl 0x10eedc0 <col:11> col:11 implicit Function 0x10c6d98 'wcscpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()'
|   |-UsingDecl 0x10eee18 <line:183:3, col:11> col:11 ::wcscspn
|   |-UsingShadowDecl 0x10eee70 <col:11> col:11 implicit Function 0x10d23d0 'wcscspn' 'size_t (const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10eeec8 <line:184:3, col:11> col:11 ::wcsftime
|   |-UsingShadowDecl 0x10eef20 <col:11> col:11 implicit Function 0x10ed090 'wcsftime' 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict) throw()'
|   |-UsingDecl 0x10eef78 <line:185:3, col:11> col:11 ::wcslen
|   |-UsingShadowDecl 0x10eefd0 <col:11> col:11 implicit Function 0x10d3070 'wcslen' 'size_t (const wchar_t *) throw()'
|   |-UsingDecl 0x10ef028 <line:186:3, col:11> col:11 ::wcsncat
|   |-UsingShadowDecl 0x10ef080 <col:11> col:11 implicit Function 0x10ce0a8 'wcsncat' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|   |-UsingDecl 0x10ef0d8 <line:187:3, col:11> col:11 ::wcsncmp
|   |-UsingShadowDecl 0x10ef130 <col:11> col:11 implicit Function 0x10cfc30 'wcsncmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()'
|   |-UsingDecl 0x10ef188 <line:188:3, col:11> col:11 ::wcsncpy
|   |-UsingShadowDecl 0x10ef1e0 <col:11> col:11 implicit Function 0x10cdae8 'wcsncpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|   |-UsingDecl 0x10ef238 <line:189:3, col:11> col:11 ::wcsrtombs
|   |-UsingShadowDecl 0x10efae0 <col:11> col:11 implicit Function 0x10d7a10 'wcsrtombs' 'size_t (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict) throw()'
|   |-UsingDecl 0x10efb38 <line:190:3, col:11> col:11 ::wcsspn
|   |-UsingShadowDecl 0x10efb90 <col:11> col:11 implicit Function 0x10d2610 'wcsspn' 'size_t (const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10efbe8 <line:191:3, col:11> col:11 ::wcstod
|   |-UsingShadowDecl 0x10efc40 <col:11> col:11 implicit Function 0x10d88f8 'wcstod' 'double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|   |-UsingDecl 0x10efc98 <line:193:3, col:11> col:11 ::wcstof
|   |-UsingShadowDecl 0x10efcf0 <col:11> col:11 implicit Function 0x10d8bc8 'wcstof' 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|   |-UsingDecl 0x10efd48 <line:195:3, col:11> col:11 ::wcstok
|   |-UsingShadowDecl 0x10efda0 <col:11> col:11 implicit Function 0x10d2ea8 'wcstok' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()'
|   |-UsingDecl 0x10efdf8 <line:196:3, col:11> col:11 ::wcstol
|   |-UsingShadowDecl 0x10efe50 <col:11> col:11 implicit Function 0x10aa348 'wcstol' 'long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|   |-UsingDecl 0x10efea8 <line:197:3, col:11> col:11 ::wcstoul
|   |-UsingShadowDecl 0x10eff00 <col:11> col:11 implicit Function 0x10aa648 'wcstoul' 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|   |-UsingDecl 0x10eff58 <line:198:3, col:11> col:11 ::wcsxfrm
|   |-UsingShadowDecl 0x10effb0 <col:11> col:11 implicit Function 0x10d11c0 'wcsxfrm' 'size_t (wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|   |-UsingDecl 0x10f0008 <line:199:3, col:11> col:11 ::wctob
|   |-UsingShadowDecl 0x10f0060 <col:11> col:11 implicit Function 0x10d6308 'wctob' 'int (wint_t) throw()'
|   |-UsingDecl 0x10f00b8 <line:200:3, col:11> col:11 ::wmemcmp
|   |-UsingShadowDecl 0x10f0110 <col:11> col:11 implicit Function 0x10d5448 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()'
|   |-UsingDecl 0x10f0168 <line:201:3, col:11> col:11 ::wmemcpy
|   |-UsingShadowDecl 0x10f01c0 <col:11> col:11 implicit Function 0x10d5718 'wmemcpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|   |-UsingDecl 0x10f0218 <line:202:3, col:11> col:11 ::wmemmove
|   |-UsingShadowDecl 0x10f0270 <col:11> col:11 implicit Function 0x10d59f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'
|   |-UsingDecl 0x10f02c8 <line:203:3, col:11> col:11 ::wmemset
|   |-UsingShadowDecl 0x10f0320 <col:11> col:11 implicit Function 0x10d5ce8 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()'
|   |-UsingDecl 0x10f0378 <line:204:3, col:11> col:11 ::wprintf
|   |-UsingShadowDecl 0x10f03d0 <col:11> col:11 implicit Function 0x10e5158 'wprintf' 'int (const wchar_t *__restrict, ...)'
|   |-UsingDecl 0x10f0428 <line:205:3, col:11> col:11 ::wscanf
|   |-UsingShadowDecl 0x10f0480 <col:11> col:11 implicit Function 0x10e8928 'wscanf' 'int (const wchar_t *__restrict, ...)'
|   |-UsingDecl 0x10f04d8 <line:206:3, col:11> col:11 ::wcschr
|   |-UsingShadowDecl 0x10f0530 <col:11> col:11 implicit Function 0x10d1c48 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'
|   |-UsingDecl 0x10f0588 <line:207:3, col:11> col:11 ::wcspbrk
|   |-UsingShadowDecl 0x10f05e0 <col:11> col:11 implicit Function 0x10d28d8 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10f0638 <line:208:3, col:11> col:11 ::wcsrchr
|   |-UsingShadowDecl 0x10f0690 <col:11> col:11 implicit Function 0x10d1e88 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()'
|   |-UsingDecl 0x10f06e8 <line:209:3, col:11> col:11 ::wcsstr
|   |-UsingShadowDecl 0x10f0740 <col:11> col:11 implicit Function 0x10d2b20 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()'
|   |-UsingDecl 0x10f0798 <line:210:3, col:11> col:11 ::wmemchr
|   |-UsingShadowDecl 0x10f07f0 <col:11> col:11 implicit Function 0x10d5178 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()'
|   |-FunctionDecl 0x10f09b0 <line:213:3, line:215:58> line:214:3 wcschr 'wchar_t *(wchar_t *, wchar_t)' inline
|   | |-ParmVarDecl 0x10f0858 <col:10, col:19> col:19 used __p 'wchar_t *'
|   | |-ParmVarDecl 0x10f08d0 <col:24, col:32> col:32 used __c 'wchar_t'
|   | `-CompoundStmt 0x10f2088 <line:215:3, col:58>
|   |   `-ReturnStmt 0x10f2078 <col:5, col:55>
|   |     `-CallExpr 0x10f2030 <col:12, col:55> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x10f2018 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x10f1f90 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x10d1c48 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x10f0530 'wcschr')
|   |       |-CXXConstCastExpr 0x10f1f40 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|   |       | `-ImplicitCastExpr 0x10f1f28 <col:46> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x10f0ab0 <col:46> 'wchar_t *' lvalue ParmVar 0x10f0858 '__p' 'wchar_t *'
|   |       `-ImplicitCastExpr 0x10f2060 <col:52> 'wchar_t' <LValueToRValue>
|   |         `-DeclRefExpr 0x10f1f70 <col:52> 'wchar_t' lvalue ParmVar 0x10f08d0 '__c' 'wchar_t'
|   |-FunctionDecl 0x10f21d8 <line:217:3, line:219:61> line:218:3 wcspbrk 'wchar_t *(wchar_t *, const wchar_t *)' inline
|   | |-ParmVarDecl 0x10f20b8 <col:11, col:20> col:20 used __s1 'wchar_t *'
|   | |-ParmVarDecl 0x10f2138 <col:26, col:41> col:41 used __s2 'const wchar_t *'
|   | `-CompoundStmt 0x10f2468 <line:219:3, col:61>
|   |   `-ReturnStmt 0x10f2458 <col:5, col:58>
|   |     `-CallExpr 0x10f2410 <col:12, col:58> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x10f23f8 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x10f2378 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x10d28d8 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x10f05e0 'wcspbrk')
|   |       |-CXXConstCastExpr 0x10f2328 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|   |       | `-ImplicitCastExpr 0x10f2310 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x10f22d8 <col:47> 'wchar_t *' lvalue ParmVar 0x10f20b8 '__s1' 'wchar_t *'
|   |       `-ImplicitCastExpr 0x10f2440 <col:54> 'const wchar_t *' <LValueToRValue>
|   |         `-DeclRefExpr 0x10f2358 <col:54> 'const wchar_t *' lvalue ParmVar 0x10f2138 '__s2' 'const wchar_t *'
|   |-FunctionDecl 0x10f25b0 <line:221:3, line:223:59> line:222:3 wcsrchr 'wchar_t *(wchar_t *, wchar_t)' inline
|   | |-ParmVarDecl 0x10f2498 <col:11, col:20> col:20 used __p 'wchar_t *'
|   | |-ParmVarDecl 0x10f2510 <col:25, col:33> col:33 used __c 'wchar_t'
|   | `-CompoundStmt 0x10f27e8 <line:223:3, col:59>
|   |   `-ReturnStmt 0x10f27d8 <col:5, col:56>
|   |     `-CallExpr 0x10f2790 <col:12, col:56> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x10f2778 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x10f2750 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x10d1e88 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x10f0690 'wcsrchr')
|   |       |-CXXConstCastExpr 0x10f2700 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|   |       | `-ImplicitCastExpr 0x10f26e8 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x10f26b0 <col:47> 'wchar_t *' lvalue ParmVar 0x10f2498 '__p' 'wchar_t *'
|   |       `-ImplicitCastExpr 0x10f27c0 <col:53> 'wchar_t' <LValueToRValue>
|   |         `-DeclRefExpr 0x10f2730 <col:53> 'wchar_t' lvalue ParmVar 0x10f2510 '__c' 'wchar_t'
|   |-FunctionDecl 0x10f2938 <line:225:3, line:227:60> line:226:3 wcsstr 'wchar_t *(wchar_t *, const wchar_t *)' inline
|   | |-ParmVarDecl 0x10f2818 <col:10, col:19> col:19 used __s1 'wchar_t *'
|   | |-ParmVarDecl 0x10f2898 <col:25, col:40> col:40 used __s2 'const wchar_t *'
|   | `-CompoundStmt 0x10f2b70 <line:227:3, col:60>
|   |   `-ReturnStmt 0x10f2b60 <col:5, col:57>
|   |     `-CallExpr 0x10f2b18 <col:12, col:57> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x10f2b00 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x10f2ad8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x10d2b20 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x10f0740 'wcsstr')
|   |       |-CXXConstCastExpr 0x10f2a88 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|   |       | `-ImplicitCastExpr 0x10f2a70 <col:46> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x10f2a38 <col:46> 'wchar_t *' lvalue ParmVar 0x10f2818 '__s1' 'wchar_t *'
|   |       `-ImplicitCastExpr 0x10f2b48 <col:53> 'const wchar_t *' <LValueToRValue>
|   |         `-DeclRefExpr 0x10f2ab8 <col:53> 'const wchar_t *' lvalue ParmVar 0x10f2898 '__s2' 'const wchar_t *'
|   `-FunctionDecl 0x10f2da0 <line:229:3, line:231:64> line:230:3 wmemchr 'wchar_t *(wchar_t *, wchar_t, std::size_t)' inline
|     |-ParmVarDecl 0x10f2ba0 <col:11, col:20> col:20 used __p 'wchar_t *'
|     |-ParmVarDecl 0x10f2c18 <col:25, col:33> col:33 used __c 'wchar_t'
|     |-ParmVarDecl 0x10f2cb0 <col:38, col:45> col:45 used __n 'std::size_t':'unsigned long'
|     `-CompoundStmt 0x10f30a8 <line:231:3, col:64>
|       `-ReturnStmt 0x10f3098 <col:5, col:61>
|         `-CallExpr 0x10f3030 <col:12, col:61> 'wchar_t *'
|           |-ImplicitCastExpr 0x10f3018 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x10f2f90 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x10d5178 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x10f07f0 'wmemchr')
|           |-CXXConstCastExpr 0x10f2f20 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|           | `-ImplicitCastExpr 0x10f2ee0 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|           |   `-DeclRefExpr 0x10f2ea8 <col:47> 'wchar_t *' lvalue ParmVar 0x10f2ba0 '__p' 'wchar_t *'
|           |-ImplicitCastExpr 0x10f3068 <col:53> 'wchar_t' <LValueToRValue>
|           | `-DeclRefExpr 0x10f2f50 <col:53> 'wchar_t' lvalue ParmVar 0x10f2c18 '__c' 'wchar_t'
|           `-ImplicitCastExpr 0x10f3080 <col:58> 'std::size_t':'unsigned long' <LValueToRValue>
|             `-DeclRefExpr 0x10f2f70 <col:58> 'std::size_t':'unsigned long' lvalue ParmVar 0x10f2cb0 '__n' 'std::size_t':'unsigned long'
|-NamespaceDecl 0x10f30c0 prev 0x103b2f8 <line:244:1, line:263:1> line:244:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| |-UsingDecl 0x10f3138 <line:251:3, col:11> col:11 ::wcstold
| |-UsingShadowDecl 0x10f3190 <col:11> col:11 implicit Function 0x10d8e38 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
| |-UsingDecl 0x10f31e8 <line:260:3, col:11> col:11 ::wcstoll
| |-UsingShadowDecl 0x10f3240 <col:11> col:11 implicit Function 0x10aa948 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
| |-UsingDecl 0x10f3298 <line:261:3, col:11> col:11 ::wcstoull
| `-UsingShadowDecl 0x10f32f0 <col:11> col:11 implicit Function 0x10aac48 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-NamespaceDecl 0x10f3340 prev 0x10ed7d8 <line:265:1, line:270:1> line:265:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x10f33d8 <line:267:3, col:22> col:22 ::__gnu_cxx::wcstold
| |-UsingShadowDecl 0x10f3430 <col:22> col:22 implicit Function 0x10d8e38 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
| |-UsingDecl 0x10f3490 <line:268:3, col:22> col:22 ::__gnu_cxx::wcstoll
| |-UsingShadowDecl 0x10f34e8 <col:22> col:22 implicit Function 0x10aa948 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
| |-UsingDecl 0x10f3548 <line:269:3, col:22> col:22 ::__gnu_cxx::wcstoull
| `-UsingShadowDecl 0x10f35a0 <col:22> col:22 implicit Function 0x10aac48 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-NamespaceDecl 0x10f35f0 prev 0x10f3340 <line:280:1, line:300:1> line:280:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x10f3680 <line:283:3, col:14> col:14 std::wcstof
| |-UsingShadowDecl 0x10f36f0 prev 0x10efcf0 <col:14> col:14 implicit Function 0x10d8bc8 'wcstof' 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()'
| |-UsingDecl 0x10f3748 <line:286:3, col:14> col:14 std::vfwscanf
| |-UsingShadowDecl 0x10f37a0 prev 0x10ee790 <col:14> col:14 implicit Function 0x10e96b8 'vfwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
| |-UsingDecl 0x10f37f8 <line:289:3, col:14> col:14 std::vswscanf
| |-UsingShadowDecl 0x10f3850 prev 0x10ee8f0 <col:14> col:14 implicit Function 0x10e9c68 'vswscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()'
| |-UsingDecl 0x10f38a8 <line:292:3, col:14> col:14 std::vwscanf
| |-UsingShadowDecl 0x10f3900 prev 0x10eea50 <col:14> col:14 implicit Function 0x10e9950 'vwscanf' 'int (const wchar_t *__restrict, __va_list_tag *)'
| |-UsingDecl 0x10f3958 <line:296:3, col:14> col:14 std::wcstold
| |-UsingShadowDecl 0x10f39c8 prev 0x10f3430 <col:14> col:14 implicit Function 0x10d8e38 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
| |-UsingDecl 0x10f3a20 <line:297:3, col:14> col:14 std::wcstoll
| |-UsingShadowDecl 0x10f3a78 prev 0x10f34e8 <col:14> col:14 implicit Function 0x10aa948 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
| |-UsingDecl 0x10f3ad0 <line:298:3, col:14> col:14 std::wcstoull
| `-UsingShadowDecl 0x10f3b28 prev 0x10f35a0 <col:14> col:14 implicit Function 0x10aac48 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-NamespaceDecl 0x10f3b98 prev 0x10f35f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/postypes.h:68:1, line:251:1> line:68:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x10f3c08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-TypedefDecl 0x10f3c78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/postypes.h:88:3, col:25> col:25 referenced streamoff 'long'
| | `-BuiltinType 0xffd230 'long'
| |-TypedefDecl 0x10f3d00 <line:98:3, col:21> col:21 referenced streamsize 'std::ptrdiff_t':'long'
| | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   |-Typedef 0x103b008 'ptrdiff_t'
| |   `-BuiltinType 0xffd230 'long'
| |-ClassTemplateDecl 0x10f3e88 <line:111:3, line:213:5> line:112:11 fpos
| | |-TemplateTypeParmDecl 0x10f3d58 <line:111:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| | |-CXXRecordDecl 0x10f3df8 <line:112:5, line:213:5> line:112:11 class fpos definition
| | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| | | | |-MoveConstructor
| | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| | | | |-MoveAssignment
| | | | `-Destructor irrelevant non_trivial user_declared
| | | |-CXXRecordDecl 0x10f43a0 <col:5, col:11> col:11 implicit referenced class fpos
| | | |-AccessSpecDecl 0x10f4430 <line:114:5, col:12> col:5 private
| | | |-FieldDecl 0x10f4490 <line:115:7, col:33> col:33 referenced _M_off 'std::streamoff':'long'
| | | |-FieldDecl 0x10f44f0 <line:116:7, col:17> col:17 referenced _M_state '_StateT'
| | | |-AccessSpecDecl 0x10f4540 <line:118:5, col:11> col:5 public
| | | |-CXXConstructorDecl 0x10f45f8 <line:123:7, line:124:33> line:123:7 fpos<_StateT> 'void ()'
| | | | |-CXXCtorInitializer Field 0x10f4490 '_M_off' 'std::streamoff':'long'
| | | | | `-ImplicitCastExpr 0x10f6640 <line:124:16> 'std::streamoff':'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0x10f6600 <col:16> 'int' 0
| | | | |-CXXCtorInitializer Field 0x10f44f0 '_M_state' '_StateT'
| | | | | `-ParenListExpr 0x10f6680 <col:28, col:29> 'NULL TYPE'
| | | | `-CompoundStmt 0x10f66d0 <col:31, col:33>
| | | |-CXXConstructorDecl 0x10f47a8 <line:133:7, line:134:37> line:133:7 fpos<_StateT> 'void (std::streamoff)'
| | | | |-ParmVarDecl 0x10f46b0 <col:12, col:22> col:22 referenced __off 'std::streamoff':'long'
| | | | |-CXXCtorInitializer Field 0x10f4490 '_M_off' 'std::streamoff':'long'
| | | | | `-ImplicitCastExpr 0x10f6720 <line:134:16> 'std::streamoff':'long' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x10f66e0 <col:16> 'std::streamoff':'long' lvalue ParmVar 0x10f46b0 '__off' 'std::streamoff':'long'
| | | | |-CXXCtorInitializer Field 0x10f44f0 '_M_state' '_StateT'
| | | | | `-ParenListExpr 0x10f6760 <col:32, col:33> 'NULL TYPE'
| | | | `-CompoundStmt 0x10f67b0 <col:35, col:37>
| | | |-CXXConstructorDecl 0x10f4958 <line:137:7, col:33> col:7 fpos<_StateT> 'void (const fpos<_StateT> &)' default
| | | | `-ParmVarDecl 0x10f4898 <col:12, col:22> col:23 'const fpos<_StateT> &'
| | | |-CXXMethodDecl 0x10f4b08 <line:138:7, col:44> col:13 operator= 'fpos<_StateT> &(const fpos<_StateT> &)' default
| | | | `-ParmVarDecl 0x10f4a18 <col:23, col:33> col:34 'const fpos<_StateT> &'
| | | |-CXXDestructorDecl 0x10f4bf8 <line:139:7, col:23> col:7 ~fpos<_StateT> 'void ()' default
| | | |-CXXConversionDecl 0x10f4d78 <line:143:7, col:51> col:7 operator long 'std::streamoff () const'
| | | | `-CompoundStmt 0x10f6828 <col:34, col:51>
| | | |   `-ReturnStmt 0x10f6818 <col:36, col:43>
| | | |     `-ImplicitCastExpr 0x10f6800 <col:43> 'std::streamoff':'long' <LValueToRValue>
| | | |       `-MemberExpr 0x10f67d0 <col:43> 'const std::streamoff':'const long' lvalue ->_M_off 0x10f4490
| | | |         `-CXXThisExpr 0x10f67c0 <col:43> 'const fpos<_StateT> *' implicit this
| | | |-CXXMethodDecl 0x10f4f28 <line:146:7, line:148:26> line:147:7 state 'void (_StateT)'
| | | | |-ParmVarDecl 0x10f4e38 <col:13, col:21> col:21 referenced __st '_StateT'
| | | | `-CompoundStmt 0x10f68c0 <line:148:7, col:26>
| | | |   `-BinaryOperator 0x10f68a0 <col:9, col:20> '<dependent type>' '='
| | | |     |-MemberExpr 0x10f6850 <col:9> '_StateT' lvalue ->_M_state 0x10f44f0
| | | |     | `-CXXThisExpr 0x10f6840 <col:9> 'fpos<_StateT> *' implicit this
| | | |     `-DeclRefExpr 0x10f6880 <col:20> '_StateT' lvalue ParmVar 0x10f4e38 '__st' '_StateT'
| | | |-CXXMethodDecl 0x10f5048 <line:151:7, line:153:26> line:152:7 state '_StateT () const'
| | | | `-CompoundStmt 0x10f6928 <line:153:7, col:26>
| | | |   `-ReturnStmt 0x10f6918 <col:9, col:16>
| | | |     `-MemberExpr 0x10f68e8 <col:16> 'const _StateT' lvalue ->_M_state 0x10f44f0
| | | |       `-CXXThisExpr 0x10f68d8 <col:16> 'const fpos<_StateT> *' implicit this
| | | |-CXXMethodDecl 0x10f5f78 <line:159:7, line:164:7> line:160:7 operator+= 'fpos<_StateT> &(std::streamoff)'
| | | | |-ParmVarDecl 0x10f50f8 <col:18, col:28> col:28 referenced __off 'std::streamoff':'long'
| | | | `-CompoundStmt 0x10f6a20 <line:161:7, line:164:7>
| | | |   |-CompoundAssignOperator 0x10f69b8 <line:162:2, col:12> 'std::streamoff':'long' lvalue '+=' ComputeLHSTy='long' ComputeResultTy='long'
| | | |   | |-MemberExpr 0x10f6950 <col:2> 'std::streamoff':'long' lvalue ->_M_off 0x10f4490
| | | |   | | `-CXXThisExpr 0x10f6940 <col:2> 'fpos<_StateT> *' implicit this
| | | |   | `-ImplicitCastExpr 0x10f69a0 <col:12> 'std::streamoff':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0x10f6980 <col:12> 'std::streamoff':'long' lvalue ParmVar 0x10f50f8 '__off' 'std::streamoff':'long'
| | | |   `-ReturnStmt 0x10f6a10 <line:163:2, col:10>
| | | |     `-UnaryOperator 0x10f69f8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x10f69e8 <col:10> 'fpos<_StateT> *' this
| | | |-CXXMethodDecl 0x10f60c0 <line:170:7, line:175:7> line:171:7 operator-= 'fpos<_StateT> &(std::streamoff)'
| | | | |-ParmVarDecl 0x10f6030 <col:18, col:28> col:28 referenced __off 'std::streamoff':'long'
| | | | `-CompoundStmt 0x10f6b20 <line:172:7, line:175:7>
| | | |   |-CompoundAssignOperator 0x10f6ab8 <line:173:2, col:12> 'std::streamoff':'long' lvalue '-=' ComputeLHSTy='long' ComputeResultTy='long'
| | | |   | |-MemberExpr 0x10f6a50 <col:2> 'std::streamoff':'long' lvalue ->_M_off 0x10f4490
| | | |   | | `-CXXThisExpr 0x10f6a40 <col:2> 'fpos<_StateT> *' implicit this
| | | |   | `-ImplicitCastExpr 0x10f6aa0 <col:12> 'std::streamoff':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0x10f6a80 <col:12> 'std::streamoff':'long' lvalue ParmVar 0x10f6030 '__off' 'std::streamoff':'long'
| | | |   `-ReturnStmt 0x10f6b10 <line:174:2, col:10>
| | | |     `-UnaryOperator 0x10f6af8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x10f6ae8 <col:10> 'fpos<_StateT> *' this
| | | |-CXXMethodDecl 0x10f6268 <line:183:7, line:189:7> line:184:7 operator+ 'fpos<_StateT> (std::streamoff) const'
| | | | |-ParmVarDecl 0x10f6178 <col:17, col:27> col:27 referenced __off 'std::streamoff':'long'
| | | | `-CompoundStmt 0x10f6ce0 <line:185:7, line:189:7>
| | | |   |-DeclStmt 0x10f6c20 <line:186:2, col:19>
| | | |   | `-VarDecl 0x10f6b50 <col:2, col:18> col:7 referenced __pos 'fpos<_StateT>' nrvo callinit
| | | |   |   `-ParenListExpr 0x10f6c00 <col:12, col:18> 'NULL TYPE'
| | | |   |     `-UnaryOperator 0x10f6bc8 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | | |   |       `-CXXThisExpr 0x10f6bb8 <col:14> 'const fpos<_StateT> *' this
| | | |   |-CompoundAssignOperator 0x10f6c78 <line:187:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-DeclRefExpr 0x10f6c38 <col:2> 'fpos<_StateT>' lvalue Var 0x10f6b50 '__pos' 'fpos<_StateT>'
| | | |   | `-DeclRefExpr 0x10f6c58 <col:11> 'std::streamoff':'long' lvalue ParmVar 0x10f6178 '__off' 'std::streamoff':'long'
| | | |   `-ReturnStmt 0x10f6cc8 <line:188:2, col:9>
| | | |     `-DeclRefExpr 0x10f6ca8 <col:9> 'fpos<_StateT>' lvalue Var 0x10f6b50 '__pos' 'fpos<_StateT>'
| | | |-CXXMethodDecl 0x10f63b0 <line:197:7, line:203:7> line:198:7 operator- 'fpos<_StateT> (std::streamoff) const'
| | | | |-ParmVarDecl 0x10f6320 <col:17, col:27> col:27 referenced __off 'std::streamoff':'long'
| | | | `-CompoundStmt 0x10f6ea8 <line:199:7, line:203:7>
| | | |   |-DeclStmt 0x10f6de8 <line:200:2, col:19>
| | | |   | `-VarDecl 0x10f6d18 <col:2, col:18> col:7 referenced __pos 'fpos<_StateT>' nrvo callinit
| | | |   |   `-ParenListExpr 0x10f6dc8 <col:12, col:18> 'NULL TYPE'
| | | |   |     `-UnaryOperator 0x10f6d90 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | | |   |       `-CXXThisExpr 0x10f6d80 <col:14> 'const fpos<_StateT> *' this
| | | |   |-CompoundAssignOperator 0x10f6e40 <line:201:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-DeclRefExpr 0x10f6e00 <col:2> 'fpos<_StateT>' lvalue Var 0x10f6d18 '__pos' 'fpos<_StateT>'
| | | |   | `-DeclRefExpr 0x10f6e20 <col:11> 'std::streamoff':'long' lvalue ParmVar 0x10f6320 '__off' 'std::streamoff':'long'
| | | |   `-ReturnStmt 0x10f6e90 <line:202:2, col:9>
| | | |     `-DeclRefExpr 0x10f6e70 <col:9> 'fpos<_StateT>' lvalue Var 0x10f6d18 '__pos' 'fpos<_StateT>'
| | | `-CXXMethodDecl 0x10f6558 <line:210:7, line:212:41> line:211:7 operator- 'std::streamoff (const fpos<_StateT> &) const'
| | |   |-ParmVarDecl 0x10f6468 <col:17, col:29> col:29 referenced __other 'const fpos<_StateT> &'
| | |   `-CompoundStmt 0x10f80c8 <line:212:7, col:41>
| | |     `-ReturnStmt 0x10f80b8 <col:9, col:33>
| | |       `-BinaryOperator 0x10f8098 <col:16, col:33> '<dependent type>' '-'
| | |         |-MemberExpr 0x10f6ee0 <col:16> 'const std::streamoff':'const long' lvalue ->_M_off 0x10f4490
| | |         | `-CXXThisExpr 0x10f6ed0 <col:16> 'const fpos<_StateT> *' implicit this
| | |         `-CXXDependentScopeMemberExpr 0x10f8050 <col:25, col:33> '<dependent type>' lvalue ._M_off
| | |           `-DeclRefExpr 0x10f8030 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x10f6468 '__other' 'const fpos<_StateT> &'
| | `-ClassTemplateSpecializationDecl 0x10f8cb8 <line:111:3, line:213:5> line:112:11 class fpos
| |   `-TemplateArgument type '__mbstate_t'
| |-FunctionTemplateDecl 0x10f8598 <line:220:3, line:223:52> line:222:5 operator==
| | |-TemplateTypeParmDecl 0x10f80e0 <line:220:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| | `-FunctionDecl 0x10f84f8 <line:221:5, line:223:52> line:222:5 operator== 'bool (const fpos<_StateT> &, const fpos<_StateT> &)' inline
| |   |-ParmVarDecl 0x10f8290 <col:16, col:37> col:37 referenced __lhs 'const fpos<_StateT> &'
| |   |-ParmVarDecl 0x10f83e0 <col:44, col:65> col:65 referenced __rhs 'const fpos<_StateT> &'
| |   `-CompoundStmt 0x10f86e0 <line:223:5, col:52>
| |     `-ReturnStmt 0x10f86d0 <col:7, col:49>
| |       `-BinaryOperator 0x10f86b0 <col:14, col:49> 'bool' '=='
| |         |-CXXUnresolvedConstructExpr 0x10f8630 <col:14, col:29> 'std::streamoff':'long' 'std::streamoff':'long'
| |         | `-DeclRefExpr 0x10f8610 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x10f8290 '__lhs' 'const fpos<_StateT> &'
| |         `-CXXUnresolvedConstructExpr 0x10f8688 <col:34, col:49> 'std::streamoff':'long' 'std::streamoff':'long'
| |           `-DeclRefExpr 0x10f8668 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x10f83e0 '__rhs' 'const fpos<_StateT> &'
| |-FunctionTemplateDecl 0x10f8b48 <line:225:3, line:228:52> line:227:5 operator!=
| | |-TemplateTypeParmDecl 0x10f86f8 <line:225:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| | `-FunctionDecl 0x10f8aa8 <line:226:5, line:228:52> line:227:5 operator!= 'bool (const fpos<_StateT> &, const fpos<_StateT> &)' inline
| |   |-ParmVarDecl 0x10f8880 <col:16, col:37> col:37 referenced __lhs 'const fpos<_StateT> &'
| |   |-ParmVarDecl 0x10f89d0 <col:44, col:65> col:65 referenced __rhs 'const fpos<_StateT> &'
| |   `-CompoundStmt 0x10f8c90 <line:228:5, col:52>
| |     `-ReturnStmt 0x10f8c80 <col:7, col:49>
| |       `-BinaryOperator 0x10f8c60 <col:14, col:49> 'bool' '!='
| |         |-CXXUnresolvedConstructExpr 0x10f8be0 <col:14, col:29> 'std::streamoff':'long' 'std::streamoff':'long'
| |         | `-DeclRefExpr 0x10f8bc0 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x10f8880 '__lhs' 'const fpos<_StateT> &'
| |         `-CXXUnresolvedConstructExpr 0x10f8c38 <col:34, col:49> 'std::streamoff':'long' 'std::streamoff':'long'
| |           `-DeclRefExpr 0x10f8c18 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x10f89d0 '__rhs' 'const fpos<_StateT> &'
| |-TypedefDecl 0x10f8e60 <line:234:3, col:27> col:27 referenced streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| | `-TemplateSpecializationType 0x10f8dc0 'fpos<mbstate_t>' sugar fpos
| |   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |   `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| |     `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| |-TypedefDecl 0x10f8f70 <line:236:3, col:27> col:27 referenced wstreampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| | `-TemplateSpecializationType 0x10f8ed0 'fpos<mbstate_t>' sugar fpos
| |   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |   `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| |     `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| |-TypedefDecl 0x10f90a0 <line:245:3, col:27> col:27 referenced u16streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| | `-TemplateSpecializationType 0x10f8fe0 'fpos<mbstate_t>' sugar fpos
| |   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |   `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| |     `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| `-TypedefDecl 0x10f91b0 <line:247:3, col:27> col:27 referenced u32streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
|   `-TemplateSpecializationType 0x10f9110 'fpos<mbstate_t>' sugar fpos
|     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|     `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
|       `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
|-NamespaceDecl 0x10f9228 prev 0x10f3b98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/iosfwd:42:1, line:213:1> line:42:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x10f9298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-CXXRecordDecl 0x10f92f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/iosfwd:74:3, col:9> col:9 class ios_base
| |-ClassTemplateDecl 0x10f9600 <line:76:3, line:77:11> col:11 basic_ios
| | |-TemplateTypeParmDecl 0x10f93a0 <line:76:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10f94d0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10f9570 <line:77:5, col:11> col:11 class basic_ios
| | |-ClassTemplateSpecialization 0x11032a0 'basic_ios'
| | `-ClassTemplateSpecialization 0x1107b20 'basic_ios'
| |-ClassTemplateDecl 0x10f9a90 <line:79:3, line:80:11> col:11 basic_streambuf
| | |-TemplateTypeParmDecl 0x10f9828 <line:79:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10f9960 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10f9a00 <line:80:5, col:11> col:11 class basic_streambuf
| | |-ClassTemplateSpecialization 0x1103580 'basic_streambuf'
| | `-ClassTemplateSpecialization 0x1107e00 'basic_streambuf'
| |-ClassTemplateDecl 0x10f9f20 <line:82:3, line:83:11> col:11 basic_istream
| | |-TemplateTypeParmDecl 0x10f9cb8 <line:82:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10f9df0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10f9e90 <line:83:5, col:11> col:11 class basic_istream
| | |-ClassTemplateSpecialization 0x1103860 'basic_istream'
| | `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| |-ClassTemplateDecl 0x10fa6a0 <line:85:3, line:86:11> col:11 basic_ostream
| | |-TemplateTypeParmDecl 0x10fa438 <line:85:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10fa570 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10fa610 <line:86:5, col:11> col:11 class basic_ostream
| | |-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| | `-ClassTemplateSpecialization 0x11093f0 'basic_ostream'
| |-ClassTemplateDecl 0x10fab30 <line:88:3, line:89:11> col:11 basic_iostream
| | |-TemplateTypeParmDecl 0x10fa8c8 <line:88:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10faa00 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10faaa0 <line:89:5, col:11> col:11 class basic_iostream
| | |-ClassTemplateSpecialization 0x1103e20 'basic_iostream'
| | `-ClassTemplateSpecialization 0x11096d0 'basic_iostream'
| |-NamespaceDecl 0x10fad58 prev 0x10a9c20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x10fb168 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/iosfwd:94:3, line:96:11> col:11 basic_stringbuf
| | | |-TemplateTypeParmDecl 0x10fadc8 <line:94:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | | |-TemplateTypeParmDecl 0x10faf00 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | | `-TemplateArgument type 'char_traits<_CharT>'
| | | |-TemplateTypeParmDecl 0x10fb030 <line:95:6, col:40> col:15 typename depth 0 index 2 _Alloc
| | | | `-TemplateArgument type 'allocator<_CharT>'
| | | |-CXXRecordDecl 0x10fb0d8 <line:96:5, col:11> col:11 class basic_stringbuf
| | | |-ClassTemplateSpecializationDecl 0x1104240 <line:94:3, line:96:11> col:11 class basic_stringbuf
| | | | |-TemplateArgument type 'char'
| | | | |-TemplateArgument type 'std::char_traits<char>'
| | | | `-TemplateArgument type 'std::allocator<char>'
| | | `-ClassTemplateSpecializationDecl 0x1109a30 <line:94:3, line:96:11> col:11 class basic_stringbuf
| | |   |-TemplateArgument type 'wchar_t'
| | |   |-TemplateArgument type 'std::char_traits<wchar_t>'
| | |   `-TemplateArgument type 'std::allocator<wchar_t>'
| | |-ClassTemplateDecl 0x10fc468 <line:98:3, line:100:11> col:11 basic_istringstream
| | | |-TemplateTypeParmDecl 0x10fc0c8 <line:98:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | | |-TemplateTypeParmDecl 0x10fc200 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | | `-TemplateArgument type 'char_traits<_CharT>'
| | | |-TemplateTypeParmDecl 0x10fc330 <line:99:5, col:39> col:14 typename depth 0 index 2 _Alloc
| | | | `-TemplateArgument type 'allocator<_CharT>'
| | | |-CXXRecordDecl 0x10fc3d8 <line:100:5, col:11> col:11 class basic_istringstream
| | | |-ClassTemplateSpecializationDecl 0x11045b0 <line:98:3, line:100:11> col:11 class basic_istringstream
| | | | |-TemplateArgument type 'char'
| | | | |-TemplateArgument type 'std::char_traits<char>'
| | | | `-TemplateArgument type 'std::allocator<char>'
| | | `-ClassTemplateSpecializationDecl 0x1109da0 <line:98:3, line:100:11> col:11 class basic_istringstream
| | |   |-TemplateArgument type 'wchar_t'
| | |   |-TemplateArgument type 'std::char_traits<wchar_t>'
| | |   `-TemplateArgument type 'std::allocator<wchar_t>'
| | |-ClassTemplateDecl 0x10fca58 <line:102:3, line:104:11> col:11 basic_ostringstream
| | | |-TemplateTypeParmDecl 0x10fc6b8 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | | |-TemplateTypeParmDecl 0x10fc7f0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | | `-TemplateArgument type 'char_traits<_CharT>'
| | | |-TemplateTypeParmDecl 0x10fc920 <line:103:5, col:39> col:14 typename depth 0 index 2 _Alloc
| | | | `-TemplateArgument type 'allocator<_CharT>'
| | | |-CXXRecordDecl 0x10fc9c8 <line:104:5, col:11> col:11 class basic_ostringstream
| | | |-ClassTemplateSpecializationDecl 0x1104920 <line:102:3, line:104:11> col:11 class basic_ostringstream
| | | | |-TemplateArgument type 'char'
| | | | |-TemplateArgument type 'std::char_traits<char>'
| | | | `-TemplateArgument type 'std::allocator<char>'
| | | `-ClassTemplateSpecializationDecl 0x110a110 <line:102:3, line:104:11> col:11 class basic_ostringstream
| | |   |-TemplateArgument type 'wchar_t'
| | |   |-TemplateArgument type 'std::char_traits<wchar_t>'
| | |   `-TemplateArgument type 'std::allocator<wchar_t>'
| | `-ClassTemplateDecl 0x10fdcd8 <line:106:3, line:108:11> col:11 basic_stringstream
| |   |-TemplateTypeParmDecl 0x10fcca8 <line:106:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |   |-TemplateTypeParmDecl 0x10fcde0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| |   | `-TemplateArgument type 'char_traits<_CharT>'
| |   |-TemplateTypeParmDecl 0x10fdba0 <line:107:5, col:39> col:14 typename depth 0 index 2 _Alloc
| |   | `-TemplateArgument type 'allocator<_CharT>'
| |   |-CXXRecordDecl 0x10fdc48 <line:108:5, col:11> col:11 class basic_stringstream
| |   |-ClassTemplateSpecializationDecl 0x1104c90 <line:106:3, line:108:11> col:11 class basic_stringstream
| |   | |-TemplateArgument type 'char'
| |   | |-TemplateArgument type 'std::char_traits<char>'
| |   | `-TemplateArgument type 'std::allocator<char>'
| |   `-ClassTemplateSpecializationDecl 0x110a4c0 <line:106:3, line:108:11> col:11 class basic_stringstream
| |     |-TemplateArgument type 'wchar_t'
| |     |-TemplateArgument type 'std::char_traits<wchar_t>'
| |     `-TemplateArgument type 'std::allocator<wchar_t>'
| |-ClassTemplateDecl 0x10fe190 <line:112:3, line:113:11> col:11 basic_filebuf
| | |-TemplateTypeParmDecl 0x10fdf28 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10fe060 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10fe100 <line:113:5, col:11> col:11 class basic_filebuf
| | |-ClassTemplateSpecializationDecl 0x1104f80 <line:112:3, line:113:11> col:11 class basic_filebuf
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x110a7b0 <line:112:3, line:113:11> col:11 class basic_filebuf
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-ClassTemplateDecl 0x10fe620 <line:115:3, line:116:11> col:11 basic_ifstream
| | |-TemplateTypeParmDecl 0x10fe3b8 <line:115:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10fe4f0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10fe590 <line:116:5, col:11> col:11 class basic_ifstream
| | |-ClassTemplateSpecializationDecl 0x1107280 <line:115:3, line:116:11> col:11 class basic_ifstream
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x110aa90 <line:115:3, line:116:11> col:11 class basic_ifstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-ClassTemplateDecl 0x10feab0 <line:118:3, line:119:11> col:11 basic_ofstream
| | |-TemplateTypeParmDecl 0x10fe848 <line:118:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10fe980 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10fea20 <line:119:5, col:11> col:11 class basic_ofstream
| | |-ClassTemplateSpecializationDecl 0x1107560 <line:118:3, line:119:11> col:11 class basic_ofstream
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x110ad70 <line:118:3, line:119:11> col:11 class basic_ofstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-ClassTemplateDecl 0x10ffbf0 <line:121:3, line:122:11> col:11 basic_fstream
| | |-TemplateTypeParmDecl 0x10ff988 <line:121:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10ffac0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10ffb60 <line:122:5, col:11> col:11 class basic_fstream
| | |-ClassTemplateSpecializationDecl 0x1107840 <line:121:3, line:122:11> col:11 class basic_fstream
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x110b050 <line:121:3, line:122:11> col:11 class basic_fstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-ClassTemplateDecl 0x1100080 <line:124:3, line:125:11> col:11 istreambuf_iterator
| | |-TemplateTypeParmDecl 0x10ffe18 <line:124:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x10fff50 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x10ffff0 <line:125:5, col:11> col:11 class istreambuf_iterator
| | |-ClassTemplateSpecializationDecl 0x187d458 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:412:3, line:413:11> col:11 class istreambuf_iterator
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x1886e68 <line:412:3, line:413:11> col:11 class istreambuf_iterator
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-ClassTemplateDecl 0x1100510 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/iosfwd:127:3, line:128:11> col:11 ostreambuf_iterator
| | |-TemplateTypeParmDecl 0x11002a8 <line:127:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x11003e0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |-CXXRecordDecl 0x1100480 <line:128:5, col:11> col:11 class ostreambuf_iterator
| | |-ClassTemplateSpecializationDecl 0x187d6b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:415:3, line:416:11> col:11 class ostreambuf_iterator
| | | |-TemplateArgument type 'char'
| | | `-TemplateArgument type 'std::char_traits<char>'
| | `-ClassTemplateSpecializationDecl 0x18870c8 <line:415:3, line:416:11> col:11 class ostreambuf_iterator
| |   |-TemplateArgument type 'wchar_t'
| |   `-TemplateArgument type 'std::char_traits<wchar_t>'
| |-TypedefDecl 0x1103460 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/iosfwd:132:3, col:29> col:29 ios 'basic_ios<char>':'std::basic_ios<char>'
| | `-TemplateSpecializationType 0x11033c0 'basic_ios<char>' sugar basic_ios
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x11033a0 'std::basic_ios<char>'
| |     `-ClassTemplateSpecialization 0x11032a0 'basic_ios'
| |-TypedefDecl 0x1103740 <line:135:3, col:34> col:34 streambuf 'basic_streambuf<char>':'std::basic_streambuf<char>'
| | `-TemplateSpecializationType 0x11036a0 'basic_streambuf<char>' sugar basic_streambuf
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1103680 'std::basic_streambuf<char>'
| |     `-ClassTemplateSpecialization 0x1103580 'basic_streambuf'
| |-TypedefDecl 0x1103a20 <line:138:3, col:33> col:33 referenced istream 'basic_istream<char>':'std::basic_istream<char>'
| | `-TemplateSpecializationType 0x1103980 'basic_istream<char>' sugar basic_istream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1103960 'std::basic_istream<char>'
| |     `-ClassTemplateSpecialization 0x1103860 'basic_istream'
| |-TypedefDecl 0x1103d00 <line:141:3, col:33> col:33 referenced ostream 'basic_ostream<char>':'std::basic_ostream<char>'
| | `-TemplateSpecializationType 0x1103c60 'basic_ostream<char>' sugar basic_ostream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1103c40 'std::basic_ostream<char>'
| |     `-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| |-TypedefDecl 0x1103fe0 <line:144:3, col:34> col:34 iostream 'basic_iostream<char>':'std::basic_iostream<char>'
| | `-TemplateSpecializationType 0x1103f40 'basic_iostream<char>' sugar basic_iostream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1103f20 'std::basic_iostream<char>'
| |     `-ClassTemplateSpecialization 0x1103e20 'basic_iostream'
| |-TypedefDecl 0x1104410 <line:147:3, col:34> col:34 stringbuf 'basic_stringbuf<char>':'std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >'
| | `-TemplateSpecializationType 0x1104370 'basic_stringbuf<char>' sugar basic_stringbuf
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1104350 'std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >'
| |     `-ClassTemplateSpecialization 0x1104240 'basic_stringbuf'
| |-TypedefDecl 0x1104780 <line:150:3, col:38> col:38 istringstream 'basic_istringstream<char>':'std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
| | `-TemplateSpecializationType 0x11046e0 'basic_istringstream<char>' sugar basic_istringstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x11046c0 'std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
| |     `-ClassTemplateSpecialization 0x11045b0 'basic_istringstream'
| |-TypedefDecl 0x1104af0 <line:153:3, col:38> col:38 ostringstream 'basic_ostringstream<char>':'std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
| | `-TemplateSpecializationType 0x1104a50 'basic_ostringstream<char>' sugar basic_ostringstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1104a30 'std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
| |     `-ClassTemplateSpecialization 0x1104920 'basic_ostringstream'
| |-TypedefDecl 0x1104e60 <line:156:3, col:37> col:37 stringstream 'basic_stringstream<char>':'std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
| | `-TemplateSpecializationType 0x1104dc0 'basic_stringstream<char>' sugar basic_stringstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1104da0 'std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
| |     `-ClassTemplateSpecialization 0x1104c90 'basic_stringstream'
| |-TypedefDecl 0x1105140 <line:159:3, col:33> col:33 filebuf 'basic_filebuf<char>':'std::basic_filebuf<char, std::char_traits<char> >'
| | `-TemplateSpecializationType 0x11050a0 'basic_filebuf<char>' sugar basic_filebuf
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1105080 'std::basic_filebuf<char, std::char_traits<char> >'
| |     `-ClassTemplateSpecialization 0x1104f80 'basic_filebuf'
| |-TypedefDecl 0x1107440 <line:162:3, col:34> col:34 ifstream 'basic_ifstream<char>':'std::basic_ifstream<char, std::char_traits<char> >'
| | `-TemplateSpecializationType 0x11073a0 'basic_ifstream<char>' sugar basic_ifstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1107380 'std::basic_ifstream<char, std::char_traits<char> >'
| |     `-ClassTemplateSpecialization 0x1107280 'basic_ifstream'
| |-TypedefDecl 0x1107720 <line:165:3, col:34> col:34 ofstream 'basic_ofstream<char>':'std::basic_ofstream<char, std::char_traits<char> >'
| | `-TemplateSpecializationType 0x1107680 'basic_ofstream<char>' sugar basic_ofstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1107660 'std::basic_ofstream<char, std::char_traits<char> >'
| |     `-ClassTemplateSpecialization 0x1107560 'basic_ofstream'
| |-TypedefDecl 0x1107a00 <line:168:3, col:33> col:33 fstream 'basic_fstream<char>':'std::basic_fstream<char, std::char_traits<char> >'
| | `-TemplateSpecializationType 0x1107960 'basic_fstream<char>' sugar basic_fstream
| |   |-TemplateArgument type 'char'
| |   `-RecordType 0x1107940 'std::basic_fstream<char, std::char_traits<char> >'
| |     `-ClassTemplateSpecialization 0x1107840 'basic_fstream'
| |-TypedefDecl 0x1107ce0 <line:172:3, col:32> col:32 wios 'basic_ios<wchar_t>':'std::basic_ios<wchar_t>'
| | `-TemplateSpecializationType 0x1107c40 'basic_ios<wchar_t>' sugar basic_ios
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x1107c20 'std::basic_ios<wchar_t>'
| |     `-ClassTemplateSpecialization 0x1107b20 'basic_ios'
| |-TypedefDecl 0x1107fc0 <line:175:3, col:37> col:37 wstreambuf 'basic_streambuf<wchar_t>':'std::basic_streambuf<wchar_t>'
| | `-TemplateSpecializationType 0x1107f20 'basic_streambuf<wchar_t>' sugar basic_streambuf
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x1107f00 'std::basic_streambuf<wchar_t>'
| |     `-ClassTemplateSpecialization 0x1107e00 'basic_streambuf'
| |-TypedefDecl 0x11092d0 <line:178:3, col:35> col:35 referenced wistream 'basic_istream<wchar_t>':'std::basic_istream<wchar_t>'
| | `-TemplateSpecializationType 0x1108200 'basic_istream<wchar_t>' sugar basic_istream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x11081e0 'std::basic_istream<wchar_t>'
| |     `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| |-TypedefDecl 0x11095b0 <line:181:3, col:35> col:35 referenced wostream 'basic_ostream<wchar_t>':'std::basic_ostream<wchar_t>'
| | `-TemplateSpecializationType 0x1109510 'basic_ostream<wchar_t>' sugar basic_ostream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x11094f0 'std::basic_ostream<wchar_t>'
| |     `-ClassTemplateSpecialization 0x11093f0 'basic_ostream'
| |-TypedefDecl 0x1109890 <line:184:3, col:36> col:36 wiostream 'basic_iostream<wchar_t>':'std::basic_iostream<wchar_t>'
| | `-TemplateSpecializationType 0x11097f0 'basic_iostream<wchar_t>' sugar basic_iostream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x11097d0 'std::basic_iostream<wchar_t>'
| |     `-ClassTemplateSpecialization 0x11096d0 'basic_iostream'
| |-TypedefDecl 0x1109c00 <line:187:3, col:37> col:37 wstringbuf 'basic_stringbuf<wchar_t>':'std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| | `-TemplateSpecializationType 0x1109b60 'basic_stringbuf<wchar_t>' sugar basic_stringbuf
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x1109b40 'std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x1109a30 'basic_stringbuf'
| |-TypedefDecl 0x1109f70 <line:190:3, col:41> col:41 wistringstream 'basic_istringstream<wchar_t>':'std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| | `-TemplateSpecializationType 0x1109ed0 'basic_istringstream<wchar_t>' sugar basic_istringstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x1109eb0 'std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x1109da0 'basic_istringstream'
| |-TypedefDecl 0x110a320 <line:193:3, col:41> col:41 wostringstream 'basic_ostringstream<wchar_t>':'std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| | `-TemplateSpecializationType 0x110a280 'basic_ostringstream<wchar_t>' sugar basic_ostringstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x110a220 'std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x110a110 'basic_ostringstream'
| |-TypedefDecl 0x110a690 <line:196:3, col:40> col:40 wstringstream 'basic_stringstream<wchar_t>':'std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| | `-TemplateSpecializationType 0x110a5f0 'basic_stringstream<wchar_t>' sugar basic_stringstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x110a5d0 'std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x110a4c0 'basic_stringstream'
| |-TypedefDecl 0x110a970 <line:199:3, col:35> col:35 wfilebuf 'basic_filebuf<wchar_t>':'std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >'
| | `-TemplateSpecializationType 0x110a8d0 'basic_filebuf<wchar_t>' sugar basic_filebuf
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x110a8b0 'std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x110a7b0 'basic_filebuf'
| |-TypedefDecl 0x110ac50 <line:202:3, col:36> col:36 wifstream 'basic_ifstream<wchar_t>':'std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >'
| | `-TemplateSpecializationType 0x110abb0 'basic_ifstream<wchar_t>' sugar basic_ifstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x110ab90 'std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x110aa90 'basic_ifstream'
| |-TypedefDecl 0x110af30 <line:205:3, col:36> col:36 wofstream 'basic_ofstream<wchar_t>':'std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >'
| | `-TemplateSpecializationType 0x110ae90 'basic_ofstream<wchar_t>' sugar basic_ofstream
| |   |-TemplateArgument type 'wchar_t'
| |   `-RecordType 0x110ae70 'std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >'
| |     `-ClassTemplateSpecialization 0x110ad70 'basic_ofstream'
| `-TypedefDecl 0x110b210 <line:208:3, col:35> col:35 wfstream 'basic_fstream<wchar_t>':'std::basic_fstream<wchar_t, std::char_traits<wchar_t> >'
|   `-TemplateSpecializationType 0x110b170 'basic_fstream<wchar_t>' sugar basic_fstream
|     |-TemplateArgument type 'wchar_t'
|     `-RecordType 0x110b150 'std::basic_fstream<wchar_t, std::char_traits<wchar_t> >'
|       `-ClassTemplateSpecialization 0x110b050 'basic_fstream'
|-LinkageSpecDecl 0x110c5f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception.h:40:1, line:82:1> line:40:8 C++
| `-NamespaceDecl 0x110c640 prev 0x10f9228 <line:42:1, line:80:1> line:42:11 std
|   |-original Namespace 0x103af10 'std'
|   `-CXXRecordDecl 0x110c6b0 <line:60:3, line:76:3> line:60:9 referenced class exception definition
|     |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|     | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|     | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|     | |-MoveConstructor exists non_trivial user_declared
|     | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
|     | |-MoveAssignment exists non_trivial user_declared
|     | `-Destructor non_trivial user_declared
|     |-VisibilityAttr 0x110c7c8 <line:36:13> Implicit Default
|     |-CXXRecordDecl 0x110c820 <line:60:3, col:9> col:9 implicit referenced class exception
|     |-AccessSpecDecl 0x110c8b0 <line:62:3, col:9> col:3 public
|     |-CXXConstructorDecl 0x110c970 <line:63:5, col:36> col:5 used exception 'void () noexcept'
|     | `-CompoundStmt 0x110d3e8 <col:34, col:36>
|     |-CXXDestructorDecl 0x110ca68 <line:64:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception.h:64:13 used ~exception 'void () noexcept' virtual
|     |-CXXConstructorDecl 0x110cc18 <line:66:5, col:41> col:5 constexpr exception 'void (const std::exception &)' default noexcept-unevaluated 0x110cc18
|     | `-ParmVarDecl 0x110cb58 <col:15, col:30> col:31 'const std::exception &'
|     |-CXXMethodDecl 0x110cdc8 <line:67:5, col:52> col:16 operator= 'std::exception &(const std::exception &)' default noexcept-unevaluated 0x110cdc8
|     | `-ParmVarDecl 0x110ccd8 <col:26, col:41> col:42 'const std::exception &'
|     |-CXXConstructorDecl 0x110cf68 <line:68:5, col:36> col:5 constexpr exception 'void (std::exception &&)' default noexcept-unevaluated 0x110cf68
|     | `-ParmVarDecl 0x110cea8 <col:15, col:24> col:26 'std::exception &&'
|     |-CXXMethodDecl 0x110d0e8 <line:69:5, col:47> col:16 operator= 'std::exception &(std::exception &&)' default noexcept-unevaluated 0x110d0e8
|     | `-ParmVarDecl 0x110d028 <col:26, col:35> col:37 'std::exception &&'
|     `-CXXMethodDecl 0x110d248 <line:74:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception.h:75:5 what 'const char *() const noexcept' virtual
|-LinkageSpecDecl 0x110d418 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/exception:40:1, line:138:1> line:40:8 C++
| |-NamespaceDecl 0x110d468 prev 0x110c640 <line:42:1, line:111:1> line:42:11 std
| | |-original Namespace 0x103af10 'std'
| | |-CXXRecordDecl 0x110d4d8 <line:46:3, line:58:3> line:46:9 class bad_exception definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'std::exception'
| | | |-VisibilityAttr 0x110de68 <line:35:13> Implicit Default
| | | |-CXXRecordDecl 0x110df00 <line:46:3, col:9> col:9 implicit referenced class bad_exception
| | | |-AccessSpecDecl 0x110df90 <line:48:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x110e028 <line:49:5, col:45> col:5 bad_exception 'void () noexcept'
| | | | |-CXXCtorInitializer 'std::exception'
| | | | | `-CXXConstructExpr 0x110e628 <col:5> 'std::exception' 'void () noexcept'
| | | | `-CompoundStmt 0x110e690 <col:43, col:45>
| | | |-CXXDestructorDecl 0x110e120 <line:53:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/exception:53:13 ~bad_exception 'void () noexcept' virtual
| | | | `-Overrides: [ 0x110ca68 exception::~exception 'void () noexcept' ]
| | | |-CXXMethodDecl 0x110e228 <line:56:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/exception:57:5 what 'const char *() const noexcept' virtual
| | | | `-Overrides: [ 0x110d248 exception::what 'const char *() const noexcept' ]
| | | |-CXXConstructorDecl 0x110e2f8 <line:46:9> col:9 implicit constexpr bad_exception 'void (const std::bad_exception &)' inline default noexcept-unevaluated 0x110e2f8
| | | | `-ParmVarDecl 0x110e408 <col:9> col:9 'const std::bad_exception &'
| | | `-CXXMethodDecl 0x110e4a8 <col:9> col:9 implicit operator= 'std::bad_exception &(const std::bad_exception &)' inline default noexcept-unevaluated 0x110e4a8
| | |   `-ParmVarDecl 0x110e5b8 <col:9> col:9 'const std::bad_exception &'
| | |-TypedefDecl 0x110e758 <line:61:3, col:38> col:18 referenced terminate_handler 'void (*)()'
| | | `-PointerType 0x110e700 'void (*)()'
| | |   `-ParenType 0x110e6a0 'void ()' sugar
| | |     `-FunctionProtoType 0x10f45b0 'void ()' cdecl
| | |       `-BuiltinType 0xffd170 'void'
| | |-TypedefDecl 0x110e7e0 <line:64:3, col:39> col:18 referenced unexpected_handler 'void (*)()'
| | | `-PointerType 0x110e700 'void (*)()'
| | |   `-ParenType 0x110e6a0 'void ()' sugar
| | |     `-FunctionProtoType 0x10f45b0 'void ()' cdecl
| | |       `-BuiltinType 0xffd170 'void'
| | |-FunctionDecl 0x110e970 <line:67:3, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/exception:67:21 set_terminate 'std::terminate_handler (std::terminate_handler) noexcept'
| | | |-ParmVarDecl 0x110e870 <col:35> col:52 'std::terminate_handler':'void (*)()'
| | | `-VisibilityAttr 0x110ea18 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110eaf0 <line:71:3, col:37> col:21 get_terminate 'std::terminate_handler () noexcept'
| | | `-VisibilityAttr 0x110eb90 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110ec70 <line:76:3, col:71> col:8 used terminate 'void () __attribute__((noreturn)) noexcept'
| | | `-VisibilityAttr 0x110ed10 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110f2f0 <line:79:3, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/exception:79:22 set_unexpected 'std::unexpected_handler (std::unexpected_handler) noexcept'
| | | |-ParmVarDecl 0x110f220 <col:37> col:55 'std::unexpected_handler':'void (*)()'
| | | `-VisibilityAttr 0x110f398 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110f440 <line:83:3, col:39> col:22 get_unexpected 'std::unexpected_handler () noexcept'
| | | `-VisibilityAttr 0x110f4e0 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110f558 <line:88:3, col:50> col:8 unexpected 'void () __attribute__((noreturn))'
| | | `-VisibilityAttr 0x110f5f8 <line:35:13> Implicit Default
| | |-FunctionDecl 0x110f6d0 <line:102:3, col:76> col:8 referenced uncaught_exception 'bool () noexcept'
| | | |-PureAttr 0x110f770 <col:67>
| | | `-VisibilityAttr 0x110f7c8 <line:35:13> Implicit Default
| | `-FunctionDecl 0x110f878 <line:107:3, col:76> col:7 uncaught_exceptions 'int () noexcept'
| |   |-PureAttr 0x110f918 <col:67>
| |   `-VisibilityAttr 0x110f970 <line:35:13> Implicit Default
| `-NamespaceDecl 0x110f998 prev 0x10f30c0 <line:113:1, line:136:1> line:113:11 __gnu_cxx
|   |-original Namespace 0x103b2f8 '__gnu_cxx'
|   `-FunctionDecl 0x110fa28 <line:133:3, col:36> col:8 __verbose_terminate_handler 'void ()'
|     `-VisibilityAttr 0x110fac8 <line:35:13> Implicit Default
|-TypedefDecl 0x110fb38 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0xffd230 'long'
|-CXXRecordDecl 0x110fb90 </usr/lib/llvm-10/lib/clang/10.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x110fca8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:36:13> Implicit Default
| |-FieldDecl 0x110fd50 </usr/lib/llvm-10/lib/clang/10.0.0/include/__stddef_max_align_t.h:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x110fdc0 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x110fda0 <col:34, col:55> 'unsigned long' Int: 8
| |     `-UnaryExprOrTypeTraitExpr 0x110fd18 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x110fe70 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x110fee0 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x110fec0 <col:34, col:57> 'unsigned long' Int: 16
|       `-UnaryExprOrTypeTraitExpr 0x110fe38 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x110ffb8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x110ff60 'struct max_align_t' sugar
|   `-RecordType 0x110fc20 'max_align_t'
|     `-CXXRecord 0x110fb90 ''
|-NamespaceDecl 0x1110028 prev 0x110d468 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:50:1, line:53:1> line:50:11 std
| |-original Namespace 0x103af10 'std'
| `-CXXRecordDecl 0x1110098 <line:52:3, col:9> col:9 referenced class type_info
|   `-VisibilityAttr 0x1110150 <line:36:13> Implicit Default
|-NamespaceDecl 0x11101a8 <line:55:1, line:74:1> line:55:11 __cxxabiv1
| |-CXXRecordDecl 0x11147d0 <line:57:3, col:10> col:10 referenced struct __cxa_refcounted_exception
| | `-VisibilityAttr 0x1114880 <line:36:13> Implicit Default
| `-LinkageSpecDecl 0x11148f8 <line:59:3, line:73:5> line:59:10 C
|   |-FunctionDecl 0x1114a58 <line:62:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:63:7 referenced __cxa_allocate_exception 'void *(size_t) noexcept'
|   | |-ParmVarDecl 0x1114958 <col:32> col:38 'size_t':'unsigned long'
|   | `-VisibilityAttr 0x1114b00 <line:36:13> Implicit Default
|   |-FunctionDecl 0x1114c70 <line:65:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:66:7 referenced __cxa_free_exception 'void (void *) noexcept'
|   | |-ParmVarDecl 0x1114b70 <col:28, col:32> col:33 'void *'
|   | `-VisibilityAttr 0x1114d18 <line:36:13> Implicit Default
|   `-FunctionDecl 0x1115200 <line:69:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:70:7 referenced __cxa_init_primary_exception '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept'
|     |-ParmVarDecl 0x1114d88 <col:36, col:42> col:42 object 'void *'
|     |-ParmVarDecl 0x1114ef0 <col:50, col:66> col:66 tinfo 'std::type_info *'
|     |-ParmVarDecl 0x11150a0 <line:71:17, col:60> col:47 dest 'void (*)(void *)'
|     `-VisibilityAttr 0x11152b8 <line:36:13> Implicit Default
|-NamespaceDecl 0x1115310 prev 0x1110028 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/hash_bytes.h:37:1, line:57:1> line:37:11 std
| |-original Namespace 0x103af10 'std'
| |-FunctionDecl 0x11155d8 <line:46:3, line:47:61> col:3 used _Hash_bytes 'std::size_t (const void *, std::size_t, std::size_t)'
| | |-ParmVarDecl 0x11153c0 <col:15, col:27> col:27 __ptr 'const void *'
| | |-ParmVarDecl 0x1115438 <col:34, col:41> col:41 __len 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x11154b0 <col:48, col:55> col:55 __seed 'std::size_t':'unsigned long'
| | `-VisibilityAttr 0x1115690 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:34:13> Implicit Default
| `-FunctionDecl 0x111a278 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/hash_bytes.h:53:3, line:54:65> col:3 used _Fnv_hash_bytes 'std::size_t (const void *, std::size_t, std::size_t)'
|   |-ParmVarDecl 0x1115700 <col:19, col:31> col:31 __ptr 'const void *'
|   |-ParmVarDecl 0x111a160 <col:38, col:45> col:45 __len 'std::size_t':'unsigned long'
|   |-ParmVarDecl 0x111a1d8 <col:52, col:59> col:59 __seed 'std::size_t':'unsigned long'
|   `-VisibilityAttr 0x111a330 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:34:13> Implicit Default
|-LinkageSpecDecl 0x111a3a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:41:1, line:218:1> line:41:8 C++
| |-NamespaceDecl 0x111a3f8 prev 0x11101a8 <line:43:1, line:46:1> line:43:11 __cxxabiv1
| | |-original Namespace 0x11101a8 '__cxxabiv1'
| | `-CXXRecordDecl 0x111a468 <line:45:3, col:9> col:9 referenced class __class_type_info
| |   `-VisibilityAttr 0x111a520 <line:39:13> Implicit Default
| `-NamespaceDecl 0x111a578 prev 0x1115310 <line:80:1, line:216:1> line:80:11 std
|   |-original Namespace 0x103af10 'std'
|   |-CXXRecordDecl 0x111a5e8 prev 0x1110098 <line:88:3, line:179:3> line:88:9 class type_info definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor
|   | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
|   | | |-MoveConstructor
|   | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
|   | | |-MoveAssignment
|   | | `-Destructor non_trivial user_declared
|   | |-VisibilityAttr 0x111a710 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:36:13> Inherited Default
|   | |-CXXRecordDecl 0x111a738 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:88:3, col:9> col:9 implicit referenced class type_info
|   | |-AccessSpecDecl 0x111a7c8 <line:90:3, col:9> col:3 public
|   | |-CXXDestructorDecl 0x111a838 <line:95:5, col:24> col:13 ~type_info 'void () noexcept' virtual
|   | |-CXXMethodDecl 0x111a978 <line:99:5, line:100:54> line:99:17 used name 'const char *() const noexcept'
|   | | `-CompoundStmt 0x111e600 <line:100:5, col:54>
|   | |   `-ReturnStmt 0x111e5f0 <col:7, col:46>
|   | |     `-ConditionalOperator 0x111e5c0 <col:14, col:46> 'const char *'
|   | |       |-BinaryOperator 0x111e4b0 <col:14, col:27> 'bool' '=='
|   | |       | |-ImplicitCastExpr 0x111e480 <col:14, col:22> 'int' <IntegralCast>
|   | |       | | `-ImplicitCastExpr 0x111e468 <col:14, col:22> 'char' <LValueToRValue>
|   | |       | |   `-ArraySubscriptExpr 0x111e430 <col:14, col:22> 'const char' lvalue
|   | |       | |     |-ImplicitCastExpr 0x111e418 <col:14> 'const char *' <LValueToRValue>
|   | |       | |     | `-MemberExpr 0x111e3c8 <col:14> 'const char *const' lvalue ->__name 0x111de68
|   | |       | |     |   `-CXXThisExpr 0x111e3b8 <col:14> 'const std::type_info *' implicit this
|   | |       | |     `-IntegerLiteral 0x111e3f8 <col:21> 'int' 0
|   | |       | `-ImplicitCastExpr 0x111e498 <col:27> 'int' <IntegralCast>
|   | |       |   `-CharacterLiteral 0x111e450 <col:27> 'char' 42
|   | |       |-BinaryOperator 0x111e548 <col:33, col:42> 'const char *' '+'
|   | |       | |-ImplicitCastExpr 0x111e530 <col:33> 'const char *' <LValueToRValue>
|   | |       | | `-MemberExpr 0x111e4e0 <col:33> 'const char *const' lvalue ->__name 0x111de68
|   | |       | |   `-CXXThisExpr 0x111e4d0 <col:33> 'const std::type_info *' implicit this
|   | |       | `-IntegerLiteral 0x111e510 <col:42> 'int' 1
|   | |       `-ImplicitCastExpr 0x111e5a8 <col:46> 'const char *' <LValueToRValue>
|   | |         `-MemberExpr 0x111e578 <col:46> 'const char *const' lvalue ->__name 0x111de68
|   | |           `-CXXThisExpr 0x111e568 <col:46> 'const std::type_info *' implicit this
|   | |-CXXMethodDecl 0x111ab50 <line:115:5, line:118:49> line:115:10 before 'bool (const std::type_info &) const noexcept'
|   | | |-ParmVarDecl 0x111aa58 <col:17, col:34> col:34 used __arg 'const std::type_info &'
|   | | `-CompoundStmt 0x111f780 <line:116:5, line:118:49>
|   | |   `-ReturnStmt 0x111f770 <line:116:7, line:118:46>
|   | |     `-ConditionalOperator 0x111f740 <line:116:14, line:118:46> 'bool'
|   | |       |-ParenExpr 0x111f1a8 <line:116:14, col:57> 'bool'
|   | |       | `-BinaryOperator 0x111f188 <col:15, col:54> 'bool' '&&'
|   | |       |   |-BinaryOperator 0x111e710 <col:15, col:28> 'bool' '=='
|   | |       |   | |-ImplicitCastExpr 0x111e6e0 <col:15, col:23> 'int' <IntegralCast>
|   | |       |   | | `-ImplicitCastExpr 0x111e6c8 <col:15, col:23> 'char' <LValueToRValue>
|   | |       |   | |   `-ArraySubscriptExpr 0x111e690 <col:15, col:23> 'const char' lvalue
|   | |       |   | |     |-ImplicitCastExpr 0x111e678 <col:15> 'const char *' <LValueToRValue>
|   | |       |   | |     | `-MemberExpr 0x111e628 <col:15> 'const char *const' lvalue ->__name 0x111de68
|   | |       |   | |     |   `-CXXThisExpr 0x111e618 <col:15> 'const std::type_info *' implicit this
|   | |       |   | |     `-IntegerLiteral 0x111e658 <col:22> 'int' 0
|   | |       |   | `-ImplicitCastExpr 0x111e6f8 <col:28> 'int' <IntegralCast>
|   | |       |   |   `-CharacterLiteral 0x111e6b0 <col:28> 'char' 42
|   | |       |   `-BinaryOperator 0x111f168 <col:35, col:54> 'bool' '=='
|   | |       |     |-ImplicitCastExpr 0x111f138 <col:35, col:49> 'int' <IntegralCast>
|   | |       |     | `-ImplicitCastExpr 0x111f120 <col:35, col:49> 'char' <LValueToRValue>
|   | |       |     |   `-ArraySubscriptExpr 0x111f0e8 <col:35, col:49> 'const char' lvalue
|   | |       |     |     |-ImplicitCastExpr 0x111f0d0 <col:35, col:41> 'const char *' <LValueToRValue>
|   | |       |     |     | `-MemberExpr 0x111f080 <col:35, col:41> 'const char *const' lvalue .__name 0x111de68
|   | |       |     |     |   `-DeclRefExpr 0x111e730 <col:35> 'const std::type_info' lvalue ParmVar 0x111aa58 '__arg' 'const std::type_info &'
|   | |       |     |     `-IntegerLiteral 0x111f0b0 <col:48> 'int' 0
|   | |       |     `-ImplicitCastExpr 0x111f150 <col:54> 'int' <IntegralCast>
|   | |       |       `-CharacterLiteral 0x111f108 <col:54> 'char' 42
|   | |       |-BinaryOperator 0x111f288 <line:117:4, col:19> 'bool' '<'
|   | |       | |-ImplicitCastExpr 0x111f258 <col:4> 'const char *' <LValueToRValue>
|   | |       | | `-MemberExpr 0x111f1d8 <col:4> 'const char *const' lvalue ->__name 0x111de68
|   | |       | |   `-CXXThisExpr 0x111f1c8 <col:4> 'const std::type_info *' implicit this
|   | |       | `-ImplicitCastExpr 0x111f270 <col:13, col:19> 'const char *' <LValueToRValue>
|   | |       |   `-MemberExpr 0x111f228 <col:13, col:19> 'const char *const' lvalue .__name 0x111de68
|   | |       |     `-DeclRefExpr 0x111f208 <col:13> 'const std::type_info' lvalue ParmVar 0x111aa58 '__arg' 'const std::type_info &'
|   | |       `-BinaryOperator 0x111f720 <line:118:4, col:46> 'bool' '<'
|   | |         |-CallExpr 0x111f6a0 <col:4, col:42> 'int'
|   | |         | |-ImplicitCastExpr 0x111f688 <col:4> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
|   | |         | | `-DeclRefExpr 0x111f550 <col:4> '<builtin fn type>' Function 0x111f378 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
|   | |         | |-ImplicitCastExpr 0x111f6d0 <col:22> 'const char *' <LValueToRValue>
|   | |         | | `-MemberExpr 0x111f580 <col:22> 'const char *const' lvalue ->__name 0x111de68
|   | |         | |   `-CXXThisExpr 0x111f570 <col:22> 'const std::type_info *' implicit this
|   | |         | `-ImplicitCastExpr 0x111f6e8 <col:30, col:36> 'const char *' <LValueToRValue>
|   | |         |   `-MemberExpr 0x111f5d0 <col:30, col:36> 'const char *const' lvalue .__name 0x111de68
|   | |         |     `-DeclRefExpr 0x111f5b0 <col:30> 'const std::type_info' lvalue ParmVar 0x111aa58 '__arg' 'const std::type_info &'
|   | |         `-IntegerLiteral 0x111f700 <col:46> 'int' 0
|   | |-CXXMethodDecl 0x111aca0 <line:120:5, line:125:5> line:120:10 used operator== 'bool (const std::type_info &) const noexcept'
|   | | |-ParmVarDecl 0x111ac08 <col:21, col:38> col:38 used __arg 'const std::type_info &'
|   | | `-CompoundStmt 0x111fbd8 <line:121:5, line:125:5>
|   | |   `-ReturnStmt 0x111fbc8 <line:122:7, line:124:50>
|   | |     `-ParenExpr 0x111fba8 <line:122:14, line:124:50> 'bool'
|   | |       `-BinaryOperator 0x111fb88 <line:122:15, line:124:49> 'bool' '||'
|   | |         |-ParenExpr 0x111f878 <line:122:15, col:38> 'bool'
|   | |         | `-BinaryOperator 0x111f858 <col:16, col:32> 'bool' '=='
|   | |         |   |-ImplicitCastExpr 0x111f828 <col:16> 'const char *' <LValueToRValue>
|   | |         |   | `-MemberExpr 0x111f7a8 <col:16> 'const char *const' lvalue ->__name 0x111de68
|   | |         |   |   `-CXXThisExpr 0x111f798 <col:16> 'const std::type_info *' implicit this
|   | |         |   `-ImplicitCastExpr 0x111f840 <col:26, col:32> 'const char *' <LValueToRValue>
|   | |         |     `-MemberExpr 0x111f7f8 <col:26, col:32> 'const char *const' lvalue .__name 0x111de68
|   | |         |       `-DeclRefExpr 0x111f7d8 <col:26> 'const std::type_info' lvalue ParmVar 0x111ac08 '__arg' 'const std::type_info &'
|   | |         `-ParenExpr 0x111fb68 <line:123:11, line:124:49> 'bool'
|   | |           `-BinaryOperator 0x111fb48 <line:123:12, line:124:48> 'bool' '&&'
|   | |             |-BinaryOperator 0x111f990 <line:123:12, col:25> 'bool' '!='
|   | |             | |-ImplicitCastExpr 0x111f960 <col:12, col:20> 'int' <IntegralCast>
|   | |             | | `-ImplicitCastExpr 0x111f948 <col:12, col:20> 'char' <LValueToRValue>
|   | |             | |   `-ArraySubscriptExpr 0x111f910 <col:12, col:20> 'const char' lvalue
|   | |             | |     |-ImplicitCastExpr 0x111f8f8 <col:12> 'const char *' <LValueToRValue>
|   | |             | |     | `-MemberExpr 0x111f8a8 <col:12> 'const char *const' lvalue ->__name 0x111de68
|   | |             | |     |   `-CXXThisExpr 0x111f898 <col:12> 'const std::type_info *' implicit this
|   | |             | |     `-IntegerLiteral 0x111f8d8 <col:19> 'int' 0
|   | |             | `-ImplicitCastExpr 0x111f978 <col:25> 'int' <IntegralCast>
|   | |             |   `-CharacterLiteral 0x111f930 <col:25> 'char' 42
|   | |             `-BinaryOperator 0x111fb28 <line:124:5, col:48> 'bool' '=='
|   | |               |-CallExpr 0x111faa8 <col:5, col:43> 'int'
|   | |               | |-ImplicitCastExpr 0x111fa90 <col:5> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
|   | |               | | `-DeclRefExpr 0x111f9b0 <col:5> '<builtin fn type>' Function 0x111f378 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
|   | |               | |-ImplicitCastExpr 0x111fad8 <col:23> 'const char *' <LValueToRValue>
|   | |               | | `-MemberExpr 0x111f9e0 <col:23> 'const char *const' lvalue ->__name 0x111de68
|   | |               | |   `-CXXThisExpr 0x111f9d0 <col:23> 'const std::type_info *' implicit this
|   | |               | `-ImplicitCastExpr 0x111faf0 <col:31, col:37> 'const char *' <LValueToRValue>
|   | |               |   `-MemberExpr 0x111fa30 <col:31, col:37> 'const char *const' lvalue .__name 0x111de68
|   | |               |     `-DeclRefExpr 0x111fa10 <col:31> 'const std::type_info' lvalue ParmVar 0x111ac08 '__arg' 'const std::type_info &'
|   | |               `-IntegerLiteral 0x111fb08 <col:48> 'int' 0
|   | |-CXXMethodDecl 0x111adf0 <line:136:5, line:137:34> line:136:10 operator!= 'bool (const std::type_info &) const noexcept'
|   | | |-ParmVarDecl 0x111ad58 <col:21, col:38> col:38 used __arg 'const std::type_info &'
|   | | `-CompoundStmt 0x111fca0 <line:137:5, col:34>
|   | |   `-ReturnStmt 0x111fc90 <col:7, col:31>
|   | |     `-UnaryOperator 0x111fc78 <col:14, col:31> 'bool' prefix '!' cannot overflow
|   | |       `-CXXMemberCallExpr 0x111fc50 <col:15, col:31> 'bool'
|   | |         |-MemberExpr 0x111fc00 <col:15, col:23> '<bound member function type>' ->operator== 0x111aca0
|   | |         | `-CXXThisExpr 0x111fbf0 <col:15> 'const std::type_info *' implicit this
|   | |         `-DeclRefExpr 0x111fc30 <col:26> 'const std::type_info' lvalue ParmVar 0x111ad58 '__arg' 'const std::type_info &'
|   | |-CXXMethodDecl 0x111af20 <line:140:5, line:148:5> line:140:12 hash_code 'std::size_t () const noexcept'
|   | | `-CompoundStmt 0x11202b0 <line:141:5, line:148:5>
|   | |   `-ReturnStmt 0x11202a0 <line:143:7, line:144:38>
|   | |     `-CallExpr 0x1120250 <line:143:14, line:144:38> 'std::size_t':'unsigned long'
|   | |       |-ImplicitCastExpr 0x1120238 <line:143:14> 'std::size_t (*)(const void *, std::size_t, std::size_t)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x11201b8 <col:14> 'std::size_t (const void *, std::size_t, std::size_t)' lvalue Function 0x11155d8 '_Hash_bytes' 'std::size_t (const void *, std::size_t, std::size_t)'
|   | |       |-ImplicitCastExpr 0x1120288 <col:26, col:31> 'const void *' <BitCast>
|   | |       | `-CXXMemberCallExpr 0x111fd40 <col:26, col:31> 'const char *'
|   | |       |   `-MemberExpr 0x111fd10 <col:26> '<bound member function type>' ->name 0x111a978
|   | |       |     `-CXXThisExpr 0x111fd00 <col:26> 'const std::type_info *' implicit this
|   | |       |-CallExpr 0x1120130 <col:34, col:57> 'unsigned long'
|   | |       | |-ImplicitCastExpr 0x1120058 <col:34> 'unsigned long (*)(const char *) noexcept' <BuiltinFnToFnPtr>
|   | |       | | `-DeclRefExpr 0x111ff78 <col:34> '<builtin fn type>' Function 0x111fe10 '__builtin_strlen' 'unsigned long (const char *) noexcept'
|   | |       | `-CXXMemberCallExpr 0x111ffd8 <col:51, col:56> 'const char *'
|   | |       |   `-MemberExpr 0x111ffa8 <col:51> '<bound member function type>' ->name 0x111a978
|   | |       |     `-CXXThisExpr 0x111ff98 <col:51> 'const std::type_info *' implicit this
|   | |       `-CXXStaticCastExpr 0x1120188 <line:144:5, col:37> 'std::size_t':'unsigned long' static_cast<std::size_t> <NoOp>
|   | |         `-IntegerLiteral 0x1120158 <col:25> 'unsigned long' 3339675911
|   | |-CXXMethodDecl 0x111b008 <line:152:5, col:35> col:18 __is_pointer_p 'bool () const' virtual
|   | |-CXXMethodDecl 0x111d760 <line:155:5, col:36> col:18 __is_function_p 'bool () const' virtual
|   | |-CXXMethodDecl 0x111da28 <line:163:5, line:164:26> line:163:18 __do_catch 'bool (const std::type_info *, void **, unsigned int) const' virtual
|   | | |-ParmVarDecl 0x111d810 <col:29, col:46> col:46 __thr_type 'const std::type_info *'
|   | | |-ParmVarDecl 0x111d8c0 <col:58, col:65> col:65 __thr_obj 'void **'
|   | | `-ParmVarDecl 0x111d940 <line:164:8, col:17> col:17 __outer 'unsigned int'
|   | |-CXXMethodDecl 0x111dd78 <line:167:5, line:168:27> line:167:18 __do_upcast 'bool (const __cxxabiv1::__class_type_info *, void **) const' virtual
|   | | |-ParmVarDecl 0x111dbe0 <col:30, col:67> col:67 __target 'const __cxxabiv1::__class_type_info *'
|   | | `-ParmVarDecl 0x111dc60 <line:168:9, col:16> col:16 __obj_ptr 'void **'
|   | |-AccessSpecDecl 0x111de28 <line:170:3, col:12> col:3 protected
|   | |-FieldDecl 0x111de68 <line:171:5, col:17> col:17 referenced __name 'const char *'
|   | |-CXXConstructorDecl 0x111dfa8 <line:173:5, col:56> col:14 type_info 'void (const char *)'
|   | | |-ParmVarDecl 0x111ded0 <col:24, col:36> col:36 used __n 'const char *'
|   | | |-CXXCtorInitializer Field 0x111de68 '__name' 'const char *'
|   | | | `-ImplicitCastExpr 0x1120308 <col:49> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11202c8 <col:49> 'const char *' lvalue ParmVar 0x111ded0 '__n' 'const char *'
|   | | `-CompoundStmt 0x1120350 <col:54, col:56>
|   | |-AccessSpecDecl 0x111e058 <line:175:3, col:10> col:3 private
|   | |-CXXMethodDecl 0x111e188 <line:177:5, col:42> col:16 operator= 'std::type_info &(const std::type_info &)'
|   | | `-ParmVarDecl 0x111e090 <col:26, col:41> col:42 'const std::type_info &'
|   | `-CXXConstructorDecl 0x111e308 <line:178:5, col:31> col:5 type_info 'void (const std::type_info &)'
|   |   `-ParmVarDecl 0x111e240 <col:15, col:30> col:31 'const std::type_info &'
|   |-CXXRecordDecl 0x1120360 <line:187:3, line:198:3> line:187:9 class bad_cast definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor exists non_trivial user_provided
|   | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|   | | |-MoveConstructor needs_overload_resolution
|   | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
|   | | |-MoveAssignment needs_overload_resolution
|   | | `-Destructor non_trivial user_declared needs_overload_resolution
|   | |-public 'std::exception'
|   | |-VisibilityAttr 0x1120478 <line:39:13> Implicit Default
|   | |-CXXRecordDecl 0x1120510 <line:187:3, col:9> col:9 implicit referenced class bad_cast
|   | |-AccessSpecDecl 0x11205a0 <line:189:3, col:9> col:3 public
|   | |-CXXConstructorDecl 0x1120638 <line:190:5, col:40> col:5 bad_cast 'void () noexcept'
|   | | |-CXXCtorInitializer 'std::exception'
|   | | | `-CXXConstructExpr 0x1120c38 <col:5> 'std::exception' 'void () noexcept'
|   | | `-CompoundStmt 0x1120ca0 <col:38, col:40>
|   | |-CXXDestructorDecl 0x1120730 <line:194:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:194:13 ~bad_cast 'void () noexcept' virtual
|   | | `-Overrides: [ 0x110ca68 exception::~exception 'void () noexcept' ]
|   | |-CXXMethodDecl 0x1120838 <line:197:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:197:25 what 'const char *() const noexcept' virtual
|   | | `-Overrides: [ 0x110d248 exception::what 'const char *() const noexcept' ]
|   | |-CXXConstructorDecl 0x1120908 <line:187:9> col:9 implicit constexpr bad_cast 'void (const std::bad_cast &)' inline default noexcept-unevaluated 0x1120908
|   | | `-ParmVarDecl 0x1120a18 <col:9> col:9 'const std::bad_cast &'
|   | `-CXXMethodDecl 0x1120ab8 <col:9> col:9 implicit operator= 'std::bad_cast &(const std::bad_cast &)' inline default noexcept-unevaluated 0x1120ab8
|   |   `-ParmVarDecl 0x1120bc8 <col:9> col:9 'const std::bad_cast &'
|   `-CXXRecordDecl 0x1120cb0 <line:204:3, line:215:3> line:204:9 class bad_typeid definition
|     |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|     | |-DefaultConstructor exists non_trivial user_provided
|     | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|     | |-MoveConstructor needs_overload_resolution
|     | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
|     | |-MoveAssignment needs_overload_resolution
|     | `-Destructor non_trivial user_declared needs_overload_resolution
|     |-public 'std::exception'
|     |-VisibilityAttr 0x1120dc8 <line:39:13> Implicit Default
|     |-CXXRecordDecl 0x1120e60 <line:204:3, col:9> col:9 implicit referenced class bad_typeid
|     |-AccessSpecDecl 0x1120ef0 <line:206:3, col:9> col:3 public
|     |-CXXConstructorDecl 0x1120f88 <line:207:5, col:43> col:5 bad_typeid 'void () noexcept'
|     | |-CXXCtorInitializer 'std::exception'
|     | | `-CXXConstructExpr 0x1121db8 <col:5> 'std::exception' 'void () noexcept'
|     | `-CompoundStmt 0x1121e20 <col:41, col:43>
|     |-CXXDestructorDecl 0x1121080 <line:211:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:211:13 ~bad_typeid 'void () noexcept' virtual
|     | `-Overrides: [ 0x110ca68 exception::~exception 'void () noexcept' ]
|     |-CXXMethodDecl 0x11219b8 <line:214:5, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/typeinfo:214:25 what 'const char *() const noexcept' virtual
|     | `-Overrides: [ 0x110d248 exception::what 'const char *() const noexcept' ]
|     |-CXXConstructorDecl 0x1121a88 <line:204:9> col:9 implicit constexpr bad_typeid 'void (const std::bad_typeid &)' inline default noexcept-unevaluated 0x1121a88
|     | `-ParmVarDecl 0x1121b98 <col:9> col:9 'const std::bad_typeid &'
|     `-CXXMethodDecl 0x1121c38 <col:9> col:9 implicit operator= 'std::bad_typeid &(const std::bad_typeid &)' inline default noexcept-unevaluated 0x1121c38
|       `-ParmVarDecl 0x1121d48 <col:9> col:9 'const std::bad_typeid &'
|-LinkageSpecDecl 0x111f328 <line:118:4> col:4 implicit C
| `-FunctionDecl 0x111f378 <col:4> col:4 implicit used __builtin_strcmp 'int (const char *, const char *) noexcept' extern
|   |-ParmVarDecl 0x111f418 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-ParmVarDecl 0x111f480 <<invalid sloc>> <invalid sloc> 'const char *'
|   `-NoThrowAttr 0x111f4f8 <col:4> Implicit
|-LinkageSpecDecl 0x111fdc0 <line:143:34> col:34 implicit C
| `-FunctionDecl 0x111fe10 <col:34> col:34 implicit used __builtin_strlen 'unsigned long (const char *) noexcept' extern
|   |-ParmVarDecl 0x111feb0 <<invalid sloc>> <invalid sloc> 'const char *'
|   `-NoThrowAttr 0x111ff20 <col:34> Implicit
|-LinkageSpecDecl 0x1121e50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/new:44:1, line:182:1> line:44:8 C++
| |-NamespaceDecl 0x1121ea0 prev 0x111a578 <line:46:1, line:112:1> line:46:11 std
| | |-original Namespace 0x103af10 'std'
| | |-CXXRecordDecl 0x1121f10 <line:54:3, line:70:3> line:54:9 referenced class bad_alloc definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'std::exception'
| | | |-VisibilityAttr 0x1122028 <line:42:13> Implicit Default
| | | |-CXXRecordDecl 0x11220c0 <line:54:3, col:9> col:9 implicit referenced class bad_alloc
| | | |-AccessSpecDecl 0x1122150 <line:56:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x1122210 <line:57:5, col:27> col:5 used bad_alloc 'void () throw()'
| | | | |-CXXCtorInitializer 'std::exception'
| | | | | `-CXXConstructExpr 0x1122918 <col:5> 'std::exception' 'void () noexcept'
| | | | `-CompoundStmt 0x1124970 <col:25, col:27>
| | | |-CXXConstructorDecl 0x11223b8 <line:60:5, col:41> col:5 constexpr bad_alloc 'void (const std::bad_alloc &)' default noexcept-unevaluated 0x11223b8
| | | | `-ParmVarDecl 0x11222f8 <col:15, col:30> col:31 'const std::bad_alloc &'
| | | |-CXXMethodDecl 0x1122568 <line:61:5, col:52> col:16 operator= 'std::bad_alloc &(const std::bad_alloc &)' default noexcept-unevaluated 0x1122568
| | | | `-ParmVarDecl 0x1122478 <col:26, col:41> col:42 'const std::bad_alloc &'
| | | |-CXXDestructorDecl 0x1122660 <line:66:5, col:32> col:13 used ~bad_alloc 'void () throw()' virtual
| | | | `-Overrides: [ 0x110ca68 exception::~exception 'void () noexcept' ]
| | | `-CXXMethodDecl 0x1122798 <line:69:5, col:44> col:25 what 'const char *() const throw()' virtual
| | |   `-Overrides: [ 0x110d248 exception::what 'const char *() const noexcept' ]
| | |-CXXRecordDecl 0x1124980 <line:73:3, line:84:3> line:73:9 class bad_array_new_length definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'std::bad_alloc'
| | | |-VisibilityAttr 0x1124a98 <line:42:13> Implicit Default
| | | |-CXXRecordDecl 0x1124b30 <line:73:3, col:9> col:9 implicit referenced class bad_array_new_length
| | | |-AccessSpecDecl 0x1124bc0 <line:75:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x1124c58 <line:76:5, col:38> col:5 bad_array_new_length 'void () throw()'
| | | | |-CXXCtorInitializer 'std::bad_alloc'
| | | | | `-CXXConstructExpr 0x1125258 <col:5> 'std::bad_alloc' 'void () throw()'
| | | | `-CompoundStmt 0x11252c0 <col:36, col:38>
| | | |-CXXDestructorDecl 0x1124d50 <line:80:5, col:43> col:13 ~bad_array_new_length 'void () throw()' virtual
| | | | `-Overrides: [ 0x1122660 bad_alloc::~bad_alloc 'void () throw()' ]
| | | |-CXXMethodDecl 0x1124e58 <line:83:5, col:44> col:25 what 'const char *() const throw()' virtual
| | | | `-Overrides: [ 0x1122798 bad_alloc::what 'const char *() const throw()' ]
| | | |-CXXConstructorDecl 0x1124f28 <line:73:9> col:9 implicit constexpr bad_array_new_length 'void (const std::bad_array_new_length &)' inline default noexcept-unevaluated 0x1124f28
| | | | `-ParmVarDecl 0x1125038 <col:9> col:9 'const std::bad_array_new_length &'
| | | `-CXXMethodDecl 0x11250d8 <col:9> col:9 implicit operator= 'std::bad_array_new_length &(const std::bad_array_new_length &)' inline default noexcept-unevaluated 0x11250d8
| | |   `-ParmVarDecl 0x11251e8 <col:9> col:9 'const std::bad_array_new_length &'
| | |-CXXRecordDecl 0x11252d0 <line:91:3, line:96:3> line:91:10 referenced struct nothrow_t definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-VisibilityAttr 0x11253e8 <line:42:13> Implicit Default
| | | |-CXXRecordDecl 0x1125440 <line:91:3, col:10> col:10 implicit referenced struct nothrow_t
| | | `-CXXConstructorDecl 0x1125530 <line:94:5, col:34> col:14 constexpr nothrow_t 'void ()' default trivial noexcept-unevaluated 0x1125530
| | |-VarDecl 0x1125630 <line:98:3, col:26> col:26 nothrow 'const std::nothrow_t' extern
| | | `-VisibilityAttr 0x1125698 <line:42:13> Implicit Default
| | |-TypedefDecl 0x1125720 <line:102:3, col:31> col:18 referenced new_handler 'void (*)()'
| | | `-PointerType 0x110e700 'void (*)()'
| | |   `-ParenType 0x110e6a0 'void ()' sugar
| | |     `-FunctionProtoType 0x10f45b0 'void ()' cdecl
| | |       `-BuiltinType 0xffd170 'void'
| | |-FunctionDecl 0x1125880 <line:106:3, col:50> col:15 set_new_handler 'std::new_handler (std::new_handler) throw()'
| | | |-ParmVarDecl 0x11257b0 <col:31> col:42 'std::new_handler':'void (*)()'
| | | `-VisibilityAttr 0x1125d50 <line:42:13> Implicit Default
| | `-FunctionDecl 0x1125e00 <line:110:3, col:33> col:15 get_new_handler 'std::new_handler () noexcept'
| |   `-VisibilityAttr 0x1125ea0 <line:42:13> Implicit Default
| |-FunctionDecl 0x1126600 prev 0x1126060 <line:125:20, line:126:41> line:125:26 used operator new 'void *(std::size_t)'
| | |-ParmVarDecl 0x1125f90 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | `-VisibilityAttr 0x11266d8 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x11267e8 prev 0x11261c8 <line:127:20, line:128:41> line:127:26 referenced operator new[] 'void *(std::size_t)'
| | |-ParmVarDecl 0x1126750 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | `-VisibilityAttr 0x11268c0 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x1126998 prev 0x1126330 <line:129:1, line:130:41> line:129:6 used operator delete 'void (void *) noexcept'
| | |-ParmVarDecl 0x1126900 <col:22, col:26> col:27 'void *'
| | `-VisibilityAttr 0x1126a70 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x1126b48 prev 0x1126498 <line:131:1, line:132:41> line:131:6 referenced operator delete[] 'void (void *) noexcept'
| | |-ParmVarDecl 0x1126ab0 <col:24, col:28> col:29 'void *'
| | `-VisibilityAttr 0x1126c20 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x1126f28 <line:139:20, line:140:53> line:139:26 operator new 'void *(std::size_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x1126c98 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x1126e00 <col:52, col:72> col:73 'const std::nothrow_t &'
| | |-RestrictAttr 0x1126fd8 <line:140:42> malloc
| | `-VisibilityAttr 0x1127030 <line:42:13> Implicit Default
| |-FunctionDecl 0x1127210 <line:141:20, line:142:53> line:141:26 operator new[] 'void *(std::size_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x11270a8 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x1127168 <col:54, col:74> col:75 'const std::nothrow_t &'
| | |-RestrictAttr 0x11272c0 <line:142:42> malloc
| | `-VisibilityAttr 0x1127318 <line:42:13> Implicit Default
| |-FunctionDecl 0x1127530 <line:143:1, line:144:41> line:143:6 operator delete 'void (void *, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x1127358 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x1127418 <col:29, col:49> col:50 'const std::nothrow_t &'
| | `-VisibilityAttr 0x11275e0 <line:42:13> Implicit Default
| |-FunctionDecl 0x11277b0 <line:145:1, line:146:41> line:145:6 operator delete[] 'void (void *, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x1127650 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x1127710 <col:31, col:51> col:52 'const std::nothrow_t &'
| | `-VisibilityAttr 0x1127860 <line:42:13> Implicit Default
| |-FunctionDecl 0x1127aa8 <line:173:20, line:174:15> line:173:33 operator new 'void *(std::size_t, void *) noexcept' inline
| | |-ParmVarDecl 0x1127908 <col:46, col:51> col:57 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x1127988 <col:59, col:65> col:65 used __p 'void *'
| | |-CompoundStmt 0x1127bf8 <line:174:1, col:15>
| | | `-ReturnStmt 0x1127be8 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x1127bd0 <col:10> 'void *' <LValueToRValue>
| | |     `-DeclRefExpr 0x1127bb0 <col:10> 'void *' lvalue ParmVar 0x1127988 '__p' 'void *'
| | `-VisibilityAttr 0x1127b58 <line:42:13> Implicit Default
| |-FunctionDecl 0x1127e10 <line:175:20, line:176:15> line:175:33 operator new[] 'void *(std::size_t, void *) noexcept' inline
| | |-ParmVarDecl 0x1127c60 <col:48, col:53> col:59 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x1127ce0 <col:61, col:67> col:67 used __p 'void *'
| | |-CompoundStmt 0x1127f60 <line:176:1, col:15>
| | | `-ReturnStmt 0x1127f50 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x1127f38 <col:10> 'void *' <LValueToRValue>
| | |     `-DeclRefExpr 0x1127f18 <col:10> 'void *' lvalue ParmVar 0x1127ce0 '__p' 'void *'
| | `-VisibilityAttr 0x1127ec0 <line:42:13> Implicit Default
| |-FunctionDecl 0x1128130 <line:179:1, col:69> col:13 operator delete 'void (void *, void *) noexcept' inline
| | |-ParmVarDecl 0x1127f90 <col:31, col:35> col:36 'void *'
| | |-ParmVarDecl 0x1128010 <col:38, col:42> col:43 'void *'
| | |-CompoundStmt 0x1128238 <col:67, col:69>
| | `-VisibilityAttr 0x11281e0 <line:42:13> Implicit Default
| `-FunctionDecl 0x1128380 <line:180:1, col:69> col:13 operator delete[] 'void (void *, void *) noexcept' inline
|   |-ParmVarDecl 0x1128260 <col:31, col:35> col:36 'void *'
|   |-ParmVarDecl 0x11282e0 <col:38, col:42> col:43 'void *'
|   |-CompoundStmt 0x1128488 <col:67, col:69>
|   `-VisibilityAttr 0x1128430 <line:42:13> Implicit Default
|-FunctionDecl 0x1126060 <<invalid sloc>> <invalid sloc> implicit used operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x1126158 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x1126100 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x11261c8 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x11262c0 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x1126268 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x1126330 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x1126428 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x11263d0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x1126498 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x1126590 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x1126538 <<invalid sloc>> Implicit Default
|-LinkageSpecDecl 0x11284b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:42:1, line:213:1> line:42:8 C++
| `-NamespaceDecl 0x1128508 prev 0x1121ea0 <line:44:1, line:211:1> line:44:11 std
|   |-original Namespace 0x103af10 'std'
|   |-CXXRecordDecl 0x1128578 prev 0x111a5e8 <line:46:3, col:9> col:9 referenced class type_info
|   | `-VisibilityAttr 0x1128638 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cxxabi_init_exception.h:36:13> Inherited Default
|   |-NamespaceDecl 0x1128660 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:52:3, line:55:3> line:52:13 __exception_ptr
|   | `-CXXRecordDecl 0x11286d0 <line:54:5, col:11> col:11 referenced class exception_ptr
|   |   `-VisibilityAttr 0x1128780 <line:34:13> Implicit Default
|   |-UsingDecl 0x11287f8 <line:57:3, col:26> col:26 __exception_ptr::exception_ptr
|   |-UsingShadowDecl 0x1128850 <col:26> col:26 implicit CXXRecord 0x11286d0 'exception_ptr'
|   | `-RecordType 0x1128760 'std::__exception_ptr::exception_ptr'
|   |   `-CXXRecord 0x11290d0 'exception_ptr'
|   |-FunctionDecl 0x1128920 <line:63:3, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:63:17 used current_exception 'std::__exception_ptr::exception_ptr () noexcept'
|   | `-VisibilityAttr 0x11289c0 <line:34:13> Implicit Default
|   |-FunctionTemplateDecl 0x1128c60 <line:65:3, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:66:17 make_exception_ptr
|   | |-TemplateTypeParmDecl 0x1128a18 <line:65:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|   | `-FunctionDecl 0x1128bc0 <line:66:3, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:66:17 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
|   |   |-ParmVarDecl 0x1128ac8 <col:36> col:39 '_Ex'
|   |   `-VisibilityAttr 0x1128cc0 <line:34:13> Implicit Default
|   |-FunctionDecl 0x1128e98 <line:69:3, col:70> col:8 used rethrow_exception 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
|   | |-ParmVarDecl 0x1128d28 <col:26> col:39 'std::__exception_ptr::exception_ptr' destroyed
|   | `-VisibilityAttr 0x1128f40 <line:34:13> Implicit Default
|   |-NamespaceDecl 0x1128f98 prev 0x1128660 <line:71:3, line:174:3> line:71:13 __exception_ptr
|   | |-original Namespace 0x1128660 '__exception_ptr'
|   | |-UsingDecl 0x1129028 <line:73:5, col:16> col:16 std::rethrow_exception
|   | |-UsingShadowDecl 0x1129080 <col:16> col:16 implicit Function 0x1128e98 'rethrow_exception' 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
|   | |-CXXRecordDecl 0x11290d0 prev 0x11286d0 <line:79:5, line:155:5> line:79:11 referenced class exception_ptr definition
|   | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
|   | | | |-DefaultConstructor exists non_trivial user_provided
|   | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | | | |-MoveConstructor exists non_trivial user_declared
|   | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
|   | | | |-MoveAssignment exists non_trivial user_declared
|   | | | `-Destructor non_trivial user_declared
|   | | |-VisibilityAttr 0x11291f8 <line:34:13> Inherited Default
|   | | |-CXXRecordDecl 0x1129220 <line:79:5, col:11> col:11 implicit referenced class exception_ptr
|   | | |-FieldDecl 0x11292c8 <line:81:7, col:13> col:13 referenced _M_exception_object 'void *'
|   | | |-CXXConstructorDecl 0x1129410 <line:83:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:83:16 referenced exception_ptr 'void (void *) noexcept'
|   | | | `-ParmVarDecl 0x1129330 <col:30, col:36> col:36 __e 'void *'
|   | | |-CXXMethodDecl 0x11294e8 <line:85:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:85:12 _M_addref 'void () noexcept'
|   | | |-CXXMethodDecl 0x11295b0 <line:86:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:86:12 _M_release 'void () noexcept'
|   | | |-CXXMethodDecl 0x1129708 <line:88:7, col:71> col:13 _M_get 'void *() const noexcept'
|   | | | `-PureAttr 0x11297a8 <col:62>
|   | | |-FriendDecl 0x1129968 <line:90:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:90:33
|   | | | `-FunctionDecl 0x1129828 parent 0x1128508 prev 0x1128920 <col:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:90:33 used current_exception 'std::__exception_ptr::exception_ptr () noexcept'
|   | | |   `-VisibilityAttr 0x1129940 <line:34:13> Inherited Default
|   | | |-FriendDecl 0x1129b90 <line:91:7, col:55> col:24
|   | | | `-FunctionDecl 0x1129a48 parent 0x1128508 prev 0x1128e98 <col:7, col:55> col:24 used rethrow_exception 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
|   | | |   |-ParmVarDecl 0x11299b8 <col:42> col:55 'std::__exception_ptr::exception_ptr' destroyed
|   | | |   `-VisibilityAttr 0x1129b68 <line:34:13> Inherited Default
|   | | |-FriendDecl 0x112a618 <line:92:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:93:33
|   | | | `-FunctionTemplateDecl 0x112a550 parent 0x1128508 prev 0x1128c60 <line:92:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:93:33 make_exception_ptr
|   | | |   |-TemplateTypeParmDecl 0x1129bd0 <line:92:16, col:25> col:25 referenced typename depth 0 index 0 _Ex
|   | | |   `-FunctionDecl 0x1129d40 parent 0x1128508 prev 0x1128bc0 <line:93:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:93:33 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
|   | | |     |-ParmVarDecl 0x1129c78 <col:52> col:55 '_Ex'
|   | | |     `-VisibilityAttr 0x112a5f0 <line:34:13> Inherited Default
|   | | |-AccessSpecDecl 0x112a658 <line:95:5, col:11> col:5 public
|   | | |-CXXConstructorDecl 0x112a6a8 <line:96:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:96:7 exception_ptr 'void () noexcept'
|   | | |-CXXConstructorDecl 0x112a880 <line:98:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:98:7 used exception_ptr 'void (const std::__exception_ptr::exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x112a788 <col:21, col:40> col:41 'const std::__exception_ptr::exception_ptr &'
|   | | |-CXXConstructorDecl 0x112aa60 <line:101:7, line:103:9> line:101:7 exception_ptr 'void (std::nullptr_t) noexcept'
|   | | | |-ParmVarDecl 0x112a960 <col:21> col:30 'std::nullptr_t':'nullptr_t'
|   | | | |-CXXCtorInitializer Field 0x11292c8 '_M_exception_object' 'void *'
|   | | | | `-ImplicitCastExpr 0x112c838 <line:102:29> 'void *' <NullToPointer>
|   | | | |   `-IntegerLiteral 0x112c7f8 <col:29> 'int' 0
|   | | | `-CompoundStmt 0x112c880 <line:103:7, col:9>
|   | | |-CXXConstructorDecl 0x112ac40 <line:105:7, line:107:38> line:105:7 used exception_ptr 'void (std::__exception_ptr::exception_ptr &&) noexcept'
|   | | | |-ParmVarDecl 0x112ab48 <col:21, col:37> col:37 used __o 'std::__exception_ptr::exception_ptr &&'
|   | | | |-CXXCtorInitializer Field 0x11292c8 '_M_exception_object' 'void *'
|   | | | | `-ImplicitCastExpr 0x112c900 <line:106:29, col:33> 'void *' <LValueToRValue>
|   | | | |   `-MemberExpr 0x112c8b0 <col:29, col:33> 'void *' lvalue ._M_exception_object 0x11292c8
|   | | | |     `-DeclRefExpr 0x112c890 <col:29> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x112ab48 '__o' 'std::__exception_ptr::exception_ptr &&'
|   | | | `-CompoundStmt 0x112c9f0 <line:107:7, col:38>
|   | | |   `-BinaryOperator 0x112c9d0 <col:9, col:35> 'void *' lvalue '='
|   | | |     |-MemberExpr 0x112c968 <col:9, col:13> 'void *' lvalue ._M_exception_object 0x11292c8
|   | | |     | `-DeclRefExpr 0x112c948 <col:9> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x112ab48 '__o' 'std::__exception_ptr::exception_ptr &&'
|   | | |     `-ImplicitCastExpr 0x112c9b8 <col:35> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x112c998 <col:35> 'int' 0
|   | | |-CXXMethodDecl 0x112ae30 <line:117:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:118:7 operator= 'std::__exception_ptr::exception_ptr &(const std::__exception_ptr::exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x112ad00 <col:17, col:36> col:37 'const std::__exception_ptr::exception_ptr &'
|   | | |-CXXMethodDecl 0x112afe0 <line:121:7, line:126:7> line:122:7 operator= 'std::__exception_ptr::exception_ptr &(std::__exception_ptr::exception_ptr &&) noexcept'
|   | | | |-ParmVarDecl 0x112aee8 <col:17, col:33> col:33 used __o 'std::__exception_ptr::exception_ptr &&'
|   | | | `-CompoundStmt 0x112cbe0 <line:123:7, line:126:7>
|   | | |   |-ExprWithCleanups 0x112cb90 <line:124:9, col:68> 'void'
|   | | |   | `-CXXMemberCallExpr 0x112cb68 <col:9, col:68> 'void'
|   | | |   |   |-MemberExpr 0x112cb10 <col:9, col:58> '<bound member function type>' .swap 0x112b290
|   | | |   |   | `-MaterializeTemporaryExpr 0x112caf8 <col:9, col:56> 'std::__exception_ptr::exception_ptr' xvalue
|   | | |   |   |   `-CXXFunctionalCastExpr 0x112cad0 <col:9, col:56> 'std::__exception_ptr::exception_ptr' functional cast to class std::__exception_ptr::exception_ptr <ConstructorConversion>
|   | | |   |   |     `-CXXBindTemporaryExpr 0x112cab0 <col:9, col:56> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x112cab0)
|   | | |   |   |       `-CXXConstructExpr 0x112ca78 <col:9, col:56> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept'
|   | | |   |   |         `-CXXStaticCastExpr 0x112ca48 <col:23, col:55> 'std::__exception_ptr::exception_ptr' xvalue static_cast<class std::__exception_ptr::exception_ptr &&> <NoOp>
|   | | |   |   |           `-DeclRefExpr 0x112ca18 <col:52> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x112aee8 '__o' 'std::__exception_ptr::exception_ptr &&'
|   | | |   |   `-UnaryOperator 0x112cb50 <col:63, col:64> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | | |   |     `-CXXThisExpr 0x112cb40 <col:64> 'std::__exception_ptr::exception_ptr *' this
|   | | |   `-ReturnStmt 0x112cbd0 <line:125:9, col:17>
|   | | |     `-UnaryOperator 0x112cbb8 <col:16, col:17> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | | |       `-CXXThisExpr 0x112cba8 <col:17> 'std::__exception_ptr::exception_ptr *' this
|   | | |-CXXDestructorDecl 0x112b0d8 <line:129:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:129:7 used ~exception_ptr 'void () noexcept'
|   | | |-CXXMethodDecl 0x112b290 <line:131:7, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:165:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/exception_ptr.h:132:7 used swap 'void (std::__exception_ptr::exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x112b198 <col:12, col:25> col:26 'std::__exception_ptr::exception_ptr &'
|   | | |-CXXConversionDecl 0x112b380 <line:144:7, line:145:37> line:144:16 used operator bool 'bool () const'
|   | | | `-CompoundStmt 0x112cc80 <line:145:7, col:37>
|   | | |   `-ReturnStmt 0x112cc70 <col:9, col:16>
|   | | |     `-ImplicitCastExpr 0x112cc58 <col:16> 'bool' <PointerToBoolean>
|   | | |       `-ImplicitCastExpr 0x112cc40 <col:16> 'void *' <LValueToRValue>
|   | | |         `-MemberExpr 0x112cc10 <col:16> 'void *const' lvalue ->_M_exception_object 0x11292c8
|   | | |           `-CXXThisExpr 0x112cc00 <col:16> 'const std::__exception_ptr::exception_ptr *' implicit this
|   | | |-FriendDecl 0x112c5c0 <line:148:7, line:150:49> line:149:7
|   | | | `-FunctionDecl 0x112c480 parent 0x1128f98 <line:148:7, line:150:49> line:149:7 operator== 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
|   | | |   |-ParmVarDecl 0x112b440 <col:18, col:37> col:38 'const std::__exception_ptr::exception_ptr &'
|   | | |   |-ParmVarDecl 0x112b4b8 <col:40, col:59> col:60 'const std::__exception_ptr::exception_ptr &'
|   | | |   |-PureAttr 0x112c540 <line:150:40>
|   | | |   `-VisibilityAttr 0x112c598 <line:34:13> Implicit Default
|   | | `-CXXMethodDecl 0x112c700 <line:152:7, line:154:27> line:153:7 __cxa_exception_type 'const class std::type_info *() const noexcept'
|   | |   `-PureAttr 0x112c7a0 <line:154:18>
|   | |-FunctionDecl 0x112cdc0 prev 0x112c480 <line:157:5, line:159:54> line:158:5 operator== 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
|   | | |-ParmVarDecl 0x112cca8 <col:16, col:35> col:36 'const std::__exception_ptr::exception_ptr &'
|   | | |-ParmVarDecl 0x112cd20 <col:38, col:57> col:58 'const std::__exception_ptr::exception_ptr &'
|   | | |-VisibilityAttr 0x112cec8 <line:34:13> Inherited Default
|   | | `-PureAttr 0x112ce70 <line:159:45>
|   | |-FunctionDecl 0x112d018 <line:161:5, line:163:54> line:162:5 operator!= 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
|   | | |-ParmVarDecl 0x112cf00 <col:16, col:35> col:36 'const std::__exception_ptr::exception_ptr &'
|   | | |-ParmVarDecl 0x112cf78 <col:38, col:57> col:58 'const std::__exception_ptr::exception_ptr &'
|   | | |-PureAttr 0x112d0c8 <line:163:45>
|   | | `-VisibilityAttr 0x112d120 <line:34:13> Implicit Default
|   | |-FunctionDecl 0x112d2a8 <line:165:5, line:167:26> line:166:5 swap 'void (std::__exception_ptr::exception_ptr &, std::__exception_ptr::exception_ptr &)' inline
|   | | |-ParmVarDecl 0x112d158 <col:10, col:25> col:25 used __lhs 'std::__exception_ptr::exception_ptr &'
|   | | |-ParmVarDecl 0x112d1d0 <col:32, col:47> col:47 used __rhs 'std::__exception_ptr::exception_ptr &'
|   | | |-CompoundStmt 0x112e878 <line:167:5, col:26>
|   | | | `-CXXMemberCallExpr 0x112e850 <col:7, col:23> 'void'
|   | | |   |-MemberExpr 0x112e800 <col:7, col:13> '<bound member function type>' .swap 0x112b290
|   | | |   | `-DeclRefExpr 0x112d3b0 <col:7> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x112d158 '__lhs' 'std::__exception_ptr::exception_ptr &'
|   | | |   `-DeclRefExpr 0x112e830 <col:18> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x112d1d0 '__rhs' 'std::__exception_ptr::exception_ptr &'
|   | | `-VisibilityAttr 0x112d358 <line:34:13> Implicit Default
|   | `-FunctionTemplateDecl 0x112ea70 <line:169:5, line:172:41> line:171:7 __dest_thunk
|   |   |-TemplateTypeParmDecl 0x112e890 <line:169:14, col:23> col:23 referenced typename depth 0 index 0 _Ex
|   |   `-FunctionDecl 0x112e9d0 <line:170:7, line:172:41> line:171:7 __dest_thunk 'void (void *)' inline
|   |     |-ParmVarDecl 0x112e940 <col:20, col:26> col:26 referenced __x 'void *'
|   |     |-CompoundStmt 0x112ec68 <line:172:7, col:41>
|   |     | `-CallExpr 0x112ec48 <col:9, col:38> 'void'
|   |     |   `-CXXPseudoDestructorExpr 0x112ebf8 <col:9, col:34> '<bound member function type>'
|   |     |     `-CXXStaticCastExpr 0x112ebb8 <col:9, col:30> '_Ex *' static_cast<_Ex *> <Dependent>
|   |     |       `-DeclRefExpr 0x112eb28 <col:27> 'void *' lvalue ParmVar 0x112e940 '__x' 'void *'
|   |     `-VisibilityAttr 0x112ead0 <line:34:13> Implicit Default
|   `-FunctionTemplateDecl 0x112ee90 prev 0x112a550 <line:177:3, line:208:5> line:179:5 make_exception_ptr
|     |-TemplateTypeParmDecl 0x112ec80 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|     `-FunctionDecl 0x112edf0 prev 0x1129d40 <line:178:5, line:208:5> line:179:5 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
|       |-ParmVarDecl 0x112ed28 <col:24, col:28> col:28 referenced __ex '_Ex'
|       |-CompoundStmt 0x112fa08 <line:180:5, line:208:5>
|       | |-DeclStmt 0x112f168 <line:182:7, col:68>
|       | | `-VarDecl 0x112efe0 <col:7, col:67> col:13 referenced __e 'void *' cinit
|       | |   `-CallExpr 0x112f140 <col:19, col:67> 'void *'
|       | |     |-ImplicitCastExpr 0x112f128 <col:19, col:31> 'void *(*)(size_t) noexcept' <FunctionToPointerDecay>
|       | |     | `-DeclRefExpr 0x112f068 <col:19, col:31> 'void *(size_t) noexcept' lvalue Function 0x1114a58 '__cxa_allocate_exception' 'void *(size_t) noexcept'
|       | |     `-UnaryExprOrTypeTraitExpr 0x112f0a8 <col:56, col:66> 'unsigned long' sizeof '_Ex'
|       | |-CStyleCastExpr 0x112f460 <line:183:7, line:185:38> 'void' <ToVoid>
|       | | `-CallExpr 0x112f418 <line:183:14, line:185:38> '<dependent type>'
|       | |   |-DeclRefExpr 0x112f1a0 <line:183:14, col:26> '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept' lvalue Function 0x1115200 '__cxa_init_primary_exception' '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept'
|       | |   |-DeclRefExpr 0x112f1d0 <line:184:4> 'void *' lvalue Var 0x112efe0 '__e' 'void *'
|       | |   |-CXXConstCastExpr 0x112f300 <col:9, col:50> 'std::type_info *' const_cast<std::type_info *> <NoOp>
|       | |   | `-UnaryOperator 0x112f290 <col:37, col:49> 'const std::type_info *' prefix '&' cannot overflow
|       | |   |   `-CXXTypeidExpr 0x112f270 <col:38, col:49> 'const std::type_info' lvalue
|       | |   |     `-DeclRefExpr 0x112f250 <col:45> '_Ex' lvalue ParmVar 0x112ed28 '__ex' '_Ex' non_odr_use_unevaluated
|       | |   `-UnresolvedLookupExpr 0x112f390 <line:185:4, col:37> '<dependent type>' lvalue (no ADL) = '__dest_thunk' 0x112ea70
|       | `-CXXTryStmt 0x112f9e8 <line:186:7, line:195:2>
|       |   |-CompoundStmt 0x112f6a8 <line:187:2, line:190:2>
|       |   | |-CXXNewExpr 0x112f528 <line:188:11, col:31> '_Ex *' global
|       |   | | |-ParenListExpr 0x112f4c8 <col:26, col:31> 'NULL TYPE'
|       |   | | | `-DeclRefExpr 0x112f4a8 <col:27> '_Ex' lvalue ParmVar 0x112ed28 '__ex' '_Ex'
|       |   | | `-DeclRefExpr 0x112f488 <col:18> 'void *' lvalue Var 0x112efe0 '__e' 'void *'
|       |   | `-ReturnStmt 0x112f698 <line:189:11, col:35>
|       |   |   `-ExprWithCleanups 0x112f680 <col:18, col:35> 'std::__exception_ptr::exception_ptr'
|       |   |     `-CXXConstructExpr 0x112f650 <col:18, col:35> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
|       |   |       `-MaterializeTemporaryExpr 0x112f638 <col:18, col:35> 'std::__exception_ptr::exception_ptr' xvalue
|       |   |         `-CXXFunctionalCastExpr 0x112f610 <col:18, col:35> 'std::__exception_ptr::exception_ptr' functional cast to class std::__exception_ptr::exception_ptr <ConstructorConversion>
|       |   |           `-CXXBindTemporaryExpr 0x112f5f0 <col:18, col:35> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x112f5f0)
|       |   |             `-CXXConstructExpr 0x112f5b8 <col:18, col:35> 'std::__exception_ptr::exception_ptr' 'void (void *) noexcept'
|       |   |               `-ImplicitCastExpr 0x112f5a0 <col:32> 'void *' <LValueToRValue>
|       |   |                 `-DeclRefExpr 0x112f580 <col:32> 'void *' lvalue Var 0x112efe0 '__e' 'void *'
|       |   `-CXXCatchStmt 0x112f9c8 <line:191:7, line:195:2>
|       |     |-<<<NULL>>>
|       |     `-CompoundStmt 0x112f9a8 <line:192:2, line:195:2>
|       |       |-CallExpr 0x112f7b0 <line:193:4, col:40> 'void'
|       |       | |-ImplicitCastExpr 0x112f798 <col:4, col:16> 'void (*)(void *) noexcept' <FunctionToPointerDecay>
|       |       | | `-DeclRefExpr 0x112f718 <col:4, col:16> 'void (void *) noexcept' lvalue Function 0x1114c70 '__cxa_free_exception' 'void (void *) noexcept'
|       |       | `-ImplicitCastExpr 0x112f7d8 <col:37> 'void *' <LValueToRValue>
|       |       |   `-DeclRefExpr 0x112f748 <col:37> 'void *' lvalue Var 0x112efe0 '__e' 'void *'
|       |       `-ReturnStmt 0x112f998 <line:194:4, col:29>
|       |         `-ExprWithCleanups 0x112f980 <col:11, col:29> 'std::__exception_ptr::exception_ptr'
|       |           `-CXXConstructExpr 0x112f950 <col:11, col:29> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
|       |             `-MaterializeTemporaryExpr 0x112f938 <col:11, col:29> 'std::__exception_ptr::exception_ptr' xvalue
|       |               `-CXXBindTemporaryExpr 0x112f918 <col:11, col:29> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x112f918)
|       |                 `-CallExpr 0x112f8f0 <col:11, col:29> 'std::__exception_ptr::exception_ptr'
|       |                   `-ImplicitCastExpr 0x112f8d8 <col:11> 'std::__exception_ptr::exception_ptr (*)() noexcept' <FunctionToPointerDecay>
|       |                     `-DeclRefExpr 0x112f858 <col:11> 'std::__exception_ptr::exception_ptr () noexcept' lvalue Function 0x1128920 'current_exception' 'std::__exception_ptr::exception_ptr () noexcept'
|       `-VisibilityAttr 0x112ef20 <line:34:13> Inherited Default
|-NamespaceDecl 0x112fa50 prev 0x1128508 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:36:1, line:53:1> line:36:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x112fac0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| `-FunctionTemplateDecl 0x112fdf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:45:3, line:48:40> line:47:5 __addressof
|   |-TemplateTypeParmDecl 0x112fb18 <line:45:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   |-FunctionDecl 0x112fd50 <line:46:5, line:48:40> line:47:5 constexpr __addressof '_Tp *(_Tp &) noexcept' inline
|   | |-ParmVarDecl 0x112fc28 <col:17, col:22> col:22 referenced __r '_Tp &'
|   | `-CompoundStmt 0x1130138 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1130128 <col:7, col:37>
|   |     `-CallExpr 0x1130100 <col:14, col:37> '<dependent type>'
|   |       |-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x11300e0 <col:34> '_Tp' lvalue ParmVar 0x112fc28 '__r' '_Tp &'
|   |-FunctionDecl 0x1a84d20 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'char *(char &) noexcept' inline
|   | |-TemplateArgument type 'char'
|   | |-ParmVarDecl 0x1a84c58 <col:17, col:22> col:22 used __r 'char &'
|   | `-CompoundStmt 0x1a84f38 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1a84f28 <col:7, col:37>
|   |     `-CallExpr 0x1a84f00 <col:14, col:37> 'char *'
|   |       |-ImplicitCastExpr 0x1a84ee8 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1a84e58 <col:34> 'char':'char' lvalue ParmVar 0x1a84c58 '__r' 'char &'
|   |-FunctionDecl 0x1a9d140 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'const char *(const char &) noexcept' inline
|   | |-TemplateArgument type 'const char'
|   | |-ParmVarDecl 0x1a9d078 <col:17, col:22> col:22 used __r 'const char &'
|   | `-CompoundStmt 0x1a9d300 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1a9d2f0 <col:7, col:37>
|   |     `-CallExpr 0x1a9d2c8 <col:14, col:37> 'const char *'
|   |       |-ImplicitCastExpr 0x1a9d2b0 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1a9d278 <col:34> 'const char':'const char' lvalue ParmVar 0x1a9d078 '__r' 'const char &'
|   |-FunctionDecl 0x1ab76c0 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'wchar_t *(wchar_t &) noexcept' inline
|   | |-TemplateArgument type 'wchar_t'
|   | |-ParmVarDecl 0x1ab75f8 <col:17, col:22> col:22 used __r 'wchar_t &'
|   | `-CompoundStmt 0x1ab7880 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1ab7870 <col:7, col:37>
|   |     `-CallExpr 0x1ab7848 <col:14, col:37> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x1ab7830 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1ab77f8 <col:34> 'wchar_t':'wchar_t' lvalue ParmVar 0x1ab75f8 '__r' 'wchar_t &'
|   |-FunctionDecl 0x1ac8d60 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'const wchar_t *(const wchar_t &) noexcept' inline
|   | |-TemplateArgument type 'const wchar_t'
|   | |-ParmVarDecl 0x1ac8c98 <col:17, col:22> col:22 used __r 'const wchar_t &'
|   | `-CompoundStmt 0x1ac8f20 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1ac8f10 <col:7, col:37>
|   |     `-CallExpr 0x1ac8ee8 <col:14, col:37> 'const wchar_t *'
|   |       |-ImplicitCastExpr 0x1ac8ed0 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1ac8e98 <col:34> 'const wchar_t':'const wchar_t' lvalue ParmVar 0x1ac8c98 '__r' 'const wchar_t &'
|   |-FunctionDecl 0x1adaf80 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'char16_t *(char16_t &) noexcept' inline
|   | |-TemplateArgument type 'char16_t'
|   | |-ParmVarDecl 0x1adaeb8 <col:17, col:22> col:22 used __r 'char16_t &'
|   | `-CompoundStmt 0x1adb140 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1adb130 <col:7, col:37>
|   |     `-CallExpr 0x1adb108 <col:14, col:37> 'char16_t *'
|   |       |-ImplicitCastExpr 0x1adb0f0 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1adb0b8 <col:34> 'char16_t':'char16_t' lvalue ParmVar 0x1adaeb8 '__r' 'char16_t &'
|   |-FunctionDecl 0x1aec2a0 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'const char16_t *(const char16_t &) noexcept' inline
|   | |-TemplateArgument type 'const char16_t'
|   | |-ParmVarDecl 0x1aec1d8 <col:17, col:22> col:22 used __r 'const char16_t &'
|   | `-CompoundStmt 0x1aec460 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1aec450 <col:7, col:37>
|   |     `-CallExpr 0x1aec428 <col:14, col:37> 'const char16_t *'
|   |       |-ImplicitCastExpr 0x1aec410 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1aec3d8 <col:34> 'const char16_t':'const char16_t' lvalue ParmVar 0x1aec1d8 '__r' 'const char16_t &'
|   |-FunctionDecl 0x1af14a0 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'char32_t *(char32_t &) noexcept' inline
|   | |-TemplateArgument type 'char32_t'
|   | |-ParmVarDecl 0x1af13d8 <col:17, col:22> col:22 used __r 'char32_t &'
|   | `-CompoundStmt 0x1af1660 <line:48:5, col:40>
|   |   `-ReturnStmt 0x1af1650 <col:7, col:37>
|   |     `-CallExpr 0x1af1628 <col:14, col:37> 'char32_t *'
|   |       |-ImplicitCastExpr 0x1af1610 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|   |       `-DeclRefExpr 0x1af15d8 <col:34> 'char32_t':'char32_t' lvalue ParmVar 0x1af13d8 '__r' 'char32_t &'
|   `-FunctionDecl 0x1b02d20 <line:46:5, line:48:40> line:47:5 used constexpr __addressof 'const char32_t *(const char32_t &) noexcept' inline
|     |-TemplateArgument type 'const char32_t'
|     |-ParmVarDecl 0x1b02c58 <col:17, col:22> col:22 used __r 'const char32_t &'
|     `-CompoundStmt 0x1b02ee0 <line:48:5, col:40>
|       `-ReturnStmt 0x1b02ed0 <col:7, col:37>
|         `-CallExpr 0x1b02ea8 <col:14, col:37> 'const char32_t *'
|           |-ImplicitCastExpr 0x1b02e90 <col:14> 'void *(*)(void &) noexcept' <BuiltinFnToFnPtr>
|           | `-DeclRefExpr 0x11300c0 <col:14> '<builtin fn type>' Function 0x112ff30 '__builtin_addressof' 'void *(void &) noexcept'
|           `-DeclRefExpr 0x1b02e58 <col:34> 'const char32_t':'const char32_t' lvalue ParmVar 0x1b02c58 '__r' 'const char32_t &'
|-LinkageSpecDecl 0x112fee0 <col:14> col:14 implicit C
| `-FunctionDecl 0x112ff30 <col:14> col:14 implicit used __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x112ffd0 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x1130040 <col:14> Implicit
|   `-ConstAttr 0x1130098 <col:14> Implicit
|-NamespaceDecl 0x1130170 prev 0x112fa50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:40:1, line:3097:1> line:40:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x11301e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x11303e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:56:3, line:69:5> line:57:12 integral_constant
| | |-TemplateTypeParmDecl 0x1130238 <line:56:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11302c8 <col:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | |-CXXRecordDecl 0x1130350 <line:57:5, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x1130690 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x1130730 <line:59:7, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| | | | `-DeclRefExpr 0x1130798 <col:53> '_Tp' NonTypeTemplateParm 0x11302c8 '__v' '_Tp'
| | | |-TypedefDecl 0x1136920 <line:60:7, col:45> col:45 referenced value_type '_Tp'
| | | | `-TemplateTypeParmType 0x1130290 '_Tp' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x1130238 '_Tp'
| | | |-TypedefDecl 0x1136ae8 <line:61:7, col:45> col:45 type 'integral_constant<_Tp, __v>':'integral_constant<_Tp, __v>'
| | | | `-TemplateSpecializationType 0x1136a00 'integral_constant<_Tp, __v>' sugar dependent integral_constant
| | | |   |-TemplateArgument type '_Tp'
| | | |   |-TemplateArgument expr
| | | |   | `-DeclRefExpr 0x1136988 <col:38> '_Tp' NonTypeTemplateParm 0x11302c8 '__v' '_Tp'
| | | |   `-InjectedClassNameType 0x1130600 'integral_constant<_Tp, __v>' dependent
| | | |     `-CXXRecord 0x1130350 'integral_constant'
| | | |-CXXConversionDecl 0x1136c00 <line:62:7, col:70> col:17 constexpr operator type-parameter-0-0 'std::integral_constant::value_type () const noexcept'
| | | | `-CompoundStmt 0x1136de8 <col:54, col:70>
| | | |   `-ReturnStmt 0x1136dd8 <col:56, col:63>
| | | |     `-DeclRefExpr 0x1136db8 <col:63> 'const _Tp' lvalue Var 0x1130730 'value' 'const _Tp'
| | | `-CXXMethodDecl 0x1136cd8 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant::value_type () const noexcept'
| | |   `-CompoundStmt 0x1136e30 <col:56, col:72>
| | |     `-ReturnStmt 0x1136e20 <col:58, col:65>
| | |       `-DeclRefExpr 0x1136e00 <col:65> 'const _Tp' lvalue Var 0x1130730 'value' 'const _Tp'
| | |-ClassTemplateSpecializationDecl 0x11372d8 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-TemplateArgument type 'bool'
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x113fcc8 prev 0x11372d8 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x113fd68 <line:59:7, col:53> col:45 used value 'const bool':'const bool' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0x113fdf0 <col:53> 'bool'
| | | |   `-CXXBoolLiteralExpr 0x113fde0 <col:53> 'bool' true
| | | |-TypedefDecl 0x113fe78 <line:60:7, col:45> col:45 value_type 'bool':'bool'
| | | | `-SubstTemplateTypeParmType 0x1137280 'bool' sugar
| | | |   |-TemplateTypeParmType 0x1130290 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1130238 '_Tp'
| | | |   `-BuiltinType 0xffd190 'bool'
| | | |-TypedefDecl 0x113fff0 <line:61:7, col:45> col:45 referenced type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | | | `-TemplateSpecializationType 0x113ff50 'integral_constant<bool, true>' sugar integral_constant
| | | |   |-TemplateArgument type 'bool':'bool'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x113ff30 <col:38> 'bool' Int: 1
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x113fef0 <col:38> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x113fee0 <col:38> 'bool' true
| | | |   `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| | | |     `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| | | |-CXXConversionDecl 0x11400d0 <line:62:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, true>::value_type () const noexcept'
| | | |-CXXMethodDecl 0x11401b8 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, true>::value_type () const noexcept'
| | | |-CXXConstructorDecl 0x1a62808 <line:57:12> col:12 implicit constexpr integral_constant 'void () noexcept' inline default trivial
| | | |-CXXDestructorDecl 0x1a628e0 <col:12> col:12 implicit referenced ~integral_constant 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a62a18 <col:12> col:12 implicit constexpr integral_constant 'void (const std::integral_constant<bool, true> &)' inline default trivial noexcept-unevaluated 0x1a62a18
| | | | `-ParmVarDecl 0x1a62b28 <col:12> col:12 'const std::integral_constant<bool, true> &'
| | | `-CXXConstructorDecl 0x1a62bc8 <col:12> col:12 implicit used constexpr integral_constant 'void (std::integral_constant<bool, true> &&) noexcept' inline default trivial
| | |   |-ParmVarDecl 0x1a62cd8 <col:12> col:12 'std::integral_constant<bool, true> &&'
| | |   `-CompoundStmt 0x1a63760 <col:12>
| | |-ClassTemplateSpecializationDecl 0x1137590 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-TemplateArgument type 'bool'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x1138c98 prev 0x1137590 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x1138d38 <line:59:7, col:53> col:45 used value 'const bool':'const bool' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0x1138dc0 <col:53> 'bool'
| | | |   `-CXXBoolLiteralExpr 0x1138db0 <col:53> 'bool' false
| | | |-TypedefDecl 0x1138e48 <line:60:7, col:45> col:45 value_type 'bool':'bool'
| | | | `-SubstTemplateTypeParmType 0x1137280 'bool' sugar
| | | |   |-TemplateTypeParmType 0x1130290 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1130238 '_Tp'
| | | |   `-BuiltinType 0xffd190 'bool'
| | | |-TypedefDecl 0x113d5d8 <line:61:7, col:45> col:45 referenced type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | | | `-TemplateSpecializationType 0x1138f20 'integral_constant<bool, false>' sugar integral_constant
| | | |   |-TemplateArgument type 'bool':'bool'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x1138f00 <col:38> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x1138ec0 <col:38> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x1138eb0 <col:38> 'bool' false
| | | |   `-RecordType 0x1137690 'std::integral_constant<bool, false>'
| | | |     `-ClassTemplateSpecialization 0x1137590 'integral_constant'
| | | |-CXXConversionDecl 0x113d6b0 <line:62:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, false>::value_type () const noexcept'
| | | |-CXXMethodDecl 0x113d798 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, false>::value_type () const noexcept'
| | | |-CXXConstructorDecl 0x1a631a8 <line:57:12> col:12 implicit constexpr integral_constant 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a632a8 <col:12> col:12 implicit constexpr integral_constant 'void (const std::integral_constant<bool, false> &)' inline default trivial noexcept-unevaluated 0x1a632a8
| | | | `-ParmVarDecl 0x1a633b8 <col:12> col:12 'const std::integral_constant<bool, false> &'
| | | |-CXXConstructorDecl 0x1a63458 <col:12> col:12 implicit used constexpr integral_constant 'void (std::integral_constant<bool, false> &&) noexcept' inline default trivial
| | | | |-ParmVarDecl 0x1a63568 <col:12> col:12 'std::integral_constant<bool, false> &&'
| | | | `-CompoundStmt 0x1a65fb0 <col:12>
| | | `-CXXDestructorDecl 0x1a658d0 <col:12> col:12 implicit referenced ~integral_constant 'void () noexcept' inline default trivial
| | `-ClassTemplateSpecializationDecl 0x11c12b0 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x11c14d8 prev 0x11c12b0 <col:5, col:12> col:12 implicit struct integral_constant
| |   |-VarDecl 0x11c1578 <line:59:7, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   | `-SubstNonTypeTemplateParmExpr 0x11c1610 <col:53> 'unsigned long'
| |   |   `-IntegerLiteral 0x11c15f0 <col:53> 'unsigned long' 0
| |   |-TypedefDecl 0x11c1698 <line:60:7, col:45> col:45 value_type 'unsigned long':'unsigned long'
| |   | `-SubstTemplateTypeParmType 0x11c0c50 'unsigned long' sugar
| |   |   |-TemplateTypeParmType 0x1130290 '_Tp' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x1130238 '_Tp'
| |   |   `-BuiltinType 0xffd2d0 'unsigned long'
| |   |-TypedefDecl 0x11c1820 <line:61:7, col:45> col:45 type 'integral_constant<unsigned long, 0UL>':'std::integral_constant<unsigned long, 0>'
| |   | `-TemplateSpecializationType 0x11c1780 'integral_constant<unsigned long, 0UL>' sugar integral_constant
| |   |   |-TemplateArgument type 'unsigned long':'unsigned long'
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0x11c1760 <col:38> 'unsigned long' Int: 0
| |   |   |   `-SubstNonTypeTemplateParmExpr 0x11c1720 <col:38> 'unsigned long'
| |   |   |     `-IntegerLiteral 0x11c1700 <col:38> 'unsigned long' 0
| |   |   `-RecordType 0x11c13b0 'std::integral_constant<unsigned long, 0>'
| |   |     `-ClassTemplateSpecialization 0x11c12b0 'integral_constant'
| |   |-CXXConversionDecl 0x11c1918 <line:62:7, col:70> col:17 constexpr operator unsigned long 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
| |   `-CXXMethodDecl 0x11c1a00 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
| |-VarDecl 0x1137198 parent 0x1130350 prev 0x1130730 <line:71:3, line:72:48> col:48 value 'const _Tp' constexpr
| |-TypedefDecl 0x11374d8 <line:75:3, col:45> col:45 referenced true_type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| |   |-TemplateArgument type 'bool'
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0x11372b8 <col:35> 'bool' Int: 1
| |   |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| |   `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| |     `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| |-TypedefDecl 0x1137798 <line:78:3, col:45> col:45 referenced false_type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | `-TemplateSpecializationType 0x11376b0 'integral_constant<bool, false>' sugar integral_constant
| |   |-TemplateArgument type 'bool'
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0x1137570 <col:35> 'bool' Int: 0
| |   |   `-CXXBoolLiteralExpr 0x1137540 <col:35> 'bool' false
| |   `-RecordType 0x1137690 'std::integral_constant<bool, false>'
| |     `-ClassTemplateSpecialization 0x1137590 'integral_constant'
| |-TypeAliasTemplateDecl 0x1138128 <line:80:3, line:81:56> col:5 __bool_constant
| | |-NonTypeTemplateParmDecl 0x1137800 <line:80:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| | `-TypeAliasDecl 0x11380c8 <line:81:5, col:56> col:11 __bool_constant 'integral_constant<bool, __v>'
| |   `-TemplateSpecializationType 0x1137fe0 'integral_constant<bool, __v>' dependent integral_constant
| |     |-TemplateArgument type 'bool'
| |     `-TemplateArgument expr
| |       `-DeclRefExpr 0x1137890 <col:53> 'bool' NonTypeTemplateParm 0x1137800 '__v' 'bool'
| |-ClassTemplateDecl 0x11383a8 <line:91:3, line:92:12> col:12 conditional
| | |-NonTypeTemplateParmDecl 0x1138190 <line:91:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0x11381f0 <col:18> col:26 typename depth 0 index 1
| | |-TemplateTypeParmDecl 0x1138268 <col:28> col:36 typename depth 0 index 2
| | |-CXXRecordDecl 0x1138318 <line:92:5, col:12> col:12 struct conditional
| | |-ClassTemplateSpecializationDecl 0x1a3ddc8 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__and_<std::__is_convertible_to_basic_istream<std::basic_istream<char> &>, std::__is_extractable<std::basic_istream<char> &, char &, void> >'
| | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-CXXRecordDecl 0x1a3e190 prev 0x1a3ddc8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a3e230 <line:2059:7, col:24> col:24 referenced type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |   `-SubstTemplateTypeParmType 0x1a3e0a0 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a38210 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |       `-ClassTemplateSpecialization 0x1a38130 '__not_'
| | |-ClassTemplateSpecializationDecl 0x1a3fe28 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__and_<std::__is_convertible_to_basic_istream<std::basic_istream<char> &>, std::__is_extractable<std::basic_istream<char> &, unsigned char &, void> >'
| | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-CXXRecordDecl 0x1a401a0 prev 0x1a3fe28 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a40240 <line:2059:7, col:24> col:24 referenced type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |   `-SubstTemplateTypeParmType 0x1a3e0a0 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a38210 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |       `-ClassTemplateSpecialization 0x1a38130 '__not_'
| | |-ClassTemplateSpecializationDecl 0x1a41d98 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__and_<std::__is_convertible_to_basic_istream<std::basic_istream<char> &>, std::__is_extractable<std::basic_istream<char> &, signed char &, void> >'
| | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-CXXRecordDecl 0x1a42110 prev 0x1a41d98 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a421b0 <line:2059:7, col:24> col:24 referenced type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |   `-SubstTemplateTypeParmType 0x1a3e0a0 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a38210 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | |       `-ClassTemplateSpecialization 0x1a38130 '__not_'
| | |-ClassTemplateSpecializationDecl 0x1a4edc8 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__and_<std::__is_convertible_to_basic_istream<std::basic_istream<wchar_t> &>, std::__is_extractable<std::basic_istream<wchar_t> &, wchar_t &, void> >'
| | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >'
| | | |-CXXRecordDecl 0x1a4f170 prev 0x1a4edc8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a4f210 <line:2059:7, col:24> col:24 referenced type 'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >':'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >'
| | |   `-SubstTemplateTypeParmType 0x1a4f0a0 'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a49420 'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >'
| | |       `-ClassTemplateSpecialization 0x1a49340 '__not_'
| | |-ClassTemplateSpecializationDecl 0x1a5dfe8 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__and_<std::__is_convertible_to_basic_ostream<std::basic_ostream<char> &>, std::__is_insertable<std::basic_ostream<char> &, char const (&)[14], void> >'
| | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >'
| | | |-CXXRecordDecl 0x1a5e390 prev 0x1a5dfe8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a5e430 <line:2059:7, col:24> col:24 referenced type 'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >':'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >'
| | |   `-SubstTemplateTypeParmType 0x1a5e2c0 'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a55040 'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >'
| | |       `-ClassTemplateSpecialization 0x1a54f60 '__not_'
| | |-ClassTemplateSpecializationDecl 0x1a79e98 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<std::random_access_iterator_tag>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >'
| | | |-CXXRecordDecl 0x1a7a240 prev 0x1a79e98 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a7a2e0 <line:2059:7, col:24> col:24 referenced type 'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >':'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >'
| | |   `-SubstTemplateTypeParmType 0x1a7a170 'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a79da0 'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >'
| | |       `-ClassTemplateSpecialization 0x1a79cb8 '__or_'
| | |-ClassTemplateSpecializationDecl 0x1a7acd0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_function<std::input_iterator_tag>'
| | | |-TemplateArgument type 'std::is_array<std::input_iterator_tag>'
| | | |-CXXRecordDecl 0x1a7b070 prev 0x1a7acd0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a7b110 <line:2059:7, col:24> col:24 referenced type 'std::is_array<std::input_iterator_tag>':'std::is_array<std::input_iterator_tag>'
| | |   `-SubstTemplateTypeParmType 0x1a7afa0 'std::is_array<std::input_iterator_tag>' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-RecordType 0x1a78470 'std::is_array<std::input_iterator_tag>'
| | |       `-ClassTemplateSpecialization 0x1a78390 'is_array'
| | |-ClassTemplateSpecializationDecl 0x1a83980 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1a83d20 prev 0x1a83980 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a83dc0 <line:2059:7, col:24> col:24 referenced type 'char':'char'
| | |   `-SubstTemplateTypeParmType 0x1a83c50 'char' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1a9c1d0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'const char'
| | | |-CXXRecordDecl 0x1a9c540 prev 0x1a9c1d0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1a9c5e0 <line:2059:7, col:24> col:24 referenced type 'const char':'const char'
| | |   `-SubstTemplateTypeParmType 0x1a9c470 'const char' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-QualType 0xffd1b1 'const char' const
| | |       `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1ab64d0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0x1ab6840 prev 0x1ab64d0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1ab68e0 <line:2059:7, col:24> col:24 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0x1ab6770 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1ac7df0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'const wchar_t'
| | | |-CXXRecordDecl 0x1ac8160 prev 0x1ac7df0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1ac8200 <line:2059:7, col:24> col:24 referenced type 'const wchar_t':'const wchar_t'
| | |   `-SubstTemplateTypeParmType 0x1ac8090 'const wchar_t' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-QualType 0xffd6f1 'const wchar_t' const
| | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1ad9d90 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0x1ada100 prev 0x1ad9d90 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1ada1a0 <line:2059:7, col:24> col:24 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0x1ada030 'char16_t' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1ae9ae0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'const char16_t'
| | | |-CXXRecordDecl 0x1ae9e50 prev 0x1ae9ae0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1ae9ef0 <line:2059:7, col:24> col:24 referenced type 'const char16_t':'const char16_t'
| | |   `-SubstTemplateTypeParmType 0x1ae9d80 'const char16_t' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-QualType 0xffd731 'const char16_t' const
| | |       `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1af02b0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__undefined'
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0x1af0620 prev 0x1af02b0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1af06c0 <line:2059:7, col:24> col:24 referenced type 'char32_t':'char32_t'
| | |   `-SubstTemplateTypeParmType 0x1af0550 'char32_t' sugar
| | |     |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0x1223838 '_Iffalse'
| | |     `-BuiltinType 0xffd750 'char32_t'
| | `-ClassTemplateSpecializationDecl 0x1b01db0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument type 'std::__undefined'
| |   |-TemplateArgument type 'const char32_t'
| |   |-CXXRecordDecl 0x1b02120 prev 0x1b01db0 <col:5, col:12> col:12 implicit struct conditional
| |   `-TypedefDecl 0x1b021c0 <line:2059:7, col:24> col:24 referenced type 'const char32_t':'const char32_t'
| |     `-SubstTemplateTypeParmType 0x1b02050 'const char32_t' sugar
| |       |-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| |       | `-TemplateTypeParm 0x1223838 '_Iffalse'
| |       `-QualType 0xffd751 'const char32_t' const
| |         `-BuiltinType 0xffd750 'char32_t'
| |-ClassTemplateDecl 0x1138778 <line:94:3, line:95:12> col:12 __or_
| | |-TemplateTypeParmDecl 0x1138618 <line:94:12> col:23 typename depth 0 index 0 ...
| | |-CXXRecordDecl 0x11386e8 <line:95:5, col:12> col:12 struct __or_
| | |-ClassTemplateSpecialization 0x1138a10 '__or_'
| | |-ClassTemplateSpecializationDecl 0x1a78548 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<random_access_iterator_tag>::value, is_void<random_access_iterator_tag>, __or_<is_function<input_iterator_tag>, is_array<input_iterator_tag> > >::type':'std::__or_<std::is_function<std::input_iterator_tag>, std::is_array<std::input_iterator_tag> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<std::random_access_iterator_tag>'
| | | | |-TemplateArgument type 'std::is_function<std::input_iterator_tag>'
| | | | `-TemplateArgument type 'std::is_array<std::input_iterator_tag>'
| | | `-CXXRecordDecl 0x1a7b498 prev 0x1a78548 <col:5, col:12> col:12 implicit struct __or_
| | `-ClassTemplateSpecializationDecl 0x1a79cb8 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'conditional<is_function<input_iterator_tag>::value, is_function<input_iterator_tag>, is_array<input_iterator_tag> >::type':'std::is_array<std::input_iterator_tag>'
| |   |-TemplateArgument pack
| |   | |-TemplateArgument type 'std::is_function<std::input_iterator_tag>'
| |   | `-TemplateArgument type 'std::is_array<std::input_iterator_tag>'
| |   `-CXXRecordDecl 0x1a7b3c0 prev 0x1a79cb8 <col:5, col:12> col:12 implicit struct __or_
| |-ClassTemplateSpecializationDecl 0x1138a10 <line:97:3, line:100:7> line:98:12 struct __or_ definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0x113d890 <col:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0x113dae0 <line:102:3, line:105:7> line:103:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '_B1'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x113d938 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | `-CXXRecordDecl 0x113dd78 <line:103:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0x113e0b0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B1, _B2>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x113de20 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0x113de98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | `-CXXRecordDecl 0x113e710 <line:108:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0x113ece0 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B1, __or_<_B2, _B3, _Bn...> >::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0x113e7b8 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0x113e838 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | |-TemplateTypeParmDecl 0x113e8b8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| | |-TemplateTypeParmDecl 0x113e938 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| | `-CXXRecordDecl 0x113f600 <line:113:5, col:12> col:12 implicit struct __or_
| |-ClassTemplateDecl 0x113f7d8 <line:117:3, line:118:12> col:12 __and_
| | |-TemplateTypeParmDecl 0x113f6a8 <line:117:12> col:23 typename depth 0 index 0 ...
| | |-CXXRecordDecl 0x113f748 <line:118:5, col:12> col:12 struct __and_
| | |-ClassTemplateSpecialization 0x113fa40 '__and_'
| | |-ClassTemplateSpecializationDecl 0x1a3ce68 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<__not_<is_lvalue_reference<basic_istream<char> &> >::value, __and_<__is_convertible_to_basic_istream<basic_istream<char> &>, __is_extractable<basic_istream<char> &, char &, void> >, __not_<is_lvalue_reference<basic_istream<char> &> > >::type':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | | |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | | | `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, char &, void>'
| | | `-CXXRecordDecl 0x1a3e340 prev 0x1a3ce68 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0x1a3dbe0 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | |   `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, char &, void>'
| | |-ClassTemplateSpecializationDecl 0x1a3f618 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<__not_<is_lvalue_reference<basic_istream<char> &> >::value, __and_<__is_convertible_to_basic_istream<basic_istream<char> &>, __is_extractable<basic_istream<char> &, unsigned char &, void> >, __not_<is_lvalue_reference<basic_istream<char> &> > >::type':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | | |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | | | `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, unsigned char &, void>'
| | | `-CXXRecordDecl 0x1a40350 prev 0x1a3f618 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0x1a3fc38 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | |   `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, unsigned char &, void>'
| | |-ClassTemplateSpecializationDecl 0x1a41588 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<__not_<is_lvalue_reference<basic_istream<char> &> >::value, __and_<__is_convertible_to_basic_istream<basic_istream<char> &>, __is_extractable<basic_istream<char> &, signed char &, void> >, __not_<is_lvalue_reference<basic_istream<char> &> > >::type':'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<char> &> >'
| | | | |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | | | `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, signed char &, void>'
| | | `-CXXRecordDecl 0x1a422c0 prev 0x1a41588 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0x1a41ba8 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<char> &>'
| | |   `-TemplateArgument type 'std::__is_extractable<std::basic_istream<char> &, signed char &, void>'
| | |-ClassTemplateSpecializationDecl 0x1a4de58 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<__not_<is_lvalue_reference<basic_istream<wchar_t> &> >::value, __and_<__is_convertible_to_basic_istream<basic_istream<wchar_t> &>, __is_extractable<basic_istream<wchar_t> &, wchar_t &, void> >, __not_<is_lvalue_reference<basic_istream<wchar_t> &> > >::type':'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_istream<wchar_t> &> >'
| | | | |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<wchar_t> &>'
| | | | `-TemplateArgument type 'std::__is_extractable<std::basic_istream<wchar_t> &, wchar_t &, void>'
| | | `-CXXRecordDecl 0x1a4f320 prev 0x1a4de58 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0x1a4ebe0 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::__is_convertible_to_basic_istream<std::basic_istream<wchar_t> &>'
| | |   `-TemplateArgument type 'std::__is_extractable<std::basic_istream<wchar_t> &, wchar_t &, void>'
| | |-ClassTemplateSpecializationDecl 0x1a5d088 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<__not_<is_lvalue_reference<basic_ostream<char> &> >::value, __and_<__is_convertible_to_basic_ostream<basic_ostream<char> &>, __is_insertable<basic_ostream<char> &, char const (&)[14], void> >, __not_<is_lvalue_reference<basic_ostream<char> &> > >::type':'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::__not_<std::is_lvalue_reference<std::basic_ostream<char> &> >'
| | | | |-TemplateArgument type 'std::__is_convertible_to_basic_ostream<std::basic_ostream<char> &>'
| | | | `-TemplateArgument type 'std::__is_insertable<std::basic_ostream<char> &, char const (&)[14], void>'
| | | `-CXXRecordDecl 0x1a5e540 prev 0x1a5d088 <col:5, col:12> col:12 implicit struct __and_
| | `-ClassTemplateSpecializationDecl 0x1a5de00 <line:117:3, line:118:12> col:12 struct __and_
| |   `-TemplateArgument pack
| |     |-TemplateArgument type 'std::__is_convertible_to_basic_ostream<std::basic_ostream<char> &>'
| |     `-TemplateArgument type 'std::__is_insertable<std::basic_ostream<char> &, char const (&)[14], void>'
| |-ClassTemplateSpecializationDecl 0x113fa40 <line:120:3, line:123:7> line:121:12 struct __and_ definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0x11402b0 <col:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0x11409d0 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '_B1'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x1140358 <line:125:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | `-CXXRecordDecl 0x1140c68 <line:126:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0x1140fa0 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B2, _B1>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x1140d10 <line:130:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0x1140d88 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | `-CXXRecordDecl 0x1141590 <line:131:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0x1142b40 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0x1141638 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0x11416b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | |-TemplateTypeParmDecl 0x1141738 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| | |-TemplateTypeParmDecl 0x11417b8 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| | `-CXXRecordDecl 0x1143450 <line:136:5, col:12> col:12 implicit struct __and_
| |-ClassTemplateDecl 0x1143628 <line:140:3, line:143:7> line:141:12 __not_
| | |-TemplateTypeParmDecl 0x11434f8 <line:140:12, col:21> col:21 typename depth 0 index 0 _Pp
| | |-CXXRecordDecl 0x1143598 <line:141:5, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(_Pp::value)>':'integral_constant<bool, !bool(_Pp::value)>'
| | | `-CXXRecordDecl 0x1143fc8 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0x1a38130 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(is_lvalue_reference<basic_istream<char> &>::value)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::is_lvalue_reference<std::basic_istream<char> &>'
| | | `-CXXRecordDecl 0x1a3da78 prev 0x1a38130 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0x1a3b2b0 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(is_void<basic_istream<char> &>::value)>':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::is_void<std::basic_istream<char> &>'
| | | `-CXXRecordDecl 0x1a3c978 prev 0x1a3b2b0 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0x1a49340 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(is_lvalue_reference<basic_istream<wchar_t> &>::value)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::is_lvalue_reference<std::basic_istream<wchar_t> &>'
| | | `-CXXRecordDecl 0x1a4ea78 prev 0x1a49340 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0x1a4c2c0 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(is_void<basic_istream<wchar_t> &>::value)>':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::is_void<std::basic_istream<wchar_t> &>'
| | | `-CXXRecordDecl 0x1a4d968 prev 0x1a4c2c0 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0x1a54f60 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(is_lvalue_reference<basic_ostream<char> &>::value)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::is_lvalue_reference<std::basic_ostream<char> &>'
| | | `-CXXRecordDecl 0x1a5dc98 prev 0x1a54f60 <col:5, col:12> col:12 implicit struct __not_
| | `-ClassTemplateSpecializationDecl 0x1a5b4c0 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<!bool(is_void<basic_ostream<char> &>::value)>':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'std::is_void<std::basic_ostream<char> &>'
| |   `-CXXRecordDecl 0x1a5cb68 prev 0x1a5b4c0 <col:5, col:12> col:12 implicit struct __not_
| |-ClassTemplateDecl 0x1144198 <line:185:3, line:187:25> line:186:12 __success_type
| | |-TemplateTypeParmDecl 0x1144070 <line:185:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1144108 <line:186:5, line:187:25> line:186:12 struct __success_type definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11443f0 <col:5, col:12> col:12 implicit struct __success_type
| |   `-TypedefDecl 0x1144490 <line:187:7, col:19> col:19 type '_Tp'
| |     `-TemplateTypeParmType 0x11440c0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x1144070 '_Tp'
| |-CXXRecordDecl 0x1144500 <line:189:3, line:190:5> line:189:10 referenced struct __failure_type definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x1144618 <col:3, col:10> col:10 implicit struct __failure_type
| |-ClassTemplateDecl 0x11447e8 <line:194:3, line:195:12> col:12 remove_cv
| | |-TemplateTypeParmDecl 0x11446c0 <line:194:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1144758 <line:195:5, col:12> col:12 struct remove_cv
| | |-ClassTemplateSpecializationDecl 0x11f94d8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0x11f96e0 prev 0x11f94d8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x11f9f90 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<wchar_t>::type>::type':'wchar_t'
| | |   `-ElaboratedType 0x11f9f40 'typename remove_const<typename remove_volatile<wchar_t>::type>::type' sugar
| | |     `-TypedefType 0x11f9f20 'std::remove_const<wchar_t>::type' sugar
| | |       |-Typedef 0x11f9ea8 'type'
| | |       `-SubstTemplateTypeParmType 0x11f9e70 'wchar_t' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x11fbee8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0x11fc0f0 prev 0x11fbee8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x11fc9a0 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<unsigned int>::type>::type':'unsigned int'
| | |   `-ElaboratedType 0x11fc950 'typename remove_const<typename remove_volatile<unsigned int>::type>::type' sugar
| | |     `-TypedefType 0x11fc930 'std::remove_const<unsigned int>::type' sugar
| | |       |-Typedef 0x11fc8b8 'type'
| | |       `-SubstTemplateTypeParmType 0x11fc880 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x1201098 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0x12012a0 prev 0x1201098 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1201b50 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<char16_t>::type>::type':'char16_t'
| | |   `-ElaboratedType 0x1201b00 'typename remove_const<typename remove_volatile<char16_t>::type>::type' sugar
| | |     `-TypedefType 0x1201ae0 'std::remove_const<char16_t>::type' sugar
| | |       |-Typedef 0x1201a68 'type'
| | |       `-SubstTemplateTypeParmType 0x1201a30 'char16_t' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1203ba8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0x1203db0 prev 0x1203ba8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1204660 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<unsigned short>::type>::type':'unsigned short'
| | |   `-ElaboratedType 0x1204610 'typename remove_const<typename remove_volatile<unsigned short>::type>::type' sugar
| | |     `-TypedefType 0x12045f0 'std::remove_const<unsigned short>::type' sugar
| | |       |-Typedef 0x1204578 'type'
| | |       `-SubstTemplateTypeParmType 0x1204540 'unsigned short' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x1208b00 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0x1208d00 prev 0x1208b00 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x12095b0 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<char32_t>::type>::type':'char32_t'
| | |   `-ElaboratedType 0x1209560 'typename remove_const<typename remove_volatile<char32_t>::type>::type' sugar
| | |     `-TypedefType 0x1209540 'std::remove_const<char32_t>::type' sugar
| | |       |-Typedef 0x12094c8 'type'
| | |       `-SubstTemplateTypeParmType 0x1209490 'char32_t' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd750 'char32_t'
| | |-ClassTemplateSpecializationDecl 0x11a7718 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x11a7920 prev 0x11a7718 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x11a81d0 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<void>::type>::type':'void'
| | |   `-ElaboratedType 0x11a8180 'typename remove_const<typename remove_volatile<void>::type>::type' sugar
| | |     `-TypedefType 0x11a8160 'std::remove_const<void>::type' sugar
| | |       |-Typedef 0x11a80e8 'type'
| | |       `-SubstTemplateTypeParmType 0x11a80b0 'void' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd170 'void'
| | |-ClassTemplateSpecializationDecl 0x1a3b6c8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | |-CXXRecordDecl 0x1a3b8d0 prev 0x1a3b6c8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a3c180 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type':'std::basic_istream<char> &'
| | |   `-ElaboratedType 0x1a3c130 'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type' sugar
| | |     `-TypedefType 0x1a3c110 'std::remove_const<std::basic_istream<char> &>::type' sugar
| | |       |-Typedef 0x1a3c098 'type'
| | |       `-SubstTemplateTypeParmType 0x1a3c060 'std::basic_istream<char> &' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-LValueReferenceType 0x15fa500 'std::basic_istream<char> &'
| | |           `-RecordType 0x1103960 'std::basic_istream<char>'
| | |             `-ClassTemplateSpecialization 0x1103860 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a4c6d8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | |-CXXRecordDecl 0x1a4c8e0 prev 0x1a4c6d8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a4d190 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type':'std::basic_istream<wchar_t> &'
| | |   `-ElaboratedType 0x1a4d140 'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type' sugar
| | |     `-TypedefType 0x1a4d120 'std::remove_const<std::basic_istream<wchar_t> &>::type' sugar
| | |       |-Typedef 0x1a4d0a8 'type'
| | |       `-SubstTemplateTypeParmType 0x1a4d070 'std::basic_istream<wchar_t> &' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-LValueReferenceType 0x15ff440 'std::basic_istream<wchar_t> &'
| | |           `-RecordType 0x11081e0 'std::basic_istream<wchar_t>'
| | |             `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a5b8d8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | |-CXXRecordDecl 0x1a5bae0 prev 0x1a5b8d8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a5c390 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type':'std::basic_ostream<char> &'
| | |   `-ElaboratedType 0x1a5c340 'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type' sugar
| | |     `-TypedefType 0x1a5c320 'std::remove_const<std::basic_ostream<char> &>::type' sugar
| | |       |-Typedef 0x1a5c2a8 'type'
| | |       `-SubstTemplateTypeParmType 0x1a5c270 'std::basic_ostream<char> &' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-LValueReferenceType 0x14b1f20 'std::basic_ostream<char> &'
| | |           `-RecordType 0x1103c40 'std::basic_ostream<char>'
| | |             `-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| | |-ClassTemplateSpecializationDecl 0x1a78c48 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::random_access_iterator_tag'
| | | |-CXXRecordDecl 0x1a78e50 prev 0x1a78c48 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a79700 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type':'std::random_access_iterator_tag'
| | |   `-ElaboratedType 0x1a796b0 'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type' sugar
| | |     `-TypedefType 0x1a79690 'std::remove_const<std::random_access_iterator_tag>::type' sugar
| | |       |-Typedef 0x1a79618 'type'
| | |       `-SubstTemplateTypeParmType 0x1a795e0 'std::random_access_iterator_tag' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | |           `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | |-ClassTemplateSpecializationDecl 0x1a82938 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1a82b40 prev 0x1a82938 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a833f0 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<char>::type>::type':'char'
| | |   `-ElaboratedType 0x1a833a0 'typename remove_const<typename remove_volatile<char>::type>::type' sugar
| | |     `-TypedefType 0x1a83380 'std::remove_const<char>::type' sugar
| | |       |-Typedef 0x1a83308 'type'
| | |       `-SubstTemplateTypeParmType 0x1a832d0 'char' sugar
| | |         |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |         `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1a9b3b8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char'
| | | |-CXXRecordDecl 0x1a9b5c0 prev 0x1a9b3b8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1a9be80 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const char>::type>::type':'char'
| | |   `-ElaboratedType 0x1a9be30 'typename remove_const<typename remove_volatile<const char>::type>::type' sugar
| | |     `-TypedefType 0x1a9be10 'std::remove_const<const char>::type' sugar
| | |       |-Typedef 0x1a9bda0 'type'
| | |       `-SubstTemplateTypeParmType 0x1a9bc50 'char' sugar
| | |         |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |         `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1ac51f8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t'
| | | |-CXXRecordDecl 0x1ac5400 prev 0x1ac51f8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1ac7aa0 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const wchar_t>::type>::type':'wchar_t'
| | |   `-ElaboratedType 0x1ac7a50 'typename remove_const<typename remove_volatile<const wchar_t>::type>::type' sugar
| | |     `-TypedefType 0x1ac7a30 'std::remove_const<const wchar_t>::type' sugar
| | |       |-Typedef 0x1ac79c0 'type'
| | |       `-SubstTemplateTypeParmType 0x1ac7870 'wchar_t' sugar
| | |         |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |         `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1ae8cc8 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t'
| | | |-CXXRecordDecl 0x1ae8ed0 prev 0x1ae8cc8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x1ae9790 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const char16_t>::type>::type':'char16_t'
| | |   `-ElaboratedType 0x1ae9740 'typename remove_const<typename remove_volatile<const char16_t>::type>::type' sugar
| | |     `-TypedefType 0x1ae9720 'std::remove_const<const char16_t>::type' sugar
| | |       |-Typedef 0x1ae96b0 'type'
| | |       `-SubstTemplateTypeParmType 0x1ae9560 'char16_t' sugar
| | |         |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |         `-BuiltinType 0xffd730 'char16_t'
| | `-ClassTemplateSpecializationDecl 0x1b00f98 <line:194:3, line:195:12> line:1393:12 struct remove_cv definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const char32_t'
| |   |-CXXRecordDecl 0x1b011a0 prev 0x1b00f98 <col:5, col:12> col:12 implicit struct remove_cv
| |   `-TypedefDecl 0x1b01a60 <line:1395:7, line:1396:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const char32_t>::type>::type':'char32_t'
| |     `-ElaboratedType 0x1b01a10 'typename remove_const<typename remove_volatile<const char32_t>::type>::type' sugar
| |       `-TypedefType 0x1b019f0 'std::remove_const<const char32_t>::type' sugar
| |         |-Typedef 0x1b01980 'type'
| |         `-SubstTemplateTypeParmType 0x1b01830 'char32_t' sugar
| |           |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0x11cac80 '_Tp'
| |           `-BuiltinType 0xffd750 'char32_t'
| |-ClassTemplateDecl 0x1144b08 <line:197:3, line:199:27> line:198:12 __is_void_helper
| | |-TemplateTypeParmDecl 0x11449d8 <line:197:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1144a78 <line:198:5, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1145a90 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecialization 0x1145b60 '__is_void_helper'
| | |-ClassTemplateSpecializationDecl 0x1a3c260 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | `-CXXRecordDecl 0x1a3c490 prev 0x1a3c260 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1a4d270 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | `-CXXRecordDecl 0x1a4d4a0 prev 0x1a4d270 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1a5c470 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | `-CXXRecordDecl 0x1a5c6a0 prev 0x1a5c470 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1a797e0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::random_access_iterator_tag'
| | | `-CXXRecordDecl 0x1a79a10 prev 0x1a797e0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1a834d0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char'
| | | `-CXXRecordDecl 0x1a83700 prev 0x1a834d0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1ab6020 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x1ab6250 prev 0x1ab6020 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0x1ad98c0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x1ad9af0 prev 0x1ad98c0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | `-ClassTemplateSpecializationDecl 0x1aefe00 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'char32_t'
| |   `-CXXRecordDecl 0x1af0030 prev 0x1aefe00 <col:5, col:12> col:12 implicit struct __is_void_helper
| |-ClassTemplateSpecializationDecl 0x1145b60 <line:201:3, line:203:26> line:202:12 struct __is_void_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'void'
| | `-CXXRecordDecl 0x1145db8 <col:5, col:12> col:12 implicit struct __is_void_helper
| |-ClassTemplateDecl 0x1145f88 <line:206:3, line:209:7> line:207:12 is_void
| | |-TemplateTypeParmDecl 0x1145e60 <line:206:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1145ef8 <line:207:5, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<_Tp>::type>::type'
| | | `-CXXRecordDecl 0x1146500 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x11a74e0 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<void>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'void'
| | | `-CXXRecordDecl 0x11a83d0 prev 0x11a74e0 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a3b140 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<basic_istream<char> &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | `-CXXRecordDecl 0x1a3c5e0 prev 0x1a3b140 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a4c150 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<basic_istream<wchar_t> &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | `-CXXRecordDecl 0x1a4d5d0 prev 0x1a4c150 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a5b350 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<basic_ostream<char> &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | `-CXXRecordDecl 0x1a5c7d0 prev 0x1a5b350 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a78058 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<random_access_iterator_tag>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::random_access_iterator_tag'
| | | `-CXXRecordDecl 0x1a79b40 prev 0x1a78058 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a826f8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<char>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char'
| | | `-CXXRecordDecl 0x1a83830 prev 0x1a826f8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1a9b178 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const char>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const char'
| | | `-CXXRecordDecl 0x1a9c080 prev 0x1a9b178 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1ab5ce8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<wchar_t>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x1ab6380 prev 0x1ab5ce8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1ac4fb8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const wchar_t>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const wchar_t'
| | | `-CXXRecordDecl 0x1ac7ca0 prev 0x1ac4fb8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1ad9588 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<char16_t>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x1ad9c40 prev 0x1ad9588 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1ae8a88 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const char16_t>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const char16_t'
| | | `-CXXRecordDecl 0x1ae9990 prev 0x1ae8a88 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0x1aefac8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<char32_t>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | `-CXXRecordDecl 0x1af0160 prev 0x1aefac8 <col:5, col:12> col:12 implicit struct is_void
| | `-ClassTemplateSpecializationDecl 0x1b00d58 <line:206:3, line:209:7> line:207:12 struct is_void definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_void_helper<typename remove_cv<const char32_t>::type>::type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'const char32_t'
| |   `-CXXRecordDecl 0x1b01c60 prev 0x1b00d58 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateDecl 0x11466d8 <line:211:3, line:213:27> line:212:12 __is_integral_helper
| | |-TemplateTypeParmDecl 0x11465a8 <line:211:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1146648 <line:212:5, line:213:27> line:212:12 struct __is_integral_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1146970 <col:5, col:12> col:12 implicit struct __is_integral_helper
| | |-ClassTemplateSpecialization 0x1147400 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1147728 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1147a60 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1147d90 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x11480b8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x11485f0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1148918 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1148c50 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1148f80 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x11492b0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x11497e0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1149b10 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x1149e40 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x114a170 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x114a4a0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x114a9d0 '__is_integral_helper'
| | `-ClassTemplateSpecialization 0x114ad00 '__is_integral_helper'
| |-ClassTemplateSpecializationDecl 0x1147400 <line:215:3, line:217:26> line:216:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'bool'
| | `-CXXRecordDecl 0x1147658 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1147728 <line:219:3, line:221:26> line:220:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char'
| | `-CXXRecordDecl 0x1147988 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1147a60 <line:223:3, line:225:26> line:224:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'signed char'
| | `-CXXRecordDecl 0x1147cb8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1147d90 <line:227:3, line:229:26> line:228:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned char'
| | `-CXXRecordDecl 0x1147fe8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x11480b8 <line:232:3, line:234:26> line:233:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'wchar_t'
| | `-CXXRecordDecl 0x1148318 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x11485f0 <line:243:3, line:245:26> line:244:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char16_t'
| | `-CXXRecordDecl 0x1148848 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1148918 <line:247:3, line:249:26> line:248:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char32_t'
| | `-CXXRecordDecl 0x1148b78 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1148c50 <line:251:3, line:253:26> line:252:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'short'
| | `-CXXRecordDecl 0x1148ea8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1148f80 <line:255:3, line:257:26> line:256:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned short'
| | `-CXXRecordDecl 0x11491d8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x11492b0 <line:259:3, line:261:26> line:260:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'int'
| | `-CXXRecordDecl 0x1149508 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x11497e0 <line:263:3, line:265:26> line:264:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned int'
| | `-CXXRecordDecl 0x1149a38 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1149b10 <line:267:3, line:269:26> line:268:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long'
| | `-CXXRecordDecl 0x1149d68 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x1149e40 <line:271:3, line:273:26> line:272:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long'
| | `-CXXRecordDecl 0x114a098 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x114a170 <line:275:3, line:277:26> line:276:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long long'
| | `-CXXRecordDecl 0x114a3c8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x114a4a0 <line:279:3, line:281:26> line:280:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long long'
| | `-CXXRecordDecl 0x114a6f8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x114a9d0 <line:286:3, line:288:26> line:287:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type '__int128'
| | `-CXXRecordDecl 0x114ac28 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x114ad00 <line:290:3, line:292:26> line:291:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned __int128'
| | `-CXXRecordDecl 0x114af58 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateDecl 0x114b128 <line:323:3, line:326:7> line:324:12 is_integral
| | |-TemplateTypeParmDecl 0x114b000 <line:323:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x114b098 <line:324:5, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<_Tp>::type>::type'
| | | `-CXXRecordDecl 0x114b650 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x11f9298 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<wchar_t>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x11fa1b0 prev 0x11f9298 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x11fbca8 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<unsigned int>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0x11fcba0 prev 0x11fbca8 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x1200e58 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<char16_t>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x1201d50 prev 0x1200e58 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x1203968 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<unsigned short>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned short'
| | | `-CXXRecordDecl 0x1204860 prev 0x1203968 <col:5, col:12> col:12 implicit struct is_integral
| | `-ClassTemplateSpecializationDecl 0x1207628 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_integral_helper<typename remove_cv<char32_t>::type>::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'char32_t'
| |   `-CXXRecordDecl 0x12097b0 prev 0x1207628 <col:5, col:12> col:12 implicit struct is_integral
| |-ClassTemplateDecl 0x114b828 <line:328:3, line:330:27> line:329:12 __is_floating_point_helper
| | |-TemplateTypeParmDecl 0x114b6f8 <line:328:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x114b798 <line:329:5, line:330:27> line:329:12 struct __is_floating_point_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x114c860 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| | |-ClassTemplateSpecialization 0x114c938 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0x114cc70 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0x114cfa0 '__is_floating_point_helper'
| | `-ClassTemplateSpecialization 0x114d2d0 '__is_floating_point_helper'
| |-ClassTemplateSpecializationDecl 0x114c938 <line:332:3, line:334:26> line:333:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'float'
| | `-CXXRecordDecl 0x114cb98 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0x114cc70 <line:336:3, line:338:26> line:337:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'double'
| | `-CXXRecordDecl 0x114cec8 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0x114cfa0 <line:340:3, line:342:26> line:341:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long double'
| | `-CXXRecordDecl 0x114d1f8 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0x114d2d0 <line:345:3, line:347:26> line:346:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type '__float128'
| | `-CXXRecordDecl 0x114d528 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateDecl 0x114d6f8 <line:351:3, line:354:7> line:352:12 is_floating_point
| | |-TemplateTypeParmDecl 0x114d5d0 <line:351:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x114d668 <line:352:5, line:354:7> line:352:12 struct is_floating_point definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_floating_point_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x114de10 <col:5, col:12> col:12 implicit struct is_floating_point
| |-ClassTemplateDecl 0x114dfe8 <line:357:3, line:359:27> line:358:12 is_array
| | |-TemplateTypeParmDecl 0x114deb8 <line:357:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x114df58 <line:358:5, line:359:27> line:358:12 struct is_array definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x114e280 <col:5, col:12> col:12 implicit struct is_array
| | `-ClassTemplateSpecializationDecl 0x1a78390 <line:357:3, line:359:27> line:358:12 struct is_array definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'std::input_iterator_tag'
| |   `-CXXRecordDecl 0x1a7b2e8 prev 0x1a78390 <col:5, col:12> col:12 implicit struct is_array
| |-ClassTemplatePartialSpecializationDecl 0x114e650 <line:361:3, line:363:26> line:362:12 struct is_array definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0x114e328 <line:361:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x114e440 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0x1105250 <line:362:5, col:12> col:12 implicit struct is_array
| |-ClassTemplatePartialSpecializationDecl 0x11054e0 <line:365:3, line:367:26> line:366:12 struct is_array definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0x11052f8 <line:365:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1105758 <line:366:5, col:12> col:12 implicit struct is_array
| |-ClassTemplateDecl 0x1105928 <line:369:3, line:371:27> line:370:12 __is_pointer_helper
| | |-TemplateTypeParmDecl 0x1105800 <line:369:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x1105898 <line:370:5, line:371:27> line:370:12 struct __is_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x1105bc0 <col:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0x1105e10 <line:373:3, line:375:26> line:374:12 struct __is_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x1105c68 <line:373:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1106078 <line:374:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplateDecl 0x1153250 <line:378:3, line:381:7> line:379:12 is_pointer
| | |-TemplateTypeParmDecl 0x1106120 <line:378:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11061b8 <line:379:5, line:381:7> line:379:12 struct is_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x1153770 <col:5, col:12> col:12 implicit struct is_pointer
| |-ClassTemplateDecl 0x1153948 <line:384:3, line:386:27> line:385:12 is_lvalue_reference
| | |-TemplateTypeParmDecl 0x1153818 <line:384:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x11538b8 <line:385:5, line:386:27> line:385:12 struct is_lvalue_reference definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1153be0 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| | |-ClassTemplateSpecializationDecl 0x1a37fb8 <line:388:3, line:390:26> line:389:12 struct is_lvalue_reference definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | `-CXXRecordDecl 0x1a3d6e0 prev 0x1a37fb8 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| | |-ClassTemplateSpecializationDecl 0x1a491c8 <line:388:3, line:390:26> line:389:12 struct is_lvalue_reference definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | `-CXXRecordDecl 0x1a4e6e0 prev 0x1a491c8 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| | `-ClassTemplateSpecializationDecl 0x1a54de8 <line:388:3, line:390:26> line:389:12 struct is_lvalue_reference definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::true_type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'std::basic_ostream<char> &'
| |   `-CXXRecordDecl 0x1a5d900 prev 0x1a54de8 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0x1153e30 <line:388:3, line:390:26> line:389:12 struct is_lvalue_reference definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0x1153c88 <line:388:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1154098 <line:389:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplateDecl 0x11542f0 <line:393:3, line:395:27> line:394:12 is_rvalue_reference
| | |-TemplateTypeParmDecl 0x1154140 <line:393:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x1154260 <line:394:5, line:395:27> line:394:12 struct is_rvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x1154580 <col:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0x1154800 <line:397:3, line:399:26> line:398:12 struct is_rvalue_reference definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | |-TemplateTypeParmDecl 0x1154628 <line:397:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1154a68 <line:398:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplateDecl 0x1154c38 <line:401:3, line:402:12> col:12 is_function
| | |-TemplateTypeParmDecl 0x1154b10 <line:401:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1154ba8 <line:402:5, col:12> col:12 struct is_function
| | `-ClassTemplateSpecializationDecl 0x1a78208 <line:453:3, line:455:27> line:454:12 struct is_function definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'std::input_iterator_tag'
| |   `-CXXRecordDecl 0x1a7ab70 prev 0x1a78208 <col:5, col:12> col:12 implicit struct is_function
| |-ClassTemplateDecl 0x1154f58 <line:404:3, line:406:27> line:405:12 __is_member_object_pointer_helper
| | |-TemplateTypeParmDecl 0x1154e28 <line:404:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x1154ec8 <line:405:5, line:406:27> line:405:12 struct __is_member_object_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x1155ed0 <col:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0x1156220 <line:408:3, line:410:47> line:409:12 struct __is_member_object_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__not_<is_function<_Tp> >::type'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0x1155f78 <line:408:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1155ff8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0x11566d0 <line:409:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
| |-ClassTemplateDecl 0x11568a8 <line:413:3, line:417:7> line:414:12 is_member_object_pointer
| | |-TemplateTypeParmDecl 0x1156778 <line:413:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1156818 <line:414:5, line:417:7> line:414:12 struct is_member_object_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_object_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x1156dd0 <col:5, col:12> col:12 implicit struct is_member_object_pointer
| |-ClassTemplateDecl 0x1157908 <line:419:3, line:421:27> line:420:12 __is_member_function_pointer_helper
| | |-TemplateTypeParmDecl 0x1156e78 <line:419:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x1157878 <line:420:5, line:421:27> line:420:12 struct __is_member_function_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x1157ba0 <col:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0x1157ec0 <line:423:3, line:425:39> line:424:12 struct __is_member_function_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_function<_Tp>::type'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0x1157c48 <line:423:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1157cc8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0x1158290 <line:424:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
| |-ClassTemplateDecl 0x1158468 <line:428:3, line:432:7> line:429:12 is_member_function_pointer
| | |-TemplateTypeParmDecl 0x1158338 <line:428:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11583d8 <line:429:5, line:432:7> line:429:12 struct is_member_function_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_function_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x11597c0 <col:5, col:12> col:12 implicit struct is_member_function_pointer
| |-ClassTemplateDecl 0x1159998 <line:435:3, line:438:7> line:436:12 is_enum
| | |-TemplateTypeParmDecl 0x1159868 <line:435:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1159908 <line:436:5, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(_Tp)>'
| | | `-CXXRecordDecl 0x1159d80 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0x11fa510 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(wchar_t)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x11fa880 prev 0x11fa510 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0x11fccf0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(unsigned int)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0x11fdb00 prev 0x11fccf0 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0x1201ea0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(char16_t)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x1202210 prev 0x1201ea0 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0x12049b0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(unsigned short)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned short'
| | | `-CXXRecordDecl 0x1204d20 prev 0x12049b0 <col:5, col:12> col:12 implicit struct is_enum
| | `-ClassTemplateSpecializationDecl 0x1209900 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_enum(char32_t)>':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'char32_t'
| |   `-CXXRecordDecl 0x1209c70 prev 0x1209900 <col:5, col:12> col:12 implicit struct is_enum
| |-ClassTemplateDecl 0x1159f58 <line:441:3, line:444:7> line:442:12 is_union
| | |-TemplateTypeParmDecl 0x1159e28 <line:441:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1159ec8 <line:442:5, line:444:7> line:442:12 struct is_union definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_union(_Tp)>'
| |   `-CXXRecordDecl 0x115a340 <col:5, col:12> col:12 implicit struct is_union
| |-ClassTemplateDecl 0x115a518 <line:447:3, line:450:7> line:448:12 is_class
| | |-TemplateTypeParmDecl 0x115a3e8 <line:447:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x115a488 <line:448:5, line:450:7> line:448:12 struct is_class definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_class(_Tp)>'
| |   `-CXXRecordDecl 0x115c350 <col:5, col:12> col:12 implicit struct is_class
| |-ClassTemplateDecl 0x115c528 prev 0x1154c38 <line:453:3, line:455:27> line:454:12 is_function
| | |-TemplateTypeParmDecl 0x115c3f8 <line:453:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x115c498 prev 0x1154ba8 <line:454:5, line:455:27> line:454:12 struct is_function definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x115c628 <col:5, col:12> col:12 implicit struct is_function
| | `-ClassTemplateSpecialization 0x1a78208 'is_function'
| |-ClassTemplatePartialSpecializationDecl 0x115ca40 <line:457:3, line:459:26> line:458:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0x115c6d0 <line:457:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115c748 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115ccb8 <line:458:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115d5d0 <line:461:3, line:463:26> line:462:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &'
| | |-TemplateTypeParmDecl 0x115cd60 <line:461:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115cdd8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115d848 <line:462:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115dc00 <line:465:3, line:467:26> line:466:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &&'
| | |-TemplateTypeParmDecl 0x115d8f0 <line:465:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115d968 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115de78 <line:466:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115e240 <line:469:3, line:471:26> line:470:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| | |-TemplateTypeParmDecl 0x115df20 <line:469:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115df98 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115e5e0 <line:470:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115e9b0 <line:473:3, line:475:26> line:474:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &'
| | |-TemplateTypeParmDecl 0x115e688 <line:473:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115e708 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115ec28 <line:474:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115eff0 <line:477:3, line:479:26> line:478:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &&'
| | |-TemplateTypeParmDecl 0x115ecd0 <line:477:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115ed48 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115f268 <line:478:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115f750 <line:481:3, line:483:26> line:482:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const'
| | |-TemplateTypeParmDecl 0x115f310 <line:481:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115f388 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115f9c8 <line:482:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x115fd80 <line:485:3, line:487:26> line:486:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &'
| | |-TemplateTypeParmDecl 0x115fa70 <line:485:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x115fae8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x115fff8 <line:486:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x11603b0 <line:489:3, line:491:26> line:490:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &&'
| | |-TemplateTypeParmDecl 0x11600a0 <line:489:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1160118 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1160628 <line:490:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1160bf0 <line:493:3, line:495:26> line:494:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const'
| | |-TemplateTypeParmDecl 0x11608d0 <line:493:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1160948 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1160e68 <line:494:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1161230 <line:497:3, line:499:26> line:498:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &'
| | |-TemplateTypeParmDecl 0x1160f10 <line:497:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1160f88 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x11614a8 <line:498:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1161db0 <line:501:3, line:503:26> line:502:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &&'
| | |-TemplateTypeParmDecl 0x1161550 <line:501:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x11615c8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1162028 <line:502:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x11623e0 <line:505:3, line:507:26> line:506:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile'
| | |-TemplateTypeParmDecl 0x11620d0 <line:505:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1162148 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1162658 <line:506:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1162a10 <line:509:3, line:511:26> line:510:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &'
| | |-TemplateTypeParmDecl 0x1162700 <line:509:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1162778 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1162c88 <line:510:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1163170 <line:513:3, line:515:26> line:514:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &&'
| | |-TemplateTypeParmDecl 0x1162d30 <line:513:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1162ee0 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x11633e8 <line:514:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x11637b0 <line:517:3, line:519:26> line:518:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile'
| | |-TemplateTypeParmDecl 0x1163490 <line:517:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1163508 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1163a28 <line:518:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1163df0 <line:521:3, line:523:26> line:522:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &'
| | |-TemplateTypeParmDecl 0x1163ad0 <line:521:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1163b48 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1164158 <line:522:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1164520 <line:525:3, line:527:26> line:526:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &&'
| | |-TemplateTypeParmDecl 0x1164200 <line:525:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1164278 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1164798 <line:526:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1164b50 <line:529:3, line:531:26> line:530:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile'
| | |-TemplateTypeParmDecl 0x1164840 <line:529:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x11648b8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1164dc8 <line:530:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x11653f0 <line:533:3, line:535:26> line:534:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &'
| | |-TemplateTypeParmDecl 0x1164e70 <line:533:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1164ee8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1165668 <line:534:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1165a20 <line:537:3, line:539:26> line:538:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &&'
| | |-TemplateTypeParmDecl 0x1165710 <line:537:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1165788 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1165c98 <line:538:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1166060 <line:541:3, line:543:26> line:542:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile'
| | |-TemplateTypeParmDecl 0x1165d40 <line:541:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1165db8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x11663b8 <line:542:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1166780 <line:545:3, line:547:26> line:546:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &'
| | |-TemplateTypeParmDecl 0x1166460 <line:545:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x11664d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x11669f8 <line:546:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0x1166dc0 <line:549:3, line:551:26> line:550:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &&'
| | |-TemplateTypeParmDecl 0x1166aa0 <line:549:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1166b18 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1167038 <line:550:5, col:12> col:12 implicit struct is_function
| |-ClassTemplateDecl 0x1167208 <line:555:3, line:557:27> line:556:12 __is_null_pointer_helper
| | |-TemplateTypeParmDecl 0x11670e0 <line:555:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1167178 <line:556:5, line:557:27> line:556:12 struct __is_null_pointer_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1168650 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
| | `-ClassTemplateSpecialization 0x1168788 '__is_null_pointer_helper'
| |-ClassTemplateSpecializationDecl 0x1168788 <line:559:3, line:561:26> line:560:12 struct __is_null_pointer_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'nullptr_t'
| | `-CXXRecordDecl 0x11689e8 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
| |-ClassTemplateDecl 0x1168bb8 <line:564:3, line:567:7> line:565:12 is_null_pointer
| | |-TemplateTypeParmDecl 0x1168a90 <line:564:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1168b28 <line:565:5, line:567:7> line:565:12 struct is_null_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_null_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x11690e0 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateDecl 0x11692b8 <line:570:3, line:573:7> line:571:12 __is_nullptr_t
| | |-TemplateTypeParmDecl 0x1169188 <line:570:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1169228 <line:571:5, line:573:7> line:571:12 struct __is_nullptr_t definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_null_pointer<_Tp>'
| |   `-CXXRecordDecl 0x116a360 <col:5, col:12> col:12 implicit struct __is_nullptr_t
| |-ClassTemplateDecl 0x116a538 <line:578:3, line:582:7> line:579:12 is_reference
| | |-TemplateTypeParmDecl 0x116a408 <line:578:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x116a4a8 <line:579:5, line:582:7> line:579:12 struct is_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_lvalue_reference<_Tp>, is_rvalue_reference<_Tp> >::type'
| |   `-CXXRecordDecl 0x116ab40 <col:5, col:12> col:12 implicit struct is_reference
| |-ClassTemplateDecl 0x116ad18 <line:585:3, line:588:7> line:586:12 is_arithmetic
| | |-TemplateTypeParmDecl 0x116abe8 <line:585:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x116ac88 <line:586:5, line:588:7> line:586:12 struct is_arithmetic definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_integral<_Tp>, is_floating_point<_Tp> >::type'
| |   `-CXXRecordDecl 0x116bc60 <col:5, col:12> col:12 implicit struct is_arithmetic
| |-ClassTemplateDecl 0x116be38 <line:591:3, line:595:7> line:592:12 is_fundamental
| | |-TemplateTypeParmDecl 0x116bd08 <line:591:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x116bda8 <line:592:5, line:595:7> line:592:12 struct is_fundamental definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_void<_Tp>, is_null_pointer<_Tp> >::type'
| |   `-CXXRecordDecl 0x116c550 <col:5, col:12> col:12 implicit struct is_fundamental
| |-ClassTemplateDecl 0x116c728 <line:598:3, line:602:7> line:599:12 is_object
| | |-TemplateTypeParmDecl 0x116c5f8 <line:598:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x116c698 <line:599:5, line:602:7> line:599:12 struct is_object definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__not_<__or_<is_function<_Tp>, is_reference<_Tp>, is_void<_Tp> > >::type'
| |   `-CXXRecordDecl 0x116d860 <col:5, col:12> col:12 implicit struct is_object
| |-ClassTemplateDecl 0x116da38 <line:604:3, line:605:12> col:12 is_member_pointer
| | |-TemplateTypeParmDecl 0x116d908 <line:604:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x116d9a8 <line:605:5, col:12> col:12 struct is_member_pointer
| |-ClassTemplateDecl 0x116dd58 <line:608:3, line:612:7> line:609:12 is_scalar
| | |-TemplateTypeParmDecl 0x116dc28 <line:608:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x116dcc8 <line:609:5, line:612:7> line:609:12 struct is_scalar definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>, is_member_pointer<_Tp>, is_null_pointer<_Tp> >::type'
| |   `-CXXRecordDecl 0x1170b60 <col:5, col:12> col:12 implicit struct is_scalar
| |-ClassTemplateDecl 0x1170d38 <line:615:3, line:617:50> line:616:12 is_compound
| | |-TemplateTypeParmDecl 0x1170c08 <line:615:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1170ca8 <line:616:5, line:617:50> line:616:12 struct is_compound definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__not_<is_fundamental<_Tp> >::type'
| |   `-CXXRecordDecl 0x1171200 <col:5, col:12> col:12 implicit struct is_compound
| |-ClassTemplateDecl 0x11713d8 <line:619:3, line:621:27> line:620:12 __is_member_pointer_helper
| | |-TemplateTypeParmDecl 0x11712a8 <line:619:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1171348 <line:620:5, line:621:27> line:620:12 struct __is_member_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x1171670 <col:5, col:12> col:12 implicit struct __is_member_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0x11729b0 <line:623:3, line:625:26> line:624:12 struct __is_member_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0x1171718 <line:623:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1171798 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0x1172c28 <line:624:5, col:12> col:12 implicit struct __is_member_pointer_helper
| |-ClassTemplateDecl 0x1172df8 prev 0x116da38 <line:628:3, line:631:7> line:629:12 is_member_pointer
| | |-TemplateTypeParmDecl 0x1172cd0 <line:628:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1172d68 prev 0x116d9a8 <line:629:5, line:631:7> line:629:12 struct is_member_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0x1173190 <col:5, col:12> col:12 implicit struct is_member_pointer
| |-ClassTemplateDecl 0x1173368 <line:635:3, line:638:7> line:636:12 __is_referenceable
| | |-TemplateTypeParmDecl 0x1173238 <line:635:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11732d8 <line:636:5, line:638:7> line:636:12 struct __is_referenceable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_object<_Tp>, is_reference<_Tp> >::type'
| |   `-CXXRecordDecl 0x1173e00 <col:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplatePartialSpecializationDecl 0x1174190 <line:640:3, line:643:7> line:641:12 struct __is_referenceable definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0x1173ea8 <line:640:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1173f28 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x1174408 <line:641:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplatePartialSpecializationDecl 0x1174790 <line:645:3, line:648:7> line:646:12 struct __is_referenceable definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| | |-TemplateTypeParmDecl 0x11744b0 <line:645:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1174528 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x1174a08 <line:646:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplateDecl 0x1174bd8 <line:653:3, line:655:27> line:654:12 is_const
| | |-TemplateTypeParmDecl 0x1174ab0 <line:653:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1174b48 <line:654:5, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1175080 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x11ea578 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x11ea7e8 prev 0x11ea578 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x11ee708 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x11ee978 prev 0x11ee708 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x11f11d8 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | `-CXXRecordDecl 0x11f1448 prev 0x11f11d8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x11fe318 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0x11fe588 prev 0x11fe318 <col:5, col:12> col:12 implicit struct is_const
| | `-ClassTemplateSpecializationDecl 0x12059c8 <line:653:3, line:655:27> line:654:12 struct is_const definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'unsigned short'
| |   `-CXXRecordDecl 0x1205c38 prev 0x12059c8 <col:5, col:12> col:12 implicit struct is_const
| |-ClassTemplatePartialSpecializationDecl 0x11752a0 <line:657:3, line:659:26> line:658:12 struct is_const definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x1175128 <line:657:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1175508 <line:658:5, col:12> col:12 implicit struct is_const
| |-ClassTemplateDecl 0x11756d8 <line:662:3, line:664:27> line:663:12 is_volatile
| | |-TemplateTypeParmDecl 0x11755b0 <line:662:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x1175648 <line:663:5, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1175970 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x11eab70 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0x11eadd8 prev 0x11eab70 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x11eeac8 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0x11eed38 prev 0x11eeac8 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x11f1598 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | `-CXXRecordDecl 0x11f1808 prev 0x11f1598 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x11fe6d8 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0x11fe948 prev 0x11fe6d8 <col:5, col:12> col:12 implicit struct is_volatile
| | `-ClassTemplateSpecializationDecl 0x1205d88 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'unsigned short'
| |   `-CXXRecordDecl 0x1205ff8 prev 0x1205d88 <col:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplatePartialSpecializationDecl 0x1175b90 <line:666:3, line:668:26> line:667:12 struct is_volatile definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x1175a18 <line:666:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1176bc0 <line:667:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplateDecl 0x1176d98 <line:671:3, line:674:7> line:672:12 is_trivial
| | |-TemplateTypeParmDecl 0x1176c68 <line:671:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1176d08 <line:672:5, line:674:7> line:672:12 struct is_trivial definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_trivial(_Tp)>'
| |   `-CXXRecordDecl 0x1177180 <col:5, col:12> col:12 implicit struct is_trivial
| |-ClassTemplateDecl 0x1177358 <line:677:3, line:680:7> line:678:12 is_trivially_copyable
| | |-TemplateTypeParmDecl 0x1177228 <line:677:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11772c8 <line:678:5, line:680:7> line:678:12 struct is_trivially_copyable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_trivially_copyable(_Tp)>'
| |   `-CXXRecordDecl 0x1177740 <col:5, col:12> col:12 implicit struct is_trivially_copyable
| |-ClassTemplateDecl 0x1177918 <line:683:3, line:686:7> line:684:12 is_standard_layout
| | |-TemplateTypeParmDecl 0x11777e8 <line:683:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1177888 <line:684:5, line:686:7> line:684:12 struct is_standard_layout definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_standard_layout(_Tp)>'
| |   `-CXXRecordDecl 0x1178a90 <col:5, col:12> col:12 implicit struct is_standard_layout
| |-ClassTemplateDecl 0x1178c68 <line:690:3, line:693:7> line:691:12 is_pod
| | |-TemplateTypeParmDecl 0x1178b38 <line:690:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1178bd8 <line:691:5, line:693:7> line:691:12 struct is_pod definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_pod(_Tp)>'
| |   `-CXXRecordDecl 0x1179050 <col:5, col:12> col:12 implicit struct is_pod
| |-ClassTemplateDecl 0x1179228 <line:696:3, line:699:7> line:697:12 is_literal_type
| | |-TemplateTypeParmDecl 0x11790f8 <line:696:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1179198 <line:697:5, line:699:7> line:697:12 struct is_literal_type definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_literal(_Tp)>'
| |   `-CXXRecordDecl 0x1179610 <col:5, col:12> col:12 implicit struct is_literal_type
| |-ClassTemplateDecl 0x11797e8 <line:702:3, line:705:7> line:703:12 is_empty
| | |-TemplateTypeParmDecl 0x11796b8 <line:702:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1179758 <line:703:5, line:705:7> line:703:12 struct is_empty definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_empty(_Tp)>'
| |   `-CXXRecordDecl 0x117b190 <col:5, col:12> col:12 implicit struct is_empty
| |-ClassTemplateDecl 0x117b368 <line:708:3, line:711:7> line:709:12 is_polymorphic
| | |-TemplateTypeParmDecl 0x117b238 <line:708:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x117b2d8 <line:709:5, line:711:7> line:709:12 struct is_polymorphic definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_polymorphic(_Tp)>'
| |   `-CXXRecordDecl 0x117b750 <col:5, col:12> col:12 implicit struct is_polymorphic
| |-ClassTemplateDecl 0x117b928 <line:716:3, line:719:7> line:717:12 is_final
| | |-TemplateTypeParmDecl 0x117b7f8 <line:716:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x117b898 <line:717:5, line:719:7> line:717:12 struct is_final definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_final(_Tp)>'
| |   `-CXXRecordDecl 0x117bd10 <col:5, col:12> col:12 implicit struct is_final
| |-ClassTemplateDecl 0x117d870 <line:723:3, line:726:7> line:724:12 is_abstract
| | |-TemplateTypeParmDecl 0x117bdb8 <line:723:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x117be58 <line:724:5, line:726:7> line:724:12 struct is_abstract definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_abstract(_Tp)>'
| |   `-CXXRecordDecl 0x117dc50 <col:5, col:12> col:12 implicit struct is_abstract
| |-ClassTemplateDecl 0x117dfb8 <line:728:3, line:731:27> line:730:12 __is_signed_helper
| | |-TemplateTypeParmDecl 0x117dcf8 <line:728:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x117de88 <line:729:5, col:32> col:10 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x117dee8 <col:12, col:32> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x117de40 <col:12, col:32> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x117df28 <line:730:5, line:731:27> line:730:12 struct __is_signed_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x117e2b0 <col:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplatePartialSpecializationDecl 0x117e568 <line:733:3, line:736:7> line:734:12 struct __is_signed_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<bool, _Tp(-1) < _Tp(0)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x117e358 <line:733:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x117f7a0 <line:734:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplateDecl 0x117f978 <line:739:3, line:742:7> line:740:12 is_signed
| | |-TemplateTypeParmDecl 0x117f848 <line:739:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x117f8e8 <line:740:5, line:742:7> line:740:12 struct is_signed definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_signed_helper<_Tp>::type'
| |   `-CXXRecordDecl 0x117ff00 <col:5, col:12> col:12 implicit struct is_signed
| |-ClassTemplateDecl 0x11800d8 <line:745:3, line:748:7> line:746:12 is_unsigned
| | |-TemplateTypeParmDecl 0x117ffa8 <line:745:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1180048 <line:746:5, line:748:7> line:746:12 struct is_unsigned definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp> > >'
| |   `-CXXRecordDecl 0x1181010 <col:5, col:12> col:12 implicit struct is_unsigned
| |-FunctionTemplateDecl 0x11813c8 <line:758:3, line:760:18> col:5 __declval
| | |-TemplateTypeParmDecl 0x11810b8 <line:758:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1181178 <col:26, col:44> col:35 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp &&'
| | |-FunctionDecl 0x1181328 <line:759:5, line:760:18> col:5 __declval '_Up (int)'
| | | `-ParmVarDecl 0x1181238 <col:15> col:18 'int'
| | |-FunctionDecl 0x1a39578 <line:759:5, line:760:18> col:5 referenced __declval 'std::basic_istream<char> *&&(int)'
| | | |-TemplateArgument type 'std::basic_istream<char> *'
| | | |-TemplateArgument type 'std::basic_istream<char> *&&'
| | | `-ParmVarDecl 0x1a39488 <col:15> col:18 'int'
| | |-FunctionDecl 0x1a4a688 <line:759:5, line:760:18> col:5 referenced __declval 'std::basic_istream<wchar_t> *&&(int)'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> *'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> *&&'
| | | `-ParmVarDecl 0x1a4a598 <col:15> col:18 'int'
| | |-FunctionDecl 0x1a59808 <line:759:5, line:760:18> col:5 referenced __declval 'std::basic_ostream<char> *&&(int)'
| | | |-TemplateArgument type 'std::basic_ostream<char> *'
| | | |-TemplateArgument type 'std::basic_ostream<char> *&&'
| | | `-ParmVarDecl 0x1a59718 <col:15> col:18 'int'
| | `-FunctionDecl 0x1a7f768 <line:759:5, line:760:18> col:5 referenced __declval 'std::random_access_iterator_tag &&(int)'
| |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   |-TemplateArgument type 'std::random_access_iterator_tag &&'
| |   `-ParmVarDecl 0x1a7f678 <col:15> col:18 'int'
| |-FunctionTemplateDecl 0x1181678 <line:762:3, line:764:19> col:5 __declval
| | |-TemplateTypeParmDecl 0x1181428 <line:762:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x11815d8 <line:763:5, line:764:19> col:5 __declval '_Tp (long)'
| | | `-ParmVarDecl 0x11814e0 <col:15> col:19 'long'
| | |-FunctionDecl 0x1a39148 <line:763:5, line:764:19> col:5 __declval 'std::basic_istream<char> *(long)'
| | | |-TemplateArgument type 'std::basic_istream<char> *'
| | | `-ParmVarDecl 0x1a39058 <col:15> col:19 'long'
| | |-FunctionDecl 0x1a4a2d8 <line:763:5, line:764:19> col:5 __declval 'std::basic_istream<wchar_t> *(long)'
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> *'
| | | `-ParmVarDecl 0x1a4a1e8 <col:15> col:19 'long'
| | |-FunctionDecl 0x1a55ef8 <line:763:5, line:764:19> col:5 __declval 'std::basic_ostream<char> *(long)'
| | | |-TemplateArgument type 'std::basic_ostream<char> *'
| | | `-ParmVarDecl 0x1a55e08 <col:15> col:19 'long'
| | `-FunctionDecl 0x1a7f3b8 <line:763:5, line:764:19> col:5 __declval 'std::random_access_iterator_tag (long)'
| |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   `-ParmVarDecl 0x1a7f2c8 <col:15> col:19 'long'
| |-FunctionTemplateDecl 0x1181a50 <line:766:3, line:767:10> col:10 declval
| | |-TemplateTypeParmDecl 0x11816d8 <line:766:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x11819b0 <line:767:5, col:10> col:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | |-FunctionDecl 0x1a39c50 <line:2154:5, line:2159:5> line:2154:10 referenced declval 'auto () noexcept -> decltype(__declval<std::basic_istream<char> *>(0))'
| | | `-TemplateArgument type 'std::basic_istream<char> *'
| | |-FunctionDecl 0x1a4ace0 <col:5, line:2159:5> line:2154:10 referenced declval 'auto () noexcept -> decltype(__declval<std::basic_istream<wchar_t> *>(0))'
| | | `-TemplateArgument type 'std::basic_istream<wchar_t> *'
| | |-FunctionDecl 0x1a59e60 <col:5, line:2159:5> line:2154:10 referenced declval 'auto () noexcept -> decltype(__declval<std::basic_ostream<char> *>(0))'
| | | `-TemplateArgument type 'std::basic_ostream<char> *'
| | `-FunctionDecl 0x1a7fdc0 <line:767:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<std::random_access_iterator_tag>(0))'
| |   `-TemplateArgument type 'std::random_access_iterator_tag'
| |-ClassTemplateDecl 0x1181cb0 <line:769:3, line:770:12> col:12 extent
| | |-TemplateTypeParmDecl 0x1181aa8 <line:769:12> col:20 typename depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x1181b60 <col:22, col:33> col:31 'unsigned int' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ConstantExpr 0x1181bd8 <col:33> 'unsigned int' Int: 0
| | |     `-ImplicitCastExpr 0x1181bc0 <col:33> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0x1181b28 <col:33> 'int' 0
| | `-CXXRecordDecl 0x1181c20 <line:770:5, col:12> col:12 struct extent
| |-ClassTemplateDecl 0x11824e8 <line:772:3, line:773:12> col:12 remove_all_extents
| | |-TemplateTypeParmDecl 0x11823b8 <line:772:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x1182458 <line:773:5, col:12> col:12 struct remove_all_extents
| |-ClassTemplateDecl 0x1182808 <line:775:3, line:778:7> line:776:12 __is_array_known_bounds
| | |-TemplateTypeParmDecl 0x11826d8 <line:775:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1182778 <line:776:5, line:778:7> line:776:12 struct __is_array_known_bounds definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, (extent<_Tp>::value > 0)>'
| |   `-CXXRecordDecl 0x1182e00 <col:5, col:12> col:12 implicit struct __is_array_known_bounds
| |-ClassTemplateDecl 0x1182fd8 <line:780:3, line:783:7> line:781:12 __is_array_unknown_bounds
| | |-TemplateTypeParmDecl 0x1182ea8 <line:780:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1182f48 <line:781:5, line:783:7> line:781:12 struct __is_array_unknown_bounds definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_array<_Tp>, __not_<extent<_Tp> > >'
| |   `-CXXRecordDecl 0x11842f0 <col:5, col:12> col:12 implicit struct __is_array_unknown_bounds
| |-CXXRecordDecl 0x1184398 <line:790:3, line:797:3> line:790:10 referenced struct __do_is_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x11844b8 <col:3, col:10> col:10 implicit struct __do_is_destructible_impl
| | |-FunctionTemplateDecl 0x1184a28 <line:792:5, line:793:34> col:24 __test
| | | |-TemplateTypeParmDecl 0x1184548 <line:792:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x11847a8 <col:28, col:39> col:37 typename depth 0 index 1
| | | | `-TemplateArgument type 'decltype(declval<_Tp &>().~_Tp())'
| | | `-CXXMethodDecl 0x1184988 <line:793:7, col:34> col:24 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0x1184868 <col:31> col:34 'int'
| | `-FunctionTemplateDecl 0x1184c50 <line:795:5, line:796:35> col:25 __test
| |   |-TemplateTypeParmDecl 0x1184a88 <line:795:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0x1184bb0 <line:796:7, col:35> col:25 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0x1184de8 <line:799:3, line:804:5> line:800:12 __is_destructible_impl
| | |-TemplateTypeParmDecl 0x1184cc0 <line:799:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1184d58 <line:800:5, line:804:5> line:800:12 struct __is_destructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_destructible_impl'
| |   |-CXXRecordDecl 0x1185598 <col:5, col:12> col:12 implicit struct __is_destructible_impl
| |   `-TypedefDecl 0x11857a8 <line:803:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x1185770 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x1185700 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1185650 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x1184a28 0x1184c50
| |         `-IntegerLiteral 0x11856e0 <col:36> 'int' 0
| |-ClassTemplateDecl 0x11861b0 <line:806:3, line:811:12> col:12 __is_destructible_safe
| | |-TemplateTypeParmDecl 0x1185818 <line:806:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x1185cd8 <line:807:12, line:809:44> line:807:17 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1185d38 <col:19, line:809:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x1185c90 <line:807:19, line:809:44> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x1186078 <line:810:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11860d8 <col:19, col:61> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x1186030 <col:19, col:61> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1186120 <line:811:5, col:12> col:12 struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x1186b60 <line:813:3, line:817:7> line:814:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1186438 <line:813:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11871a0 <line:814:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x11874e0 <line:819:3, line:821:27> line:820:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1187248 <line:819:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1187838 <line:820:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x1187c40 <line:823:3, line:825:26> line:824:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11878e0 <line:823:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1187f98 <line:824:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplateDecl 0x1188168 <line:828:3, line:831:7> line:829:12 is_destructible
| | |-TemplateTypeParmDecl 0x1188040 <line:828:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11880d8 <line:829:5, line:831:7> line:829:12 struct is_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_destructible_safe<_Tp>::type'
| |   `-CXXRecordDecl 0x11890d0 <col:5, col:12> col:12 implicit struct is_destructible
| |-CXXRecordDecl 0x1189178 <line:837:3, line:845:3> line:837:10 referenced struct __do_is_nt_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1189298 <col:3, col:10> col:10 implicit struct __do_is_nt_destructible_impl
| | |-FunctionTemplateDecl 0x1189968 <line:839:5, line:841:17> col:7 __test
| | | |-TemplateTypeParmDecl 0x1189328 <line:839:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0x11898c8 <line:840:7, line:841:17> col:7 __test '__bool_constant<noexcept(declval<_Tp &>().~_Tp())> (int)' static
| | |   `-ParmVarDecl 0x1189780 <col:14> col:17 'int'
| | `-FunctionTemplateDecl 0x1189b28 <line:843:5, line:844:35> col:25 __test
| |   |-TemplateTypeParmDecl 0x11899c8 <line:843:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0x1189a88 <line:844:7, col:35> col:25 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0x1189cc8 <line:847:3, line:852:5> line:848:12 __is_nt_destructible_impl
| | |-TemplateTypeParmDecl 0x1189b98 <line:847:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1189c38 <line:848:5, line:852:5> line:848:12 struct __is_nt_destructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_nt_destructible_impl'
| |   |-CXXRecordDecl 0x118a478 <col:5, col:12> col:12 implicit struct __is_nt_destructible_impl
| |   `-TypedefDecl 0x118a648 <line:851:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x118a610 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x118a5e0 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x118a530 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x1189968 0x1189b28
| |         `-IntegerLiteral 0x118a5c0 <col:36> 'int' 0
| |-ClassTemplateDecl 0x118afd0 <line:854:3, line:859:12> col:12 __is_nt_destructible_safe
| | |-TemplateTypeParmDecl 0x118a6b8 <line:854:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x118ab38 <line:855:12, line:857:44> line:855:17 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x118ab98 <col:19, line:857:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x118aaf0 <line:855:19, line:857:44> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x118ae98 <line:858:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x118aef8 <col:19, col:61> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x118ae50 <col:19, col:61> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x118af40 <line:859:5, col:12> col:12 struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x118ca30 <line:861:3, line:865:7> line:862:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_nt_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x118b258 <line:861:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x118d020 <line:862:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x118d360 <line:867:3, line:869:27> line:868:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x118d0c8 <line:867:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x118d6b8 <line:868:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x118db00 <line:871:3, line:873:26> line:872:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x118d760 <line:871:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x118de58 <line:872:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplateDecl 0x118e028 <line:876:3, line:879:7> line:877:12 is_nothrow_destructible
| | |-TemplateTypeParmDecl 0x118df00 <line:876:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x118df98 <line:877:5, line:879:7> line:877:12 struct is_nothrow_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_destructible_safe<_Tp>::type'
| |   `-CXXRecordDecl 0x118ef20 <col:5, col:12> col:12 implicit struct is_nothrow_destructible
| |-ClassTemplateDecl 0x118f180 <line:882:3, line:885:7> line:883:12 is_constructible
| | |-TemplateTypeParmDecl 0x118efc8 <line:882:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x118f048 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x118f0f0 <line:883:5, line:885:7> line:883:12 struct is_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_constructible(_Tp, _Args...)>'
| |   `-CXXRecordDecl 0x118f708 <col:5, col:12> col:12 implicit struct is_constructible
| |-ClassTemplateDecl 0x118f8d8 <line:888:3, line:891:7> line:889:12 is_default_constructible
| | |-TemplateTypeParmDecl 0x118f7b0 <line:888:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x118f848 <line:889:5, line:891:7> line:889:12 struct is_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_constructible<_Tp>::type'
| |   `-CXXRecordDecl 0x118fd20 <col:5, col:12> col:12 implicit struct is_default_constructible
| |-ClassTemplateDecl 0x1190a38 <line:893:3, line:894:12> col:12 __is_copy_constructible_impl
| | |-TemplateTypeParmDecl 0x1190780 <line:893:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x1190908 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1190968 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11908c0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11909a8 <line:894:5, col:12> col:12 struct __is_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1190e98 <line:896:3, line:898:27> line:897:12 struct __is_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1190c88 <line:896:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1191178 <line:897:5, col:12> col:12 implicit struct __is_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1191428 <line:900:3, line:903:7> line:901:12 struct __is_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_constructible<_Tp, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x1191220 <line:900:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1191d40 <line:901:5, col:12> col:12 implicit struct __is_copy_constructible_impl
| |-ClassTemplateDecl 0x1191f18 <line:906:3, line:909:7> line:907:12 is_copy_constructible
| | |-TemplateTypeParmDecl 0x1191de8 <line:906:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1191e88 <line:907:5, line:909:7> line:907:12 struct is_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x11923c0 <col:5, col:12> col:12 implicit struct is_copy_constructible
| |-ClassTemplateDecl 0x1192728 <line:911:3, line:912:12> col:12 __is_move_constructible_impl
| | |-TemplateTypeParmDecl 0x1192468 <line:911:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11925f8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1192658 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11925b0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1192698 <line:912:5, col:12> col:12 struct __is_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1193520 <line:914:3, line:916:27> line:915:12 struct __is_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1192978 <line:914:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11937f8 <line:915:5, col:12> col:12 implicit struct __is_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1193aa8 <line:918:3, line:921:7> line:919:12 struct __is_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_constructible<_Tp, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11938a0 <line:918:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1193f00 <line:919:5, col:12> col:12 implicit struct __is_move_constructible_impl
| |-ClassTemplateDecl 0x11940d8 <line:924:3, line:927:7> line:925:12 is_move_constructible
| | |-TemplateTypeParmDecl 0x1193fa8 <line:924:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1194048 <line:925:5, line:927:7> line:925:12 struct is_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x1194a70 <col:5, col:12> col:12 implicit struct is_move_constructible
| |-ClassTemplateDecl 0x1194d78 <line:929:3, line:932:7> line:930:12 __is_nt_constructible_impl
| | |-NonTypeTemplateParmDecl 0x1194b28 <line:929:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0x1194b88 <col:18, col:27> col:27 typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x1194c08 <col:32, col:44> col:44 typename depth 0 index 2 ... _Args
| | |-CXXRecordDecl 0x1194ce8 <line:930:5, line:932:7> line:930:12 struct __is_nt_constructible_impl definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x1195120 <col:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| | `-ClassTemplateSpecializationDecl 0x191dc50 <line:944:3, line:947:7> line:945:12 struct __is_nt_constructible_impl definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<noexcept(std::allocator<char>())>':'std::integral_constant<bool, true>'
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument type 'std::allocator<char>'
| |   |-TemplateArgument pack
| |   `-CXXRecordDecl 0x191e5c8 prev 0x191dc50 <col:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1195530 <line:934:3, line:937:7> line:935:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<noexcept(_Tp(std::declval<_Args>()...))>':'integral_constant<bool, noexcept(_Tp(std::declval<_Args>()...))>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |-TemplateTypeParmDecl 0x11951c8 <line:934:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1195248 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x11960f8 <line:935:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11964c0 <line:939:3, line:942:7> line:940:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<noexcept(static_cast<_Tp>(std::declval<_Arg>()))>':'integral_constant<bool, noexcept(static_cast<_Tp>(std::declval<_Arg>()))>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x11961a0 <line:939:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1196218 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x1196b68 <line:940:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x1196fd0 <line:944:3, line:947:7> line:945:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<noexcept(_Tp())>':'integral_constant<bool, noexcept(_Tp())>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | |-TemplateTypeParmDecl 0x1196c10 <line:944:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1197518 <line:945:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11978d0 <line:949:3, line:952:7> line:950:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<noexcept(typename remove_all_extents<_Tp>::type())>':'integral_constant<bool, noexcept(typename remove_all_extents<_Tp>::type())>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateArgument pack
| | |-TemplateTypeParmDecl 0x11975c0 <line:949:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x1197648 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Num
| | `-CXXRecordDecl 0x1197f38 <line:950:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-TypeAliasTemplateDecl 0x1198460 <line:954:3, line:957:21> line:955:5 __is_nothrow_constructible_impl
| | |-TemplateTypeParmDecl 0x1198058 <line:954:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x11980d8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x1198400 <line:955:5, line:957:21> line:955:11 __is_nothrow_constructible_impl '__is_nt_constructible_impl<__is_constructible(_Tp, _Args...), _Tp, _Args...>'
| |   `-TemplateSpecializationType 0x11982d0 '__is_nt_constructible_impl<__is_constructible(_Tp, _Args...), _Tp, _Args...>' dependent __is_nt_constructible_impl
| |     |-TemplateArgument expr
| |     | `-TypeTraitExpr 0x11981d8 <line:956:36, col:68> 'bool'
| |     |-TemplateArgument type '_Tp'
| |     `-TemplateArgument type '_Args...'
| |-ClassTemplateDecl 0x1198670 <line:960:3, line:963:7> line:961:12 is_nothrow_constructible
| | |-TemplateTypeParmDecl 0x11984b8 <line:960:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1198538 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x11985e0 <line:961:5, line:963:7> line:961:12 struct is_nothrow_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_constructible_impl<_Tp, _Args...>::type'
| |   `-CXXRecordDecl 0x1198ec0 <col:5, col:12> col:12 implicit struct is_nothrow_constructible
| |-ClassTemplateDecl 0x11995c0 <line:966:3, line:969:7> line:967:12 is_nothrow_default_constructible
| | |-TemplateTypeParmDecl 0x1198f68 <line:966:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1199530 <line:967:5, line:969:7> line:967:12 struct is_nothrow_default_constructible definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_nothrow_constructible_impl<_Tp>::type'
| | | `-CXXRecordDecl 0x1199b80 <col:5, col:12> col:12 implicit struct is_nothrow_default_constructible
| | `-ClassTemplateSpecializationDecl 0x191d898 <line:966:3, line:969:7> line:967:12 struct is_nothrow_default_constructible definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_constructible_impl<allocator<char> >::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'std::allocator<char>'
| |   `-CXXRecordDecl 0x191e6f0 prev 0x191d898 <col:5, col:12> col:12 implicit struct is_nothrow_default_constructible
| |-ClassTemplateDecl 0x1199ee8 <line:972:3, line:973:12> col:12 __is_nothrow_copy_constructible_impl
| | |-TemplateTypeParmDecl 0x1199c28 <line:972:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x1199db8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1199e18 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x1199d70 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1199e58 <line:973:5, col:12> col:12 struct __is_nothrow_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x119a348 <line:975:3, line:977:27> line:976:12 struct __is_nothrow_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x119a138 <line:975:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119aee0 <line:976:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x119b198 <line:979:3, line:982:7> line:980:12 struct __is_nothrow_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_constructible<_Tp, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x119af88 <line:979:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119b5f0 <line:980:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
| |-ClassTemplateDecl 0x119b7c8 <line:985:3, line:988:7> line:986:12 is_nothrow_copy_constructible
| | |-TemplateTypeParmDecl 0x119b698 <line:985:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119b738 <line:986:5, line:988:7> line:986:12 struct is_nothrow_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x119bc60 <col:5, col:12> col:12 implicit struct is_nothrow_copy_constructible
| |-ClassTemplateDecl 0x119c518 <line:990:3, line:991:12> col:12 __is_nothrow_move_constructible_impl
| | |-TemplateTypeParmDecl 0x119bd08 <line:990:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x119c3e8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x119c448 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x119c3a0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x119c488 <line:991:5, col:12> col:12 struct __is_nothrow_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x119c978 <line:993:3, line:995:27> line:994:12 struct __is_nothrow_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x119c768 <line:993:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119cc58 <line:994:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x119cf08 <line:997:3, line:1000:7> line:998:12 struct __is_nothrow_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_constructible<_Tp, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x119cd00 <line:997:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119d7f0 <line:998:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
| |-ClassTemplateDecl 0x119d9c8 <line:1003:3, line:1006:7> line:1004:12 is_nothrow_move_constructible
| | |-TemplateTypeParmDecl 0x119d898 <line:1003:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119d938 <line:1004:5, line:1006:7> line:1004:12 struct is_nothrow_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x119de60 <col:5, col:12> col:12 implicit struct is_nothrow_move_constructible
| |-ClassTemplateDecl 0x119e0c0 <line:1009:3, line:1012:7> line:1010:12 is_assignable
| | |-TemplateTypeParmDecl 0x119df08 <line:1009:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x119df88 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x119e030 <line:1010:5, line:1012:7> line:1010:12 struct is_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_assignable(_Tp, _Up)>':'integral_constant<bool, __is_assignable(_Tp, _Up)>'
| |   `-CXXRecordDecl 0x119e5d8 <col:5, col:12> col:12 implicit struct is_assignable
| |-ClassTemplateDecl 0x119f2a8 <line:1014:3, line:1015:12> col:12 __is_copy_assignable_impl
| | |-TemplateTypeParmDecl 0x119e680 <line:1014:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x119f178 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x119f1d8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x119f130 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x119f218 <line:1015:5, col:12> col:12 struct __is_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x119f708 <line:1017:3, line:1019:27> line:1018:12 struct __is_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x119f4f8 <line:1017:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x119f9e8 <line:1018:5, col:12> col:12 implicit struct __is_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x119fc98 <line:1021:3, line:1024:7> line:1022:12 struct __is_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_assignable<_Tp &, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x119fa90 <line:1021:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11a05c0 <line:1022:5, col:12> col:12 implicit struct __is_copy_assignable_impl
| |-ClassTemplateDecl 0x11a0798 <line:1027:3, line:1030:7> line:1028:12 is_copy_assignable
| | |-TemplateTypeParmDecl 0x11a0668 <line:1027:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11a0708 <line:1028:5, line:1030:7> line:1028:12 struct is_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x11a0c30 <col:5, col:12> col:12 implicit struct is_copy_assignable
| |-ClassTemplateDecl 0x11a0f98 <line:1032:3, line:1033:12> col:12 __is_move_assignable_impl
| | |-TemplateTypeParmDecl 0x11a0cd8 <line:1032:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11a0e68 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11a0ec8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11a0e20 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11a0f08 <line:1033:5, col:12> col:12 struct __is_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11a13f8 <line:1035:3, line:1037:27> line:1036:12 struct __is_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11a11e8 <line:1035:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11a2838 <line:1036:5, col:12> col:12 implicit struct __is_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11a2ae8 <line:1039:3, line:1042:7> line:1040:12 struct __is_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_assignable<_Tp &, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11a28e0 <line:1039:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11a2f40 <line:1040:5, col:12> col:12 implicit struct __is_move_assignable_impl
| |-ClassTemplateDecl 0x11a3118 <line:1045:3, line:1048:7> line:1046:12 is_move_assignable
| | |-TemplateTypeParmDecl 0x11a2fe8 <line:1045:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11a3088 <line:1046:5, line:1048:7> line:1046:12 struct is_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x11a35b0 <col:5, col:12> col:12 implicit struct is_move_assignable
| |-ClassTemplateDecl 0x11a3810 <line:1050:3, line:1053:7> line:1051:12 __is_nt_assignable_impl
| | |-TemplateTypeParmDecl 0x11a3658 <line:1050:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x11a36d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x11a3780 <line:1051:5, line:1053:7> line:1051:12 struct __is_nt_assignable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, noexcept(declval<_Tp>() = declval<_Up>())>'
| |   `-CXXRecordDecl 0x11a3db0 <col:5, col:12> col:12 implicit struct __is_nt_assignable_impl
| |-ClassTemplateDecl 0x11a4010 <line:1056:3, line:1060:7> line:1057:12 is_nothrow_assignable
| | |-TemplateTypeParmDecl 0x11a3e58 <line:1056:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x11a3ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x11a3f80 <line:1057:5, line:1060:7> line:1057:12 struct is_nothrow_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_assignable<_Tp, _Up>, __is_nt_assignable_impl<_Tp, _Up> >'
| |   `-CXXRecordDecl 0x11a4630 <col:5, col:12> col:12 implicit struct is_nothrow_assignable
| |-ClassTemplateDecl 0x1150628 <line:1062:3, line:1063:12> col:12 __is_nt_copy_assignable_impl
| | |-TemplateTypeParmDecl 0x1150370 <line:1062:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11504f8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1150558 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11504b0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1150598 <line:1063:5, col:12> col:12 struct __is_nt_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x1150a88 <line:1065:3, line:1067:27> line:1066:12 struct __is_nt_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1150878 <line:1065:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1150d68 <line:1066:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x1151018 <line:1069:3, line:1072:7> line:1070:12 struct __is_nt_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_assignable<_Tp &, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x1150e10 <line:1069:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1151470 <line:1070:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
| |-ClassTemplateDecl 0x1151648 <line:1075:3, line:1078:7> line:1076:12 is_nothrow_copy_assignable
| | |-TemplateTypeParmDecl 0x1151518 <line:1075:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11515b8 <line:1076:5, line:1078:7> line:1076:12 struct is_nothrow_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x1151ae0 <col:5, col:12> col:12 implicit struct is_nothrow_copy_assignable
| |-ClassTemplateDecl 0x1151e48 <line:1080:3, line:1081:12> col:12 __is_nt_move_assignable_impl
| | |-TemplateTypeParmDecl 0x1151b88 <line:1080:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x1151d18 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1151d78 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x1151cd0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1151db8 <line:1081:5, col:12> col:12 struct __is_nt_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11ad4d0 <line:1083:3, line:1085:27> line:1084:12 struct __is_nt_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x1152098 <line:1083:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11ad7a8 <line:1084:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11ada58 <line:1087:3, line:1090:7> line:1088:12 struct __is_nt_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_assignable<_Tp &, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11ad850 <line:1087:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11adeb0 <line:1088:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
| |-ClassTemplateDecl 0x11ae088 <line:1093:3, line:1096:7> line:1094:12 is_nothrow_move_assignable
| | |-TemplateTypeParmDecl 0x11adf58 <line:1093:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11adff8 <line:1094:5, line:1096:7> line:1094:12 struct is_nothrow_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x11ae520 <col:5, col:12> col:12 implicit struct is_nothrow_move_assignable
| |-ClassTemplateDecl 0x11ae780 <line:1099:3, line:1102:7> line:1100:12 is_trivially_constructible
| | |-TemplateTypeParmDecl 0x11ae5c8 <line:1099:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x11ae648 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x11ae6f0 <line:1100:5, line:1102:7> line:1100:12 struct is_trivially_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_trivially_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   `-CXXRecordDecl 0x11aed08 <col:5, col:12> col:12 implicit struct is_trivially_constructible
| |-ClassTemplateDecl 0x11aeed8 <line:1105:3, line:1108:7> line:1106:12 is_trivially_default_constructible
| | |-TemplateTypeParmDecl 0x11aedb0 <line:1105:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11aee48 <line:1106:5, line:1108:7> line:1106:12 struct is_trivially_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_trivially_constructible<_Tp>::type'
| |   `-CXXRecordDecl 0x11af320 <col:5, col:12> col:12 implicit struct is_trivially_default_constructible
| |-CXXRecordDecl 0x11af3c8 <line:1110:3, line:1120:3> line:1110:10 referenced struct __do_is_implicitly_default_constructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x11b1288 <col:3, col:10> col:10 implicit struct __do_is_implicitly_default_constructible_impl
| | |-FunctionTemplateDecl 0x11b15b8 <line:1112:5, line:1113:36> col:17 __helper
| | | |-TemplateTypeParmDecl 0x11b1318 <line:1112:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0x11b1518 <line:1113:5, col:36> col:17 __helper 'void (const _Tp &)' static
| | |   `-ParmVarDecl 0x11b13f8 <col:26, col:35> col:36 'const _Tp &'
| | |-FunctionTemplateDecl 0x11b1ae8 <line:1115:5, line:1117:68> line:1116:22 __test
| | | |-TemplateTypeParmDecl 0x11b1618 <line:1115:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0x11b1a48 <line:1116:5, line:1117:68> line:1116:22 __test 'std::true_type (const _Tp &, decltype(__helper<const _Tp &>({})) *)' static
| | |   |-ParmVarDecl 0x11b16f8 <col:29, col:38> col:39 'const _Tp &'
| | |   `-ParmVarDecl 0x11b1938 <line:1117:29, col:67> col:65 'decltype(__helper<const _Tp &>({})) *' cinit
| | |     `-IntegerLiteral 0x11b1c28 <col:67> 'int' 0
| | `-CXXMethodDecl 0x11b1b70 <line:1119:5, col:33> col:23 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0x11b1d78 <line:1122:3, line:1127:5> line:1123:12 __is_implicitly_default_constructible_impl
| | |-TemplateTypeParmDecl 0x11b1c48 <line:1122:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b1ce8 <line:1123:5, line:1127:5> line:1123:12 struct __is_implicitly_default_constructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_implicitly_default_constructible_impl'
| |   |-CXXRecordDecl 0x11b2010 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_impl
| |   `-TypedefDecl 0x11b2248 <line:1126:7, col:48> col:48 type 'decltype(__test(declval<_Tp>()))'
| |     `-DecltypeType 0x11b2210 'decltype(__test(declval<_Tp>()))' dependent
| |       `-CallExpr 0x11b21a8 <col:24, col:45> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x11b20a0 <col:24> '<overloaded function type>' lvalue (no ADL) = '__test' 0x11b1ae8 0x11b1b70
| |         `-CallExpr 0x11b2188 <col:31, col:44> '<dependent type>'
| |           `-UnresolvedLookupExpr 0x11b2100 <col:31, col:42> '<dependent type>' lvalue (ADL) = 'declval' 0x1181a50
| |-ClassTemplateDecl 0x11b23e8 <line:1129:3, line:1132:7> line:1130:12 __is_implicitly_default_constructible_safe
| | |-TemplateTypeParmDecl 0x11b22b8 <line:1129:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b2358 <line:1130:5, line:1132:7> line:1130:12 struct __is_implicitly_default_constructible_safe definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_implicitly_default_constructible_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x11b27d0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_safe
| |-ClassTemplateDecl 0x11b29a8 <line:1134:3, line:1138:7> line:1135:12 __is_implicitly_default_constructible
| | |-TemplateTypeParmDecl 0x11b2878 <line:1134:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b2918 <line:1135:5, line:1138:7> line:1135:12 struct __is_implicitly_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_default_constructible<_Tp>, __is_implicitly_default_constructible_safe<_Tp> >'
| |   `-CXXRecordDecl 0x11b2ed0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible
| |-ClassTemplateDecl 0x11b44f0 <line:1142:3, line:1143:12> col:12 __is_trivially_copy_constructible_impl
| | |-TemplateTypeParmDecl 0x11b2f78 <line:1142:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11b3108 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11b3168 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11b30c0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11b4460 <line:1143:5, col:12> col:12 struct __is_trivially_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11b4948 <line:1145:3, line:1147:27> line:1146:12 struct __is_trivially_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11b4738 <line:1145:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b4c28 <line:1146:5, col:12> col:12 implicit struct __is_trivially_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11b4ed8 <line:1149:3, line:1154:7> line:1150:12 struct __is_trivially_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__and_<is_copy_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, const _Tp &)> >'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11b4cd0 <line:1149:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b5590 <line:1150:5, col:12> col:12 implicit struct __is_trivially_copy_constructible_impl
| |-ClassTemplateDecl 0x11b5768 <line:1156:3, line:1159:7> line:1157:12 is_trivially_copy_constructible
| | |-TemplateTypeParmDecl 0x11b5638 <line:1156:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b56d8 <line:1157:5, line:1159:7> line:1157:12 struct is_trivially_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x11b5c00 <col:5, col:12> col:12 implicit struct is_trivially_copy_constructible
| |-ClassTemplateDecl 0x11b5f68 <line:1163:3, line:1164:12> col:12 __is_trivially_move_constructible_impl
| | |-TemplateTypeParmDecl 0x11b5ca8 <line:1163:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11b5e38 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11b5e98 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11b5df0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11b5ed8 <line:1164:5, col:12> col:12 struct __is_trivially_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11b71f0 <line:1166:3, line:1168:27> line:1167:12 struct __is_trivially_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11b61b8 <line:1166:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b74c8 <line:1167:5, col:12> col:12 implicit struct __is_trivially_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0x11b7778 <line:1170:3, line:1175:7> line:1171:12 struct __is_trivially_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__and_<is_move_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, _Tp &&)> >'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11b7570 <line:1170:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b7e30 <line:1171:5, col:12> col:12 implicit struct __is_trivially_move_constructible_impl
| |-ClassTemplateDecl 0x11b8008 <line:1177:3, line:1180:7> line:1178:12 is_trivially_move_constructible
| | |-TemplateTypeParmDecl 0x11b7ed8 <line:1177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11b7f78 <line:1178:5, line:1180:7> line:1178:12 struct is_trivially_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0x11b84a0 <col:5, col:12> col:12 implicit struct is_trivially_move_constructible
| |-ClassTemplateDecl 0x11b8700 <line:1183:3, line:1186:7> line:1184:12 is_trivially_assignable
| | |-TemplateTypeParmDecl 0x11b8548 <line:1183:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x11b85c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x11b8670 <line:1184:5, line:1186:7> line:1184:12 struct is_trivially_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_trivially_assignable(_Tp, _Up)>':'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>'
| |   `-CXXRecordDecl 0x11b8c18 <col:5, col:12> col:12 implicit struct is_trivially_assignable
| |-ClassTemplateDecl 0x11b8f78 <line:1190:3, line:1191:12> col:12 __is_trivially_copy_assignable_impl
| | |-TemplateTypeParmDecl 0x11b8cc0 <line:1190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11b8e48 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11b8ea8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11b8e00 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11b8ee8 <line:1191:5, col:12> col:12 struct __is_trivially_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11bb1f8 <line:1193:3, line:1195:27> line:1194:12 struct __is_trivially_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11baff0 <line:1193:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bb4d8 <line:1194:5, col:12> col:12 implicit struct __is_trivially_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11bb788 <line:1197:3, line:1200:7> line:1198:12 struct __is_trivially_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<__is_trivially_assignable(_Tp &, const _Tp &)>':'integral_constant<bool, __is_trivially_assignable(_Tp &, const _Tp &)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11bb580 <line:1197:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bbd18 <line:1198:5, col:12> col:12 implicit struct __is_trivially_copy_assignable_impl
| |-ClassTemplateDecl 0x11bbee8 <line:1202:3, line:1205:7> line:1203:12 is_trivially_copy_assignable
| | |-TemplateTypeParmDecl 0x11bbdc0 <line:1202:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bbe58 <line:1203:5, line:1205:7> line:1203:12 struct is_trivially_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x11bc380 <col:5, col:12> col:12 implicit struct is_trivially_copy_assignable
| |-ClassTemplateDecl 0x11bc6e8 <line:1209:3, line:1210:12> col:12 __is_trivially_move_assignable_impl
| | |-TemplateTypeParmDecl 0x11bc428 <line:1209:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11bc5b8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11bc618 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11bc570 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11bc658 <line:1210:5, col:12> col:12 struct __is_trivially_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11bcb48 <line:1212:3, line:1214:27> line:1213:12 struct __is_trivially_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11bc938 <line:1212:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bce28 <line:1213:5, col:12> col:12 implicit struct __is_trivially_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11bdae8 <line:1216:3, line:1219:7> line:1217:12 struct __is_trivially_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<__is_trivially_assignable(_Tp &, _Tp &&)>':'integral_constant<bool, __is_trivially_assignable(_Tp &, _Tp &&)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11bced0 <line:1216:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11be078 <line:1217:5, col:12> col:12 implicit struct __is_trivially_move_assignable_impl
| |-ClassTemplateDecl 0x11be248 <line:1221:3, line:1224:7> line:1222:12 is_trivially_move_assignable
| | |-TemplateTypeParmDecl 0x11be120 <line:1221:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11be1b8 <line:1222:5, line:1224:7> line:1222:12 struct is_trivially_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0x11be6e0 <col:5, col:12> col:12 implicit struct is_trivially_move_assignable
| |-ClassTemplateDecl 0x11be8b8 <line:1227:3, line:1231:7> line:1228:12 is_trivially_destructible
| | |-TemplateTypeParmDecl 0x11be788 <line:1227:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11be828 <line:1228:5, line:1231:7> line:1228:12 struct is_trivially_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_destructible<_Tp>, __bool_constant<__has_trivial_destructor(_Tp)> >'
| |   `-CXXRecordDecl 0x11befb0 <col:5, col:12> col:12 implicit struct is_trivially_destructible
| |-ClassTemplateDecl 0x11bf188 <line:1235:3, line:1238:7> line:1236:12 has_virtual_destructor
| | |-TemplateTypeParmDecl 0x11bf058 <line:1235:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bf0f8 <line:1236:5, line:1238:7> line:1236:12 struct has_virtual_destructor definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __has_virtual_destructor(_Tp)>'
| |   `-CXXRecordDecl 0x11bf570 <col:5, col:12> col:12 implicit struct has_virtual_destructor
| |-ClassTemplateDecl 0x11bf748 <line:1244:3, line:1246:61> line:1245:12 alignment_of
| | |-TemplateTypeParmDecl 0x11bf618 <line:1244:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11bf6b8 <line:1245:5, line:1246:61> line:1245:12 struct alignment_of definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, alignof(_Tp)>'
| |   `-CXXRecordDecl 0x11c0dc0 <col:5, col:12> col:12 implicit struct alignment_of
| |-ClassTemplateDecl 0x11c0f98 <line:1249:3, line:1251:50> line:1250:12 rank
| | |-TemplateTypeParmDecl 0x11c0e68 <line:1249:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x11c0f08 <line:1250:5, line:1251:50> line:1250:12 struct rank definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0x11c1af8 <col:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0x11c1e30 <line:1253:3, line:1255:69> line:1254:12 struct rank definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0x11c1ba0 <line:1253:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11c1c68 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0x11c2370 <line:1254:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0x11c25d0 <line:1257:3, line:1259:69> line:1258:12 struct rank definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0x11c2418 <line:1257:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11c2a90 <line:1258:5, col:12> col:12 implicit struct rank
| |-ClassTemplateDecl 0x11c32f8 prev 0x1181cb0 <line:1262:3, line:1264:50> line:1263:12 extent
| | |-TemplateTypeParmDecl 0x11c2b38 <line:1262:12> col:20 typename depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x11c31e0 <col:22, col:31> col:31 'unsigned int' depth 0 index 1 _Uint
| | | `-TemplateArgument expr
| | |   |-inherited from NonTypeTemplateParm 0x1181b60 '' 'unsigned int'
| | |   `-ConstantExpr 0x1181bd8 <line:769:33> 'unsigned int' Int: 0
| | |     `-ImplicitCastExpr 0x1181bc0 <col:33> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0x1181b28 <col:33> 'int' 0
| | `-CXXRecordDecl 0x11c3268 prev 0x1181c20 <line:1263:5, line:1264:50> line:1263:12 struct extent definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0x11c3550 <col:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x11c39d8 <line:1266:3, line:1271:7> line:1267:12 struct extent definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, _Uint == 0 ? _Size : extent<_Tp, _Uint - 1>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x11c3890 <col:31> 'unsigned int' NonTypeTemplateParm 0x11c3690 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0x11c35f8 <line:1266:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11c3690 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | |-NonTypeTemplateParmDecl 0x11c3740 <col:42, col:54> col:54 referenced 'std::size_t':'unsigned long' depth 0 index 2 _Size
| | `-CXXRecordDecl 0x11c40f0 <line:1267:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x11c4458 <line:1273:3, line:1278:7> line:1274:12 struct extent definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, _Uint == 0 ? 0 : extent<_Tp, _Uint - 1>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x11c4308 <col:26> 'unsigned int' NonTypeTemplateParm 0x11c4230 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0x11c4198 <line:1273:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11c4230 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | `-CXXRecordDecl 0x11c4af0 <line:1274:5, col:12> col:12 implicit struct extent
| |-ClassTemplateDecl 0x11c4d50 <line:1284:3, line:1286:27> line:1285:12 is_same
| | |-TemplateTypeParmDecl 0x11c4b98 <line:1284:12> col:20 typename depth 0 index 0
| | |-TemplateTypeParmDecl 0x11c4c18 <col:22> col:30 typename depth 0 index 1
| | |-CXXRecordDecl 0x11c4cc0 <line:1285:5, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x11c5020 <col:5, col:12> col:12 implicit struct is_same
| | |-ClassTemplateSpecializationDecl 0x1a612a8 <line:1288:3, line:1290:26> line:1289:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'int'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a61620 prev 0x1a612a8 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a62710 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a62d48 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<int, int> &)' inline default trivial noexcept-unevaluated 0x1a62d48
| | | | `-ParmVarDecl 0x1a62e58 <col:12> col:12 'const std::is_same<int, int> &'
| | | |-CXXConstructorDecl 0x1a62ef8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<int, int> &&)' inline default trivial noexcept-unevaluated 0x1a62ef8
| | | | `-ParmVarDecl 0x1a63008 <col:12> col:12 'std::is_same<int, int> &&'
| | | `-CXXDestructorDecl 0x1a630a8 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a65428 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a65738 prev 0x1a65428 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a657f8 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a659d8 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<long, int> &)' inline default trivial noexcept-unevaluated 0x1a659d8
| | | | `-ParmVarDecl 0x1a65ae8 <col:12> col:12 'const std::is_same<long, int> &'
| | | |-CXXConstructorDecl 0x1a65b88 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<long, int> &&)' inline default trivial noexcept-unevaluated 0x1a65b88
| | | | `-ParmVarDecl 0x1a65c98 <col:12> col:12 'std::is_same<long, int> &&'
| | | `-CXXDestructorDecl 0x1a65d38 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a67d58 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned long'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a68068 prev 0x1a67d58 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a68128 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a68228 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<unsigned long, int> &)' inline default trivial noexcept-unevaluated 0x1a68228
| | | | `-ParmVarDecl 0x1a68338 <col:12> col:12 'const std::is_same<unsigned long, int> &'
| | | |-CXXConstructorDecl 0x1a683d8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<unsigned long, int> &&)' inline default trivial noexcept-unevaluated 0x1a683d8
| | | | `-ParmVarDecl 0x1a684e8 <col:12> col:12 'std::is_same<unsigned long, int> &&'
| | | `-CXXDestructorDecl 0x1a68588 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a6a538 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long long'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a6a888 prev 0x1a6a538 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a6a948 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a6aa48 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<long long, int> &)' inline default trivial noexcept-unevaluated 0x1a6aa48
| | | | `-ParmVarDecl 0x1a6ab58 <col:12> col:12 'const std::is_same<long long, int> &'
| | | |-CXXConstructorDecl 0x1a6abf8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<long long, int> &&)' inline default trivial noexcept-unevaluated 0x1a6abf8
| | | | `-ParmVarDecl 0x1a6ad08 <col:12> col:12 'std::is_same<long long, int> &&'
| | | `-CXXDestructorDecl 0x1a6ada8 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a6cd58 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned long long'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a6d068 prev 0x1a6cd58 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a6d128 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a6d228 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<unsigned long long, int> &)' inline default trivial noexcept-unevaluated 0x1a6d228
| | | | `-ParmVarDecl 0x1a6d338 <col:12> col:12 'const std::is_same<unsigned long long, int> &'
| | | |-CXXConstructorDecl 0x1a6d3d8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<unsigned long long, int> &&)' inline default trivial noexcept-unevaluated 0x1a6d3d8
| | | | `-ParmVarDecl 0x1a6d4e8 <col:12> col:12 'std::is_same<unsigned long long, int> &&'
| | | `-CXXDestructorDecl 0x1a6d588 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a6f4a0 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'float'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a6f7b8 prev 0x1a6f4a0 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a6f878 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a6f978 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<float, int> &)' inline default trivial noexcept-unevaluated 0x1a6f978
| | | | `-ParmVarDecl 0x1a6fa88 <col:12> col:12 'const std::is_same<float, int> &'
| | | |-CXXConstructorDecl 0x1a6fb28 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<float, int> &&)' inline default trivial noexcept-unevaluated 0x1a6fb28
| | | | `-ParmVarDecl 0x1a6fc38 <col:12> col:12 'std::is_same<float, int> &&'
| | | `-CXXDestructorDecl 0x1a6fcd8 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x1a71c50 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'double'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x1a71f68 prev 0x1a71c50 <col:5, col:12> col:12 implicit struct is_same
| | | |-CXXConstructorDecl 0x1a72028 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| | | |-CXXConstructorDecl 0x1a72128 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<double, int> &)' inline default trivial noexcept-unevaluated 0x1a72128
| | | | `-ParmVarDecl 0x1a72238 <col:12> col:12 'const std::is_same<double, int> &'
| | | |-CXXConstructorDecl 0x1a722d8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<double, int> &&)' inline default trivial noexcept-unevaluated 0x1a722d8
| | | | `-ParmVarDecl 0x1a723e8 <col:12> col:12 'std::is_same<double, int> &&'
| | | `-CXXDestructorDecl 0x1a72488 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| | `-ClassTemplateSpecializationDecl 0x1a76060 <line:1284:3, line:1286:27> line:1285:12 struct is_same definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'long double'
| |   |-TemplateArgument type 'int'
| |   |-CXXRecordDecl 0x1a76378 prev 0x1a76060 <col:5, col:12> col:12 implicit struct is_same
| |   |-CXXConstructorDecl 0x1a76438 <col:12> col:12 implicit referenced constexpr is_same 'void () noexcept' inline default trivial
| |   |-CXXConstructorDecl 0x1a76538 <col:12> col:12 implicit constexpr is_same 'void (const std::is_same<long double, int> &)' inline default trivial noexcept-unevaluated 0x1a76538
| |   | `-ParmVarDecl 0x1a76648 <col:12> col:12 'const std::is_same<long double, int> &'
| |   |-CXXConstructorDecl 0x1a766e8 <col:12> col:12 implicit constexpr is_same 'void (std::is_same<long double, int> &&)' inline default trivial noexcept-unevaluated 0x1a766e8
| |   | `-ParmVarDecl 0x1a767f8 <col:12> col:12 'std::is_same<long double, int> &&'
| |   `-CXXDestructorDecl 0x1a76898 <col:12> col:12 implicit referenced ~is_same 'void () noexcept' inline default trivial
| |-ClassTemplatePartialSpecializationDecl 0x11c68c8 <line:1288:3, line:1290:26> line:1289:12 struct is_same definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x11c50c8 <line:1288:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11c6b88 <line:1289:5, col:12> col:12 implicit struct is_same
| |-ClassTemplateDecl 0x11c6de0 <line:1293:3, line:1296:7> line:1294:12 is_base_of
| | |-TemplateTypeParmDecl 0x11c6c30 <line:1293:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0x11c6ca8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| | `-CXXRecordDecl 0x11c6d50 <line:1294:5, line:1296:7> line:1294:12 struct is_base_of definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_base_of(_Base, _Derived)>'
| |   `-CXXRecordDecl 0x11c7220 <col:5, col:12> col:12 implicit struct is_base_of
| |-ClassTemplateDecl 0x11c79c0 <line:1298:3, line:1304:5> line:1301:12 __is_convertible_helper
| | |-TemplateTypeParmDecl 0x11c72c8 <line:1298:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x11c7348 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-NonTypeTemplateParmDecl 0x11c7888 <line:1299:12, line:1300:41> line:1299:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11c78e8 <col:19, line:1300:41> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11c7840 <line:1299:19, line:1300:41> '<dependent type>' lvalue
| | |-CXXRecordDecl 0x11c7930 <line:1301:5, line:1304:5> line:1301:12 struct __is_convertible_helper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11c7c90 <col:5, col:12> col:12 implicit struct __is_convertible_helper
| | | `-TypedefDecl 0x11c7ec0 <line:1303:7, col:43> col:43 type 'typename is_void<_To>::type'
| | |   `-DependentNameType 0x11c7e50 'typename is_void<_To>::type' dependent
| | `-ClassTemplateSpecializationDecl 0x1a7b5d8 <line:1306:3, line:1323:5> line:1307:11 class __is_convertible_helper definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   |-TemplateArgument type 'std::input_iterator_tag'
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x1a7b950 prev 0x1a7b5d8 <col:5, col:11> col:11 implicit class __is_convertible_helper
| |   |-FunctionTemplateDecl 0x1a7bbf0 <line:1309:7, line:1310:31> col:14 __test_aux
| |   | |-TemplateTypeParmDecl 0x1a7b9e0 <line:1309:16, col:25> col:25 typename depth 0 index 0 _To1
| |   | |-CXXMethodDecl 0x1a7bb50 <line:1310:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| |   | | `-ParmVarDecl 0x1a7ba88 <col:25> col:29 '_To1'
| |   | `-CXXMethodDecl 0x1a801c0 <col:2, col:31> col:14 referenced __test_aux 'void (std::input_iterator_tag) noexcept' static
| |   |   |-TemplateArgument type 'std::input_iterator_tag'
| |   |   `-ParmVarDecl 0x1a800c8 <col:25> col:29 'std::input_iterator_tag':'std::input_iterator_tag'
| |   |-FunctionTemplateDecl 0x1a7c198 <line:1312:7, line:1315:12> col:2 __test
| |   | |-TemplateTypeParmDecl 0x1a7bcd0 <line:1312:16, col:25> col:25 typename depth 0 index 0 _From1
| |   | |-TemplateTypeParmDecl 0x1a7bd48 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| |   | |-TemplateTypeParmDecl 0x1a7bdc8 <line:1313:9, col:20> col:18 typename depth 0 index 2
| |   | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| |   | |-CXXMethodDecl 0x1a7c0f8 <line:1314:2, line:1315:12> col:2 __test 'std::true_type (int)' static
| |   | | `-ParmVarDecl 0x1a7c068 <col:9> col:12 'int'
| |   | `-CXXMethodDecl 0x1a80ae0 <line:1314:2, line:1315:12> col:2 referenced __test 'std::true_type (int)' static
| |   |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   |   |-TemplateArgument type 'std::input_iterator_tag'
| |   |   |-TemplateArgument type 'void'
| |   |   `-ParmVarDecl 0x1a80a50 <col:9> col:12 'int'
| |   |-FunctionTemplateDecl 0x1a7ea80 <line:1317:7, line:1319:12> col:2 __test
| |   | |-TemplateTypeParmDecl 0x1a7c278 <line:1317:16> col:24 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x1a7c2f8 <col:26> col:34 typename depth 0 index 1
| |   | |-CXXMethodDecl 0x1a7e9e0 <line:1318:2, line:1319:12> col:2 __test 'std::false_type (...)' static
| |   | `-CXXMethodDecl 0x1a7ed88 <line:1318:2, line:1319:12> col:2 __test 'std::false_type (...)' static
| |   |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   |   `-TemplateArgument type 'std::input_iterator_tag'
| |   |-AccessSpecDecl 0x1a7eb58 <line:1321:5, col:11> col:5 public
| |   `-TypedefDecl 0x1a80da8 <line:1322:7, col:47> col:47 referenced type 'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))':'std::integral_constant<bool, true>'
| |     `-DecltypeType 0x1a80d70 'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))' sugar
| |       |-CallExpr 0x1a80d20 <col:24, col:44> 'std::true_type':'std::integral_constant<bool, true>'
| |       | |-ImplicitCastExpr 0x1a80d08 <col:24, col:41> 'std::true_type (*)(int)' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x1a80c10 <col:24, col:41> 'std::true_type (int)' lvalue CXXMethod 0x1a80ae0 '__test' 'std::true_type (int)' (FunctionTemplate 0x1a7c198 '__test') non_odr_use_unevaluated
| |       | `-IntegerLiteral 0x11c9bb8 <col:43> 'int' 0
| |       `-TypedefType 0x113fc30 'std::true_type' sugar
| |         |-Typedef 0x11374d8 'true_type'
| |         `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| |           |-TemplateArgument type 'bool'
| |           |-TemplateArgument expr
| |           | `-ConstantExpr 0x11372b8 <line:75:35> 'bool' Int: 1
| |           |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| |           `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| |             `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| |-ClassTemplatePartialSpecializationDecl 0x11c8220 <line:1306:3, line:1323:5> line:1307:11 class __is_convertible_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11c7f30 <line:1306:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x11c7fa8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-CXXRecordDecl 0x11c8518 <line:1307:5, col:11> col:11 implicit class __is_convertible_helper
| | |-FunctionTemplateDecl 0x11c9240 <line:1309:7, line:1310:31> col:14 __test_aux
| | | |-TemplateTypeParmDecl 0x11c85a8 <line:1309:16, col:25> col:25 referenced typename depth 1 index 0 _To1
| | | `-CXXMethodDecl 0x11c91a0 <line:1310:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | |   `-ParmVarDecl 0x11c8688 <col:25> col:29 '_To1'
| | |-FunctionTemplateDecl 0x11c9800 <line:1312:7, line:1315:12> col:2 __test
| | | |-TemplateTypeParmDecl 0x11c92a0 <line:1312:16, col:25> col:25 referenced typename depth 1 index 0 _From1
| | | |-TemplateTypeParmDecl 0x11c9318 <col:33, col:42> col:42 referenced typename depth 1 index 1 _To1
| | | |-TemplateTypeParmDecl 0x11c95d8 <line:1313:9, col:20> col:18 typename depth 1 index 2
| | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | `-CXXMethodDecl 0x11c9760 <line:1314:2, line:1315:12> col:2 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0x11c96d0 <col:9> col:12 'int'
| | |-FunctionTemplateDecl 0x11c9a40 <line:1317:7, line:1319:12> col:2 __test
| | | |-TemplateTypeParmDecl 0x11c9860 <line:1317:16> col:24 typename depth 1 index 0
| | | |-TemplateTypeParmDecl 0x11c98d8 <col:26> col:34 typename depth 1 index 1
| | | `-CXXMethodDecl 0x11c99a0 <line:1318:2, line:1319:12> col:2 __test 'std::false_type (...)' static
| | |-AccessSpecDecl 0x11c9a98 <line:1321:5, col:11> col:5 public
| | `-TypedefDecl 0x11c9c78 <line:1322:7, col:47> col:47 type 'decltype(__test<_From, _To>(0))'
| |   `-DecltypeType 0x11c9c40 'decltype(__test<_From, _To>(0))' dependent
| |     `-CallExpr 0x11c9bd8 <col:24, col:44> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x11c9af8 <col:24, col:41> '<dependent type>' lvalue (no ADL) = '__test' 0x11c9a40 0x11c9800
| |       `-IntegerLiteral 0x11c9bb8 <col:43> 'int' 0
| |-ClassTemplateDecl 0x11c9ea0 <line:1327:3, line:1330:7> line:1328:12 is_convertible
| | |-TemplateTypeParmDecl 0x11c9ce8 <line:1327:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x11c9d68 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-CXXRecordDecl 0x11c9e10 <line:1328:5, line:1330:7> line:1328:12 struct is_convertible definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<_From, _To>::type'
| | | `-CXXRecordDecl 0x11ca740 <col:5, col:12> col:12 implicit struct is_convertible
| | `-ClassTemplateSpecializationDecl 0x1a77d50 <line:1327:3, line:1330:7> line:1328:12 struct is_convertible definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_convertible_helper<random_access_iterator_tag, input_iterator_tag>::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'std::random_access_iterator_tag'
| |   |-TemplateArgument type 'std::input_iterator_tag'
| |   `-CXXRecordDecl 0x1a80ec0 prev 0x1a77d50 <col:5, col:12> col:12 implicit struct is_convertible
| |-ClassTemplateDecl 0x11ca918 <line:1374:3, line:1376:29> line:1375:12 remove_const
| | |-TemplateTypeParmDecl 0x11ca7e8 <line:1374:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11ca888 <line:1375:5, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11cab70 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x11cac10 <line:1376:7, col:23> col:23 type '_Tp'
| | |   `-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x11f9ba0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0x11f9dd8 prev 0x11f9ba0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x11f9ea8 <line:1376:7, col:23> col:23 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0x11f9e70 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x11fc5b0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0x11fc7e8 prev 0x11fc5b0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x11fc8b8 <line:1376:7, col:23> col:23 referenced type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0x11fc880 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x1201760 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0x1201998 prev 0x1201760 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1201a68 <line:1376:7, col:23> col:23 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0x1201a30 'char16_t' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1204270 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0x12044a8 prev 0x1204270 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1204578 <line:1376:7, col:23> col:23 referenced type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0x1204540 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x12091c0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0x12093f8 prev 0x12091c0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x12094c8 <line:1376:7, col:23> col:23 referenced type 'char32_t':'char32_t'
| | |   `-SubstTemplateTypeParmType 0x1209490 'char32_t' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd750 'char32_t'
| | |-ClassTemplateSpecializationDecl 0x11a7de0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x11a8018 prev 0x11a7de0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x11a80e8 <line:1376:7, col:23> col:23 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0x11a80b0 'void' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd170 'void'
| | |-ClassTemplateSpecializationDecl 0x1a3bd90 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | |-CXXRecordDecl 0x1a3bfc8 prev 0x1a3bd90 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a3c098 <line:1376:7, col:23> col:23 referenced type 'std::basic_istream<char> &':'std::basic_istream<char> &'
| | |   `-SubstTemplateTypeParmType 0x1a3c060 'std::basic_istream<char> &' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-LValueReferenceType 0x15fa500 'std::basic_istream<char> &'
| | |       `-RecordType 0x1103960 'std::basic_istream<char>'
| | |         `-ClassTemplateSpecialization 0x1103860 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a4cda0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | |-CXXRecordDecl 0x1a4cfd8 prev 0x1a4cda0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a4d0a8 <line:1376:7, col:23> col:23 referenced type 'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'
| | |   `-SubstTemplateTypeParmType 0x1a4d070 'std::basic_istream<wchar_t> &' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-LValueReferenceType 0x15ff440 'std::basic_istream<wchar_t> &'
| | |       `-RecordType 0x11081e0 'std::basic_istream<wchar_t>'
| | |         `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a5bfa0 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | |-CXXRecordDecl 0x1a5c1d8 prev 0x1a5bfa0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a5c2a8 <line:1376:7, col:23> col:23 referenced type 'std::basic_ostream<char> &':'std::basic_ostream<char> &'
| | |   `-SubstTemplateTypeParmType 0x1a5c270 'std::basic_ostream<char> &' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-LValueReferenceType 0x14b1f20 'std::basic_ostream<char> &'
| | |       `-RecordType 0x1103c40 'std::basic_ostream<char>'
| | |         `-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| | |-ClassTemplateSpecializationDecl 0x1a79310 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::random_access_iterator_tag'
| | | |-CXXRecordDecl 0x1a79548 prev 0x1a79310 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a79618 <line:1376:7, col:23> col:23 referenced type 'std::random_access_iterator_tag':'std::random_access_iterator_tag'
| | |   `-SubstTemplateTypeParmType 0x1a795e0 'std::random_access_iterator_tag' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | |-ClassTemplateSpecializationDecl 0x1a83000 <line:1374:3, line:1376:29> line:1375:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1a83238 prev 0x1a83000 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a83308 <line:1376:7, col:23> col:23 referenced type 'char':'char'
| | |   `-SubstTemplateTypeParmType 0x1a832d0 'char' sugar
| | |     |-TemplateTypeParmType 0x11ca840 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11ca7e8 '_Tp'
| | |     `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1a9ba80 <line:1378:3, line:1380:29> line:1379:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char'
| | | |-CXXRecordDecl 0x1a9bd00 prev 0x1a9ba80 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1a9bda0 <line:1380:7, col:23> col:23 referenced type 'char':'char'
| | |   `-SubstTemplateTypeParmType 0x1a9bc50 'char' sugar
| | |     |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |     `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1ac76a0 <line:1378:3, line:1380:29> line:1379:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t'
| | | |-CXXRecordDecl 0x1ac7920 prev 0x1ac76a0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1ac79c0 <line:1380:7, col:23> col:23 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0x1ac7870 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1ae9390 <line:1378:3, line:1380:29> line:1379:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t'
| | | |-CXXRecordDecl 0x1ae9610 prev 0x1ae9390 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0x1ae96b0 <line:1380:7, col:23> col:23 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0x1ae9560 'char16_t' sugar
| | |     |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cac80 '_Tp'
| | |     `-BuiltinType 0xffd730 'char16_t'
| | `-ClassTemplateSpecializationDecl 0x1b01660 <line:1378:3, line:1380:29> line:1379:12 struct remove_const definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const char32_t'
| |   |-CXXRecordDecl 0x1b018e0 prev 0x1b01660 <col:5, col:12> col:12 implicit struct remove_const
| |   `-TypedefDecl 0x1b01980 <line:1380:7, col:23> col:23 referenced type 'char32_t':'char32_t'
| |     `-SubstTemplateTypeParmType 0x1b01830 'char32_t' sugar
| |       |-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x11cac80 '_Tp'
| |       `-BuiltinType 0xffd750 'char32_t'
| |-ClassTemplatePartialSpecializationDecl 0x11cadf0 <line:1378:3, line:1380:29> line:1379:12 struct remove_const definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x11cac80 <line:1378:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11cb018 <line:1379:5, col:12> col:12 implicit struct remove_const
| | `-TypedefDecl 0x11cb0b8 <line:1380:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0x11cacd0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x11cac80 '_Tp'
| |-ClassTemplateDecl 0x11ccae8 <line:1383:3, line:1385:29> line:1384:12 remove_volatile
| | |-TemplateTypeParmDecl 0x11cc9c0 <line:1383:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11cca58 <line:1384:5, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11ccd40 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x11ccde0 <line:1385:7, col:23> col:23 type '_Tp'
| | |   `-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x11f97a8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0x11f99e8 prev 0x11f97a8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x11f9ab8 <line:1385:7, col:23> col:23 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0x11f9a80 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x11fc1b8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0x11fc3f8 prev 0x11fc1b8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x11fc4c8 <line:1385:7, col:23> col:23 referenced type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0x11fc490 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x1201368 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0x12015a8 prev 0x1201368 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1201678 <line:1385:7, col:23> col:23 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0x1201640 'char16_t' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1203e78 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0x12040b8 prev 0x1203e78 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1204188 <line:1385:7, col:23> col:23 referenced type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0x1204150 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x1208dc8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0x1209008 prev 0x1208dc8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x12090d8 <line:1385:7, col:23> col:23 referenced type 'char32_t':'char32_t'
| | |   `-SubstTemplateTypeParmType 0x12090a0 'char32_t' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd750 'char32_t'
| | |-ClassTemplateSpecializationDecl 0x11a79e8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x11a7c28 prev 0x11a79e8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x11a7cf8 <line:1385:7, col:23> col:23 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0x11a7cc0 'void' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd170 'void'
| | |-ClassTemplateSpecializationDecl 0x1a3b998 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | |-CXXRecordDecl 0x1a3bbd8 prev 0x1a3b998 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a3bca8 <line:1385:7, col:23> col:23 referenced type 'std::basic_istream<char> &':'std::basic_istream<char> &'
| | |   `-SubstTemplateTypeParmType 0x1a3bc70 'std::basic_istream<char> &' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-LValueReferenceType 0x15fa500 'std::basic_istream<char> &'
| | |       `-RecordType 0x1103960 'std::basic_istream<char>'
| | |         `-ClassTemplateSpecialization 0x1103860 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a4c9a8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | |-CXXRecordDecl 0x1a4cbe8 prev 0x1a4c9a8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a4ccb8 <line:1385:7, col:23> col:23 referenced type 'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'
| | |   `-SubstTemplateTypeParmType 0x1a4cc80 'std::basic_istream<wchar_t> &' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-LValueReferenceType 0x15ff440 'std::basic_istream<wchar_t> &'
| | |       `-RecordType 0x11081e0 'std::basic_istream<wchar_t>'
| | |         `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a5bba8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | |-CXXRecordDecl 0x1a5bde8 prev 0x1a5bba8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a5beb8 <line:1385:7, col:23> col:23 referenced type 'std::basic_ostream<char> &':'std::basic_ostream<char> &'
| | |   `-SubstTemplateTypeParmType 0x1a5be80 'std::basic_ostream<char> &' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-LValueReferenceType 0x14b1f20 'std::basic_ostream<char> &'
| | |       `-RecordType 0x1103c40 'std::basic_ostream<char>'
| | |         `-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| | |-ClassTemplateSpecializationDecl 0x1a78f18 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::random_access_iterator_tag'
| | | |-CXXRecordDecl 0x1a79158 prev 0x1a78f18 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a79228 <line:1385:7, col:23> col:23 referenced type 'std::random_access_iterator_tag':'std::random_access_iterator_tag'
| | |   `-SubstTemplateTypeParmType 0x1a791f0 'std::random_access_iterator_tag' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | |-ClassTemplateSpecializationDecl 0x1a82c08 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1a82e48 prev 0x1a82c08 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a82f18 <line:1385:7, col:23> col:23 referenced type 'char':'char'
| | |   `-SubstTemplateTypeParmType 0x1a82ee0 'char' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1a9b688 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char'
| | | |-CXXRecordDecl 0x1a9b8c8 prev 0x1a9b688 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1a9b998 <line:1385:7, col:23> col:23 referenced type 'const char':'const char'
| | |   `-SubstTemplateTypeParmType 0x1a9b960 'const char' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-QualType 0xffd1b1 'const char' const
| | |       `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1ac54c8 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t'
| | | |-CXXRecordDecl 0x1ac5708 prev 0x1ac54c8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1ac57d8 <line:1385:7, col:23> col:23 referenced type 'const wchar_t':'const wchar_t'
| | |   `-SubstTemplateTypeParmType 0x1ac57a0 'const wchar_t' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-QualType 0xffd6f1 'const wchar_t' const
| | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1ae8f98 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t'
| | | |-CXXRecordDecl 0x1ae91d8 prev 0x1ae8f98 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0x1ae92a8 <line:1385:7, col:23> col:23 referenced type 'const char16_t':'const char16_t'
| | |   `-SubstTemplateTypeParmType 0x1ae9270 'const char16_t' sugar
| | |     |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| | |     `-QualType 0xffd731 'const char16_t' const
| | |       `-BuiltinType 0xffd730 'char16_t'
| | `-ClassTemplateSpecializationDecl 0x1b01268 <line:1383:3, line:1385:29> line:1384:12 struct remove_volatile definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const char32_t'
| |   |-CXXRecordDecl 0x1b014a8 prev 0x1b01268 <col:5, col:12> col:12 implicit struct remove_volatile
| |   `-TypedefDecl 0x1b01578 <line:1385:7, col:23> col:23 referenced type 'const char32_t':'const char32_t'
| |     `-SubstTemplateTypeParmType 0x1b01540 'const char32_t' sugar
| |       |-TemplateTypeParmType 0x11cca10 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x11cc9c0 '_Tp'
| |       `-QualType 0xffd751 'const char32_t' const
| |         `-BuiltinType 0xffd750 'char32_t'
| |-ClassTemplatePartialSpecializationDecl 0x11ccfc0 <line:1387:3, line:1389:29> line:1388:12 struct remove_volatile definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x11cce50 <line:1387:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11cd1e8 <line:1388:5, col:12> col:12 implicit struct remove_volatile
| | `-TypedefDecl 0x11cd288 <line:1389:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0x11ccea0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x11cce50 '_Tp'
| |-ClassTemplateDecl 0x11cd428 prev 0x11447e8 <line:1392:3, line:1397:5> line:1393:12 remove_cv
| | |-TemplateTypeParmDecl 0x11cd2f8 <line:1392:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11cd398 prev 0x1144758 <line:1393:5, line:1397:5> line:1393:12 struct remove_cv definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11cd4e8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0x11cd870 <line:1395:7, line:1396:67> col:67 type 'typename remove_const<typename remove_volatile<_Tp>::type>::type'
| | |   `-DependentNameType 0x11cd800 'typename remove_const<typename remove_volatile<_Tp>::type>::type' dependent
| | |-ClassTemplateSpecialization 0x11f94d8 'remove_cv'
| | |-ClassTemplateSpecialization 0x11fbee8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1201098 'remove_cv'
| | |-ClassTemplateSpecialization 0x1203ba8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1208b00 'remove_cv'
| | |-ClassTemplateSpecialization 0x11a7718 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a3b6c8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a4c6d8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a5b8d8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a78c48 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a82938 'remove_cv'
| | |-ClassTemplateSpecialization 0x1a9b3b8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1ac51f8 'remove_cv'
| | |-ClassTemplateSpecialization 0x1ae8cc8 'remove_cv'
| | `-ClassTemplateSpecialization 0x1b00f98 'remove_cv'
| |-ClassTemplateDecl 0x11cda08 <line:1400:3, line:1402:35> line:1401:12 add_const
| | |-TemplateTypeParmDecl 0x11cd8e0 <line:1400:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11cd978 <line:1401:5, line:1402:35> line:1401:12 struct add_const definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11cdc60 <col:5, col:12> col:12 implicit struct add_const
| |   `-TypedefDecl 0x11cdd00 <line:1402:7, col:29> col:29 type 'const _Tp'
| |     `-QualType 0x11cd931 'const _Tp' const
| |       `-TemplateTypeParmType 0x11cd930 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x11cd8e0 '_Tp'
| |-ClassTemplateDecl 0x11cde98 <line:1405:3, line:1407:38> line:1406:12 add_volatile
| | |-TemplateTypeParmDecl 0x11cdd70 <line:1405:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11cde08 <line:1406:5, line:1407:38> line:1406:12 struct add_volatile definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11ce0f0 <col:5, col:12> col:12 implicit struct add_volatile
| |   `-TypedefDecl 0x11ce190 <line:1407:7, col:32> col:32 type 'volatile _Tp'
| |     `-QualType 0x11cddc4 'volatile _Tp' volatile
| |       `-TemplateTypeParmType 0x11cddc0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x11cdd70 '_Tp'
| |-ClassTemplateDecl 0x11ce328 <line:1410:3, line:1415:5> line:1411:12 add_cv
| | |-TemplateTypeParmDecl 0x11ce200 <line:1410:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11ce298 <line:1411:5, line:1415:5> line:1411:12 struct add_cv definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11ce580 <col:5, col:12> col:12 implicit struct add_cv
| |   `-TypedefDecl 0x11ce900 <line:1413:7, line:1414:61> col:61 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |     `-DependentNameType 0x11ce890 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |-TypeAliasTemplateDecl 0x11cfc30 <line:1422:3, line:1423:56> col:5 remove_const_t
| | |-TemplateTypeParmDecl 0x11ce970 <line:1422:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11cfbd0 <line:1423:5, col:56> col:11 remove_const_t 'typename remove_const<_Tp>::type'
| |   `-DependentNameType 0x11cfb60 'typename remove_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11cfea0 <line:1426:3, line:1427:62> col:5 remove_volatile_t
| | |-TemplateTypeParmDecl 0x11cfc88 <line:1426:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11cfe40 <line:1427:5, col:62> col:11 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   `-DependentNameType 0x11cfdd0 'typename remove_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d0110 <line:1430:3, line:1431:50> col:5 remove_cv_t
| | |-TemplateTypeParmDecl 0x11cfef8 <line:1430:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d00b0 <line:1431:5, col:50> col:11 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   `-DependentNameType 0x11d0040 'typename remove_cv<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d03d0 <line:1434:3, line:1435:50> col:5 add_const_t
| | |-TemplateTypeParmDecl 0x11d0168 <line:1434:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d0370 <line:1435:5, col:50> col:11 add_const_t 'typename add_const<_Tp>::type'
| |   `-DependentNameType 0x11d0300 'typename add_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d0640 <line:1438:3, line:1439:56> col:5 add_volatile_t
| | |-TemplateTypeParmDecl 0x11d0428 <line:1438:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d05e0 <line:1439:5, col:56> col:11 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   `-DependentNameType 0x11d0570 'typename add_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d0900 <line:1442:3, line:1443:44> col:5 add_cv_t
| | |-TemplateTypeParmDecl 0x11d0698 <line:1442:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d08a0 <line:1443:5, col:44> col:11 add_cv_t 'typename add_cv<_Tp>::type'
| |   `-DependentNameType 0x11d0830 'typename add_cv<_Tp>::type' dependent
| |-ClassTemplateDecl 0x11d0a88 <line:1449:3, line:1451:27> line:1450:12 remove_reference
| | |-TemplateTypeParmDecl 0x11d0958 <line:1449:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d09f8 <line:1450:5, line:1451:27> line:1450:12 struct remove_reference definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11d0ce0 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x11d0d80 <line:1451:7, col:21> col:21 type '_Tp'
| | |   `-TemplateTypeParmType 0x11d09b0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x11d0958 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x1a388b8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | |-CXXRecordDecl 0x1a38ba0 prev 0x1a388b8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1a38c40 <line:1455:7, col:21> col:21 referenced type 'std::basic_istream<char>':'std::basic_istream<char>'
| | |   `-SubstTemplateTypeParmType 0x1a38a90 'std::basic_istream<char>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x1103960 'std::basic_istream<char>'
| | |       `-ClassTemplateSpecialization 0x1103860 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a49ac8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | |-CXXRecordDecl 0x1a49db0 prev 0x1a49ac8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1a49e50 <line:1455:7, col:21> col:21 referenced type 'std::basic_istream<wchar_t>':'std::basic_istream<wchar_t>'
| | |   `-SubstTemplateTypeParmType 0x1a49ca0 'std::basic_istream<wchar_t>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x11081e0 'std::basic_istream<wchar_t>'
| | |       `-ClassTemplateSpecialization 0x11080e0 'basic_istream'
| | |-ClassTemplateSpecializationDecl 0x1a556e8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::basic_ostream<char> &'
| | | |-CXXRecordDecl 0x1a559d0 prev 0x1a556e8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1a55a70 <line:1455:7, col:21> col:21 referenced type 'std::basic_ostream<char>':'std::basic_ostream<char>'
| | |   `-SubstTemplateTypeParmType 0x1a558c0 'std::basic_ostream<char>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x1103c40 'std::basic_ostream<char>'
| | |       `-ClassTemplateSpecialization 0x1103b40 'basic_ostream'
| | |-ClassTemplateSpecializationDecl 0x1a9e228 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::allocator<char> &'
| | | |-CXXRecordDecl 0x1a9e520 prev 0x1a9e228 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1a9e5c0 <line:1455:7, col:21> col:21 referenced type 'std::allocator<char>':'std::allocator<char>'
| | |   `-SubstTemplateTypeParmType 0x1a9e410 'std::allocator<char>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x107edd0 'std::allocator<char>'
| | |       `-ClassTemplateSpecialization 0x107ecf0 'allocator'
| | |-ClassTemplateSpecializationDecl 0x1ac9dc8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::allocator<wchar_t> &'
| | | |-CXXRecordDecl 0x1aca0c0 prev 0x1ac9dc8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1aca160 <line:1455:7, col:21> col:21 referenced type 'std::allocator<wchar_t>':'std::allocator<wchar_t>'
| | |   `-SubstTemplateTypeParmType 0x1ac9fb0 'std::allocator<wchar_t>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x107f240 'std::allocator<wchar_t>'
| | |       `-ClassTemplateSpecialization 0x107f160 'allocator'
| | |-ClassTemplateSpecializationDecl 0x1aed258 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::allocator<char16_t> &'
| | | |-CXXRecordDecl 0x1aed550 prev 0x1aed258 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1aed5f0 <line:1455:7, col:21> col:21 referenced type 'std::allocator<char16_t>':'std::allocator<char16_t>'
| | |   `-SubstTemplateTypeParmType 0x1aed440 'std::allocator<char16_t>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x107f6b0 'std::allocator<char16_t>'
| | |       `-ClassTemplateSpecialization 0x107f5d0 'allocator'
| | |-ClassTemplateSpecializationDecl 0x1b03cd8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::allocator<char32_t> &'
| | | |-CXXRecordDecl 0x1b03fd0 prev 0x1b03cd8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0x1b04070 <line:1455:7, col:21> col:21 referenced type 'std::allocator<char32_t>':'std::allocator<char32_t>'
| | |   `-SubstTemplateTypeParmType 0x1b03ec0 'std::allocator<char32_t>' sugar
| | |     |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d0df0 '_Tp'
| | |     `-RecordType 0x10af6c0 'std::allocator<char32_t>'
| | |       `-ClassTemplateSpecialization 0x10af5e0 'allocator'
| | `-ClassTemplateSpecializationDecl 0x1b08bd8 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::__cxx11::basic_string<char> &'
| |   |-CXXRecordDecl 0x1b08ed0 prev 0x1b08bd8 <col:5, col:12> col:12 implicit struct remove_reference
| |   `-TypedefDecl 0x1b08f70 <line:1455:7, col:21> col:21 referenced type 'std::__cxx11::basic_string<char>':'std::__cxx11::basic_string<char>'
| |     `-SubstTemplateTypeParmType 0x1b08dc0 'std::__cxx11::basic_string<char>' sugar
| |       |-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x11d0df0 '_Tp'
| |       `-RecordType 0x107ef70 'std::__cxx11::basic_string<char>'
| |         `-ClassTemplateSpecialization 0x107ee60 'basic_string'
| |-ClassTemplatePartialSpecializationDecl 0x11d0f90 <line:1453:3, line:1455:27> line:1454:12 struct remove_reference definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0x11d0df0 <line:1453:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d11b8 <line:1454:5, col:12> col:12 implicit struct remove_reference
| | `-TypedefDecl 0x11d1258 <line:1455:7, col:21> col:21 type '_Tp'
| |   `-TemplateTypeParmType 0x11d0e40 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x11d0df0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x11d1470 <line:1457:3, line:1459:27> line:1458:12 struct remove_reference definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | |-TemplateTypeParmDecl 0x11d12c8 <line:1457:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d1698 <line:1458:5, col:12> col:12 implicit struct remove_reference
| | `-TypedefDecl 0x11d1738 <line:1459:7, col:21> col:21 type '_Tp'
| |   `-TemplateTypeParmType 0x11d1320 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x11d12c8 '_Tp'
| |-ClassTemplateDecl 0x11d2000 <line:1461:3, line:1463:27> line:1462:12 __add_lvalue_reference_helper
| | |-TemplateTypeParmDecl 0x11d17a8 <line:1461:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11d1938 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11d1998 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11d18f0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11d1f70 <line:1462:5, line:1463:27> line:1462:12 struct __add_lvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11d22b0 <col:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| |   `-TypedefDecl 0x11d2350 <line:1463:7, col:21> col:21 type '_Tp'
| |     `-TemplateTypeParmType 0x11d1800 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d17a8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x11d25c8 <line:1465:3, line:1467:28> line:1466:12 struct __add_lvalue_reference_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11d23c0 <line:1465:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d2868 <line:1466:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| | `-TypedefDecl 0x11d2938 <line:1467:7, col:22> col:22 type '_Tp &'
| |   `-LValueReferenceType 0x11d2900 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x11d2410 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d23c0 '_Tp'
| |-ClassTemplateDecl 0x11d2ad8 <line:1470:3, line:1473:7> line:1471:12 add_lvalue_reference
| | |-TemplateTypeParmDecl 0x11d29a8 <line:1470:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11d2a48 <line:1471:5, line:1473:7> line:1471:12 struct add_lvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_lvalue_reference_helper<_Tp>'
| |   `-CXXRecordDecl 0x11d2f70 <col:5, col:12> col:12 implicit struct add_lvalue_reference
| |-ClassTemplateDecl 0x11d32d8 <line:1475:3, line:1477:27> line:1476:12 __add_rvalue_reference_helper
| | |-TemplateTypeParmDecl 0x11d3018 <line:1475:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11d31a8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11d3208 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11d3160 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x11d3248 <line:1476:5, line:1477:27> line:1476:12 struct __add_rvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x11d3590 <col:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| |   `-TypedefDecl 0x11d3630 <line:1477:7, col:21> col:21 type '_Tp'
| |     `-TemplateTypeParmType 0x11d3070 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d3018 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x11d38a8 <line:1479:3, line:1481:29> line:1480:12 struct __add_rvalue_reference_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11d36a0 <line:1479:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d3b48 <line:1480:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| | `-TypedefDecl 0x11d3c18 <line:1481:7, col:23> col:23 type '_Tp &&'
| |   `-RValueReferenceType 0x11d3be0 '_Tp &&' dependent
| |     `-TemplateTypeParmType 0x11d36f0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d36a0 '_Tp'
| |-ClassTemplateDecl 0x11d3db8 <line:1484:3, line:1487:7> line:1485:12 add_rvalue_reference
| | |-TemplateTypeParmDecl 0x11d3c88 <line:1484:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x11d3d28 <line:1485:5, line:1487:7> line:1485:12 struct add_rvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_rvalue_reference_helper<_Tp>'
| |   `-CXXRecordDecl 0x11d5900 <col:5, col:12> col:12 implicit struct add_rvalue_reference
| |-TypeAliasTemplateDecl 0x11d5c10 <line:1491:3, line:1492:64> col:5 remove_reference_t
| | |-TemplateTypeParmDecl 0x11d59a8 <line:1491:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d5bb0 <line:1492:5, col:64> col:11 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   `-DependentNameType 0x11d5b40 'typename remove_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d5ed0 <line:1495:3, line:1496:72> col:5 add_lvalue_reference_t
| | |-TemplateTypeParmDecl 0x11d5c68 <line:1495:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d5e70 <line:1496:5, col:72> col:11 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   `-DependentNameType 0x11d5e00 'typename add_lvalue_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x11d6190 <line:1499:3, line:1500:72> col:5 add_rvalue_reference_t
| | |-TemplateTypeParmDecl 0x11d5f28 <line:1499:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x11d6130 <line:1500:5, col:72> col:11 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   `-DependentNameType 0x11d60c0 'typename add_rvalue_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0x11d6408 <line:1506:3, line:1507:12> col:12 __cv_selector
| | |-TemplateTypeParmDecl 0x11d61e8 <line:1506:12, col:21> col:21 typename depth 0 index 0 _Unqualified
| | |-NonTypeTemplateParmDecl 0x11d6278 <col:35, col:40> col:40 'bool' depth 0 index 1 _IsConst
| | |-NonTypeTemplateParmDecl 0x11d62e8 <col:50, col:55> col:55 'bool' depth 0 index 2 _IsVol
| | |-CXXRecordDecl 0x11d6378 <line:1507:5, col:12> col:12 struct __cv_selector
| | |-ClassTemplateSpecializationDecl 0x11eb2f8 <line:1509:3, line:1511:36> line:1510:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11ebf30 prev 0x11eb2f8 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0x11ebfd0 <line:1511:7, col:28> col:28 referenced __type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |     `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x11ef258 <line:1509:3, line:1511:36> line:1510:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11ef700 prev 0x11ef258 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0x11ef7a0 <line:1511:7, col:28> col:28 referenced __type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |     `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x11fee68 <line:1509:3, line:1511:36> line:1510:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11ff310 prev 0x11fee68 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0x11ff3b0 <line:1511:7, col:28> col:28 referenced __type 'int':'int'
| | |   `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| | |     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |     `-BuiltinType 0xffd210 'int'
| | `-ClassTemplateSpecializationDecl 0x1206518 <line:1509:3, line:1511:36> line:1510:12 struct __cv_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'short'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x12069c0 prev 0x1206518 <col:5, col:12> col:12 implicit struct __cv_selector
| |   `-TypedefDecl 0x1206a60 <line:1511:7, col:28> col:28 referenced __type 'short':'short'
| |     `-SubstTemplateTypeParmType 0x1206840 'short' sugar
| |       |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |       `-BuiltinType 0xffd1f0 'short'
| |-ClassTemplatePartialSpecializationDecl 0x11d6930 <line:1509:3, line:1511:36> line:1510:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11d6698 <line:1509:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x11d6c48 <line:1510:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0x11d6ce8 <line:1511:7, col:28> col:28 __type '_Unqualified'
| |   `-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x11d6ff0 <line:1513:3, line:1515:45> line:1514:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11d6d58 <line:1513:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x11d7308 <line:1514:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0x11d73a8 <line:1515:7, col:37> col:37 __type 'volatile _Unqualified'
| |   `-QualType 0x11d6db4 'volatile _Unqualified' volatile
| |     `-TemplateTypeParmType 0x11d6db0 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d6d58 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x11d7c50 <line:1517:3, line:1519:42> line:1518:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11d7418 <line:1517:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x11d7f68 <line:1518:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0x11d8008 <line:1519:7, col:34> col:34 __type 'const _Unqualified'
| |   `-QualType 0x11d7471 'const _Unqualified' const
| |     `-TemplateTypeParmType 0x11d7470 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d7418 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x11d8310 <line:1521:3, line:1523:51> line:1522:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11d8078 <line:1521:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x11d8628 <line:1522:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0x11d86c8 <line:1523:7, col:43> col:43 __type 'const volatile _Unqualified'
| |   `-QualType 0x11d80d5 'const volatile _Unqualified' const volatile
| |     `-TemplateTypeParmType 0x11d80d0 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x11d8078 '_Unqualified'
| |-ClassTemplateDecl 0x11d8c08 <line:1525:3, line:1534:5> line:1528:11 __match_cv_qualifiers
| | |-TemplateTypeParmDecl 0x11d8738 <line:1525:12, col:21> col:21 referenced typename depth 0 index 0 _Qualified
| | |-TemplateTypeParmDecl 0x11d87b8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _Unqualified
| | |-NonTypeTemplateParmDecl 0x11d8948 <line:1526:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11d89a8 <col:21, col:43> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11d8900 <col:21, col:43> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x11d8ac8 <line:1527:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11d8b28 <col:19, col:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11d8a80 <col:19, col:44> '<dependent type>' lvalue
| | |-CXXRecordDecl 0x11d8b78 <line:1528:5, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11d8f40 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0x11d91c0 <line:1530:7, col:61> col:61 referenced __match '__cv_selector<_Unqualified, _IsConst, _IsVol>'
| | | | `-TemplateSpecializationType 0x11d9090 '__cv_selector<_Unqualified, _IsConst, _IsVol>' dependent __cv_selector
| | | |   |-TemplateArgument type '_Unqualified'
| | | |   |-TemplateArgument expr
| | | |   | `-DeclRefExpr 0x11d8fe0 <col:43> 'bool' NonTypeTemplateParm 0x11d8948 '_IsConst' 'bool'
| | | |   `-TemplateArgument expr
| | | |     `-DeclRefExpr 0x11d9000 <col:53> 'bool' NonTypeTemplateParm 0x11d8ac8 '_IsVol' 'bool'
| | | |-AccessSpecDecl 0x11d9218 <line:1532:5, col:11> col:5 public
| | | `-TypedefDecl 0x11d9350 <line:1533:7, col:40> col:40 __type 'typename __match::__type'
| | |   `-DependentNameType 0x11d92e0 'typename __match::__type' dependent
| | |-ClassTemplateSpecializationDecl 0x11eaf18 <line:1525:3, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11eb190 prev 0x11eaf18 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0x11ebc90 <line:1530:7, col:61> col:61 __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-TemplateSpecializationType 0x11ebbc0 '__cv_selector<unsigned int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11eb2b8 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11eb268 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11eb258 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11eb2d8 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11eb298 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11eb288 <col:53> 'bool' false
| | | |   `-RecordType 0x11ebba0 'std::__cv_selector<unsigned int, false, false>'
| | | |     `-ClassTemplateSpecialization 0x11eb2f8 '__cv_selector'
| | | |-AccessSpecDecl 0x11ebce8 <line:1532:5, col:11> col:5 public
| | | `-TypedefDecl 0x11ec0b0 <line:1533:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| | |     `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0x11ebfd0 '__type'
| | |       `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |         `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x11eee78 <line:1525:3, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11ef0f0 prev 0x11eee78 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0x11ef460 <line:1530:7, col:61> col:61 __match '__cv_selector<unsigned short, false, false>':'std::__cv_selector<unsigned short, false, false>'
| | | | `-TemplateSpecializationType 0x11ef390 '__cv_selector<unsigned short, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned short':'unsigned short'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11ef218 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11ef1c8 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11ef1b8 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11ef238 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11ef1f8 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11ef1e8 <col:53> 'bool' false
| | | |   `-RecordType 0x11ef370 'std::__cv_selector<unsigned short, false, false>'
| | | |     `-ClassTemplateSpecialization 0x11ef258 '__cv_selector'
| | | |-AccessSpecDecl 0x11ef4b8 <line:1532:5, col:11> col:5 public
| | | `-TypedefDecl 0x11ef880 <line:1533:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned short'
| | |   `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| | |     `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0x11ef7a0 '__type'
| | |       `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | |         |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |         `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x11f1948 <line:1525:3, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11f1bc0 prev 0x11f1948 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0x11f1dd0 <line:1530:7, col:61> col:61 __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-TemplateSpecializationType 0x11f1d00 '__cv_selector<unsigned int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11f1cc0 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11f1c70 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11f1c60 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11f1ce0 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11f1ca0 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11f1c90 <col:53> 'bool' false
| | | |   `-RecordType 0x11ebba0 'std::__cv_selector<unsigned int, false, false>'
| | | |     `-ClassTemplateSpecialization 0x11eb2f8 '__cv_selector'
| | | |-AccessSpecDecl 0x11f1e28 <line:1532:5, col:11> col:5 public
| | | `-TypedefDecl 0x11f1f00 <line:1533:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| | |     `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0x11ebfd0 '__type'
| | |       `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |         `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x11fea88 <line:1525:3, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument type 'int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11fed00 prev 0x11fea88 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0x11ff070 <line:1530:7, col:61> col:61 __match '__cv_selector<int, false, false>':'std::__cv_selector<int, false, false>'
| | | | `-TemplateSpecializationType 0x11fefa0 '__cv_selector<int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'int':'int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11fee28 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11fedd8 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11fedc8 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0x11fee48 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0x11fee08 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0x11fedf8 <col:53> 'bool' false
| | | |   `-RecordType 0x11fef80 'std::__cv_selector<int, false, false>'
| | | |     `-ClassTemplateSpecialization 0x11fee68 '__cv_selector'
| | | |-AccessSpecDecl 0x11ff0c8 <line:1532:5, col:11> col:5 public
| | | `-TypedefDecl 0x11ff490 <line:1533:7, col:40> col:40 referenced __type 'typename __match::__type':'int'
| | |   `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| | |     `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| | |       |-Typedef 0x11ff3b0 '__type'
| | |       `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| | |         |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |         `-BuiltinType 0xffd210 'int'
| | `-ClassTemplateSpecializationDecl 0x1206138 <line:1525:3, line:1534:5> line:1528:11 class __match_cv_qualifiers definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'unsigned short'
| |   |-TemplateArgument type 'short'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x12063b0 prev 0x1206138 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| |   |-TypedefDecl 0x1206720 <line:1530:7, col:61> col:61 __match '__cv_selector<short, false, false>':'std::__cv_selector<short, false, false>'
| |   | `-TemplateSpecializationType 0x1206650 '__cv_selector<short, false, false>' sugar __cv_selector
| |   |   |-TemplateArgument type 'short':'short'
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0x12064d8 <col:43> 'bool' Int: 0
| |   |   |   `-SubstNonTypeTemplateParmExpr 0x1206488 <col:43> 'bool'
| |   |   |     `-CXXBoolLiteralExpr 0x1206478 <col:43> 'bool' false
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0x12064f8 <col:53> 'bool' Int: 0
| |   |   |   `-SubstNonTypeTemplateParmExpr 0x12064b8 <col:53> 'bool'
| |   |   |     `-CXXBoolLiteralExpr 0x12064a8 <col:53> 'bool' false
| |   |   `-RecordType 0x1206630 'std::__cv_selector<short, false, false>'
| |   |     `-ClassTemplateSpecialization 0x1206518 '__cv_selector'
| |   |-AccessSpecDecl 0x1206778 <line:1532:5, col:11> col:5 public
| |   `-TypedefDecl 0x1206b40 <line:1533:7, col:40> col:40 referenced __type 'typename __match::__type':'short'
| |     `-ElaboratedType 0x1206af0 'typename __match::__type' sugar
| |       `-TypedefType 0x1206ad0 'std::__cv_selector<short, false, false>::__type' sugar
| |         |-Typedef 0x1206a60 '__type'
| |         `-SubstTemplateTypeParmType 0x1206840 'short' sugar
| |           |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |           `-BuiltinType 0xffd1f0 'short'
| |-ClassTemplateDecl 0x11d94e8 <line:1537:3, line:1539:27> line:1538:12 __make_unsigned
| | |-TemplateTypeParmDecl 0x11d93c0 <line:1537:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11d9458 <line:1538:5, line:1539:27> line:1538:12 struct __make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11d9740 <col:5, col:12> col:12 implicit struct __make_unsigned
| | | `-TypedefDecl 0x11d97e0 <line:1539:7, col:19> col:19 __type '_Tp'
| | |   `-TemplateTypeParmType 0x11d9410 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x11d93c0 '_Tp'
| | |-ClassTemplateSpecialization 0x11d9878 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11da610 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11da970 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11dacd0 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11db030 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11db390 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11db6f0 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11e7b70 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x11ec340 '__make_unsigned'
| | `-ClassTemplateSpecialization 0x11efb10 '__make_unsigned'
| |-ClassTemplateSpecializationDecl 0x11d9878 <line:1541:3, line:1543:37> line:1542:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x11d9a98 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11da570 <line:1543:7, col:29> col:29 __type 'unsigned char'
| |   `-BuiltinType 0xffd270 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x11da610 <line:1545:3, line:1547:37> line:1546:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0x11da828 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11da8d0 <line:1547:7, col:29> col:29 __type 'unsigned char'
| |   `-BuiltinType 0xffd270 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x11da970 <line:1549:3, line:1551:38> line:1550:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'short'
| | |-CXXRecordDecl 0x11dab88 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11dac30 <line:1551:7, col:30> col:30 __type 'unsigned short'
| |   `-BuiltinType 0xffd290 'unsigned short'
| |-ClassTemplateSpecializationDecl 0x11dacd0 <line:1553:3, line:1555:36> line:1554:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'int'
| | |-CXXRecordDecl 0x11daee8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11daf90 <line:1555:7, col:28> col:28 __type 'unsigned int'
| |   `-BuiltinType 0xffd2b0 'unsigned int'
| |-ClassTemplateSpecializationDecl 0x11db030 <line:1557:3, line:1559:37> line:1558:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long'
| | |-CXXRecordDecl 0x11db248 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11db2f0 <line:1559:7, col:29> col:29 __type 'unsigned long'
| |   `-BuiltinType 0xffd2d0 'unsigned long'
| |-ClassTemplateSpecializationDecl 0x11db390 <line:1561:3, line:1563:42> line:1562:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long long'
| | |-CXXRecordDecl 0x11db5a8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11db650 <line:1563:7, col:34> col:34 __type 'unsigned long long'
| |   `-BuiltinType 0xffd2f0 'unsigned long long'
| |-ClassTemplateSpecializationDecl 0x11db6f0 <line:1566:3, line:1568:55> line:1567:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type '__int128'
| | |-CXXRecordDecl 0x11db908 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x11db9b0 <line:1568:7, col:47> col:47 __type 'unsigned __int128'
| |   `-BuiltinType 0xffd6d0 'unsigned __int128'
| |-ClassTemplateDecl 0x11dbe60 <line:1587:3, line:1590:11> col:11 __make_unsigned_selector
| | |-TemplateTypeParmDecl 0x11dba20 <line:1587:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11dbba8 <line:1588:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11dbc08 <col:19, col:37> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11dbb60 <col:19, col:37> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x11dbd28 <line:1589:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11dbd88 <col:20, col:34> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11dbce0 <col:20, col:34> '<dependent type>' lvalue
| | |-CXXRecordDecl 0x11dbdd0 <line:1590:5, col:11> col:11 class __make_unsigned_selector
| | |-ClassTemplateSpecializationDecl 0x11e7e88 <line:1626:3, line:1639:5> line:1627:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x11e8240 prev 0x11e7e88 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x11e82d0 <line:1631:7, line:1632:40> line:1631:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0x11e1b40 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0x11e1b20 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0x11e1a38 '_List'
| | | |-TypeAliasDecl 0x11ea470 <line:1634:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(wchar_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0x11ea420 'typename __select<sizeof(wchar_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x11ea400 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0x11ea1d8 '__type'
| | | |     `-SubstTemplateTypeParmType 0x11e9e40 'unsigned int' sugar
| | | |       |-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0x11deab8 '_Uint'
| | | |       `-BuiltinType 0xffd2b0 'unsigned int'
| | | |-AccessSpecDecl 0x11ea4d0 <line:1636:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x11ec190 <line:1637:7, line:1638:58> line:1637:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x11ec140 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11ec120 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0x11ec0b0 '__type'
| | |       `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0x11ebfd0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x11ec658 <line:1626:3, line:1639:5> line:1627:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x11eca10 prev 0x11ec658 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x11ecaa0 <line:1631:7, line:1632:40> line:1631:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0x11e1b40 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0x11e1b20 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0x11e1a38 '_List'
| | | |-TypeAliasDecl 0x11ee600 <line:1634:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(char16_t), _UInts>::__type':'unsigned short'
| | | | `-ElaboratedType 0x11ee5b0 'typename __select<sizeof(char16_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x11ee590 'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0x11ee440 '__type'
| | | |     `-SubstTemplateTypeParmType 0x11edae0 'unsigned short' sugar
| | | |       |-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0x11deab8 '_Uint'
| | | |       `-BuiltinType 0xffd290 'unsigned short'
| | | |-AccessSpecDecl 0x11ee660 <line:1636:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x11ef960 <line:1637:7, line:1638:58> line:1637:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0x11ef910 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11ef8f0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0x11ef880 '__type'
| | |       `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-Typedef 0x11ef7a0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x11efe28 <line:1626:3, line:1639:5> line:1627:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char32_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x11f0d30 prev 0x11efe28 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x11f0dc0 <line:1631:7, line:1632:40> line:1631:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0x11e1b40 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0x11e1b20 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0x11e1a38 '_List'
| | | |-TypeAliasDecl 0x11f10d0 <line:1634:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(char32_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0x11f1080 'typename __select<sizeof(char32_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x11ea400 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0x11ea1d8 '__type'
| | | |     `-SubstTemplateTypeParmType 0x11e9e40 'unsigned int' sugar
| | | |       |-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0x11deab8 '_Uint'
| | | |       `-BuiltinType 0xffd2b0 'unsigned int'
| | | |-AccessSpecDecl 0x11f1130 <line:1636:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x11f1fe0 <line:1637:7, line:1638:58> line:1637:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x11f1f90 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11f1f70 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0x11f1f00 '__type'
| | |       `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0x11ebfd0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x11fb0a0 <line:1592:3, line:1601:5> line:1593:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11fb3c0 prev 0x11fb0a0 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x11fb660 <line:1595:7, line:1596:61> line:1595:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<wchar_t>::type>::__type':'unsigned int'
| | | | `-ElaboratedType 0x11fb610 'typename __make_unsigned<typename remove_cv<wchar_t>::type>::__type' sugar
| | | |   `-TypedefType 0x11fb5f0 'std::__make_unsigned<wchar_t>::__type' sugar
| | | |     |-TypeAlias 0x11ec2a0 '__type'
| | | |     `-ElaboratedType 0x11ec230 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |       `-TypedefType 0x11ec210 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0x11ec190 '__type'
| | | |         `-ElaboratedType 0x11ec140 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0x11ec120 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | | |             |-Typedef 0x11ec0b0 '__type'
| | | |             `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| | | |               `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |                 |-Typedef 0x11ebfd0 '__type'
| | | |                 `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | | |                   |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | | |                   | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | | |                   `-BuiltinType 0xffd2b0 'unsigned int'
| | | |-AccessSpecDecl 0x11fb6c0 <line:1598:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x11fbad0 <line:1599:7, line:1600:58> line:1599:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x11fba80 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11ec120 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0x11ec0b0 '__type'
| | |       `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0x11ebfd0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd2b0 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x1202350 <line:1592:3, line:1601:5> line:1593:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x1202670 prev 0x1202350 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x1202910 <line:1595:7, line:1596:61> line:1595:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<char16_t>::type>::__type':'unsigned short'
| | | | `-ElaboratedType 0x12028c0 'typename __make_unsigned<typename remove_cv<char16_t>::type>::__type' sugar
| | | |   `-TypedefType 0x12028a0 'std::__make_unsigned<char16_t>::__type' sugar
| | | |     |-TypeAlias 0x11efa70 '__type'
| | | |     `-ElaboratedType 0x11efa00 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |       `-TypedefType 0x11ef9e0 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0x11ef960 '__type'
| | | |         `-ElaboratedType 0x11ef910 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0x11ef8f0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | | |             |-Typedef 0x11ef880 '__type'
| | | |             `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| | | |               `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |                 |-Typedef 0x11ef7a0 '__type'
| | | |                 `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | | |                   |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | | |                   | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | | |                   `-BuiltinType 0xffd290 'unsigned short'
| | | |-AccessSpecDecl 0x1202970 <line:1598:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x1203790 <line:1599:7, line:1600:58> line:1599:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0x1203740 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11ef8f0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0x11ef880 '__type'
| | |       `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-Typedef 0x11ef7a0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd290 'unsigned short'
| | `-ClassTemplateSpecializationDecl 0x1209db0 <line:1592:3, line:1601:5> line:1593:11 class __make_unsigned_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x120a0d0 prev 0x1209db0 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| |   |-TypeAliasDecl 0x120a370 <line:1595:7, line:1596:61> line:1595:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<char32_t>::type>::__type':'unsigned int'
| |   | `-ElaboratedType 0x120a320 'typename __make_unsigned<typename remove_cv<char32_t>::type>::__type' sugar
| |   |   `-TypedefType 0x120a300 'std::__make_unsigned<char32_t>::__type' sugar
| |   |     |-TypeAlias 0x11f20f0 '__type'
| |   |     `-ElaboratedType 0x11f2080 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |       `-TypedefType 0x11f2060 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |         |-TypeAlias 0x11f1fe0 '__type'
| |   |         `-ElaboratedType 0x11f1f90 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |           `-TypedefType 0x11f1f70 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |   |             |-Typedef 0x11f1f00 '__type'
| |   |             `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| |   |               `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |                 |-Typedef 0x11ebfd0 '__type'
| |   |                 `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| |   |                   |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |   |                   | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |   |                   `-BuiltinType 0xffd2b0 'unsigned int'
| |   |-AccessSpecDecl 0x120a3d0 <line:1598:5, col:11> col:5 public
| |   `-TypeAliasDecl 0x120a7e0 <line:1599:7, line:1600:58> line:1599:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| |     `-ElaboratedType 0x120a790 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |       `-TypedefType 0x11f1f70 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |         |-Typedef 0x11f1f00 '__type'
| |         `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| |           `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |             |-Typedef 0x11ebfd0 '__type'
| |             `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| |               |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |               | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |               `-BuiltinType 0xffd2b0 'unsigned int'
| |-ClassTemplatePartialSpecializationDecl 0x11dc380 <line:1592:3, line:1601:5> line:1593:11 class __make_unsigned_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11dc0e8 <line:1592:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11dcd28 <line:1593:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0x11dd060 <line:1595:7, line:1596:61> line:1595:13 referenced __unsigned_type 'typename __make_unsigned<typename remove_cv<_Tp>::type>::__type'
| | | `-DependentNameType 0x11dcff0 'typename __make_unsigned<typename remove_cv<_Tp>::type>::__type' dependent
| | |-AccessSpecDecl 0x11dd0c0 <line:1598:5, col:11> col:5 public
| | `-TypeAliasDecl 0x11dd5a0 <line:1599:7, line:1600:58> line:1599:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0x11dd530 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-CXXRecordDecl 0x11dd618 <line:1603:3, line:1623:3> line:1603:9 referenced class __make_unsigned_selector_base definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x11dd738 <col:3, col:9> col:9 implicit class __make_unsigned_selector_base
| | |-AccessSpecDecl 0x11dd7c8 <line:1605:3, col:12> col:3 protected
| | |-ClassTemplateDecl 0x11dd918 <line:1606:5, col:42> col:34 _List
| | | |-TemplateTypeParmDecl 0x11dd7f0 <col:14> col:25 typename depth 0 index 0 ...
| | | |-CXXRecordDecl 0x11dd888 <col:27, col:42> col:34 struct _List definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | `-CXXRecordDecl 0x11ddbd0 <col:27, col:34> col:34 implicit struct _List
| | | |-ClassTemplateSpecializationDecl 0x11e1a38 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned char'
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0x11e4e20 prev 0x11e1a38 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x11e4eb0 <line:1610:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0x11e4f38 <col:42, col:52> 'unsigned long' sizeof 'unsigned char':'unsigned char'
| | | |-ClassTemplateSpecializationDecl 0x11e3498 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0x11e4c48 prev 0x11e3498 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x11e4cd8 <line:1610:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0x11e4d60 <col:42, col:52> 'unsigned long' sizeof 'unsigned short':'unsigned short'
| | | |-ClassTemplateSpecializationDecl 0x11e39a8 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0x11e4a70 prev 0x11e39a8 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x11e4b00 <line:1610:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0x11e4b88 <col:42, col:52> 'unsigned long' sizeof 'unsigned int':'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0x11e3df8 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0x11e4898 prev 0x11e3df8 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x11e4928 <line:1610:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0x11e49b0 <col:42, col:52> 'unsigned long' sizeof 'unsigned long':'unsigned long'
| | | |-ClassTemplateSpecializationDecl 0x11e4178 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<>':'std::__make_unsigned_selector_base::_List<>'
| | | | |-TemplateArgument pack
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0x11e46c0 prev 0x11e4178 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x11e4750 <line:1610:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0x11e47d8 <col:42, col:52> 'unsigned long' sizeof 'unsigned long long':'unsigned long long'
| | | `-ClassTemplateSpecializationDecl 0x11e4438 <line:1606:5, col:42> col:34 struct _List definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument pack
| | |   `-CXXRecordDecl 0x11e45e8 prev 0x11e4438 <col:27, col:34> col:34 implicit struct _List
| | |-ClassTemplatePartialSpecializationDecl 0x11ddf50 <line:1608:5, line:1610:55> line:1609:14 struct _List definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_List<_Up...>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateArgument type 'type-parameter-0-1...'
| | | |-TemplateTypeParmDecl 0x11ddc78 <line:1608:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x11ddcf8 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Up
| | | |-CXXRecordDecl 0x11de350 <line:1609:7, col:14> col:14 implicit struct _List
| | | `-VarDecl 0x11de3f0 <line:1610:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | |   `-UnaryExprOrTypeTraitExpr 0x11de468 <col:42, col:52> 'unsigned long' sizeof '_Tp'
| | |-ClassTemplateDecl 0x11de7b8 <line:1612:5, line:1613:14> col:14 __select
| | | |-NonTypeTemplateParmDecl 0x11de4b0 <line:1612:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0x11de510 <col:26, col:35> col:35 typename depth 0 index 1 _Tp
| | | |-NonTypeTemplateParmDecl 0x11de680 <col:40, col:66> col:45 'bool' depth 0 index 2
| | | | `-TemplateArgument expr
| | | |   `-ImplicitCastExpr 0x11de6e0 <col:47, col:66> 'bool' <Dependent>
| | | |     `-ParenExpr 0x11de650 <col:47, col:66> '<dependent type>'
| | | |       `-BinaryOperator 0x11de630 <col:48, col:60> '<dependent type>' '<='
| | | |         |-DeclRefExpr 0x11de588 <col:48> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x11de4b0 '_Sz' 'std::size_t':'unsigned long'
| | | |         `-DependentScopeDeclRefExpr 0x11de5f8 <col:55, col:60> '<dependent type>' lvalue
| | | |-CXXRecordDecl 0x11de728 <line:1613:7, col:14> col:14 struct __select
| | | |-ClassTemplateSpecializationDecl 0x11e84b8 <line:1619:5, line:1622:9> line:1620:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<4UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, false>'
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0x11ea358 prev 0x11e84b8 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0x11e9098 <line:1619:5, line:1622:9> line:1620:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<4UL, _List<unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>'
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0x11ea280 prev 0x11e9098 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0x11e9ae8 <line:1615:5, line:1617:31> line:1616:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 1
| | | | |-CXXRecordDecl 0x11ea138 prev 0x11e9ae8 <col:7, col:14> col:14 implicit struct __select
| | | | `-TypeAliasDecl 0x11ea1d8 <line:1617:9, col:24> col:15 referenced __type 'unsigned int':'unsigned int'
| | | |   `-SubstTemplateTypeParmType 0x11e9e40 'unsigned int' sugar
| | | |     |-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | | |     | `-TemplateTypeParm 0x11deab8 '_Uint'
| | | |     `-BuiltinType 0xffd2b0 'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0x11ecc88 <line:1619:5, line:1622:9> line:1620:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<2UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, true>'
| | | | |-TemplateArgument integral 2
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0x11ee4e8 prev 0x11ecc88 <col:7, col:14> col:14 implicit struct __select
| | | `-ClassTemplateSpecializationDecl 0x11ed738 <line:1615:5, line:1617:31> line:1616:14 struct __select definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument integral 2
| | |   |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |   |-TemplateArgument integral 1
| | |   |-CXXRecordDecl 0x11ee3a0 prev 0x11ed738 <col:7, col:14> col:14 implicit struct __select
| | |   `-TypeAliasDecl 0x11ee440 <line:1617:9, col:24> col:15 referenced __type 'unsigned short':'unsigned short'
| | |     `-SubstTemplateTypeParmType 0x11edae0 'unsigned short' sugar
| | |       |-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | |       | `-TemplateTypeParm 0x11deab8 '_Uint'
| | |       `-BuiltinType 0xffd290 'unsigned short'
| | |-ClassTemplatePartialSpecializationDecl 0x11e0200 <line:1615:5, line:1617:31> line:1616:14 struct __select definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0x11dfe40 <col:23> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x11dea58 '_Sz' 'std::size_t':'unsigned long'
| | | |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| | | |-TemplateArgument integral 1
| | | |-NonTypeTemplateParmDecl 0x11dea58 <line:1615:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0x11deab8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| | | |-TemplateTypeParmDecl 0x11deb38 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| | | |-CXXRecordDecl 0x11e0508 <line:1616:7, col:14> col:14 implicit struct __select
| | | `-TypeAliasDecl 0x11e05a8 <line:1617:9, col:24> col:15 __type '_Uint'
| | |   `-TemplateTypeParmType 0x11deb10 '_Uint' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0x11deab8 '_Uint'
| | `-ClassTemplatePartialSpecializationDecl 0x11e0b40 <line:1619:5, line:1622:9> line:1620:14 struct __select definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__select<_Sz, _List<_UInts...> >'
| |   |-TemplateArgument expr
| |   | `-DeclRefExpr 0x11e07b8 <col:23> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x11e0630 '_Sz' 'std::size_t':'unsigned long'
| |   |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| |   |-TemplateArgument integral 0
| |   |-NonTypeTemplateParmDecl 0x11e0630 <line:1619:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| |   |-TemplateTypeParmDecl 0x11e0690 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| |   |-TemplateTypeParmDecl 0x11e0708 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| |   `-CXXRecordDecl 0x11e1210 <line:1620:7, col:14> col:14 implicit struct __select
| |-ClassTemplatePartialSpecializationDecl 0x11e1560 <line:1626:3, line:1639:5> line:1627:11 class __make_unsigned_selector definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-private 'std::__make_unsigned_selector_base'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11e12d0 <line:1626:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11e18b8 <line:1627:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0x11e1d00 <line:1631:7, line:1632:40> line:1631:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | `-TemplateSpecializationType 0x11e1b40 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | |   |-TemplateArgument type 'unsigned char'
| | |   |-TemplateArgument type 'unsigned short'
| | |   |-TemplateArgument type 'unsigned int'
| | |   |-TemplateArgument type 'unsigned long'
| | |   |-TemplateArgument type 'unsigned long long'
| | |   `-RecordType 0x11e1b20 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |     `-ClassTemplateSpecialization 0x11e1a38 '_List'
| | |-TypeAliasDecl 0x11e75f0 <line:1634:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(_Tp), _UInts>::__type'
| | | `-DependentNameType 0x11e7580 'typename __select<sizeof(_Tp), _UInts>::__type' dependent
| | |-AccessSpecDecl 0x11e7650 <line:1636:5, col:11> col:5 public
| | `-TypeAliasDecl 0x11e7ad0 <line:1637:7, line:1638:58> line:1637:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0x11e7a60 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0x11e7b70 <line:1646:3, line:1651:5> line:1647:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0x11e7d88 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x11ec2a0 <line:1649:7, line:1650:61> line:1649:13 referenced __type 'typename __make_unsigned_selector<wchar_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0x11ec230 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0x11ec210 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |       |-TypeAlias 0x11ec190 '__type'
| |       `-ElaboratedType 0x11ec140 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x11ec120 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| |           |-Typedef 0x11ec0b0 '__type'
| |           `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| |             `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-Typedef 0x11ebfd0 '__type'
| |               `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| |                 |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                 `-BuiltinType 0xffd2b0 'unsigned int'
| |-VarDecl 0x11ea8f8 parent 0x1137590 prev 0x1138d38 <line:72:5, col:48> col:48 used value 'const bool':'const bool' constexpr
| |-ClassTemplateSpecializationDecl 0x11ec340 <line:1663:3, line:1668:5> line:1664:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0x11ec558 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x11efa70 <line:1666:7, line:1667:62> line:1666:13 referenced __type 'typename __make_unsigned_selector<char16_t, false, true>::__type':'unsigned short'
| |   `-ElaboratedType 0x11efa00 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0x11ef9e0 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| |       |-TypeAlias 0x11ef960 '__type'
| |       `-ElaboratedType 0x11ef910 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x11ef8f0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| |           |-Typedef 0x11ef880 '__type'
| |           `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| |             `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| |               |-Typedef 0x11ef7a0 '__type'
| |               `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| |                 |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                 `-BuiltinType 0xffd290 'unsigned short'
| |-ClassTemplateSpecializationDecl 0x11efb10 <line:1670:3, line:1675:5> line:1671:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char32_t'
| | |-CXXRecordDecl 0x11efd28 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x11f20f0 <line:1673:7, line:1674:62> line:1673:13 referenced __type 'typename __make_unsigned_selector<char32_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0x11f2080 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0x11f2060 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |       |-TypeAlias 0x11f1fe0 '__type'
| |       `-ElaboratedType 0x11f1f90 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x11f1f70 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |           |-Typedef 0x11f1f00 '__type'
| |           `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| |             `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-Typedef 0x11ebfd0 '__type'
| |               `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| |                 |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                 `-BuiltinType 0xffd2b0 'unsigned int'
| |-ClassTemplateDecl 0x11f2298 <line:1681:3, line:1683:68> line:1682:12 make_unsigned
| | |-TemplateTypeParmDecl 0x11f2168 <line:1681:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11f2208 <line:1682:5, line:1683:68> line:1682:12 struct make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11f24f0 <col:5, col:12> col:12 implicit struct make_unsigned
| | | `-TypedefDecl 0x11f29b0 <line:1683:7, col:62> col:62 type 'typename __make_unsigned_selector<_Tp>::__type'
| | |   `-DependentNameType 0x11f2940 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | `-ClassTemplateSpecialization 0x11f2a48 'make_unsigned'
| |-ClassTemplateSpecializationDecl 0x11f2a48 <line:1686:3, line:1687:30> col:12 struct make_unsigned
| | `-TemplateArgument type 'bool'
| |-ClassTemplateDecl 0x11f3b78 <line:1691:3, line:1693:27> line:1692:12 __make_signed
| | |-TemplateTypeParmDecl 0x11f3a50 <line:1691:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11f3ae8 <line:1692:5, line:1693:27> line:1692:12 struct __make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x11f3dd0 <col:5, col:12> col:12 implicit struct __make_signed
| | | `-TypedefDecl 0x11f3e70 <line:1693:7, col:19> col:19 __type '_Tp'
| | |   `-TemplateTypeParmType 0x11f3aa0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x11f3a50 '_Tp'
| | |-ClassTemplateSpecialization 0x11f3f08 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f4270 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f45d0 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f4930 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f4c90 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f4ff0 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f5350 '__make_signed'
| | |-ClassTemplateSpecialization 0x11f8b18 '__make_signed'
| | |-ClassTemplateSpecialization 0x11ff800 '__make_signed'
| | `-ClassTemplateSpecialization 0x1206eb0 '__make_signed'
| |-ClassTemplateSpecializationDecl 0x11f3f08 <line:1695:3, line:1697:35> line:1696:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x11f4128 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f41d0 <line:1697:7, col:27> col:27 __type 'signed char'
| |   `-BuiltinType 0xffd1d0 'signed char'
| |-ClassTemplateSpecializationDecl 0x11f4270 <line:1699:3, line:1701:35> line:1700:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0x11f4488 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f4530 <line:1701:7, col:27> col:27 __type 'signed char'
| |   `-BuiltinType 0xffd1d0 'signed char'
| |-ClassTemplateSpecializationDecl 0x11f45d0 <line:1703:3, line:1705:36> line:1704:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned short'
| | |-CXXRecordDecl 0x11f47e8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f4890 <line:1705:7, col:28> col:28 referenced __type 'short'
| |   `-BuiltinType 0xffd1f0 'short'
| |-ClassTemplateSpecializationDecl 0x11f4930 <line:1707:3, line:1709:34> line:1708:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned int'
| | |-CXXRecordDecl 0x11f4b48 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f4bf0 <line:1709:7, col:26> col:26 referenced __type 'int'
| |   `-BuiltinType 0xffd210 'int'
| |-ClassTemplateSpecializationDecl 0x11f4c90 <line:1711:3, line:1713:35> line:1712:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long'
| | |-CXXRecordDecl 0x11f4ea8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f4f50 <line:1713:7, col:27> col:27 __type 'long'
| |   `-BuiltinType 0xffd230 'long'
| |-ClassTemplateSpecializationDecl 0x11f4ff0 <line:1715:3, line:1717:40> line:1716:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long long'
| | |-CXXRecordDecl 0x11f5208 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f52b0 <line:1717:7, col:32> col:32 __type 'long long'
| |   `-BuiltinType 0xffd250 'long long'
| |-ClassTemplateSpecializationDecl 0x11f5350 <line:1720:3, line:1722:46> line:1721:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned __int128'
| | |-CXXRecordDecl 0x11f5568 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x11f5610 <line:1722:7, col:38> col:38 __type '__int128'
| |   `-BuiltinType 0xffd6b0 '__int128'
| |-ClassTemplateDecl 0x11f6200 <line:1741:3, line:1744:11> col:11 __make_signed_selector
| | |-TemplateTypeParmDecl 0x11f5680 <line:1741:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x11f5808 <line:1742:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11f5868 <col:19, col:37> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11f57c0 <col:19, col:37> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x11f5988 <line:1743:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x11f59e8 <col:20, col:34> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x11f5940 <col:20, col:34> '<dependent type>' lvalue
| | |-CXXRecordDecl 0x11f6170 <line:1744:5, col:11> col:11 class __make_signed_selector
| | |-ClassTemplateSpecializationDecl 0x11f8e38 <line:1758:3, line:1765:5> line:1759:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x11f91c0 prev 0x11f8e38 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypedefDecl 0x11fbbc0 <line:1761:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<wchar_t>::__type':'unsigned int'
| | | | `-ElaboratedType 0x11fbb70 'typename __make_unsigned_selector<wchar_t>::__type' sugar
| | | |   `-TypedefType 0x11fbb50 'std::__make_unsigned_selector<wchar_t, true, false>::__type' sugar
| | | |     |-TypeAlias 0x11fbad0 '__type'
| | | |     `-ElaboratedType 0x11fba80 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0x11ec120 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | | |         |-Typedef 0x11ec0b0 '__type'
| | | |         `-ElaboratedType 0x11ec060 'typename __match::__type' sugar
| | | |           `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |             |-Typedef 0x11ebfd0 '__type'
| | | |             `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| | | |               |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | | |               | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | | |               `-BuiltinType 0xffd2b0 'unsigned int'
| | | |-AccessSpecDecl 0x11fbc18 <line:1763:5, col:11> col:5 public
| | | `-TypedefDecl 0x11ff660 <line:1764:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| | |   `-ElaboratedType 0x11ff610 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0x11ff5f0 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| | |       |-TypeAlias 0x11ff570 '__type'
| | |       `-ElaboratedType 0x11ff520 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |         `-TypedefType 0x11ff500 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| | |           |-Typedef 0x11ff490 '__type'
| | |           `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| | |             `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| | |               |-Typedef 0x11ff3b0 '__type'
| | |               `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| | |                 |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |                 | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |                 `-BuiltinType 0xffd210 'int'
| | |-ClassTemplateSpecializationDecl 0x11fdc40 <line:1746:3, line:1755:5> line:1747:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x11fdf70 prev 0x11fdc40 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x11fe210 <line:1749:7, line:1750:59> line:1749:13 __signed_type 'typename __make_signed<typename remove_cv<unsigned int>::type>::__type':'int'
| | | | `-ElaboratedType 0x11fe1c0 'typename __make_signed<typename remove_cv<unsigned int>::type>::__type' sugar
| | | |   `-TypedefType 0x11fe1a0 'std::__make_signed<unsigned int>::__type' sugar
| | | |     |-Typedef 0x11f4bf0 '__type'
| | | |     `-BuiltinType 0xffd210 'int'
| | | |-AccessSpecDecl 0x11fe270 <line:1752:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x11ff570 <line:1753:7, line:1754:56> line:1753:13 referenced __type 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type':'int'
| | |   `-ElaboratedType 0x11ff520 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |     `-TypedefType 0x11ff500 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| | |       |-Typedef 0x11ff490 '__type'
| | |       `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| | |         `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| | |           |-Typedef 0x11ff3b0 '__type'
| | |           `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd210 'int'
| | |-ClassTemplateSpecializationDecl 0x1200a00 <line:1758:3, line:1765:5> line:1759:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0x1200d80 prev 0x1200a00 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypedefDecl 0x1203880 <line:1761:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<char16_t>::__type':'unsigned short'
| | | | `-ElaboratedType 0x1203830 'typename __make_unsigned_selector<char16_t>::__type' sugar
| | | |   `-TypedefType 0x1203810 'std::__make_unsigned_selector<char16_t, true, false>::__type' sugar
| | | |     |-TypeAlias 0x1203790 '__type'
| | | |     `-ElaboratedType 0x1203740 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0x11ef8f0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | | |         |-Typedef 0x11ef880 '__type'
| | | |         `-ElaboratedType 0x11ef830 'typename __match::__type' sugar
| | | |           `-TypedefType 0x11ef810 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |             |-Typedef 0x11ef7a0 '__type'
| | | |             `-SubstTemplateTypeParmType 0x11ef580 'unsigned short' sugar
| | | |               |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | | |               | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | | |               `-BuiltinType 0xffd290 'unsigned short'
| | | |-AccessSpecDecl 0x12038d8 <line:1763:5, col:11> col:5 public
| | | `-TypedefDecl 0x1206d10 <line:1764:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'short'
| | |   `-ElaboratedType 0x1206cc0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0x1206ca0 'std::__make_signed_selector<unsigned short, true, false>::__type' sugar
| | |       |-TypeAlias 0x1206c20 '__type'
| | |       `-ElaboratedType 0x1206bd0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |         `-TypedefType 0x1206bb0 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| | |           |-Typedef 0x1206b40 '__type'
| | |           `-ElaboratedType 0x1206af0 'typename __match::__type' sugar
| | |             `-TypedefType 0x1206ad0 'std::__cv_selector<short, false, false>::__type' sugar
| | |               |-Typedef 0x1206a60 '__type'
| | |               `-SubstTemplateTypeParmType 0x1206840 'short' sugar
| | |                 |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |                 | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |                 `-BuiltinType 0xffd1f0 'short'
| | |-ClassTemplateSpecializationDecl 0x1204e60 <line:1746:3, line:1755:5> line:1747:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x1205190 prev 0x1204e60 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x12058c0 <line:1749:7, line:1750:59> line:1749:13 __signed_type 'typename __make_signed<typename remove_cv<unsigned short>::type>::__type':'short'
| | | | `-ElaboratedType 0x1205870 'typename __make_signed<typename remove_cv<unsigned short>::type>::__type' sugar
| | | |   `-TypedefType 0x12053c0 'std::__make_signed<unsigned short>::__type' sugar
| | | |     |-Typedef 0x11f4890 '__type'
| | | |     `-BuiltinType 0xffd1f0 'short'
| | | |-AccessSpecDecl 0x1205920 <line:1752:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x1206c20 <line:1753:7, line:1754:56> line:1753:13 referenced __type 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type':'short'
| | |   `-ElaboratedType 0x1206bd0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |     `-TypedefType 0x1206bb0 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| | |       |-Typedef 0x1206b40 '__type'
| | |       `-ElaboratedType 0x1206af0 'typename __match::__type' sugar
| | |         `-TypedefType 0x1206ad0 'std::__cv_selector<short, false, false>::__type' sugar
| | |           |-Typedef 0x1206a60 '__type'
| | |           `-SubstTemplateTypeParmType 0x1206840 'short' sugar
| | |             |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| | |             `-BuiltinType 0xffd1f0 'short'
| | `-ClassTemplateSpecializationDecl 0x12071c8 <line:1758:3, line:1765:5> line:1759:11 class __make_signed_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 1
| |   |-CXXRecordDecl 0x1207550 prev 0x12071c8 <col:5, col:11> col:11 implicit class __make_signed_selector
| |   |-TypedefDecl 0x120a8d0 <line:1761:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<char32_t>::__type':'unsigned int'
| |   | `-ElaboratedType 0x120a880 'typename __make_unsigned_selector<char32_t>::__type' sugar
| |   |   `-TypedefType 0x120a860 'std::__make_unsigned_selector<char32_t, true, false>::__type' sugar
| |   |     |-TypeAlias 0x120a7e0 '__type'
| |   |     `-ElaboratedType 0x120a790 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |       `-TypedefType 0x11f1f70 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |   |         |-Typedef 0x11f1f00 '__type'
| |   |         `-ElaboratedType 0x11f1eb0 'typename __match::__type' sugar
| |   |           `-TypedefType 0x11ec040 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |             |-Typedef 0x11ebfd0 '__type'
| |   |             `-SubstTemplateTypeParmType 0x11ebdb0 'unsigned int' sugar
| |   |               |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |   |               | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |   |               `-BuiltinType 0xffd2b0 'unsigned int'
| |   |-AccessSpecDecl 0x120a928 <line:1763:5, col:11> col:5 public
| |   `-TypedefDecl 0x120b200 <line:1764:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| |     `-ElaboratedType 0x120b1b0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |       `-TypedefType 0x11ff5f0 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |         |-TypeAlias 0x11ff570 '__type'
| |         `-ElaboratedType 0x11ff520 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |           `-TypedefType 0x11ff500 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |             |-Typedef 0x11ff490 '__type'
| |             `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| |               `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| |                 |-Typedef 0x11ff3b0 '__type'
| |                 `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| |                   |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                   | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                   `-BuiltinType 0xffd210 'int'
| |-ClassTemplatePartialSpecializationDecl 0x11f6720 <line:1746:3, line:1755:5> line:1747:11 class __make_signed_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x11f6488 <line:1746:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11f6a38 <line:1747:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypeAliasDecl 0x11f6d70 <line:1749:7, line:1750:59> line:1749:13 referenced __signed_type 'typename __make_signed<typename remove_cv<_Tp>::type>::__type'
| | | `-DependentNameType 0x11f6d00 'typename __make_signed<typename remove_cv<_Tp>::type>::__type' dependent
| | |-AccessSpecDecl 0x11f6dd0 <line:1752:5, col:11> col:5 public
| | `-TypeAliasDecl 0x11f7250 <line:1753:7, line:1754:56> line:1753:13 __type 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type'
| |   `-DependentNameType 0x11f71e0 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x11f7560 <line:1758:3, line:1765:5> line:1759:11 class __make_signed_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x11f72c8 <line:1758:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x11f7878 <line:1759:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypedefDecl 0x11f7c20 <line:1761:7, col:62> col:62 referenced __unsigned_type 'typename __make_unsigned_selector<_Tp>::__type'
| | | `-DependentNameType 0x11f7bb0 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | |-AccessSpecDecl 0x11f7c78 <line:1763:5, col:11> col:5 public
| | `-TypedefDecl 0x11f8a80 <line:1764:7, col:72> col:72 __type 'typename __make_signed_selector<__unsigned_type>::__type'
| |   `-DependentNameType 0x11f8100 'typename __make_signed_selector<__unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0x11f8b18 <line:1772:3, line:1777:5> line:1773:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0x11f8d38 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x11ff760 <line:1775:7, line:1776:59> line:1775:13 __type 'typename __make_signed_selector<wchar_t, false, true>::__type':'int'
| |   `-ElaboratedType 0x11ff6f0 'typename __make_signed_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0x11ff6d0 'std::__make_signed_selector<wchar_t, false, true>::__type' sugar
| |       |-Typedef 0x11ff660 '__type'
| |       `-ElaboratedType 0x11ff610 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x11ff5f0 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |           |-TypeAlias 0x11ff570 '__type'
| |           `-ElaboratedType 0x11ff520 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0x11ff500 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |               |-Typedef 0x11ff490 '__type'
| |               `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| |                 `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-Typedef 0x11ff3b0 '__type'
| |                   `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| |                     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                     `-BuiltinType 0xffd210 'int'
| |-VarDecl 0x11fa298 parent 0x11372d8 prev 0x113fd68 <line:72:5, col:48> col:48 used value 'const bool':'const bool' constexpr
| |-ClassTemplateSpecializationDecl 0x11ff800 <line:1789:3, line:1794:5> line:1790:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0x11ffa18 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x1206e10 <line:1792:7, line:1793:60> line:1792:13 __type 'typename __make_signed_selector<char16_t, false, true>::__type':'short'
| |   `-ElaboratedType 0x1206da0 'typename __make_signed_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0x1206d80 'std::__make_signed_selector<char16_t, false, true>::__type' sugar
| |       |-Typedef 0x1206d10 '__type'
| |       `-ElaboratedType 0x1206cc0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x1206ca0 'std::__make_signed_selector<unsigned short, true, false>::__type' sugar
| |           |-TypeAlias 0x1206c20 '__type'
| |           `-ElaboratedType 0x1206bd0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| |             `-TypedefType 0x1206bb0 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| |               |-Typedef 0x1206b40 '__type'
| |               `-ElaboratedType 0x1206af0 'typename __match::__type' sugar
| |                 `-TypedefType 0x1206ad0 'std::__cv_selector<short, false, false>::__type' sugar
| |                   |-Typedef 0x1206a60 '__type'
| |                   `-SubstTemplateTypeParmType 0x1206840 'short' sugar
| |                     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                     `-BuiltinType 0xffd1f0 'short'
| |-ClassTemplateSpecializationDecl 0x1206eb0 <line:1796:3, line:1801:5> line:1797:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char32_t'
| | |-CXXRecordDecl 0x12070c8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x120b300 <line:1799:7, line:1800:60> line:1799:13 __type 'typename __make_signed_selector<char32_t, false, true>::__type':'int'
| |   `-ElaboratedType 0x120b290 'typename __make_signed_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0x120b270 'std::__make_signed_selector<char32_t, false, true>::__type' sugar
| |       |-Typedef 0x120b200 '__type'
| |       `-ElaboratedType 0x120b1b0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x11ff5f0 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |           |-TypeAlias 0x11ff570 '__type'
| |           `-ElaboratedType 0x11ff520 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0x11ff500 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |               |-Typedef 0x11ff490 '__type'
| |               `-ElaboratedType 0x11ff440 'typename __match::__type' sugar
| |                 `-TypedefType 0x11ff420 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-Typedef 0x11ff3b0 '__type'
| |                   `-SubstTemplateTypeParmType 0x11ff190 'int' sugar
| |                     |-TemplateTypeParmType 0x11d66f0 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0x11d6698 '_Unqualified'
| |                     `-BuiltinType 0xffd210 'int'
| |-ClassTemplateDecl 0x120b4a8 <line:1807:3, line:1809:66> line:1808:12 make_signed
| | |-TemplateTypeParmDecl 0x120b378 <line:1807:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x120b418 <line:1808:5, line:1809:66> line:1808:12 struct make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x120b700 <col:5, col:12> col:12 implicit struct make_signed
| | | `-TypedefDecl 0x120bb90 <line:1809:7, col:60> col:60 type 'typename __make_signed_selector<_Tp>::__type'
| | |   `-DependentNameType 0x120bb20 'typename __make_signed_selector<_Tp>::__type' dependent
| | `-ClassTemplateSpecialization 0x120bc28 'make_signed'
| |-ClassTemplateSpecializationDecl 0x120bc28 <line:1812:3, line:1813:28> col:12 struct make_signed
| | `-TemplateArgument type 'bool'
| |-TypeAliasTemplateDecl 0x120c040 <line:1817:3, line:1818:54> col:5 make_signed_t
| | |-TemplateTypeParmDecl 0x120bde0 <line:1817:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x120bfe0 <line:1818:5, col:54> col:11 make_signed_t 'typename make_signed<_Tp>::type'
| |   `-DependentNameType 0x120bf70 'typename make_signed<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x120c300 <line:1821:3, line:1822:58> col:5 make_unsigned_t
| | |-TemplateTypeParmDecl 0x120c098 <line:1821:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x120c2a0 <line:1822:5, col:58> col:11 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   `-DependentNameType 0x120c230 'typename make_unsigned<_Tp>::type' dependent
| |-ClassTemplateDecl 0x120c488 <line:1828:3, line:1830:29> line:1829:12 remove_extent
| | |-TemplateTypeParmDecl 0x120c358 <line:1828:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x120c3f8 <line:1829:5, line:1830:29> line:1829:12 struct remove_extent definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x120c6e0 <col:5, col:12> col:12 implicit struct remove_extent
| |   `-TypedefDecl 0x120c780 <line:1830:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0x120c3b0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x120c358 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x120ca80 <line:1832:3, line:1834:29> line:1833:12 struct remove_extent definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0x120c7f0 <line:1832:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x120c8b8 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0x120ccb8 <line:1833:5, col:12> col:12 implicit struct remove_extent
| | `-TypedefDecl 0x120cd58 <line:1834:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0x120c840 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x120c7f0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x120df60 <line:1836:3, line:1838:29> line:1837:12 struct remove_extent definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0x120cdc8 <line:1836:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x120e198 <line:1837:5, col:12> col:12 implicit struct remove_extent
| | `-TypedefDecl 0x120e238 <line:1838:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0x120ce20 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x120cdc8 '_Tp'
| |-ClassTemplateDecl 0x120e3d8 prev 0x11824e8 <line:1841:3, line:1843:29> line:1842:12 remove_all_extents
| | |-TemplateTypeParmDecl 0x120e2a8 <line:1841:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x120e348 prev 0x1182458 <line:1842:5, line:1843:29> line:1842:12 struct remove_all_extents definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x120e498 <col:5, col:12> col:12 implicit struct remove_all_extents
| |   `-TypedefDecl 0x120e538 <line:1843:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0x120e300 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x120e2a8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x120e840 <line:1845:3, line:1847:64> line:1846:12 struct remove_all_extents definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0x120e5a8 <line:1845:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x120e678 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0x120ea78 <line:1846:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypedefDecl 0x120ec20 <line:1847:7, col:58> col:58 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x120ebb0 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x120ee40 <line:1849:3, line:1851:64> line:1850:12 struct remove_all_extents definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0x120ec90 <line:1849:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x120f078 <line:1850:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypedefDecl 0x120f220 <line:1851:7, col:58> col:58 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x120f1b0 'typename remove_all_extents<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x120f4f0 <line:1855:3, line:1856:58> col:5 remove_extent_t
| | |-TemplateTypeParmDecl 0x120f290 <line:1855:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x120f490 <line:1856:5, col:58> col:11 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   `-DependentNameType 0x120f420 'typename remove_extent<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x120f760 <line:1859:3, line:1860:68> col:5 remove_all_extents_t
| | |-TemplateTypeParmDecl 0x120f548 <line:1859:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x120f700 <line:1860:5, col:68> col:11 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x120f690 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplateDecl 0x120f970 <line:1865:3, line:1867:29> line:1866:12 __remove_pointer_helper
| | |-TemplateTypeParmDecl 0x120f7b8 <line:1865:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x120f838 <col:26> col:34 typename depth 0 index 1
| | `-CXXRecordDecl 0x120f8e0 <line:1866:5, line:1867:29> line:1866:12 struct __remove_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x120fc00 <col:5, col:12> col:12 implicit struct __remove_pointer_helper
| |   `-TypedefDecl 0x120fca0 <line:1867:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0x120f810 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x120f7b8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x1210638 <line:1869:3, line:1871:29> line:1870:12 struct __remove_pointer_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1 *'
| | |-TemplateTypeParmDecl 0x120fd10 <line:1869:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x120fd88 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x12108b8 <line:1870:5, col:12> col:12 implicit struct __remove_pointer_helper
| | `-TypedefDecl 0x1210958 <line:1871:7, col:23> col:23 type '_Up'
| |   `-TemplateTypeParmType 0x120fde0 '_Up' dependent depth 0 index 1
| |     `-TemplateTypeParm 0x120fd88 '_Up'
| |-ClassTemplateDecl 0x1210af8 <line:1874:3, line:1877:7> line:1875:12 remove_pointer
| | |-TemplateTypeParmDecl 0x12109c8 <line:1874:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1210a68 <line:1875:5, line:1877:7> line:1875:12 struct remove_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>'
| |   `-CXXRecordDecl 0x1210fa0 <col:5, col:12> col:12 implicit struct remove_pointer
| |-ClassTemplateDecl 0x1211528 <line:1880:3, line:1883:29> line:1882:12 __add_pointer_helper
| | |-TemplateTypeParmDecl 0x1211048 <line:1880:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x12113f8 <col:26, line:1881:26> line:1880:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x1211458 <col:33, line:1881:26> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x12113b0 <line:1880:33, line:1881:26> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x1211498 <line:1882:5, line:1883:29> line:1882:12 struct __add_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x12117e0 <col:5, col:12> col:12 implicit struct __add_pointer_helper
| |   `-TypedefDecl 0x1211880 <line:1883:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0x12110a0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x1211048 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x1211af8 <line:1885:3, line:1887:63> line:1886:12 struct __add_pointer_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x12118f0 <line:1885:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1211d98 <line:1886:5, col:12> col:12 implicit struct __add_pointer_helper
| | `-TypedefDecl 0x1211fa0 <line:1887:7, col:57> col:57 type 'typename remove_reference<_Tp>::type *'
| |   `-PointerType 0x1211f50 'typename remove_reference<_Tp>::type *' dependent
| |     `-DependentNameType 0x1211ed0 'typename remove_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0x1212138 <line:1889:3, line:1892:7> line:1890:12 add_pointer
| | |-TemplateTypeParmDecl 0x1212010 <line:1889:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x12120a8 <line:1890:5, line:1892:7> line:1890:12 struct add_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_pointer_helper<_Tp>'
| |   `-CXXRecordDecl 0x12145a0 <col:5, col:12> col:12 implicit struct add_pointer
| |-TypeAliasTemplateDecl 0x12148b0 <line:1896:3, line:1897:60> col:5 remove_pointer_t
| | |-TemplateTypeParmDecl 0x1214648 <line:1896:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x1214850 <line:1897:5, col:60> col:11 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   `-DependentNameType 0x12147e0 'typename remove_pointer<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x1214b70 <line:1900:3, line:1901:54> col:5 add_pointer_t
| | |-TemplateTypeParmDecl 0x1214908 <line:1900:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x1214b10 <line:1901:5, col:54> col:11 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   `-DependentNameType 0x1214aa0 'typename add_pointer<_Tp>::type' dependent
| |-ClassTemplateDecl 0x1214d28 <line:1904:3, line:1912:5> line:1905:12 __aligned_storage_msa
| | |-NonTypeTemplateParmDecl 0x1214c18 <line:1904:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | `-CXXRecordDecl 0x1214c98 <line:1905:5, line:1912:5> line:1905:12 struct __aligned_storage_msa definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1214fa0 <col:5, col:12> col:12 implicit struct __aligned_storage_msa
| |   `-CXXRecordDecl 0x1215030 <line:1907:7, line:1911:7> line:1907:13 union __type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
| |     | |-DefaultConstructor exists trivial needs_implicit
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial needs_implicit
| |     |-CXXRecordDecl 0x1215148 <col:7, col:13> col:13 implicit union __type
| |     |-FieldDecl 0x1215268 <line:1909:2, col:27> col:16 __data 'unsigned char [_Len]'
| |     |-CXXRecordDecl 0x12152b8 <line:1910:2, col:40> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial needs_implicit
| |     | `-AlignedAttr 0x12153d8 <col:24> aligned
| |     |   `-<<<NULL>>>
| |     `-FieldDecl 0x12154a8 <col:2, col:42> col:42 __align 'struct (anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1910:2)':'std::__aligned_storage_msa::__type::(anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1910:2)'
| |-ClassTemplateDecl 0x12158e8 <line:1924:3, line:1933:5> line:1926:12 aligned_storage
| | |-NonTypeTemplateParmDecl 0x1215590 <line:1924:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0x12157d0 <col:30, line:1925:61> line:1924:42 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument expr
| | |   `-UnaryExprOrTypeTraitExpr 0x1215790 <line:1925:5, col:61> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-CXXRecordDecl 0x1215858 <line:1926:5, line:1933:5> line:1926:12 struct aligned_storage definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1215bc0 <col:5, col:12> col:12 implicit struct aligned_storage
| |   `-CXXRecordDecl 0x1215c50 <line:1928:7, line:1932:7> line:1928:13 union type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
| |     | |-DefaultConstructor exists trivial needs_implicit
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial needs_implicit
| |     |-CXXRecordDecl 0x1215d68 <col:7, col:13> col:13 implicit union type
| |     |-FieldDecl 0x1215e88 <line:1930:2, col:27> col:16 __data 'unsigned char [_Len]'
| |     |-CXXRecordDecl 0x1215f18 <line:1931:2, col:50> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial needs_implicit
| |     | `-AlignedAttr 0x1216038 <col:24, col:44> aligned
| |     |   `-ParenExpr 0x1215ef8 <col:36, col:43> 'std::size_t':'unsigned long'
| |     |     `-DeclRefExpr 0x1215ed8 <col:37> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x12157d0 '_Align' 'std::size_t':'unsigned long'
| |     `-FieldDecl 0x1216108 <col:2, col:52> col:52 __align 'struct (anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1931:2)':'std::aligned_storage::type::(anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1931:2)'
| |-ClassTemplateDecl 0x12162c8 <line:1935:3, line:1940:5> line:1936:12 __strictest_alignment
| | |-TemplateTypeParmDecl 0x12161a0 <line:1935:13, col:25> col:25 typename depth 0 index 0 ... _Types
| | `-CXXRecordDecl 0x1216238 <line:1936:5, line:1940:5> line:1936:12 struct __strictest_alignment definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1219180 <col:5, col:12> col:12 implicit struct __strictest_alignment
| |   |-VarDecl 0x1219220 <line:1938:7, col:42> col:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
| |   | `-ImplicitCastExpr 0x12192a8 <col:42> 'const std::size_t':'const unsigned long' <IntegralCast>
| |   |   `-IntegerLiteral 0x1219288 <col:42> 'int' 0
| |   `-VarDecl 0x1219328 <line:1939:7, col:37> col:27 _S_size 'const std::size_t':'const unsigned long' static cinit
| |     `-ImplicitCastExpr 0x12193b0 <col:37> 'const std::size_t':'const unsigned long' <IntegralCast>
| |       `-IntegerLiteral 0x1219390 <col:37> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x1219710 <line:1942:3, line:1951:5> line:1943:12 struct __strictest_alignment definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |-TemplateTypeParmDecl 0x1219438 <line:1942:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x12194b8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Types
| | |-CXXRecordDecl 0x12199d8 <line:1943:5, col:12> col:12 implicit struct __strictest_alignment
| | |-VarDecl 0x1219a78 <line:1945:7, line:1947:53> line:1945:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
| | | `-ConditionalOperator 0x1219e18 <line:1946:9, line:1947:53> '<dependent type>'
| | |   |-BinaryOperator 0x1219c88 <line:1946:9, col:58> '<dependent type>' '>'
| | |   | |-UnaryExprOrTypeTraitExpr 0x1219af0 <col:9, col:20> 'unsigned long' alignof '_Tp'
| | |   | `-DependentScopeDeclRefExpr 0x1219c50 <col:24, col:58> '<dependent type>' lvalue
| | |   |-UnaryExprOrTypeTraitExpr 0x1219cb8 <line:1947:4, col:15> 'unsigned long' alignof '_Tp'
| | |   `-DependentScopeDeclRefExpr 0x1219de0 <col:19, col:53> '<dependent type>' lvalue
| | `-VarDecl 0x1219e58 <line:1948:7, line:1950:52> line:1948:27 _S_size 'const std::size_t':'const unsigned long' static cinit
| |   `-ConditionalOperator 0x121a1b8 <line:1949:9, line:1950:52> '<dependent type>'
| |     |-BinaryOperator 0x121a028 <line:1949:9, col:57> '<dependent type>' '>'
| |     | |-UnaryExprOrTypeTraitExpr 0x1219ed0 <col:9, col:19> 'unsigned long' sizeof '_Tp'
| |     | `-DependentScopeDeclRefExpr 0x1219ff0 <col:23, col:57> '<dependent type>' lvalue
| |     |-UnaryExprOrTypeTraitExpr 0x121a058 <line:1950:4, col:14> 'unsigned long' sizeof '_Tp'
| |     `-DependentScopeDeclRefExpr 0x121a180 <col:18, col:52> '<dependent type>' lvalue
| |-ClassTemplateDecl 0x121a3a0 <line:1963:3, line:1977:5> line:1964:12 aligned_union
| | |-NonTypeTemplateParmDecl 0x121a210 <line:1963:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0x121a270 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-CXXRecordDecl 0x121a310 <line:1964:5, line:1977:5> line:1964:12 struct aligned_union definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x121a6b0 <col:5, col:12> col:12 implicit struct aligned_union
| |   |-AccessSpecDecl 0x121a740 <line:1966:5, col:12> col:5 private
| |   |-StaticAssertDecl 0x121a8a0 <line:1967:7, col:76> col:7
| |   | |-BinaryOperator 0x121a7c8 <col:21, col:42> 'bool' '!='
| |   | | |-SizeOfPackExpr 0x121a768 <col:21, col:37> 'unsigned long' 0x121a270 _Types
| |   | | `-ImplicitCastExpr 0x121a7b0 <col:42> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x121a790 <col:42> 'int' 0
| |   | `-StringLiteral 0x121a868 <col:45> 'const char [30]' lvalue "At least one type is required"
| |   |-TypeAliasDecl 0x121a9d0 <line:1969:7, col:58> col:13 referenced __strictest '__strictest_alignment<_Types...>'
| |   | `-TemplateSpecializationType 0x121a930 '__strictest_alignment<_Types...>' dependent __strictest_alignment
| |   |   `-TemplateArgument type '_Types...'
| |   |-VarDecl 0x121aa40 <line:1970:7, line:1971:24> line:1970:27 referenced _S_len 'const std::size_t':'const unsigned long' static cinit
| |   | `-ConditionalOperator 0x121ac28 <col:36, line:1971:24> '<dependent type>'
| |   |   |-BinaryOperator 0x121ab78 <line:1970:36, col:56> '<dependent type>' '>'
| |   |   | |-DeclRefExpr 0x121aaa8 <col:36> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x121a210 '_Len' 'std::size_t':'unsigned long'
| |   |   | `-DependentScopeDeclRefExpr 0x121ab40 <col:43, col:56> '<dependent type>' lvalue
| |   |   |-DeclRefExpr 0x121ab98 <line:1971:4> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x121a210 '_Len' 'std::size_t':'unsigned long'
| |   |   `-DependentScopeDeclRefExpr 0x121abf0 <col:11, col:24> '<dependent type>' lvalue
| |   |-AccessSpecDecl 0x121ac58 <line:1972:5, col:11> col:5 public
| |   |-VarDecl 0x121ac90 <line:1974:7, col:58> col:27 referenced alignment_value 'const std::size_t':'const unsigned long' static cinit
| |   | `-DependentScopeDeclRefExpr 0x121ad30 <col:45, col:58> '<dependent type>' lvalue
| |   `-TypedefDecl 0x121c560 <line:1976:7, col:71> col:71 type 'typename aligned_storage<_S_len, alignment_value>::type'
| |     `-DependentNameType 0x121c4f0 'typename aligned_storage<_S_len, alignment_value>::type' dependent
| |-VarDecl 0x121c978 parent 0x121a310 prev 0x121ac90 <line:1979:3, line:1980:50> col:50 alignment_value 'const std::size_t':'const unsigned long'
| |-ClassTemplateDecl 0x121ce70 <line:1984:3, line:1987:12> col:12 __decay_selector
| | |-TemplateTypeParmDecl 0x121ca28 <line:1984:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-NonTypeTemplateParmDecl 0x121cbb8 <line:1985:5, col:36> col:10 'bool' depth 0 index 1 _IsArray
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x121cc18 <col:21, col:36> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x121cb70 <col:21, col:36> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0x121cd38 <line:1986:5, col:42> col:10 'bool' depth 0 index 2 _IsFunction
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x121cd98 <col:24, col:42> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x121ccf0 <col:24, col:42> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x121cde0 <line:1987:5, col:12> col:12 struct __decay_selector
| |-ClassTemplatePartialSpecializationDecl 0x121d390 <line:1990:3, line:1992:53> line:1991:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x121d0f8 <line:1990:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0x121d6a8 <line:1991:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0x121d850 <line:1992:7, col:45> col:45 __type 'typename remove_cv<_Up>::type'
| |   `-DependentNameType 0x121d7e0 'typename remove_cv<_Up>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x121db50 <line:1994:3, line:1996:58> line:1995:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x121d8c0 <line:1994:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0x121de68 <line:1995:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0x121e070 <line:1996:7, col:50> col:50 __type 'typename remove_extent<_Up>::type *'
| |   `-PointerType 0x121e020 'typename remove_extent<_Up>::type *' dependent
| |     `-DependentNameType 0x121dfa0 'typename remove_extent<_Up>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x121e370 <line:1998:3, line:2000:55> line:1999:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0x121e0e0 <line:1998:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0x121eb98 <line:1999:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0x121ed40 <line:2000:7, col:47> col:47 __type 'typename add_pointer<_Up>::type'
| |   `-DependentNameType 0x121ecd0 'typename add_pointer<_Up>::type' dependent
| |-ClassTemplateDecl 0x121eed8 <line:2003:3, line:2010:5> line:2004:11 decay
| | |-TemplateTypeParmDecl 0x121edb0 <line:2003:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x121ee48 <line:2004:5, line:2010:5> line:2004:11 class decay definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x121f130 <col:5, col:11> col:11 implicit class decay
| |   |-TypedefDecl 0x121f2d0 <line:2006:7, col:52> col:52 referenced __remove_type 'typename remove_reference<_Tp>::type'
| |   | `-DependentNameType 0x121f260 'typename remove_reference<_Tp>::type' dependent
| |   |-AccessSpecDecl 0x121f328 <line:2008:5, col:11> col:5 public
| |   `-TypedefDecl 0x121f820 <line:2009:7, col:64> col:64 type 'typename __decay_selector<__remove_type>::__type'
| |     `-DependentNameType 0x121f7b0 'typename __decay_selector<__remove_type>::__type' dependent
| |-ClassTemplateDecl 0x121f9b8 <line:2012:3, line:2013:11> col:11 reference_wrapper
| | |-TemplateTypeParmDecl 0x121f890 <line:2012:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x121f928 <line:2013:5, col:11> col:11 class reference_wrapper
| |   `-PointerAttr 0x121fba8 <<invalid sloc>> Implicit
| |-ClassTemplateDecl 0x121fd38 <line:2016:3, line:2020:5> line:2017:12 __strip_reference_wrapper
| | |-TemplateTypeParmDecl 0x121fc08 <line:2016:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x121fca8 <line:2017:5, line:2020:5> line:2017:12 struct __strip_reference_wrapper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x121ff90 <col:5, col:12> col:12 implicit struct __strip_reference_wrapper
| |   `-TypedefDecl 0x1220030 <line:2019:7, col:19> col:19 __type '_Tp'
| |     `-TemplateTypeParmType 0x121fc60 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x121fc08 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x12202b0 <line:2022:3, line:2026:5> line:2023:12 struct __strip_reference_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| | |-TemplateTypeParmDecl 0x12200a0 <line:2022:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1220508 <line:2023:5, col:12> col:12 implicit struct __strip_reference_wrapper
| | `-TypedefDecl 0x12205d8 <line:2025:7, col:20> col:20 __type '_Tp &'
| |   `-LValueReferenceType 0x12205a0 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x12200f0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x12200a0 '_Tp'
| |-ClassTemplateDecl 0x1220778 <line:2028:3, line:2033:5> line:2029:12 __decay_and_strip
| | |-TemplateTypeParmDecl 0x1220648 <line:2028:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x12206e8 <line:2029:5, line:2033:5> line:2029:12 struct __decay_and_strip definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1222038 <col:5, col:12> col:12 implicit struct __decay_and_strip
| |   `-TypedefDecl 0x12223c0 <line:2031:7, line:2032:37> col:37 __type 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type'
| |     `-DependentNameType 0x1222350 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type' dependent
| |-ClassTemplateDecl 0x12225e0 <line:2038:3, line:2040:7> line:2039:12 enable_if
| | |-NonTypeTemplateParmDecl 0x1222440 <line:2038:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0x12224b0 <col:18, col:33> col:27 typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | |-CXXRecordDecl 0x1222550 <line:2039:5, line:2040:7> line:2039:12 struct enable_if definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-CXXRecordDecl 0x1222890 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0x1816e40 <line:2038:3, line:2040:7> line:2039:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'void'
| | | `-CXXRecordDecl 0x1817090 prev 0x1816e40 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0x182f720 <line:2038:3, line:2040:7> line:2039:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::error_code &'
| | | `-CXXRecordDecl 0x182f9d8 prev 0x182f720 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0x184e0d0 <line:2043:3, line:2045:25> line:2044:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x184e390 prev 0x184e0d0 <col:5, col:12> col:12 implicit struct enable_if
| | | `-TypedefDecl 0x184e430 <line:2045:7, col:19> col:19 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0x184e2c0 'void' sugar
| | |     |-TemplateTypeParmType 0x1222990 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0x1222938 '_Tp'
| | |     `-BuiltinType 0xffd170 'void'
| | |-ClassTemplateSpecializationDecl 0x1a3e680 <line:2038:3, line:2040:7> line:2039:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::basic_istream<char> &'
| | | `-CXXRecordDecl 0x1a3e900 prev 0x1a3e680 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0x1a4f660 <line:2038:3, line:2040:7> line:2039:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::basic_istream<wchar_t> &'
| | | `-CXXRecordDecl 0x1a4f8e0 prev 0x1a4f660 <col:5, col:12> col:12 implicit struct enable_if
| | `-ClassTemplateSpecializationDecl 0x1a5e880 <line:2038:3, line:2040:7> line:2039:12 struct enable_if definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument type 'std::basic_ostream<char> &'
| |   `-CXXRecordDecl 0x1a5eb00 prev 0x1a5e880 <col:5, col:12> col:12 implicit struct enable_if
| |-ClassTemplatePartialSpecializationDecl 0x1222b48 <line:2043:3, line:2045:25> line:2044:12 struct enable_if definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x1222938 <line:2043:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1222de8 <line:2044:5, col:12> col:12 implicit struct enable_if
| | `-TypedefDecl 0x1222e88 <line:2045:7, col:19> col:19 type '_Tp'
| |   `-TemplateTypeParmType 0x1222990 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x1222938 '_Tp'
| |-TypeAliasTemplateDecl 0x1223360 <line:2047:3, line:2048:67> col:5 _Require
| | |-TemplateTypeParmDecl 0x1222ef8 <line:2047:12, col:24> col:24 referenced typename depth 0 index 0 ... _Cond
| | `-TypeAliasDecl 0x1223300 <line:2048:5, col:67> col:11 _Require 'typename enable_if<__and_<_Cond...>::value>::type'
| |   `-DependentNameType 0x1223290 'typename enable_if<__and_<_Cond...>::value>::type' dependent
| |-ClassTemplateDecl 0x12235e8 prev 0x11383a8 <line:2052:3, line:2054:29> line:2053:12 conditional
| | |-NonTypeTemplateParmDecl 0x12233c8 <line:2052:12, col:17> col:17 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x1223428 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0x12234a8 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
| | |-CXXRecordDecl 0x1223558 prev 0x1138318 <line:2053:5, line:2054:29> line:2053:12 struct conditional definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x12236a8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0x1223748 <line:2054:7, col:23> col:23 type '_Iftrue'
| | |   `-TemplateTypeParmType 0x1223480 '_Iftrue' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0x1223428 '_Iftrue'
| | |-ClassTemplateSpecialization 0x1a3ddc8 'conditional'
| | |-ClassTemplateSpecialization 0x1a3fe28 'conditional'
| | |-ClassTemplateSpecialization 0x1a41d98 'conditional'
| | |-ClassTemplateSpecialization 0x1a4edc8 'conditional'
| | |-ClassTemplateSpecialization 0x1a5dfe8 'conditional'
| | |-ClassTemplateSpecialization 0x1a79e98 'conditional'
| | |-ClassTemplateSpecialization 0x1a7acd0 'conditional'
| | |-ClassTemplateSpecialization 0x1a83980 'conditional'
| | |-ClassTemplateSpecialization 0x1a9c1d0 'conditional'
| | |-ClassTemplateSpecialization 0x1ab64d0 'conditional'
| | |-ClassTemplateSpecialization 0x1ac7df0 'conditional'
| | |-ClassTemplateSpecialization 0x1ad9d90 'conditional'
| | |-ClassTemplateSpecialization 0x1ae9ae0 'conditional'
| | |-ClassTemplateSpecialization 0x1af02b0 'conditional'
| | `-ClassTemplateSpecialization 0x1b01db0 'conditional'
| |-ClassTemplatePartialSpecializationDecl 0x1223ab0 <line:2057:3, line:2059:30> line:2058:12 struct conditional definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x12237b8 <line:2057:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
| | |-TemplateTypeParmDecl 0x1223838 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
| | |-CXXRecordDecl 0x1223da8 <line:2058:5, col:12> col:12 implicit struct conditional
| | `-TypedefDecl 0x1223e48 <line:2059:7, col:24> col:24 type '_Iffalse'
| |   `-TemplateTypeParmType 0x1223890 '_Iffalse' dependent depth 0 index 1
| |     `-TemplateTypeParm 0x1223838 '_Iffalse'
| |-ClassTemplateDecl 0x1224670 <line:2062:3, line:2063:12> col:12 common_type
| | |-TemplateTypeParmDecl 0x1223eb8 <line:2062:12, col:24> col:24 typename depth 0 index 0 ... _Tp
| | |-CXXRecordDecl 0x12245e0 <line:2063:5, col:12> col:12 struct common_type
| | `-ClassTemplateSpecialization 0x1228230 'common_type'
| |-CXXRecordDecl 0x12248b8 <line:2067:3, line:2076:3> line:2067:10 referenced struct __do_common_type_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x12249d8 <col:3, col:10> col:10 implicit struct __do_common_type_impl
| | |-FunctionTemplateDecl 0x1225238 <line:2069:5, line:2072:51> col:40 _S_test
| | | |-TemplateTypeParmDecl 0x1224a68 <line:2069:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x1224ae8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-CXXMethodDecl 0x1225198 <line:2070:7, line:2072:51> col:40 _S_test '__success_type<typename decay<decltype(true ? std::declval<_Tp>() : std::declval<_Up>())>::type> (int)' static
| | |   `-ParmVarDecl 0x1225058 <col:48> col:51 'int'
| | `-FunctionTemplateDecl 0x12254b0 <line:2074:5, line:2075:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1225298 <line:2074:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x1225318 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0x1225410 <line:2075:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x12256d0 <line:2078:3, line:2083:5> line:2079:12 __common_type_impl
| | |-TemplateTypeParmDecl 0x1225520 <line:2078:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1225598 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x1225640 <line:2079:5, line:2083:5> line:2079:12 struct __common_type_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__do_common_type_impl'
| |   |-CXXRecordDecl 0x12259a0 <col:5, col:12> col:12 implicit struct __common_type_impl
| |   `-TypedefDecl 0x1225be8 <line:2082:7, col:46> col:46 type 'decltype(_S_test<_Tp, _Up>(0))'
| |     `-DecltypeType 0x1225bb0 'decltype(_S_test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0x1225b48 <col:24, col:43> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1225a68 <col:24, col:40> '<dependent type>' lvalue (no ADL) = '_S_test' 0x1225238 0x12254b0
| |         `-IntegerLiteral 0x1225b28 <col:42> 'int' 0
| |-CXXRecordDecl 0x1225c58 <line:2085:3, line:2092:3> line:2085:10 referenced struct __do_member_type_wrapper definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1225d78 <col:3, col:10> col:10 implicit struct __do_member_type_wrapper
| | |-FunctionTemplateDecl 0x1226228 <line:2087:5, line:2088:60> col:49 _S_test
| | | |-TemplateTypeParmDecl 0x1225e08 <line:2087:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0x1226188 <line:2088:7, col:60> col:49 _S_test '__success_type<typename _Tp::type> (int)' static
| | |   `-ParmVarDecl 0x1226048 <col:57> col:60 'int'
| | `-FunctionTemplateDecl 0x12263e8 <line:2090:5, line:2091:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1226288 <line:2090:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0x1226348 <line:2091:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x1226588 <line:2094:3, line:2099:5> line:2095:12 __member_type_wrapper
| | |-TemplateTypeParmDecl 0x1226458 <line:2094:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x12264f8 <line:2095:5, line:2099:5> line:2095:12 struct __member_type_wrapper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__do_member_type_wrapper'
| |   |-CXXRecordDecl 0x1227190 <col:5, col:12> col:12 implicit struct __member_type_wrapper
| |   `-TypedefDecl 0x1227398 <line:2098:7, col:41> col:41 type 'decltype(_S_test<_Tp>(0))'
| |     `-DecltypeType 0x1227360 'decltype(_S_test<_Tp>(0))' dependent
| |       `-CallExpr 0x12272f8 <col:24, col:38> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1227248 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '_S_test' 0x1226228 0x12263e8
| |         `-IntegerLiteral 0x12272d8 <col:37> 'int' 0
| |-ClassTemplateDecl 0x12275c0 <line:2101:3, line:2105:5> line:2102:12 __expanded_common_type_wrapper
| | |-TemplateTypeParmDecl 0x1227408 <line:2101:12, col:21> col:21 typename depth 0 index 0 _CTp
| | |-TemplateTypeParmDecl 0x1227488 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x1227530 <line:2102:5, line:2105:5> line:2102:12 struct __expanded_common_type_wrapper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x12278b0 <col:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| |   `-TypedefDecl 0x1227b88 <line:2104:7, col:58> col:58 type 'common_type<typename _CTp::type, _Args...>'
| |     `-TemplateSpecializationType 0x1227aa0 'common_type<typename _CTp::type, _Args...>' dependent common_type
| |       |-TemplateArgument type 'typename _CTp::type'
| |       `-TemplateArgument type '_Args...'
| |-ClassTemplatePartialSpecializationDecl 0x1227e58 <line:2107:3, line:2109:36> line:2108:12 struct __expanded_common_type_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'std::__failure_type'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0...'
| | |-TemplateTypeParmDecl 0x1227bf8 <line:2107:12, col:24> col:24 referenced typename depth 0 index 0 ... _Args
| | |-CXXRecordDecl 0x1228108 <line:2108:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| | `-TypedefDecl 0x12281a8 <line:2109:7, col:30> col:30 type 'std::__failure_type'
| |   `-RecordType 0x1144590 'std::__failure_type'
| |     `-CXXRecord 0x1144500 '__failure_type'
| |-ClassTemplateSpecializationDecl 0x1228230 <line:2111:3, line:2113:7> line:2112:12 struct common_type definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0x1228418 <col:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0x1228660 <line:2115:3, line:2118:7> line:2116:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'common_type<_Tp, _Tp>'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x12284c0 <line:2115:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1228a50 <line:2116:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0x1228d90 <line:2120:3, line:2123:7> line:2121:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__common_type_impl<_Tp, _Up>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x1228af8 <line:2120:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1228b78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x122a0c0 <line:2121:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0x122a540 <line:2125:3, line:2129:7> line:2126:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__expanded_common_type_wrapper<typename __member_type_wrapper<common_type<_Tp, _Up> >::type, _Vp...>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0x122a168 <line:2125:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x122a1e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-TemplateTypeParmDecl 0x122a268 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Vp
| | `-CXXRecordDecl 0x122ade0 <line:2126:5, col:12> col:12 implicit struct common_type
| |-ClassTemplateDecl 0x122b148 <line:2131:3, line:2135:5> line:2132:12 __underlying_type_impl
| | |-TemplateTypeParmDecl 0x122ae88 <line:2131:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x122b018 <col:26, col:47> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x122b078 <col:33, col:47> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x122afd0 <col:33, col:47> '<dependent type>' lvalue
| | `-CXXRecordDecl 0x122b0b8 <line:2132:5, line:2135:5> line:2132:12 struct __underlying_type_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x122b400 <col:5, col:12> col:12 implicit struct __underlying_type_impl
| |   `-TypeAliasDecl 0x122b530 <line:2134:7, col:41> col:13 type '__underlying_type(_Tp)'
| |     `-UnaryTransformType 0x122b4e0 '__underlying_type(_Tp)' dependent underlying_type
| |       `-TemplateTypeParmType 0x122aee0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x122ae88 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x122b7b8 <line:2137:3, line:2139:7> line:2138:12 struct __underlying_type_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x122b5a8 <line:2137:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x122ba58 <line:2138:5, col:12> col:12 implicit struct __underlying_type_impl
| |-ClassTemplateDecl 0x122bc28 <line:2142:3, line:2145:7> line:2143:12 underlying_type
| | |-TemplateTypeParmDecl 0x122bb00 <line:2142:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x122bb98 <line:2143:5, line:2145:7> line:2143:12 struct underlying_type definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__underlying_type_impl<_Tp>'
| |   `-CXXRecordDecl 0x122cab0 <col:5, col:12> col:12 implicit struct underlying_type
| |-ClassTemplateDecl 0x122cc88 <line:2147:3, line:2151:5> line:2148:12 __declval_protector
| | |-TemplateTypeParmDecl 0x122cb58 <line:2147:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x122cbf8 <line:2148:5, line:2151:5> line:2148:12 struct __declval_protector definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x122cee0 <col:5, col:12> col:12 implicit struct __declval_protector
| |   `-VarDecl 0x122cf80 <line:2150:7, col:34> col:25 __stop 'const bool' static cinit
| |     `-CXXBoolLiteralExpr 0x122cfe8 <col:34> 'bool' false
| |-FunctionTemplateDecl 0x122d340 prev 0x1181a50 <line:2153:3, line:2159:5> line:2154:10 declval
| | |-TemplateTypeParmDecl 0x122d068 <line:2153:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x122d2a0 prev 0x11819b0 <line:2154:5, line:2159:5> line:2154:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | | `-CompoundStmt 0x122d6b8 <line:2155:5, line:2159:5>
| | |   |-DeclStmt 0x122d590 <line:2156:7, line:2157:37>
| | |   | `-StaticAssertDecl 0x122d550 <line:2156:7, line:2157:36> line:2156:7
| | |   |   |-DependentScopeDeclRefExpr 0x122d460 <col:21, col:47> '<dependent type>' lvalue
| | |   |   `-StringLiteral 0x122d518 <line:2157:7> 'const char [28]' lvalue "declval() must not be used!"
| | |   `-ReturnStmt 0x122d6a8 <line:2158:7, col:30>
| | |     `-CallExpr 0x122d680 <col:14, col:30> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x122d5d0 <col:14, col:27> '<dependent type>' lvalue (ADL) = '__declval' 0x1181678 0x11813c8
| | |       `-IntegerLiteral 0x122d660 <col:29> 'int' 0
| | |-Function 0x1a39c50 'declval' 'auto () noexcept -> decltype(__declval<std::basic_istream<char> *>(0))'
| | |-Function 0x1a4ace0 'declval' 'auto () noexcept -> decltype(__declval<std::basic_istream<wchar_t> *>(0))'
| | |-Function 0x1a59e60 'declval' 'auto () noexcept -> decltype(__declval<std::basic_ostream<char> *>(0))'
| | `-Function 0x1a7fdc0 'declval' 'auto () noexcept -> decltype(__declval<std::random_access_iterator_tag>(0))'
| |-TypeAliasTemplateDecl 0x122da80 <line:2162:3, line:2164:66> line:2163:5 __remove_cvref_t
| | |-TemplateTypeParmDecl 0x122d6d8 <line:2162:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x122da20 <line:2163:5, line:2164:66> line:2163:11 __remove_cvref_t 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   `-DependentNameType 0x122d9b0 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |-ClassTemplateDecl 0x122dc08 <line:2167:3, line:2168:11> col:11 result_of
| | |-TemplateTypeParmDecl 0x122dad8 <line:2167:12, col:21> col:21 typename depth 0 index 0 _Signature
| | `-CXXRecordDecl 0x122db78 <line:2168:5, col:11> col:11 class result_of
| |-CXXRecordDecl 0x122ddf8 <line:2174:3, col:32> col:10 referenced struct __invoke_memfun_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x122df18 <col:3, col:10> col:10 implicit struct __invoke_memfun_ref
| |-CXXRecordDecl 0x122dfc0 <line:2175:3, col:34> col:10 referenced struct __invoke_memfun_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x122e0d8 <col:3, col:10> col:10 implicit struct __invoke_memfun_deref
| |-CXXRecordDecl 0x122e180 <line:2176:3, col:32> col:10 referenced struct __invoke_memobj_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x122e298 <col:3, col:10> col:10 implicit struct __invoke_memobj_ref
| |-CXXRecordDecl 0x122e340 <line:2177:3, col:34> col:10 referenced struct __invoke_memobj_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x122e458 <col:3, col:10> col:10 implicit struct __invoke_memobj_deref
| |-CXXRecordDecl 0x122e500 <line:2178:3, col:27> col:10 referenced struct __invoke_other definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x122e618 <col:3, col:10> col:10 implicit struct __invoke_other
| |-ClassTemplateDecl 0x122f370 <line:2181:3, line:2183:35> line:2182:12 __result_of_success
| | |-TemplateTypeParmDecl 0x122e6c0 <line:2181:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x122e738 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tag
| | `-CXXRecordDecl 0x122f2e0 <line:2182:5, line:2183:35> line:2182:12 struct __result_of_success definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__success_type<_Tp>'
| |   |-CXXRecordDecl 0x122f6b0 <col:5, col:12> col:12 implicit struct __result_of_success
| |   `-TypeAliasDecl 0x122f750 <line:2183:7, col:29> col:13 __invoke_type '_Tag'
| |     `-TemplateTypeParmType 0x122f290 '_Tag' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x122e738 '_Tag'
| |-CXXRecordDecl 0x122f7c8 <line:2186:3, line:2195:3> line:2186:10 referenced struct __result_of_memfun_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x122f8e8 <col:3, col:10> col:10 implicit struct __result_of_memfun_ref_impl
| | |-FunctionTemplateDecl 0x1230200 <line:2188:5, line:2191:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0x122f978 <line:2188:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x122f9f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0x122fa78 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0x1230160 <line:2189:7, line:2191:42> col:31 _S_test '__result_of_success<decltype((std::declval<_Tp1>() .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_ref> (int)' static
| | |   `-ParmVarDecl 0x1230008 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0x12303b8 <line:2193:5, line:2194:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1230260 <line:2193:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x1230318 <line:2194:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x1230668 <line:2197:3, line:2202:5> line:2198:12 __result_of_memfun_ref
| | |-TemplateTypeParmDecl 0x1230428 <line:2197:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x12304a8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x1230528 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x12305d8 <line:2198:5, line:2202:5> line:2198:12 struct __result_of_memfun_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memfun_ref_impl'
| |   |-CXXRecordDecl 0x12309c0 <col:5, col:12> col:12 implicit struct __result_of_memfun_ref
| |   `-TypedefDecl 0x1230c58 <line:2201:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0x1230c20 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0x1230bb8 <col:24, col:58> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1230aa8 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0x1230200 0x12303b8
| |         `-IntegerLiteral 0x1230b98 <col:57> 'int' 0
| |-CXXRecordDecl 0x1230cc8 <line:2205:3, line:2214:3> line:2205:10 referenced struct __result_of_memfun_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1230de8 <col:3, col:10> col:10 implicit struct __result_of_memfun_deref_impl
| | |-FunctionTemplateDecl 0x1233140 <line:2207:5, line:2210:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0x1230e78 <line:2207:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x1230ef8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0x1230f78 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0x12330a0 <line:2208:7, line:2210:44> col:33 _S_test '__result_of_success<decltype(((*std::declval<_Tp1>()) .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_deref> (int)' static
| | |   `-ParmVarDecl 0x1232f48 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0x12332f8 <line:2212:5, line:2213:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x12331a0 <line:2212:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x1233258 <line:2213:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x12335a8 <line:2216:3, line:2221:5> line:2217:12 __result_of_memfun_deref
| | |-TemplateTypeParmDecl 0x1233368 <line:2216:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x12333e8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x1233468 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x1233518 <line:2217:5, line:2221:5> line:2217:12 struct __result_of_memfun_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memfun_deref_impl'
| |   |-CXXRecordDecl 0x1233900 <col:5, col:12> col:12 implicit struct __result_of_memfun_deref
| |   `-TypedefDecl 0x1233b58 <line:2220:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0x1233b20 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0x1233af8 <col:24, col:58> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x12339e8 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0x1233140 0x12332f8
| |         `-IntegerLiteral 0x1233ad8 <col:57> 'int' 0
| |-CXXRecordDecl 0x1233bc8 <line:2224:3, line:2233:3> line:2224:10 referenced struct __result_of_memobj_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1233ce8 <col:3, col:10> col:10 implicit struct __result_of_memobj_ref_impl
| | |-FunctionTemplateDecl 0x1234410 <line:2226:5, line:2229:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0x1233d78 <line:2226:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x1233df8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0x1234370 <line:2227:7, line:2229:42> col:31 _S_test '__result_of_success<decltype(std::declval<_Tp1>() .* std::declval<_Fp>()), std::__invoke_memobj_ref> (int)' static
| | |   `-ParmVarDecl 0x1234218 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0x1234650 <line:2231:5, line:2232:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1234470 <line:2231:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x12344e8 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0x12345b0 <line:2232:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x1234870 <line:2235:3, line:2240:5> line:2236:12 __result_of_memobj_ref
| | |-TemplateTypeParmDecl 0x12346c0 <line:2235:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x1234738 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x12347e0 <line:2236:5, line:2240:5> line:2236:12 struct __result_of_memobj_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memobj_ref_impl'
| |   |-CXXRecordDecl 0x1234b40 <col:5, col:12> col:12 implicit struct __result_of_memobj_ref
| |   `-TypedefDecl 0x12357e8 <line:2239:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0x12357b0 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0x1235780 <col:24, col:48> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x12356a0 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0x1234410 0x1234650
| |         `-IntegerLiteral 0x1235760 <col:47> 'int' 0
| |-CXXRecordDecl 0x1235858 <line:2243:3, line:2252:3> line:2243:10 referenced struct __result_of_memobj_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1235978 <col:3, col:10> col:10 implicit struct __result_of_memobj_deref_impl
| | |-FunctionTemplateDecl 0x12360e0 <line:2245:5, line:2248:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0x1235a08 <line:2245:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x1235a88 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0x1236040 <line:2246:7, line:2248:44> col:33 _S_test '__result_of_success<decltype((*std::declval<_Tp1>()) .* std::declval<_Fp>()), std::__invoke_memobj_deref> (int)' static
| | |   `-ParmVarDecl 0x1235ee8 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0x1236320 <line:2250:5, line:2251:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1236140 <line:2250:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x12361b8 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0x1236280 <line:2251:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0x1236540 <line:2254:3, line:2259:5> line:2255:12 __result_of_memobj_deref
| | |-TemplateTypeParmDecl 0x1236390 <line:2254:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x1236408 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x12364b0 <line:2255:5, line:2259:5> line:2255:12 struct __result_of_memobj_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memobj_deref_impl'
| |   |-CXXRecordDecl 0x1236810 <col:5, col:12> col:12 implicit struct __result_of_memobj_deref
| |   `-TypedefDecl 0x1236a18 <line:2258:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0x12369e0 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0x12369b8 <col:24, col:48> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x12368d8 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0x12360e0 0x1236320
| |         `-IntegerLiteral 0x1236998 <col:47> 'int' 0
| |-ClassTemplateDecl 0x1236c40 <line:2261:3, line:2262:12> col:12 __result_of_memobj
| | |-TemplateTypeParmDecl 0x1236a88 <line:2261:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x1236b08 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x1236bb0 <line:2262:5, col:12> col:12 struct __result_of_memobj
| |-ClassTemplatePartialSpecializationDecl 0x12371e8 <line:2264:3, line:2274:5> line:2265:12 struct __result_of_memobj definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateArgument type 'type-parameter-0-2'
| | |-TemplateTypeParmDecl 0x1236e68 <line:2264:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x1236ee8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0x1236f68 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-CXXRecordDecl 0x1237478 <line:2265:5, col:12> col:12 implicit struct __result_of_memobj
| | |-TypedefDecl 0x1239c28 <line:2267:7, col:38> col:38 referenced _Argval '__remove_cvref_t<_Arg>':'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type'
| | | `-TemplateSpecializationType 0x1239b80 '__remove_cvref_t<_Arg>' sugar dependent alias __remove_cvref_t
| | |   |-TemplateArgument type '_Arg'
| | |   |-DependentNameType 0x1239b30 'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type' dependent
| | |   `-DependentNameType 0x1239b30 'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type' dependent
| | |-TypedefDecl 0x1239cc8 <line:2268:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0x1237040 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0x1236f40 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0x1236ee8 '_Class'
| | |   `-TemplateTypeParmType 0x1236ec0 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x1236e68 '_Res'
| | `-TypedefDecl 0x123a770 <line:2269:7, line:2273:21> col:21 type 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type'
| |   `-DependentNameType 0x123a700 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type' dependent
| |-ClassTemplateDecl 0x123aa18 <line:2276:3, line:2277:12> col:12 __result_of_memfun
| | |-TemplateTypeParmDecl 0x123a7e0 <line:2276:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x123a858 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x123a8d8 <col:45, col:57> col:57 typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x123a988 <line:2277:5, col:12> col:12 struct __result_of_memfun
| |-ClassTemplatePartialSpecializationDecl 0x123b1a0 <line:2279:3, line:2288:5> line:2280:12 struct __result_of_memfun definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateArgument type 'type-parameter-0-2'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0x123acc8 <line:2279:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x123ad48 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0x123adc8 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-TemplateTypeParmDecl 0x123ae48 <col:59, col:71> col:71 referenced typename depth 0 index 3 ... _Args
| | |-CXXRecordDecl 0x123b4b8 <line:2280:5, col:12> col:12 implicit struct __result_of_memfun
| | |-TypedefDecl 0x123b660 <line:2282:7, col:53> col:53 referenced _Argval 'typename remove_reference<_Arg>::type'
| | | `-DependentNameType 0x123b5f0 'typename remove_reference<_Arg>::type' dependent
| | |-TypedefDecl 0x123b700 <line:2283:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0x123af20 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0x123ada0 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0x123ad48 '_Class'
| | |   `-TemplateTypeParmType 0x123ad20 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x123acc8 '_Res'
| | `-TypedefDecl 0x123ca20 <line:2284:7, line:2287:21> col:21 type 'typename conditional<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type'
| |   `-DependentNameType 0x123c9b0 'typename conditional<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type' dependent
| |-ClassTemplateDecl 0x123cff0 <line:2295:3, line:2299:5> line:2296:12 __inv_unwrap
| | |-TemplateTypeParmDecl 0x123ca90 <line:2295:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x123ceb8 <col:26, <scratch space>:69:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:2295:35 typename depth 0 index 1 _Up
| | | `-TemplateArgument type '__remove_cvref_t<_Tp>':'typename remove_cv<typename remove_reference<type-parameter-0-0>::type>::type'
| | `-CXXRecordDecl 0x123cf60 <line:2296:5, line:2299:5> line:2296:12 struct __inv_unwrap definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x123d280 <col:5, col:12> col:12 implicit struct __inv_unwrap
| |   `-TypeAliasDecl 0x123d320 <line:2298:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x123cae0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x123ca90 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x123d6e8 <line:2301:3, line:2305:5> line:2302:12 struct __inv_unwrap definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-1>'
| | |-TemplateTypeParmDecl 0x123d398 <line:2301:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x123d418 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x123d998 <line:2302:5, col:12> col:12 implicit struct __inv_unwrap
| | `-TypeAliasDecl 0x123da98 <line:2304:7, col:23> col:13 type '_Up &'
| |   `-LValueReferenceType 0x123da60 '_Up &' dependent
| |     `-TemplateTypeParmType 0x123d470 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x123d418 '_Up'
| |-ClassTemplateDecl 0x123ddb0 <line:2307:3, line:2311:5> line:2308:12 __result_of_impl
| | |-NonTypeTemplateParmDecl 0x123db20 <line:2307:12> col:16 'bool' depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x123db90 <col:18> col:22 'bool' depth 0 index 1
| | |-TemplateTypeParmDecl 0x123dbf0 <col:24, col:33> col:33 typename depth 0 index 2 _Functor
| | |-TemplateTypeParmDecl 0x123dc68 <col:43, col:55> col:55 typename depth 0 index 3 ... _ArgTypes
| | `-CXXRecordDecl 0x123dd20 <line:2308:5, line:2311:5> line:2308:12 struct __result_of_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x123e140 <col:5, col:12> col:12 implicit struct __result_of_impl
| |   `-TypedefDecl 0x123e1e0 <line:2310:7, col:30> col:30 type 'std::__failure_type'
| |     `-RecordType 0x1144590 'std::__failure_type'
| |       `-CXXRecord 0x1144500 '__failure_type'
| |-ClassTemplatePartialSpecializationDecl 0x123efb8 <line:2313:3, line:2317:7> line:2314:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__result_of_memobj<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x123e250 <line:2313:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x123ec80 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x123fc10 <line:2314:5, col:12> col:12 implicit struct __result_of_impl
| |-ClassTemplatePartialSpecializationDecl 0x12401b8 <line:2319:3, line:2323:7> line:2320:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__result_of_memfun<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type, _Args...>'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0x123fcb8 <line:2319:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x123fd38 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x123fdb8 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x1240d80 <line:2320:5, col:12> col:12 implicit struct __result_of_impl
| |-CXXRecordDecl 0x1240e28 <line:2326:3, line:2335:3> line:2326:10 referenced struct __result_of_other_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x1240f48 <col:3, col:10> col:10 implicit struct __result_of_other_impl
| | |-FunctionTemplateDecl 0x12416a0 <line:2328:5, line:2331:37> col:26 _S_test
| | | |-TemplateTypeParmDecl 0x1240fd8 <line:2328:14, col:23> col:23 referenced typename depth 0 index 0 _Fn
| | | |-TemplateTypeParmDecl 0x1241058 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Args
| | | `-CXXMethodDecl 0x1241600 <line:2329:7, line:2331:37> col:26 _S_test '__result_of_success<decltype(std::declval<_Fn>()(std::declval<_Args>()...)), std::__invoke_other> (int)' static
| | |   `-ParmVarDecl 0x12414a8 <col:34> col:37 'int'
| | `-FunctionTemplateDecl 0x1241858 <line:2333:5, line:2334:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x1241700 <line:2333:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x12417b8 <line:2334:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplatePartialSpecializationDecl 0x1241cc8 <line:2337:3, line:2342:5> line:2338:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-private 'std::__result_of_other_impl'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |-TemplateTypeParmDecl 0x12418c8 <line:2337:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x1241948 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | |-CXXRecordDecl 0x12420a8 <line:2338:5, col:12> col:12 implicit struct __result_of_impl
| | `-TypedefDecl 0x1242308 <line:2341:7, col:60> col:60 type 'decltype(_S_test<_Functor, _ArgTypes...>(0))'
| |   `-DecltypeType 0x12422d0 'decltype(_S_test<_Functor, _ArgTypes...>(0))' dependent
| |     `-CallExpr 0x1242260 <col:24, col:57> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x1242180 <col:24, col:54> '<dependent type>' lvalue (no ADL) = '_S_test' 0x12416a0 0x1241858
| |       `-IntegerLiteral 0x1242240 <col:56> 'int' 0
| |-ClassTemplateDecl 0x1242530 <line:2345:3, line:2356:7> line:2346:12 __invoke_result
| | |-TemplateTypeParmDecl 0x1242378 <line:2345:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x12423f8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x12424a0 <line:2346:5, line:2356:7> line:2346:12 struct __invoke_result definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__result_of_impl<is_member_object_pointer<typename remove_reference<_Functor>::type>::value, is_member_function_pointer<typename remove_reference<_Functor>::type>::value, _Functor, _ArgTypes...>::type'
| |   `-CXXRecordDecl 0x12435b0 <col:5, col:12> col:12 implicit struct __invoke_result
| |-ClassTemplatePartialSpecializationDecl 0x1243940 <line:2358:3, line:2361:7> line:2359:12 struct result_of definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__invoke_result<_Functor, _ArgTypes...>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0x1243658 <line:2358:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x12436d8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x1243cb0 <line:2359:5, col:12> col:12 implicit struct result_of
| |-TypeAliasTemplateDecl 0x12441d0 <line:2365:3, line:2367:71> col:5 aligned_storage_t
| | |-NonTypeTemplateParmDecl 0x1243d68 <line:2365:12, col:19> col:19 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0x1243f20 <col:25, line:2366:62> line:2365:32 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument expr
| | |   `-UnaryExprOrTypeTraitExpr 0x1243ef0 <line:2366:6, col:62> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-TypeAliasDecl 0x1244170 <line:2367:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   `-DependentNameType 0x1244100 'typename aligned_storage<_Len, _Align>::type' dependent
| |-TypeAliasTemplateDecl 0x12445c0 <line:2369:3, line:2370:70> col:5 aligned_union_t
| | |-NonTypeTemplateParmDecl 0x1244238 <line:2369:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0x1244298 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-TypeAliasDecl 0x1244560 <line:2370:5, col:70> col:11 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   `-DependentNameType 0x12444f0 'typename aligned_union<_Len, _Types...>::type' dependent
| |-TypeAliasTemplateDecl 0x1244830 <line:2373:3, line:2374:42> col:5 decay_t
| | |-TemplateTypeParmDecl 0x1244618 <line:2373:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x12447d0 <line:2374:5, col:42> col:11 decay_t 'typename decay<_Tp>::type'
| |   `-DependentNameType 0x1244760 'typename decay<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x1244bc0 <line:2377:3, line:2378:57> col:5 enable_if_t
| | |-NonTypeTemplateParmDecl 0x1244898 <line:2377:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x1244908 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | `-TypeAliasDecl 0x1244b60 <line:2378:5, col:57> col:11 enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0x1244af0 'typename enable_if<_Cond, _Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x1245010 <line:2381:3, line:2382:75> col:5 conditional_t
| | |-NonTypeTemplateParmDecl 0x1244c28 <line:2381:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x1244c88 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0x1244d08 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Iffalse
| | `-TypeAliasDecl 0x1244fb0 <line:2382:5, col:75> col:11 conditional_t 'typename conditional<_Cond, _Iftrue, _Iffalse>::type'
| |   `-DependentNameType 0x1244f40 'typename conditional<_Cond, _Iftrue, _Iffalse>::type' dependent
| |-TypeAliasTemplateDecl 0x1246430 <line:2385:3, line:2386:57> col:5 common_type_t
| | |-TemplateTypeParmDecl 0x1245068 <line:2385:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tp
| | `-TypeAliasDecl 0x12463d0 <line:2386:5, col:57> col:11 common_type_t 'typename common_type<_Tp...>::type'
| |   `-DependentNameType 0x1246360 'typename common_type<_Tp...>::type' dependent
| |-TypeAliasTemplateDecl 0x12466f0 <line:2389:3, line:2390:62> col:5 underlying_type_t
| | |-TemplateTypeParmDecl 0x1246488 <line:2389:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x1246690 <line:2390:5, col:62> col:11 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   `-DependentNameType 0x1246620 'typename underlying_type<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x12469b0 <line:2393:3, line:2394:50> col:5 result_of_t
| | |-TemplateTypeParmDecl 0x1246748 <line:2393:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x1246950 <line:2394:5, col:50> col:11 result_of_t 'typename result_of<_Tp>::type'
| |   `-DependentNameType 0x12468e0 'typename result_of<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x1246cf0 <line:2398:3, line:2399:59> col:5 __enable_if_t
| | |-NonTypeTemplateParmDecl 0x1246a18 <line:2398:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x1246a88 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | `-TypeAliasDecl 0x1246c90 <line:2399:5, col:59> col:11 __enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0x1246c20 'typename enable_if<_Cond, _Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x1246e58 <line:2402:3, col:42> col:25 __void_t
| | |-TemplateTypeParmDecl 0x1246d48 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0x1246df8 <col:25, col:42> col:31 __void_t 'void'
| |   `-BuiltinType 0xffd170 'void'
| |-TypeAliasTemplateDecl 0x1246fb8 <line:2407:3, col:40> col:25 void_t
| | |-TemplateTypeParmDecl 0x1246eb0 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0x1246f58 <col:25, col:40> col:31 void_t 'void'
| |   `-BuiltinType 0xffd170 'void'
| |-ClassTemplateDecl 0x1247370 <line:2411:3, line:2417:5> line:2413:12 __detector
| | |-TemplateTypeParmDecl 0x1247010 <line:2411:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTypeParmDecl 0x1247088 <col:31, col:40> col:40 typename depth 0 index 1 _AlwaysVoid
| | |-TemplateTemplateParmDecl 0x12471d8 <line:2412:5, col:33> col:33 depth 0 index 2 _Op
| | | `-TemplateTypeParmDecl 0x1247108 <col:14> col:25 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x1247230 <col:38, col:50> col:50 typename depth 0 index 3 ... _Args
| | `-CXXRecordDecl 0x12472e0 <line:2413:5, line:2417:5> line:2413:12 struct __detector definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x12477c0 <col:5, col:12> col:12 implicit struct __detector
| |   |-TypeAliasDecl 0x1247860 <line:2415:7, col:23> col:13 value_t 'std::false_type':'std::integral_constant<bool, false>'
| |   | `-TypedefType 0x1138c00 'std::false_type' sugar
| |   |   |-Typedef 0x1137798 'false_type'
| |   |   `-TemplateSpecializationType 0x11376b0 'integral_constant<bool, false>' sugar integral_constant
| |   |     |-TemplateArgument type 'bool'
| |   |     |-TemplateArgument expr
| |   |     | `-ConstantExpr 0x1137570 <line:78:35> 'bool' Int: 0
| |   |     |   `-CXXBoolLiteralExpr 0x1137540 <col:35> 'bool' false
| |   |     `-RecordType 0x1137690 'std::integral_constant<bool, false>'
| |   |       `-ClassTemplateSpecialization 0x1137590 'integral_constant'
| |   `-TypeAliasDecl 0x12478d0 <line:2416:7, col:20> col:13 type '_Default'
| |     `-TemplateTypeParmType 0x1247060 '_Default' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x1247010 '_Default'
| |-ClassTemplatePartialSpecializationDecl 0x1248188 <line:2420:3, line:2426:5> line:2422:12 struct __detector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'void'
| | |-TemplateArgument template _Op
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0x1247948 <line:2420:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0x1247a68 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x12479c8 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x1247ac0 <line:2421:6, col:18> col:18 referenced typename depth 0 index 2 ... _Args
| | |-CXXRecordDecl 0x12499c8 <line:2422:5, col:12> col:12 implicit struct __detector
| | |-TypeAliasDecl 0x1249a68 <line:2424:7, col:23> col:13 value_t 'std::true_type':'std::integral_constant<bool, true>'
| | | `-TypedefType 0x113fc30 'std::true_type' sugar
| | |   |-Typedef 0x11374d8 'true_type'
| | |   `-TemplateSpecializationType 0x11373f0 'integral_constant<bool, true>' sugar integral_constant
| | |     |-TemplateArgument type 'bool'
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0x11372b8 <line:75:35> 'bool' Int: 1
| | |     |   `-CXXBoolLiteralExpr 0x1137258 <col:35> 'bool' true
| | |     `-RecordType 0x11373d0 'std::integral_constant<bool, true>'
| | |       `-ClassTemplateSpecialization 0x11372d8 'integral_constant'
| | `-TypeAliasDecl 0x1249bc0 <line:2425:7, col:32> col:13 type '_Op<_Args...>'
| |   `-TemplateSpecializationType 0x1249b20 '_Op<_Args...>' dependent _Op
| |     `-TemplateArgument type '_Args...'
| |-TypeAliasTemplateDecl 0x124a178 <line:2429:3, line:2431:67> col:5 __detected_or
| | |-TemplateTypeParmDecl 0x1249c38 <line:2429:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0x1249d58 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x1249cb8 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x1249db0 <line:2430:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| | `-TypeAliasDecl 0x124a118 <line:2431:5, col:67> col:11 __detected_or '__detector<_Default, void, _Op, _Args...>'
| |   `-TemplateSpecializationType 0x1249fa0 '__detector<_Default, void, _Op, _Args...>' dependent __detector
| |     |-TemplateArgument type '_Default'
| |     |-TemplateArgument type 'void'
| |     |-TemplateArgument template _Op
| |     `-TemplateArgument type '_Args...'
| |-TypeAliasTemplateDecl 0x124aa80 <line:2434:3, line:2437:58> line:2436:5 __detected_or_t
| | |-TemplateTypeParmDecl 0x124a1d0 <line:2434:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0x124a2e8 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x124a248 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x124a340 <line:2435:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| | `-TypeAliasDecl 0x124aa20 <line:2436:5, line:2437:58> line:2436:11 __detected_or_t 'typename __detected_or<_Default, _Op, _Args...>::type'
| |   `-DependentNameType 0x124a9b0 'typename __detected_or<_Default, _Op, _Args...>::type' dependent
| |-ClassTemplateDecl 0x124ac08 <line:2455:3, line:2456:12> col:12 __is_swappable
| | |-TemplateTypeParmDecl 0x124aad8 <line:2455:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x124ab78 <line:2456:5, col:12> col:12 struct __is_swappable
| |-ClassTemplateDecl 0x124af28 <line:2458:3, line:2459:12> col:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x124adf8 <line:2458:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x124ae98 <line:2459:5, col:12> col:12 struct __is_nothrow_swappable
| |-ClassTemplateDecl 0x124b248 <line:2461:3, line:2462:11> col:11 tuple
| | |-TemplateTypeParmDecl 0x124b118 <line:2461:12, col:24> col:24 typename depth 0 index 0 ... _Elements
| | `-CXXRecordDecl 0x124b1b8 <line:2462:5, col:11> col:11 class tuple
| |-ClassTemplateDecl 0x124b5c8 <line:2464:3, line:2466:7> line:2465:12 __is_tuple_like_impl
| | |-TemplateTypeParmDecl 0x124b498 <line:2464:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x124b538 <line:2465:5, line:2466:7> line:2465:12 struct __is_tuple_like_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x124d1a0 <col:5, col:12> col:12 implicit struct __is_tuple_like_impl
| |-ClassTemplatePartialSpecializationDecl 0x124d4d0 <line:2468:3, line:2470:7> line:2469:12 struct __is_tuple_like_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
| | |-TemplateTypeParmDecl 0x124d248 <line:2468:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tps
| | `-CXXRecordDecl 0x124d758 <line:2469:5, col:12> col:12 implicit struct __is_tuple_like_impl
| |-ClassTemplateDecl 0x124d928 <line:2473:3, line:2476:7> line:2474:12 __is_tuple_like
| | |-TemplateTypeParmDecl 0x124d800 <line:2473:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x124d898 <line:2474:5, line:2476:7> line:2474:12 struct __is_tuple_like definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_tuple_like_impl<__remove_cvref_t<_Tp> >::type'
| |   `-CXXRecordDecl 0x124e0c0 <col:5, col:12> col:12 implicit struct __is_tuple_like
| |-FunctionTemplateDecl 0x124eea8 <line:2478:3, line:2485:53> line:2483:5 swap
| | |-TemplateTypeParmDecl 0x124e168 <line:2478:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x124ee08 <line:2479:5, line:2485:53> line:2483:5 swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp> >, is_move_constructible<_Tp>, is_move_assignable<_Tp> >::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp> >::value)' inline
| |   |-ParmVarDecl 0x124e928 <col:10, col:13> col:14 '_Tp &'
| |   `-ParmVarDecl 0x124e9a0 <col:16, col:19> col:20 '_Tp &'
| |-FunctionTemplateDecl 0x124fd58 <line:2487:3, line:2491:48> line:2490:5 swap
| | |-TemplateTypeParmDecl 0x124ef10 <line:2487:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x124ef98 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Nm
| | `-FunctionDecl 0x124fcb8 <line:2488:5, line:2491:48> line:2490:5 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |-ParmVarDecl 0x124f928 <col:10, col:24> col:16 __a '_Tp (&)[_Nm]'
| |   `-ParmVarDecl 0x124fa78 <col:27, col:41> col:33 __b '_Tp (&)[_Nm]'
| |-NamespaceDecl 0x124fdc0 <line:2493:3, line:2517:3> line:2493:13 __swappable_details
| | |-UsingDecl 0x124fe38 <line:2494:5, col:16> col:16 std::swap
| | |-UsingShadowDecl 0x124fe90 <col:16> col:16 implicit FunctionTemplate 0x124eea8 'swap'
| | |-UsingShadowDecl 0x124fee0 <col:16> col:16 implicit FunctionTemplate 0x124fd58 'swap'
| | |-CXXRecordDecl 0x124ff30 <line:2496:5, line:2504:5> line:2496:12 referenced struct __do_is_swappable_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x1250048 <col:5, col:12> col:12 implicit struct __do_is_swappable_impl
| | | |-FunctionTemplateDecl 0x1250650 <line:2498:7, line:2500:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0x12500d8 <line:2498:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x1250438 <col:30, line:2499:18> col:16 typename depth 0 index 1
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))'
| | | | `-CXXMethodDecl 0x12505b0 <line:2500:9, col:36> col:26 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0x12504f8 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0x1250808 <line:2502:7, line:2503:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0x12506b0 <line:2502:16> col:24 typename depth 0 index 0
| | |   `-CXXMethodDecl 0x1250768 <line:2503:9, col:37> col:27 __test 'std::false_type (...)' static
| | `-CXXRecordDecl 0x1250878 <line:2506:5, line:2515:5> line:2506:12 referenced struct __do_is_nothrow_swappable_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1250998 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_impl
| |   |-FunctionTemplateDecl 0x1251158 <line:2508:7, line:2511:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0x1250a28 <line:2508:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | `-CXXMethodDecl 0x12510b8 <line:2509:9, line:2511:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))> (int)' static
| |   |   `-ParmVarDecl 0x1250f70 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0x1251318 <line:2513:7, line:2514:37> col:27 __test
| |     |-TemplateTypeParmDecl 0x12511b8 <line:2513:16> col:24 typename depth 0 index 0
| |     `-CXXMethodDecl 0x1251278 <line:2514:9, col:37> col:27 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0x12514b8 <line:2519:3, line:2524:5> line:2520:12 __is_swappable_impl
| | |-TemplateTypeParmDecl 0x1251388 <line:2519:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1251428 <line:2520:5, line:2524:5> line:2520:12 struct __is_swappable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| |   |-CXXRecordDecl 0x1252198 <col:5, col:12> col:12 implicit struct __is_swappable_impl
| |   `-TypedefDecl 0x1252368 <line:2523:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x1252330 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x1252300 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1252250 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x1250650 0x1250808
| |         `-IntegerLiteral 0x12522e0 <col:36> 'int' 0
| |-ClassTemplateDecl 0x1252508 <line:2526:3, line:2531:5> line:2527:12 __is_nothrow_swappable_impl
| | |-TemplateTypeParmDecl 0x12523d8 <line:2526:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1252478 <line:2527:5, line:2531:5> line:2527:12 struct __is_nothrow_swappable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| |   |-CXXRecordDecl 0x1252808 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_impl
| |   `-TypedefDecl 0x12529d8 <line:2530:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x12529a0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x1252970 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x12528c0 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x1251158 0x1251318
| |         `-IntegerLiteral 0x1252950 <col:36> 'int' 0
| |-ClassTemplateDecl 0x1252b78 prev 0x124ac08 <line:2533:3, line:2536:7> line:2534:12 __is_swappable
| | |-TemplateTypeParmDecl 0x1252a48 <line:2533:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1252ae8 prev 0x124ab78 <line:2534:5, line:2536:7> line:2534:12 struct __is_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x1252dd0 <col:5, col:12> col:12 implicit struct __is_swappable
| |-ClassTemplateDecl 0x1252fa8 prev 0x124af28 <line:2538:3, line:2541:7> line:2539:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x1252e78 <line:2538:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1252f18 prev 0x124ae98 <line:2539:5, line:2541:7> line:2539:12 struct __is_nothrow_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x1253200 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable
| |-ClassTemplateDecl 0x12533d8 <line:2548:3, line:2551:7> line:2549:12 is_swappable
| | |-TemplateTypeParmDecl 0x12532a8 <line:2548:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1253348 <line:2549:5, line:2551:7> line:2549:12 struct is_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x1253770 <col:5, col:12> col:12 implicit struct is_swappable
| |-ClassTemplateDecl 0x1253948 <line:2554:3, line:2557:7> line:2555:12 is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x1253818 <line:2554:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x12538b8 <line:2555:5, line:2557:7> line:2555:12 struct is_nothrow_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x1253ce0 <col:5, col:12> col:12 implicit struct is_nothrow_swappable
| |-VarTemplateDecl 0x12551e0 <line:2561:3, line:2563:26> line:2562:38 is_swappable_v
| | |-TemplateTypeParmDecl 0x1253d88 <line:2561:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x1253e38 <line:2562:23, line:2563:26> line:2562:38 is_swappable_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x1255300 <line:2563:7, col:26> '<dependent type>' lvalue
| |-VarTemplateDecl 0x1255450 <line:2566:3, line:2568:34> line:2567:38 is_nothrow_swappable_v
| | |-TemplateTypeParmDecl 0x1255338 <line:2566:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x12553e8 <line:2567:23, line:2568:34> line:2567:38 is_nothrow_swappable_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x1255570 <line:2568:7, col:34> '<dependent type>' lvalue
| |-NamespaceDecl 0x12555a8 <line:2571:3, line:2599:3> line:2571:13 __swappable_with_details
| | |-UsingDecl 0x1255620 <line:2572:5, col:16> col:16 std::swap
| | |-UsingShadowDecl 0x1255678 <col:16> col:16 implicit FunctionTemplate 0x124eea8 'swap'
| | |-UsingShadowDecl 0x12556c8 <col:16> col:16 implicit FunctionTemplate 0x124fd58 'swap'
| | |-CXXRecordDecl 0x1255718 <line:2574:5, line:2584:5> line:2574:12 referenced struct __do_is_swappable_with_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x1255838 <col:5, col:12> col:12 implicit struct __do_is_swappable_with_impl
| | | |-FunctionTemplateDecl 0x1256200 <line:2576:7, line:2580:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0x12558c8 <line:2576:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x1255948 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | |-TemplateTypeParmDecl 0x1255c78 <col:44, line:2577:18> col:16 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp>(), std::declval<_Up>()))'
| | | | |-TemplateTypeParmDecl 0x1255fa8 <line:2578:16, line:2579:18> col:16 typename depth 0 index 3
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Up>(), std::declval<_Tp>()))'
| | | | `-CXXMethodDecl 0x1256160 <line:2580:9, col:36> col:26 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0x12560a8 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0x1256440 <line:2582:7, line:2583:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0x1256260 <line:2582:16> col:24 typename depth 0 index 0
| | |   |-TemplateTypeParmDecl 0x12562d8 <col:26> col:34 typename depth 0 index 1
| | |   `-CXXMethodDecl 0x12563a0 <line:2583:9, col:37> col:27 __test 'std::false_type (...)' static
| | `-CXXRecordDecl 0x12564b0 <line:2586:5, line:2597:5> line:2586:12 referenced struct __do_is_nothrow_swappable_with_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x12565c8 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_with_impl
| |   |-FunctionTemplateDecl 0x1257058 <line:2588:7, line:2593:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0x1256658 <line:2588:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x12566d8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| |   | `-CXXMethodDecl 0x1256fb8 <line:2589:9, line:2593:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp>(), std::declval<_Up>())) && noexcept(swap(std::declval<_Up>(), std::declval<_Tp>()))> (int)' static
| |   |   `-ParmVarDecl 0x1256e70 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0x1258a50 <line:2595:7, line:2596:37> col:27 __test
| |     |-TemplateTypeParmDecl 0x12570b8 <line:2595:16> col:24 typename depth 0 index 0
| |     |-TemplateTypeParmDecl 0x1257138 <col:26> col:34 typename depth 0 index 1
| |     `-CXXMethodDecl 0x12589b0 <line:2596:9, col:37> col:27 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0x1258c70 <line:2601:3, line:2606:5> line:2602:12 __is_swappable_with_impl
| | |-TemplateTypeParmDecl 0x1258ac0 <line:2601:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1258b38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x1258be0 <line:2602:5, line:2606:5> line:2602:12 struct __is_swappable_with_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_with_details::__do_is_swappable_with_impl':'std::__swappable_with_details::__do_is_swappable_with_impl'
| |   |-CXXRecordDecl 0x1258fc8 <col:5, col:12> col:12 implicit struct __is_swappable_with_impl
| |   `-TypedefDecl 0x12591d8 <line:2605:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0x12591a0 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0x1259170 <col:24, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1259090 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x1256200 0x1256440
| |         `-IntegerLiteral 0x1259150 <col:41> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x1259468 <line:2609:3, line:2614:5> line:2610:12 struct __is_swappable_with_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0x1259248 <line:2609:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x1259760 <line:2610:5, col:12> col:12 implicit struct __is_swappable_with_impl
| | `-TypedefDecl 0x1259968 <line:2613:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0x1259930 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0x12598c8 <col:24, col:38> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x1259818 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0x1250650 0x1250808
| |       `-IntegerLiteral 0x12598a8 <col:37> 'int' 0
| |-ClassTemplateDecl 0x1259b90 <line:2616:3, line:2621:5> line:2617:12 __is_nothrow_swappable_with_impl
| | |-TemplateTypeParmDecl 0x12599d8 <line:2616:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1259a58 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x1259b00 <line:2617:5, line:2621:5> line:2617:12 struct __is_nothrow_swappable_with_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_with_details::__do_is_nothrow_swappable_with_impl':'std::__swappable_with_details::__do_is_nothrow_swappable_with_impl'
| |   |-CXXRecordDecl 0x1259ec8 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| |   `-TypedefDecl 0x125a0d8 <line:2620:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0x125a0a0 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0x125a070 <col:24, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1259f90 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x1257058 0x1258a50
| |         `-IntegerLiteral 0x125a050 <col:41> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x125a368 <line:2624:3, line:2629:5> line:2625:12 struct __is_nothrow_swappable_with_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0x125a148 <line:2624:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x125a660 <line:2625:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| | `-TypedefDecl 0x125a828 <line:2628:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0x125a7f0 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0x125a7c8 <col:24, col:38> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x125a718 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0x1251158 0x1251318
| |       `-IntegerLiteral 0x125a7a8 <col:37> 'int' 0
| |-ClassTemplateDecl 0x125b4c0 <line:2632:3, line:2635:7> line:2633:12 is_swappable_with
| | |-TemplateTypeParmDecl 0x125a898 <line:2632:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x125a918 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x125b430 <line:2633:5, line:2635:7> line:2633:12 struct is_swappable_with definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_with_impl<_Tp, _Up>::type'
| |   `-CXXRecordDecl 0x125b920 <col:5, col:12> col:12 implicit struct is_swappable_with
| |-ClassTemplateDecl 0x125bb80 <line:2638:3, line:2641:7> line:2639:12 is_nothrow_swappable_with
| | |-TemplateTypeParmDecl 0x125b9c8 <line:2638:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x125ba48 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x125baf0 <line:2639:5, line:2641:7> line:2639:12 struct is_nothrow_swappable_with definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_with_impl<_Tp, _Up>::type'
| |   `-CXXRecordDecl 0x125bfe0 <col:5, col:12> col:12 implicit struct is_nothrow_swappable_with
| |-VarTemplateDecl 0x125c228 <line:2645:3, line:2647:36> line:2646:38 is_swappable_with_v
| | |-TemplateTypeParmDecl 0x125c088 <line:2645:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x125c108 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x125c1c0 <line:2646:23, line:2647:36> line:2646:38 is_swappable_with_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x125c380 <line:2647:7, col:36> '<dependent type>' lvalue
| |-VarTemplateDecl 0x125c558 <line:2650:3, line:2652:44> line:2651:38 is_nothrow_swappable_with_v
| | |-TemplateTypeParmDecl 0x125c3b8 <line:2650:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x125c438 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x125c4f0 <line:2651:23, line:2652:44> line:2651:38 is_nothrow_swappable_with_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x125c6b0 <line:2652:7, col:44> '<dependent type>' lvalue
| |-ClassTemplateDecl 0x125cac0 <line:2660:3, line:2662:47> col:12 __is_invocable_impl
| | |-TemplateTypeParmDecl 0x125c6e8 <line:2660:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x125c768 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-NonTypeTemplateParmDecl 0x125c8f8 <line:2661:5, col:27> col:10 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0x125c958 <col:12, col:27> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0x125c8b0 <col:12, col:27> '<dependent type>' lvalue
| | |-TemplateTypeParmDecl 0x125c980 <col:34, col:45> col:43 typename depth 0 index 3
| | | `-TemplateArgument type 'void'
| | `-CXXRecordDecl 0x125ca30 <line:2662:5, col:47> col:12 struct __is_invocable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x125ce10 <col:5, col:12> col:12 implicit struct __is_invocable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11a54d0 <line:2665:3, line:2670:7> line:2666:12 struct __is_invocable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'void'
| | |-TemplateTypeParmDecl 0x125ceb8 <line:2665:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x125cf38 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | `-CXXRecordDecl 0x11a5858 <line:2666:5, col:12> col:12 implicit struct __is_invocable_impl
| |-ClassTemplatePartialSpecializationDecl 0x11a5dc8 <line:2675:3, line:2699:5> line:2676:12 struct __is_invocable_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'void'
| | |-TemplateTypeParmDecl 0x11a5900 <line:2675:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x11a5978 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-CXXRecordDecl 0x11a6118 <line:2676:5, col:12> col:12 implicit struct __is_invocable_impl
| | |-AccessSpecDecl 0x11a61a8 <line:2680:5, col:12> col:5 private
| | |-CXXMethodDecl 0x11a62c8 <line:2683:7, col:44> col:37 referenced _S_get 'typename _Result::type ()' static
| | |-FunctionTemplateDecl 0x11a6578 <line:2685:7, line:2686:25> col:14 _S_conv
| | | |-TemplateTypeParmDecl 0x11a6368 <line:2685:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | `-CXXMethodDecl 0x11a64d8 <line:2686:2, col:25> col:14 _S_conv 'void (_Tp)' static
| | |   `-ParmVarDecl 0x11a6418 <col:22> col:25 '_Tp'
| | |-FunctionTemplateDecl 0x11a69c8 <line:2689:7, line:2691:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0x11a65d8 <line:2689:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x11a67d8 <col:30, col:41> col:39 typename depth 1 index 1
| | | | `-TemplateArgument type 'decltype(_S_conv<_Tp>(_S_get()))'
| | | `-CXXMethodDecl 0x11a6928 <line:2690:2, line:2691:13> col:2 _S_test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0x11a6898 <col:10> col:13 'int'
| | |-FunctionTemplateDecl 0x11a6b88 <line:2693:7, line:2695:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0x11a6a28 <line:2693:16, col:25> col:25 typename depth 1 index 0 _Tp
| | | `-CXXMethodDecl 0x11a6ae8 <line:2694:2, line:2695:13> col:2 _S_test 'std::false_type (...)' static
| | |-AccessSpecDecl 0x11a6be0 <line:2697:5, col:11> col:5 public
| | `-TypeAliasDecl 0x11a6d88 <line:2698:7, col:20> col:13 type 'decltype(_S_test<_Ret>(1))'
| |   `-DecltypeType 0x11a6d50 'decltype(_S_test<_Ret>(1))' dependent
| |     `-CallExpr 0x11a6ce0 <col:29, col:44> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x11a6c30 <col:29, col:41> '<dependent type>' lvalue (no ADL) = '_S_test' 0x11a6b88 0x11a69c8
| |       `-IntegerLiteral 0x11a6cc0 <col:43> 'int' 1
| |-ClassTemplateDecl 0x11a6fb0 <line:2702:3, line:2705:7> line:2703:12 __is_invocable
| | |-TemplateTypeParmDecl 0x11a6e00 <line:2702:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11a6e78 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x11a6f20 <line:2703:5, line:2705:7> line:2703:12 struct __is_invocable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>::type'
| |   `-CXXRecordDecl 0x11a8750 <col:5, col:12> col:12 implicit struct __is_invocable
| |-FunctionTemplateDecl 0x11a8b18 <line:2707:3, line:2713:5> line:2708:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x11a87f8 <line:2707:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11a8878 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x11a88f8 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0x11a8a78 <line:2708:5, line:2713:5> line:2708:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_ref)'
| |   |-ParmVarDecl 0x11a89b8 <col:33> col:52 'std::__invoke_memfun_ref'
| |   `-CompoundStmt 0x11a93d0 <line:2709:5, line:2713:5>
| |     |-DeclStmt 0x11a9040 <line:2710:7, col:51>
| |     | `-TypeAliasDecl 0x11a8fe0 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0x11a8f70 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0x11a93c0 <line:2711:7, line:2712:31>
| |       `-CXXNoexceptExpr 0x11a93a0 <line:2711:14, line:2712:31> 'bool'
| |         `-CallExpr 0x11a9378 <line:2711:23, line:2712:30> '<dependent type>'
| |           |-ParenExpr 0x11a9260 <line:2711:23, col:64> '<dependent type>'
| |           | `-BinaryOperator 0x11a9240 <col:24, col:63> '<dependent type>' '.*'
| |           |   |-CallExpr 0x11a9148 <col:24, col:42> '<dependent type>'
| |           |   | `-UnresolvedLookupExpr 0x11a90c0 <col:24, col:40> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           |   `-CallExpr 0x11a9220 <col:45, col:63> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x11a9198 <col:45, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           `-PackExpansionExpr 0x11a9358 <line:2712:6, col:27> '<dependent type>'
| |             `-CallExpr 0x11a9338 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x11a92b0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |-FunctionTemplateDecl 0x11a9738 <line:2715:3, line:2720:5> line:2716:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x11a93f0 <line:2715:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11a9468 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x11a9518 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0x11a9698 <line:2716:5, line:2720:5> line:2716:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_deref)'
| |   |-ParmVarDecl 0x11a95d8 <col:33> col:54 'std::__invoke_memfun_deref'
| |   `-CompoundStmt 0x11a9b10 <line:2717:5, line:2720:5>
| |     `-ReturnStmt 0x11a9b00 <line:2718:7, line:2719:31>
| |       `-CXXNoexceptExpr 0x11a9ae0 <line:2718:14, line:2719:31> 'bool'
| |         `-CallExpr 0x11a9ab8 <line:2718:23, line:2719:30> '<dependent type>'
| |           |-ParenExpr 0x11a99a0 <line:2718:23, col:67> '<dependent type>'
| |           | `-BinaryOperator 0x11a9980 <col:24, col:66> '<dependent type>' '.*'
| |           |   |-ParenExpr 0x11a9888 <col:24, col:45> '<dependent type>'
| |           |   | `-UnaryOperator 0x11a9870 <col:25, col:44> '<dependent type>' prefix '*' cannot overflow
| |           |   |   `-CallExpr 0x11a9850 <col:26, col:44> '<dependent type>'
| |           |   |     `-UnresolvedLookupExpr 0x11a97c8 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           |   `-CallExpr 0x11a9960 <col:48, col:66> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x11a98d8 <col:48, col:64> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           `-PackExpansionExpr 0x11a9a98 <line:2719:6, col:27> '<dependent type>'
| |             `-CallExpr 0x11a9a78 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x11a99f0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |-FunctionTemplateDecl 0x11a9dc8 <line:2722:3, line:2727:5> line:2723:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x11a9b28 <line:2722:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11a9ba8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x11a9d28 <line:2723:5, line:2727:5> line:2723:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_ref)'
| |   |-ParmVarDecl 0x11a9c60 <col:33> col:52 'std::__invoke_memobj_ref'
| |   `-CompoundStmt 0x11aa530 <line:2724:5, line:2727:5>
| |     |-DeclStmt 0x11aa2f0 <line:2725:7, col:51>
| |     | `-TypeAliasDecl 0x11aa290 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0x11aa220 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0x11aa520 <line:2726:7, col:63>
| |       `-CXXNoexceptExpr 0x11aa500 <col:14, col:63> 'bool'
| |         `-BinaryOperator 0x11aa4e0 <col:23, col:62> '<dependent type>' '.*'
| |           |-CallExpr 0x11aa3e8 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0x11aa360 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           `-CallExpr 0x11aa4c0 <col:44, col:62> '<dependent type>'
| |             `-UnresolvedLookupExpr 0x11aa438 <col:44, col:60> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |-FunctionTemplateDecl 0x11aa7e8 <line:2729:3, line:2733:5> line:2730:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x11aa550 <line:2729:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11aa5c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x11aa748 <line:2730:5, line:2733:5> line:2730:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_deref)'
| |   |-ParmVarDecl 0x11aa680 <col:33> col:54 'std::__invoke_memobj_deref'
| |   `-CompoundStmt 0x11aaa80 <line:2731:5, line:2733:5>
| |     `-ReturnStmt 0x11aaa70 <line:2732:7, col:66>
| |       `-CXXNoexceptExpr 0x11aaa50 <col:14, col:66> 'bool'
| |         `-BinaryOperator 0x11aaa30 <col:23, col:65> '<dependent type>' '.*'
| |           |-ParenExpr 0x11aa938 <col:23, col:44> '<dependent type>'
| |           | `-UnaryOperator 0x11aa920 <col:24, col:43> '<dependent type>' prefix '*' cannot overflow
| |           |   `-CallExpr 0x11aa900 <col:25, col:43> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x11aa878 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           `-CallExpr 0x11aaa10 <col:47, col:65> '<dependent type>'
| |             `-UnresolvedLookupExpr 0x11aa988 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |-FunctionTemplateDecl 0x11aad38 <line:2735:3, line:2739:5> line:2736:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x11aaa98 <line:2735:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x11aab18 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-FunctionDecl 0x11aac98 <line:2736:5, line:2739:5> line:2736:20 constexpr __call_is_nt 'bool (std::__invoke_other)'
| |   |-ParmVarDecl 0x11aabd0 <col:33> col:47 'std::__invoke_other'
| |   `-CompoundStmt 0x11aafc0 <line:2737:5, line:2739:5>
| |     `-ReturnStmt 0x11aafb0 <line:2738:7, col:68>
| |       `-CXXNoexceptExpr 0x11aaf90 <col:14, col:68> 'bool'
| |         `-CallExpr 0x11aaf68 <col:23, col:67> '<dependent type>'
| |           |-CallExpr 0x11aae50 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0x11aadc8 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |           `-PackExpansionExpr 0x11aaf48 <col:43, col:64> '<dependent type>'
| |             `-CallExpr 0x11aaf28 <col:43, col:63> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x11aaea0 <col:43, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x122d340
| |-ClassTemplateDecl 0x11ab218 <line:2741:3, line:2746:7> line:2742:12 __call_is_nothrow
| | |-TemplateTypeParmDecl 0x11aafd8 <line:2741:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x11ab058 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x11ab0d8 <col:44, col:56> col:56 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x11ab188 <line:2742:5, line:2746:7> line:2742:12 struct __call_is_nothrow definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>':'integral_constant<bool, std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>'
| |   `-CXXRecordDecl 0x1271da8 <col:5, col:12> col:12 implicit struct __call_is_nothrow
| |-TypeAliasTemplateDecl 0x1272350 <line:2748:3, line:2750:72> line:2749:5 __call_is_nothrow_
| | |-TemplateTypeParmDecl 0x1271e50 <line:2748:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x1271ec8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x12722f0 <line:2749:5, line:2750:72> line:2749:11 __call_is_nothrow_ '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>'
| |   `-TemplateSpecializationType 0x12721c0 '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>' dependent __call_is_nothrow
| |     |-TemplateArgument type '__invoke_result<_Fn, _Args...>'
| |     |-TemplateArgument type '_Fn'
| |     `-TemplateArgument type '_Args...'
| |-ClassTemplateDecl 0x1272560 <line:2753:3, line:2757:7> line:2754:12 __is_nothrow_invocable
| | |-TemplateTypeParmDecl 0x12723a8 <line:2753:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x1272428 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x12724d0 <line:2754:5, line:2757:7> line:2754:12 struct __is_nothrow_invocable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<__is_invocable<_Fn, _Args...>, __call_is_nothrow_<_Fn, _Args...> >::type'
| |   `-CXXRecordDecl 0x12730f0 <col:5, col:12> col:12 implicit struct __is_nothrow_invocable
| `-CXXRecordDecl 0x1273198 <line:2759:3, line:2764:3> line:2759:10 referenced struct __nonesuch definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial defaulted_is_constexpr
|   | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
|   | |-MoveConstructor
|   | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
|   | |-MoveAssignment
|   | `-Destructor trivial user_declared
|   |-CXXRecordDecl 0x12732b8 <col:3, col:10> col:10 implicit referenced struct __nonesuch
|   |-CXXConstructorDecl 0x12733b0 <line:2760:5, col:25> col:5 __nonesuch 'void ()' delete trivial
|   |-CXXDestructorDecl 0x12734a0 <line:2761:5, col:26> col:5 ~__nonesuch 'void ()' delete trivial noexcept-unevaluated 0x12734a0
|   |-CXXConstructorDecl 0x1273678 <line:2762:5, col:42> col:5 __nonesuch 'void (const std::__nonesuch &)' delete trivial
|   | `-ParmVarDecl 0x12735b8 <col:16, col:32> col:33 'const std::__nonesuch &'
|   `-CXXMethodDecl 0x1274840 <line:2763:5, col:46> col:10 operator= 'void (const std::__nonesuch &)' delete trivial
|     `-ParmVarDecl 0x1273738 <col:20, col:36> col:37 'const std::__nonesuch &'
|-NamespaceDecl 0x1274908 prev 0x1130170 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:57:1, line:218:1> line:57:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1274978 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-FunctionTemplateDecl 0x1274df0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:72:3, line:75:39> line:74:5 forward
| | |-TemplateTypeParmDecl 0x12749d0 <line:72:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1274d50 <line:73:5, line:75:39> line:74:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &) noexcept'
| |   |-ParmVarDecl 0x1274c20 <col:13, col:56> col:56 referenced __t 'typename std::remove_reference<_Tp>::type &'
| |   `-CompoundStmt 0x1274ec0 <line:75:5, col:39>
| |     `-ReturnStmt 0x1274eb0 <col:7, col:36>
| |       `-CXXStaticCastExpr 0x1274e80 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |         `-DeclRefExpr 0x1274e50 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x1274c20 '__t' 'typename std::remove_reference<_Tp>::type &'
| |-FunctionTemplateDecl 0x12752d0 <line:83:3, line:90:5> line:85:5 forward
| | |-TemplateTypeParmDecl 0x1274ed8 <line:83:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1275230 <line:84:5, line:90:5> line:85:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &&) noexcept'
| |   |-ParmVarDecl 0x1275100 <col:13, col:57> col:57 referenced __t 'typename std::remove_reference<_Tp>::type &&'
| |   `-CompoundStmt 0x1275610 <line:86:5, line:90:5>
| |     |-DeclStmt 0x1275588 <line:87:7, line:88:55>
| |     | `-StaticAssertDecl 0x1275548 <line:87:7, line:88:54> line:87:7
| |     |   |-UnaryOperator 0x1275458 <col:21, col:53> '<dependent type>' prefix '!' cannot overflow
| |     |   | `-DependentScopeDeclRefExpr 0x1275420 <col:22, col:53> '<dependent type>' lvalue
| |     |   `-StringLiteral 0x12754e8 <col:60, line:88:7> 'const char [63]' lvalue "template argument substituting _Tp is an lvalue reference type"
| |     `-ReturnStmt 0x1275600 <line:89:7, col:36>
| |       `-CXXStaticCastExpr 0x12755d0 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |         `-DeclRefExpr 0x12755a0 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x1275100 '__t' 'typename std::remove_reference<_Tp>::type &&'
| |-FunctionTemplateDecl 0x12759e8 <line:97:3, line:100:77> line:99:5 move
| | |-TemplateTypeParmDecl 0x1275630 <line:97:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x1275948 <line:98:5, line:100:77> line:99:5 constexpr move 'typename std::remove_reference<_Tp>::type &&(_Tp &&) noexcept'
| | | |-ParmVarDecl 0x1275808 <col:10, col:16> col:16 referenced __t '_Tp &&'
| | | `-CompoundStmt 0x1275c00 <line:100:5, col:77>
| | |   `-ReturnStmt 0x1275bf0 <col:7, col:74>
| | |     `-CXXStaticCastExpr 0x1275bc0 <col:14, col:74> 'typename std::remove_reference<_Tp>::type' xvalue static_cast<typename std::remove_reference<_Tp>::type &&> <Dependent>
| | |       `-DeclRefExpr 0x1275b50 <col:71> '_Tp' lvalue ParmVar 0x1275808 '__t' '_Tp &&'
| | |-FunctionDecl 0x1a9e7f8 <line:98:5, line:100:77> line:99:5 used constexpr move 'typename std::remove_reference<allocator<char> &>::type &&(std::allocator<char> &) noexcept'
| | | |-TemplateArgument type 'std::allocator<char> &'
| | | |-ParmVarDecl 0x1a9e6e8 <col:10, col:16> col:16 used __t 'std::allocator<char> &'
| | | `-CompoundStmt 0x1a9eac0 <line:100:5, col:77>
| | |   `-ReturnStmt 0x1a9eab0 <col:7, col:74>
| | |     `-CXXStaticCastExpr 0x1a9ea80 <col:14, col:74> 'typename std::remove_reference<allocator<char> &>::type':'std::allocator<char>' xvalue static_cast<typename std::remove_reference<class allocator<char> &>::type &&> <NoOp>
| | |       `-DeclRefExpr 0x1a9ea60 <col:71> 'std::allocator<char>' lvalue ParmVar 0x1a9e6e8 '__t' 'std::allocator<char> &'
| | |-FunctionDecl 0x1aca398 <line:98:5, line:100:77> line:99:5 used constexpr move 'typename std::remove_reference<allocator<wchar_t> &>::type &&(std::allocator<wchar_t> &) noexcept'
| | | |-TemplateArgument type 'std::allocator<wchar_t> &'
| | | |-ParmVarDecl 0x1aca288 <col:10, col:16> col:16 used __t 'std::allocator<wchar_t> &'
| | | `-CompoundStmt 0x1aca660 <line:100:5, col:77>
| | |   `-ReturnStmt 0x1aca650 <col:7, col:74>
| | |     `-CXXStaticCastExpr 0x1aca620 <col:14, col:74> 'typename std::remove_reference<allocator<wchar_t> &>::type':'std::allocator<wchar_t>' xvalue static_cast<typename std::remove_reference<class allocator<wchar_t> &>::type &&> <NoOp>
| | |       `-DeclRefExpr 0x1aca600 <col:71> 'std::allocator<wchar_t>' lvalue ParmVar 0x1aca288 '__t' 'std::allocator<wchar_t> &'
| | |-FunctionDecl 0x1aed828 <line:98:5, line:100:77> line:99:5 used constexpr move 'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept'
| | | |-TemplateArgument type 'std::allocator<char16_t> &'
| | | |-ParmVarDecl 0x1aed718 <col:10, col:16> col:16 used __t 'std::allocator<char16_t> &'
| | | `-CompoundStmt 0x1aedaf0 <line:100:5, col:77>
| | |   `-ReturnStmt 0x1aedae0 <col:7, col:74>
| | |     `-CXXStaticCastExpr 0x1aedab0 <col:14, col:74> 'typename std::remove_reference<allocator<char16_t> &>::type':'std::allocator<char16_t>' xvalue static_cast<typename std::remove_reference<class allocator<char16_t> &>::type &&> <NoOp>
| | |       `-DeclRefExpr 0x1aeda90 <col:71> 'std::allocator<char16_t>' lvalue ParmVar 0x1aed718 '__t' 'std::allocator<char16_t> &'
| | |-FunctionDecl 0x1b042a8 <line:98:5, line:100:77> line:99:5 used constexpr move 'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept'
| | | |-TemplateArgument type 'std::allocator<char32_t> &'
| | | |-ParmVarDecl 0x1b04198 <col:10, col:16> col:16 used __t 'std::allocator<char32_t> &'
| | | `-CompoundStmt 0x1b04570 <line:100:5, col:77>
| | |   `-ReturnStmt 0x1b04560 <col:7, col:74>
| | |     `-CXXStaticCastExpr 0x1b04530 <col:14, col:74> 'typename std::remove_reference<allocator<char32_t> &>::type':'std::allocator<char32_t>' xvalue static_cast<typename std::remove_reference<class allocator<char32_t> &>::type &&> <NoOp>
| | |       `-DeclRefExpr 0x1b04510 <col:71> 'std::allocator<char32_t>' lvalue ParmVar 0x1b04198 '__t' 'std::allocator<char32_t> &'
| | `-FunctionDecl 0x1b091a8 <line:98:5, line:100:77> line:99:5 used constexpr move 'typename std::remove_reference<basic_string<char> &>::type &&(std::__cxx11::basic_string<char> &) noexcept'
| |   |-TemplateArgument type 'std::__cxx11::basic_string<char> &'
| |   |-ParmVarDecl 0x1b09098 <col:10, col:16> col:16 used __t 'std::__cxx11::basic_string<char> &'
| |   `-CompoundStmt 0x1b09470 <line:100:5, col:77>
| |     `-ReturnStmt 0x1b09460 <col:7, col:74>
| |       `-CXXStaticCastExpr 0x1b09430 <col:14, col:74> 'typename std::remove_reference<basic_string<char> &>::type':'std::__cxx11::basic_string<char>' xvalue static_cast<typename std::remove_reference<class basic_string<char> &>::type &&> <NoOp>
| |         `-DeclRefExpr 0x1b09410 <col:71> 'std::__cxx11::basic_string<char>' lvalue ParmVar 0x1b09098 '__t' 'std::__cxx11::basic_string<char> &'
| |-ClassTemplateDecl 0x1275d48 <line:103:3, line:106:57> line:104:12 __move_if_noexcept_cond
| | |-TemplateTypeParmDecl 0x1275c18 <line:103:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1275cb8 <line:104:5, line:106:57> line:104:12 struct __move_if_noexcept_cond definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<__not_<is_nothrow_move_constructible<_Tp> >, is_copy_constructible<_Tp> >::type'
| |   `-CXXRecordDecl 0x1276430 <col:5, col:12> col:12 implicit struct __move_if_noexcept_cond
| |-FunctionTemplateDecl 0x1277b60 <line:116:3, line:120:30> line:119:5 move_if_noexcept
| | |-TemplateTypeParmDecl 0x12764d8 <line:116:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1277ac0 <line:117:5, line:120:30> line:119:5 constexpr move_if_noexcept 'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept'
| |   |-ParmVarDecl 0x12779b8 <col:22, col:27> col:27 referenced __x '_Tp &'
| |   `-CompoundStmt 0x1277c80 <line:120:5, col:30>
| |     `-ReturnStmt 0x1277c70 <col:7, col:27>
| |       `-CallExpr 0x1277c48 <col:14, col:27> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1277be0 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |         `-DeclRefExpr 0x1277c28 <col:24> '_Tp' lvalue ParmVar 0x12779b8 '__x' '_Tp &'
| |-FunctionTemplateDecl 0x1277f10 <line:136:3, line:139:37> line:138:5 addressof
| | |-TemplateTypeParmDecl 0x1277c98 <line:136:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x1277e70 <line:137:5, line:139:37> line:138:5 addressof '_Tp *(_Tp &) noexcept' inline
| | | |-ParmVarDecl 0x1277d78 <col:15, col:20> col:20 referenced __r '_Tp &'
| | | `-CompoundStmt 0x1278030 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1278020 <col:7, col:34>
| | |     `-CallExpr 0x1277ff8 <col:14, col:34> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x1277f90 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x112fdf0
| | |       `-DeclRefExpr 0x1277fd8 <col:31> '_Tp' lvalue ParmVar 0x1277d78 '__r' '_Tp &'
| | |-FunctionDecl 0x1a84560 <line:137:5, line:139:37> line:138:5 used addressof 'char *(char &) noexcept' inline
| | | |-TemplateArgument type 'char'
| | | |-ParmVarDecl 0x1a84498 <col:15, col:20> col:20 used __r 'char &'
| | | `-CompoundStmt 0x1a84fc8 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1a84fb8 <col:7, col:34>
| | |     `-CallExpr 0x1a84f90 <col:14, col:34> 'char *'
| | |       |-ImplicitCastExpr 0x1a84f78 <col:14, col:19> 'char *(*)(char &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1a84e20 <col:14, col:19> 'char *(char &) noexcept' lvalue Function 0x1a84d20 '__addressof' 'char *(char &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1a84ae8 <col:31> 'char':'char' lvalue ParmVar 0x1a84498 '__r' 'char &'
| | |-FunctionDecl 0x1a9cd40 <line:137:5, line:139:37> line:138:5 used addressof 'const char *(const char &) noexcept' inline
| | | |-TemplateArgument type 'const char'
| | | |-ParmVarDecl 0x1a9cc78 <col:15, col:20> col:20 used __r 'const char &'
| | | `-CompoundStmt 0x1a9d398 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1a9d388 <col:7, col:34>
| | |     `-CallExpr 0x1a9d360 <col:14, col:34> 'const char *'
| | |       |-ImplicitCastExpr 0x1a9d348 <col:14, col:19> 'const char *(*)(const char &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1a9d240 <col:14, col:19> 'const char *(const char &) noexcept' lvalue Function 0x1a9d140 '__addressof' 'const char *(const char &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1a9cf88 <col:31> 'const char':'const char' lvalue ParmVar 0x1a9cc78 '__r' 'const char &'
| | |-FunctionDecl 0x1ab7000 <line:137:5, line:139:37> line:138:5 used addressof 'wchar_t *(wchar_t &) noexcept' inline
| | | |-TemplateArgument type 'wchar_t'
| | | |-ParmVarDecl 0x1ab6f38 <col:15, col:20> col:20 used __r 'wchar_t &'
| | | `-CompoundStmt 0x1ab7918 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1ab7908 <col:7, col:34>
| | |     `-CallExpr 0x1ab78e0 <col:14, col:34> 'wchar_t *'
| | |       |-ImplicitCastExpr 0x1ab78c8 <col:14, col:19> 'wchar_t *(*)(wchar_t &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1ab77c0 <col:14, col:19> 'wchar_t *(wchar_t &) noexcept' lvalue Function 0x1ab76c0 '__addressof' 'wchar_t *(wchar_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1ab7508 <col:31> 'wchar_t':'wchar_t' lvalue ParmVar 0x1ab6f38 '__r' 'wchar_t &'
| | |-FunctionDecl 0x1ac8960 <line:137:5, line:139:37> line:138:5 used addressof 'const wchar_t *(const wchar_t &) noexcept' inline
| | | |-TemplateArgument type 'const wchar_t'
| | | |-ParmVarDecl 0x1ac8898 <col:15, col:20> col:20 used __r 'const wchar_t &'
| | | `-CompoundStmt 0x1ac8fb8 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1ac8fa8 <col:7, col:34>
| | |     `-CallExpr 0x1ac8f80 <col:14, col:34> 'const wchar_t *'
| | |       |-ImplicitCastExpr 0x1ac8f68 <col:14, col:19> 'const wchar_t *(*)(const wchar_t &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1ac8e60 <col:14, col:19> 'const wchar_t *(const wchar_t &) noexcept' lvalue Function 0x1ac8d60 '__addressof' 'const wchar_t *(const wchar_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1ac8ba8 <col:31> 'const wchar_t':'const wchar_t' lvalue ParmVar 0x1ac8898 '__r' 'const wchar_t &'
| | |-FunctionDecl 0x1ada8c0 <line:137:5, line:139:37> line:138:5 used addressof 'char16_t *(char16_t &) noexcept' inline
| | | |-TemplateArgument type 'char16_t'
| | | |-ParmVarDecl 0x1ada7f8 <col:15, col:20> col:20 used __r 'char16_t &'
| | | `-CompoundStmt 0x1adb1d8 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1adb1c8 <col:7, col:34>
| | |     `-CallExpr 0x1adb1a0 <col:14, col:34> 'char16_t *'
| | |       |-ImplicitCastExpr 0x1adb188 <col:14, col:19> 'char16_t *(*)(char16_t &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1adb080 <col:14, col:19> 'char16_t *(char16_t &) noexcept' lvalue Function 0x1adaf80 '__addressof' 'char16_t *(char16_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1adadc8 <col:31> 'char16_t':'char16_t' lvalue ParmVar 0x1ada7f8 '__r' 'char16_t &'
| | |-FunctionDecl 0x1aebea0 <line:137:5, line:139:37> line:138:5 used addressof 'const char16_t *(const char16_t &) noexcept' inline
| | | |-TemplateArgument type 'const char16_t'
| | | |-ParmVarDecl 0x1aebdd8 <col:15, col:20> col:20 used __r 'const char16_t &'
| | | `-CompoundStmt 0x1aec4f8 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1aec4e8 <col:7, col:34>
| | |     `-CallExpr 0x1aec4c0 <col:14, col:34> 'const char16_t *'
| | |       |-ImplicitCastExpr 0x1aec4a8 <col:14, col:19> 'const char16_t *(*)(const char16_t &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1aec3a0 <col:14, col:19> 'const char16_t *(const char16_t &) noexcept' lvalue Function 0x1aec2a0 '__addressof' 'const char16_t *(const char16_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1aec0e8 <col:31> 'const char16_t':'const char16_t' lvalue ParmVar 0x1aebdd8 '__r' 'const char16_t &'
| | |-FunctionDecl 0x1af0de0 <line:137:5, line:139:37> line:138:5 used addressof 'char32_t *(char32_t &) noexcept' inline
| | | |-TemplateArgument type 'char32_t'
| | | |-ParmVarDecl 0x1af0d18 <col:15, col:20> col:20 used __r 'char32_t &'
| | | `-CompoundStmt 0x1af16f8 <line:139:5, col:37>
| | |   `-ReturnStmt 0x1af16e8 <col:7, col:34>
| | |     `-CallExpr 0x1af16c0 <col:14, col:34> 'char32_t *'
| | |       |-ImplicitCastExpr 0x1af16a8 <col:14, col:19> 'char32_t *(*)(char32_t &) noexcept' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1af15a0 <col:14, col:19> 'char32_t *(char32_t &) noexcept' lvalue Function 0x1af14a0 '__addressof' 'char32_t *(char32_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| | |       `-DeclRefExpr 0x1af12e8 <col:31> 'char32_t':'char32_t' lvalue ParmVar 0x1af0d18 '__r' 'char32_t &'
| | `-FunctionDecl 0x1b02920 <line:137:5, line:139:37> line:138:5 used addressof 'const char32_t *(const char32_t &) noexcept' inline
| |   |-TemplateArgument type 'const char32_t'
| |   |-ParmVarDecl 0x1b02858 <col:15, col:20> col:20 used __r 'const char32_t &'
| |   `-CompoundStmt 0x1b02f78 <line:139:5, col:37>
| |     `-ReturnStmt 0x1b02f68 <col:7, col:34>
| |       `-CallExpr 0x1b02f40 <col:14, col:34> 'const char32_t *'
| |         |-ImplicitCastExpr 0x1b02f28 <col:14, col:19> 'const char32_t *(*)(const char32_t &) noexcept' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x1b02e20 <col:14, col:19> 'const char32_t *(const char32_t &) noexcept' lvalue Function 0x1b02d20 '__addressof' 'const char32_t *(const char32_t &) noexcept' (FunctionTemplate 0x112fdf0 '__addressof')
| |         `-DeclRefExpr 0x1b02b68 <col:31> 'const char32_t':'const char32_t' lvalue ParmVar 0x1b02858 '__r' 'const char32_t &'
| |-FunctionTemplateDecl 0x1278348 <line:143:3, line:144:37> col:16 addressof
| | |-TemplateTypeParmDecl 0x1278048 <line:143:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x12782a8 <line:144:5, col:37> col:16 addressof 'const _Tp *(const _Tp &&)' delete
| | | `-ParmVarDecl 0x1278158 <col:26, col:35> col:37 'const _Tp &&'
| | |-FunctionDecl 0x1a848d8 <col:5, col:37> col:16 addressof 'const char *(const char &&)' delete
| | | |-TemplateArgument type 'char'
| | | `-ParmVarDecl 0x1a847e8 <col:26, col:35> col:37 'const char &&'
| | |-FunctionDecl 0x1ab72f8 <col:5, col:37> col:16 addressof 'const wchar_t *(const wchar_t &&)' delete
| | | |-TemplateArgument type 'wchar_t'
| | | `-ParmVarDecl 0x1ab7208 <col:26, col:35> col:37 'const wchar_t &&'
| | |-FunctionDecl 0x1adabb8 <col:5, col:37> col:16 addressof 'const char16_t *(const char16_t &&)' delete
| | | |-TemplateArgument type 'char16_t'
| | | `-ParmVarDecl 0x1adaac8 <col:26, col:35> col:37 'const char16_t &&'
| | `-FunctionDecl 0x1af10d8 <col:5, col:37> col:16 addressof 'const char32_t *(const char32_t &&)' delete
| |   |-TemplateArgument type 'char32_t'
| |   `-ParmVarDecl 0x1af0fe8 <col:26, col:35> col:37 'const char32_t &&'
| |-FunctionTemplateDecl 0x1278798 <line:147:3, line:154:5> line:149:5 __exchange
| | |-TemplateTypeParmDecl 0x12783a8 <line:147:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1278438 <col:27, col:42> col:36 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp'
| | `-FunctionDecl 0x12786f8 <line:148:5, line:154:5> line:149:5 __exchange '_Tp (_Tp &, _Up &&)' inline
| |   |-ParmVarDecl 0x1278518 <col:16, col:21> col:21 referenced __obj '_Tp &'
| |   |-ParmVarDecl 0x12785e8 <col:28, col:34> col:34 referenced __new_val '_Up &&'
| |   `-CompoundStmt 0x1278ad8 <line:150:5, line:154:5>
| |     |-DeclStmt 0x1278928 <line:151:7, col:39>
| |     | `-VarDecl 0x1278810 <col:7, col:38> col:11 referenced __old_val '_Tp' nrvo cinit
| |     |   `-CallExpr 0x1278900 <col:23, col:38> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x1278898 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |     |     `-DeclRefExpr 0x12788e0 <col:33> '_Tp' lvalue ParmVar 0x1278518 '__obj' '_Tp &'
| |     |-BinaryOperator 0x1278a80 <line:152:7, col:42> '<dependent type>' '='
| |     | |-DeclRefExpr 0x1278940 <col:7> '_Tp' lvalue ParmVar 0x1278518 '__obj' '_Tp &'
| |     | `-CallExpr 0x1278a58 <col:15, col:42> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x12789a8 <col:15, col:31> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |     |   `-DeclRefExpr 0x1278a38 <col:33> '_Up' lvalue ParmVar 0x12785e8 '__new_val' '_Up &&'
| |     `-ReturnStmt 0x1278ac0 <line:153:7, col:14>
| |       `-DeclRefExpr 0x1278aa0 <col:14> '_Tp' lvalue Var 0x1278810 '__old_val' '_Tp'
| |-FunctionTemplateDecl 0x1279668 prev 0x124eea8 <line:176:3, line:196:5> line:182:5 swap
| | |-TemplateTypeParmDecl 0x1278b00 <line:176:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x12795c8 prev 0x124ee08 <line:177:5, line:196:5> line:182:5 swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp> >, is_move_constructible<_Tp>, is_move_assignable<_Tp> >::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp> >::value)' inline
| |   |-ParmVarDecl 0x1279178 <col:10, col:15> col:15 referenced __a '_Tp &'
| |   |-ParmVarDecl 0x12791f0 <col:20, col:25> col:25 referenced __b '_Tp &'
| |   `-CompoundStmt 0x1279a10 <line:189:5, line:196:5>
| |     |-DeclStmt 0x12797f8 <line:193:7, col:37>
| |     | `-VarDecl 0x12796e0 <col:7, line:158:45> line:193:11 referenced __tmp '_Tp' cinit
| |     |   `-CallExpr 0x12797d0 <line:158:30, col:45> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x1279768 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |     |     `-DeclRefExpr 0x12797b0 <line:193:33> '_Tp' lvalue ParmVar 0x1279178 '__a' '_Tp &'
| |     |-BinaryOperator 0x1279900 <line:194:7, line:158:45> '<dependent type>' '='
| |     | |-DeclRefExpr 0x1279810 <line:194:7> '_Tp' lvalue ParmVar 0x1279178 '__a' '_Tp &'
| |     | `-CallExpr 0x12798d8 <line:158:30, col:45> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x1279870 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |     |   `-DeclRefExpr 0x12798b8 <line:194:27> '_Tp' lvalue ParmVar 0x12791f0 '__b' '_Tp &'
| |     `-BinaryOperator 0x12799f0 <line:195:7, line:158:45> '<dependent type>' '='
| |       |-DeclRefExpr 0x1279920 <line:195:7> '_Tp' lvalue ParmVar 0x12791f0 '__b' '_Tp &'
| |       `-CallExpr 0x12799c8 <line:158:30, col:45> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1279960 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |         `-DeclRefExpr 0x12799a8 <line:195:27> '_Tp' lvalue Var 0x12796e0 '__tmp' '_Tp'
| `-FunctionTemplateDecl 0x127a228 prev 0x124fd58 <line:201:3, line:214:5> line:205:5 swap
|   |-TemplateTypeParmDecl 0x1279a38 <line:201:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   |-NonTypeTemplateParmDecl 0x1279ac8 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Nm
|   `-FunctionDecl 0x127a188 prev 0x124fcb8 <line:202:5, line:214:5> line:205:5 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|     |-ParmVarDecl 0x1279e48 <col:10, col:24> col:16 referenced __a '_Tp (&)[_Nm]'
|     |-ParmVarDecl 0x1279f98 <col:27, col:41> col:33 referenced __b '_Tp (&)[_Nm]'
|     `-CompoundStmt 0x127a580 <line:211:5, line:214:5>
|       `-ForStmt 0x127a548 <line:212:7, line:213:25>
|         |-DeclStmt 0x127a340 <line:212:12, col:26>
|         | `-VarDecl 0x127a2a0 <col:12, col:25> col:19 referenced __n 'std::size_t':'unsigned long' cinit
|         |   `-ImplicitCastExpr 0x127a328 <col:25> 'std::size_t':'unsigned long' <IntegralCast>
|         |     `-IntegerLiteral 0x127a308 <col:25> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x127a3b0 <col:28, col:34> 'bool' '<'
|         | |-ImplicitCastExpr 0x127a398 <col:28> 'std::size_t':'unsigned long' <LValueToRValue>
|         | | `-DeclRefExpr 0x127a358 <col:28> 'std::size_t':'unsigned long' lvalue Var 0x127a2a0 '__n' 'std::size_t':'unsigned long'
|         | `-DeclRefExpr 0x127a378 <col:34> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x1279ac8 '_Nm' 'std::size_t':'unsigned long'
|         |-UnaryOperator 0x127a3f0 <col:39, col:41> 'std::size_t':'unsigned long' lvalue prefix '++'
|         | `-DeclRefExpr 0x127a3d0 <col:41> 'std::size_t':'unsigned long' lvalue Var 0x127a2a0 '__n' 'std::size_t':'unsigned long'
|         `-CallExpr 0x127a518 <line:213:2, col:25> '<dependent type>'
|           |-UnresolvedLookupExpr 0x127a408 <col:2> '<overloaded function type>' lvalue (ADL) = 'swap' 0x127a228 0x1279668
|           |-ArraySubscriptExpr 0x127a498 <col:7, col:14> '<dependent type>' lvalue
|           | |-DeclRefExpr 0x127a458 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x1279e48 '__a' '_Tp (&)[_Nm]'
|           | `-DeclRefExpr 0x127a478 <col:11> 'std::size_t':'unsigned long' lvalue Var 0x127a2a0 '__n' 'std::size_t':'unsigned long'
|           `-ArraySubscriptExpr 0x127a4f8 <col:17, col:24> '<dependent type>' lvalue
|             |-DeclRefExpr 0x127a4b8 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x1279f98 '__b' '_Tp (&)[_Nm]'
|             `-DeclRefExpr 0x127a4d8 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x127a2a0 '__n' 'std::size_t':'unsigned long'
|-LinkageSpecDecl 0x127a5b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/nested_exception.h:42:1, line:157:1> line:42:8 C++
| `-NamespaceDecl 0x127a608 prev 0x1274908 <line:44:1, line:155:1> line:44:11 std
|   |-original Namespace 0x103af10 'std'
|   |-CXXRecordDecl 0x127a678 <line:52:3, line:77:3> line:52:9 referenced class nested_exception definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor exists non_trivial user_provided
|   | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | | |-MoveConstructor needs_overload_resolution
|   | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
|   | | |-MoveAssignment needs_overload_resolution
|   | | `-Destructor non_trivial user_declared needs_overload_resolution
|   | |-VisibilityAttr 0x127a798 <line:33:13> Implicit Default
|   | |-CXXRecordDecl 0x127a7f0 <line:52:3, col:9> col:9 implicit referenced class nested_exception
|   | |-FieldDecl 0x127a890 <line:54:5, col:19> col:19 referenced _M_ptr 'std::__exception_ptr::exception_ptr'
|   | |-AccessSpecDecl 0x127a8e0 <line:56:3, col:9> col:3 public
|   | |-CXXConstructorDecl 0x127a978 <line:57:5, col:65> col:5 nested_exception 'void () noexcept'
|   | | |-CXXCtorInitializer Field 0x127a890 '_M_ptr' 'std::__exception_ptr::exception_ptr'
|   | | | `-ExprWithCleanups 0x127b2b0 <col:35, col:61> 'std::__exception_ptr::exception_ptr'
|   | | |   `-CXXConstructExpr 0x127b280 <col:35, col:61> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
|   | | |     `-MaterializeTemporaryExpr 0x127b268 <col:42, col:60> 'std::__exception_ptr::exception_ptr' xvalue
|   | | |       `-CXXBindTemporaryExpr 0x127b228 <col:42, col:60> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x127b228)
|   | | |         `-CallExpr 0x127b200 <col:42, col:60> 'std::__exception_ptr::exception_ptr'
|   | | |           `-ImplicitCastExpr 0x127b1e8 <col:42> 'std::__exception_ptr::exception_ptr (*)() noexcept' <FunctionToPointerDecay>
|   | | |             `-DeclRefExpr 0x127b1c8 <col:42> 'std::__exception_ptr::exception_ptr () noexcept' lvalue Function 0x1128920 'current_exception' 'std::__exception_ptr::exception_ptr () noexcept'
|   | | `-CompoundStmt 0x127b2f8 <col:63, col:65>
|   | |-CXXConstructorDecl 0x127ab50 <line:59:5, col:64> col:5 nested_exception 'void (const std::nested_exception &) noexcept' default
|   | | `-ParmVarDecl 0x127aa58 <col:22, col:44> col:45 'const std::nested_exception &'
|   | |-CXXMethodDecl 0x127ad40 <line:61:5, col:75> col:23 operator= 'std::nested_exception &(const std::nested_exception &) noexcept' default
|   | | `-ParmVarDecl 0x127ac10 <col:33, col:55> col:56 'const std::nested_exception &'
|   | |-CXXDestructorDecl 0x127ae38 <line:63:5, col:33> col:13 ~nested_exception 'void () noexcept' virtual
|   | |-CXXMethodDecl 0x127af68 <line:66:5, line:72:5> line:67:5 referenced rethrow_nested 'void () const'
|   | | |-CompoundStmt 0x127b6b0 <line:68:5, line:72:5>
|   | | | |-IfStmt 0x127b568 <line:69:7, line:70:26>
|   | | | | |-ImplicitCastExpr 0x127b3c8 <line:69:11> 'bool' <UserDefinedConversion>
|   | | | | | `-CXXMemberCallExpr 0x127b3a8 <col:11> 'bool'
|   | | | | |   `-MemberExpr 0x127b378 <col:11> '<bound member function type>' .operator bool 0x112b380
|   | | | | |     `-MemberExpr 0x127b318 <col:11> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x127a890
|   | | | | |       `-CXXThisExpr 0x127b308 <col:11> 'const std::nested_exception *' implicit this
|   | | | | `-ExprWithCleanups 0x127b550 <line:70:2, col:26> 'void'
|   | | | |   `-CallExpr 0x127b4d0 <col:2, col:26> 'void'
|   | | | |     |-ImplicitCastExpr 0x127b4b8 <col:2> 'void (*)(std::__exception_ptr::exception_ptr) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x127b468 <col:2> 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))' lvalue Function 0x1128e98 'rethrow_exception' 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
|   | | | |     `-CXXBindTemporaryExpr 0x127b530 <col:20> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x127b530)
|   | | | |       `-CXXConstructExpr 0x127b4f8 <col:20> 'std::__exception_ptr::exception_ptr' 'void (const std::__exception_ptr::exception_ptr &) noexcept'
|   | | | |         `-MemberExpr 0x127b438 <col:20> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x127a890
|   | | | |           `-CXXThisExpr 0x127b428 <col:20> 'const std::nested_exception *' implicit this
|   | | | `-CallExpr 0x127b690 <line:71:7, col:22> 'void'
|   | | |   `-ImplicitCastExpr 0x127b678 <col:7, col:12> 'void (*)() __attribute__((noreturn)) noexcept' <FunctionToPointerDecay>
|   | | |     `-DeclRefExpr 0x127b5e8 <col:7, col:12> 'void () __attribute__((noreturn)) noexcept' lvalue Function 0x110ec70 'terminate' 'void () __attribute__((noreturn)) noexcept'
|   | | `-CXX11NoReturnAttr 0x127b008 <line:65:7>
|   | `-CXXMethodDecl 0x127b0e0 <line:74:5, line:76:22> line:75:5 nested_ptr 'std::__exception_ptr::exception_ptr () const noexcept'
|   |   `-CompoundStmt 0x127b750 <line:76:5, col:22>
|   |     `-ReturnStmt 0x127b740 <col:7, col:14>
|   |       `-CXXConstructExpr 0x127b710 <col:14> 'std::__exception_ptr::exception_ptr' 'void (const std::__exception_ptr::exception_ptr &) noexcept'
|   |         `-MemberExpr 0x127b6e0 <col:14> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x127a890
|   |           `-CXXThisExpr 0x127b6d0 <col:14> 'const std::nested_exception *' implicit this
|   |-ClassTemplateDecl 0x127c920 <line:79:3, line:89:5> line:80:12 _Nested_exception
|   | |-TemplateTypeParmDecl 0x127b768 <line:79:12, col:21> col:21 referenced typename depth 0 index 0 _Except
|   | `-CXXRecordDecl 0x127c890 <line:80:5, line:89:5> line:80:12 struct _Nested_exception definition
|   |   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   |   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   |   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   |   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |   |-public '_Except'
|   |   |-public 'std::nested_exception'
|   |   |-VisibilityAttr 0x127cb70 <line:33:13> Implicit Default
|   |   |-CXXRecordDecl 0x127cc48 <line:80:5, col:12> col:12 implicit referenced struct _Nested_exception
|   |   |-CXXConstructorDecl 0x127ce18 <line:82:7, line:84:9> line:82:16 _Nested_exception<_Except> 'void (const _Except &)'
|   |   | |-ParmVarDecl 0x127cd18 <col:34, col:49> col:49 referenced __ex 'const _Except &'
|   |   | |-CXXCtorInitializer '_Except'
|   |   | | `-ParenListExpr 0x127d0e0 <line:83:16, col:21> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x127d0c0 <col:17> 'const _Except' lvalue ParmVar 0x127cd18 '__ex' 'const _Except &'
|   |   | `-CompoundStmt 0x127d140 <line:84:7, col:9>
|   |   `-CXXConstructorDecl 0x127cff8 <line:86:7, line:88:9> line:86:16 _Nested_exception<_Except> 'void (_Except &&)'
|   |     |-ParmVarDecl 0x127cf08 <col:34, col:44> col:44 referenced __ex '_Except &&'
|   |     |-CXXCtorInitializer '_Except'
|   |     | `-ParenListExpr 0x127d1b0 <line:87:16, col:45> 'NULL TYPE'
|   |     |   `-CXXStaticCastExpr 0x127d180 <col:17, col:44> '_Except' xvalue static_cast<_Except &&> <Dependent>
|   |     |     `-DeclRefExpr 0x127d150 <col:40> '_Except' lvalue ParmVar 0x127cf08 '__ex' '_Except &&'
|   |     `-CompoundStmt 0x127d210 <line:88:7, col:9>
|   |-FunctionTemplateDecl 0x127d528 <line:94:3, line:101:5> line:97:5 __throw_with_nested_impl
|   | |-TemplateTypeParmDecl 0x127d220 <line:94:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x127d488 <line:96:5, line:101:5> line:97:5 __throw_with_nested_impl 'void (_Tp &&, std::true_type)' inline
|   |   |-ParmVarDecl 0x127d2f8 <col:30, col:36> col:36 referenced __t '_Tp &&'
|   |   |-ParmVarDecl 0x127d370 <col:41> col:50 'std::true_type':'std::integral_constant<bool, true>'
|   |   |-CompoundStmt 0x127da58 <line:98:5, line:101:5>
|   |   | |-DeclStmt 0x127d780 <line:99:7, col:55>
|   |   | | `-TypeAliasDecl 0x127d720 <col:7, col:51> col:13 referenced _Up 'typename remove_reference<_Tp>::type'
|   |   | |   `-DependentNameType 0x127d6b0 'typename remove_reference<_Tp>::type' dependent
|   |   | `-CXXThrowExpr 0x127da40 <line:100:7, col:58> 'void'
|   |   |   `-CXXUnresolvedConstructExpr 0x127da18 <col:13, col:58> '_Nested_exception<_Up>' '_Nested_exception<_Up>' list
|   |   |     `-InitListExpr 0x127d9d0 <col:35, col:58> 'void'
|   |   |       `-CallExpr 0x127d9a8 <col:36, col:57> '<dependent type>'
|   |   |         |-UnresolvedLookupExpr 0x127d8f8 <col:36, col:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
|   |   |         `-DeclRefExpr 0x127d988 <col:54> '_Tp' lvalue ParmVar 0x127d2f8 '__t' '_Tp &&'
|   |   |-CXX11NoReturnAttr 0x127d590 <line:95:7>
|   |   `-VisibilityAttr 0x127d5e8 <line:33:13> Implicit Default
|   |-FunctionTemplateDecl 0x127dd88 <line:103:3, line:107:37> line:106:5 __throw_with_nested_impl
|   | |-TemplateTypeParmDecl 0x127da78 <line:103:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x127dce8 <line:105:5, line:107:37> line:106:5 __throw_with_nested_impl 'void (_Tp &&, std::false_type)' inline
|   |   |-ParmVarDecl 0x127db58 <col:30, col:36> col:36 referenced __t '_Tp &&'
|   |   |-ParmVarDecl 0x127dbd0 <col:41> col:51 'std::false_type':'std::integral_constant<bool, false>'
|   |   |-CompoundStmt 0x127dfa8 <line:107:5, col:37>
|   |   | `-CXXThrowExpr 0x127df90 <col:7, col:34> 'void'
|   |   |   `-CallExpr 0x127df68 <col:13, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x127deb8 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
|   |   |     `-DeclRefExpr 0x127df48 <col:31> '_Tp' lvalue ParmVar 0x127db58 '__t' '_Tp &&'
|   |   |-CXX11NoReturnAttr 0x127ddf0 <line:104:7>
|   |   `-VisibilityAttr 0x127de48 <line:33:13> Implicit Default
|   |-FunctionTemplateDecl 0x127e1f8 <line:111:3, line:124:5> line:114:5 throw_with_nested
|   | |-TemplateTypeParmDecl 0x127dfc0 <line:111:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x127e158 <line:113:5, line:124:5> line:114:5 throw_with_nested 'void (_Tp &&)' inline
|   |   |-ParmVarDecl 0x127e098 <col:23, col:29> col:29 referenced __t '_Tp &&'
|   |   |-CompoundStmt 0x127f4f8 <line:115:5, line:124:5>
|   |   | |-DeclStmt 0x127e450 <line:116:7, col:44>
|   |   | | `-TypeAliasDecl 0x127e3f0 <col:7, col:40> col:13 referenced _Up 'typename decay<_Tp>::type'
|   |   | |   `-DependentNameType 0x127e380 'typename decay<_Tp>::type' dependent
|   |   | |-DeclStmt 0x127e858 <line:117:7, line:118:66>
|   |   | | `-TypeAliasDecl 0x127e7f8 <line:117:7, line:118:65> line:117:13 referenced _CopyConstructible '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up> >'
|   |   | |   `-TemplateSpecializationType 0x127e710 '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up> >' dependent __and_
|   |   | |     |-TemplateArgument type 'is_copy_constructible<_Up>'
|   |   | |     `-TemplateArgument type 'is_move_constructible<_Up>'
|   |   | |-DeclStmt 0x127ea38 <line:119:7, line:120:59>
|   |   | | `-StaticAssertDecl 0x127e9f8 <line:119:7, line:120:58> line:119:7
|   |   | |   |-DependentScopeDeclRefExpr 0x127e8f0 <col:21, col:41> '<dependent type>' lvalue
|   |   | |   `-StringLiteral 0x127e9a8 <line:120:4> 'const char [53]' lvalue "throw_with_nested argument must be CopyConstructible"
|   |   | |-DeclStmt 0x127f280 <line:121:7, line:122:50>
|   |   | | `-TypeAliasDecl 0x127f220 <line:121:7, line:122:49> line:121:13 referenced __nest '__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >'
|   |   | |   `-TemplateSpecializationType 0x127f0f0 '__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' dependent __and_
|   |   | |     |-TemplateArgument type 'is_class<_Up>'
|   |   | |     |-TemplateArgument type '__bool_constant<!__is_final(_Up)>':'integral_constant<bool, !__is_final(_Up)>'
|   |   | |     `-TemplateArgument type '__not_<is_base_of<std::nested_exception, _Up> >'
|   |   | `-CallExpr 0x127f4c8 <line:123:7, col:69> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x127f2b8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__throw_with_nested_impl' 0x127d528 0x127dd88
|   |   |   |-CallExpr 0x127f400 <col:37, col:58> '<dependent type>'
|   |   |   | |-UnresolvedLookupExpr 0x127f350 <col:37, col:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
|   |   |   | `-DeclRefExpr 0x127f3e0 <col:55> '_Tp' lvalue ParmVar 0x127e098 '__t' '_Tp &&'
|   |   |   `-CXXUnresolvedConstructExpr 0x127f4a0 <col:61, col:68> '__nest':'__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' '__nest':'__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' list
|   |   |     `-InitListExpr 0x127f460 <col:67, col:68> 'void'
|   |   |-CXX11NoReturnAttr 0x127e258 <line:112:7>
|   |   `-VisibilityAttr 0x127e2b0 <line:33:13> Implicit Default
|   |-TypeAliasTemplateDecl 0x1280010 <line:127:3, line:132:8> line:128:5 __rethrow_if_nested_cond
|   | |-TemplateTypeParmDecl 0x127f530 <line:127:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-TypeAliasDecl 0x127ffb0 <line:128:5, line:132:8> line:128:11 __rethrow_if_nested_cond 'typename enable_if<__and_<is_polymorphic<_Tp>, __or_<__not_<is_base_of<nested_exception, _Tp> >, is_convertible<_Tp *, nested_exception *> > >::value>::type'
|   |   `-DependentNameType 0x127ff40 'typename enable_if<__and_<is_polymorphic<_Tp>, __or_<__not_<is_base_of<nested_exception, _Tp> >, is_convertible<_Tp *, nested_exception *> > >::value>::type' dependent
|   |-FunctionTemplateDecl 0x1280a68 <line:135:3, line:141:5> line:137:5 __rethrow_if_nested_impl
|   | |-TemplateTypeParmDecl 0x1280068 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|   | `-FunctionDecl 0x12809c8 <line:136:5, line:141:5> line:137:5 __rethrow_if_nested_impl '__rethrow_if_nested_cond<_Ex> (const _Ex *)' inline
|   |   |-ParmVarDecl 0x12808b0 <col:30, col:41> col:41 referenced __ptr 'const _Ex *'
|   |   |-CompoundStmt 0x1280de8 <line:138:5, line:141:5>
|   |   | `-IfStmt 0x1280db0 <line:139:7, line:140:27> has_var
|   |   |   |-DeclStmt 0x1280dd0 <line:139:11, col:70>
|   |   |   | `-VarDecl 0x1280b58 <col:11, col:70> col:16 referenced __ne_ptr 'const std::nested_exception *':'const std::nested_exception *' cinit
|   |   |   |   `-CXXDynamicCastExpr 0x1280bf0 <col:27, col:70> 'const std::nested_exception *' dynamic_cast<const class std::nested_exception *> <Dependent>
|   |   |   |     `-DeclRefExpr 0x1280bc0 <col:65> 'const _Ex *' lvalue ParmVar 0x12808b0 '__ptr' 'const _Ex *'
|   |   |   |-ImplicitCastExpr 0x1280d10 <col:16> 'bool' <PointerToBoolean>
|   |   |   | `-ImplicitCastExpr 0x1280cf8 <col:16> 'const std::nested_exception *':'const std::nested_exception *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1280cd8 <col:16> 'const std::nested_exception *':'const std::nested_exception *' lvalue Var 0x1280b58 '__ne_ptr' 'const std::nested_exception *':'const std::nested_exception *'
|   |   |   `-CXXMemberCallExpr 0x1280d90 <line:140:2, col:27> 'void'
|   |   |     `-MemberExpr 0x1280d60 <col:2, col:12> '<bound member function type>' ->rethrow_nested 0x127af68
|   |   |       `-ImplicitCastExpr 0x1280d48 <col:2> 'const std::nested_exception *':'const std::nested_exception *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1280d28 <col:2> 'const std::nested_exception *':'const std::nested_exception *' lvalue Var 0x1280b58 '__ne_ptr' 'const std::nested_exception *':'const std::nested_exception *'
|   |   `-VisibilityAttr 0x1280ac8 <line:33:13> Implicit Default
|   |-FunctionDecl 0x1280ed8 <line:144:3, line:146:5> line:145:3 __rethrow_if_nested_impl 'void (const void *)' inline
|   | |-ParmVarDecl 0x1280e18 <col:28, col:38> col:39 'const void *'
|   | |-CompoundStmt 0x1280fd8 <line:146:3, col:5>
|   | `-VisibilityAttr 0x1280f80 <line:33:13> Implicit Default
|   `-FunctionTemplateDecl 0x1281228 <line:149:3, line:152:62> line:151:5 rethrow_if_nested
|     |-TemplateTypeParmDecl 0x1280fe8 <line:149:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|     `-FunctionDecl 0x1281188 <line:150:5, line:152:62> line:151:5 rethrow_if_nested 'void (const _Ex &)' inline
|       |-ParmVarDecl 0x12810c8 <col:23, col:34> col:34 referenced __ex 'const _Ex &'
|       |-CompoundStmt 0x1281428 <line:152:5, col:62>
|       | `-CallExpr 0x1281400 <col:7, col:59> '<dependent type>'
|       |   |-UnresolvedLookupExpr 0x1281300 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__rethrow_if_nested_impl' 0x1280a68 0x1280ed8
|       |   `-CallExpr 0x12813d8 <col:37, col:58> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x1281370 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x112fdf0
|       |     `-DeclRefExpr 0x12813b8 <col:54> 'const _Ex' lvalue ParmVar 0x12810c8 '__ex' 'const _Ex &'
|       `-VisibilityAttr 0x1281288 <line:33:13> Implicit Default
|-NamespaceDecl 0x1281460 prev 0x127a608 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/functexcept.h:42:1, line:113:1> line:42:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x12814d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-FunctionDecl 0x12815c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/functexcept.h:47:3, line:48:59> col:3 __throw_bad_exception 'void () __attribute__((noreturn))'
| |-FunctionDecl 0x12816f8 <line:51:3, line:52:55> col:3 used __throw_bad_alloc 'void () __attribute__((noreturn))'
| |-FunctionDecl 0x1281830 <line:55:3, line:56:54> col:3 used __throw_bad_cast 'void () __attribute__((noreturn))'
| |-FunctionDecl 0x1281968 <line:58:3, line:59:56> col:3 __throw_bad_typeid 'void () __attribute__((noreturn))'
| |-FunctionDecl 0x1281ae8 <line:62:3, line:63:64> col:3 used __throw_logic_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1281a20 <col:23, col:33> col:34 'const char *'
| |-FunctionDecl 0x1281c38 <line:65:3, line:66:65> col:3 __throw_domain_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1281ba8 <col:24, col:34> col:35 'const char *'
| |-FunctionDecl 0x1281d88 <line:68:3, line:69:69> col:3 used __throw_invalid_argument 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1281cf8 <col:28, col:38> col:39 'const char *'
| |-FunctionDecl 0x1281ed8 <line:71:3, line:72:65> col:3 used __throw_length_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1281e48 <col:24, col:34> col:35 'const char *'
| |-FunctionDecl 0x1282028 <line:74:3, line:75:65> col:3 used __throw_out_of_range 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1281f98 <col:24, col:34> col:35 'const char *'
| |-FunctionDecl 0x1282240 <line:77:3, line:79:53> line:78:3 used __throw_out_of_range_fmt 'void (const char *, ...) __attribute__((noreturn))'
| | `-ParmVarDecl 0x12820e8 <col:28, col:38> col:39 'const char *'
| |-FunctionDecl 0x1282390 <line:81:3, line:82:66> col:3 __throw_runtime_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1282300 <col:25, col:35> col:36 'const char *'
| |-FunctionDecl 0x12824e0 <line:84:3, line:85:64> col:3 __throw_range_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1282450 <col:23, col:33> col:34 'const char *'
| |-FunctionDecl 0x1282630 <line:87:3, line:88:67> col:3 __throw_overflow_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x12825a0 <col:26, col:36> col:37 'const char *'
| |-FunctionDecl 0x1282780 <line:90:3, line:91:68> col:3 __throw_underflow_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x12826f0 <col:27, col:37> col:38 'const char *'
| |-FunctionDecl 0x1284918 <line:94:3, line:95:64> col:3 referenced __throw_ios_failure 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1282840 <col:23, col:33> col:34 'const char *'
| |-FunctionDecl 0x1284b68 <line:97:3, line:98:69> col:3 __throw_ios_failure 'void (const char *, int) __attribute__((noreturn))'
| | |-ParmVarDecl 0x12849d8 <col:23, col:33> col:34 'const char *'
| | `-ParmVarDecl 0x1284a58 <col:36> col:39 'int'
| |-FunctionDecl 0x1284d28 <line:101:3, line:102:57> col:3 __throw_system_error 'void (int) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1284c30 <col:24> col:27 'int'
| |-FunctionDecl 0x1284e78 <line:105:3, line:106:57> col:3 __throw_future_error 'void (int) __attribute__((noreturn))'
| | `-ParmVarDecl 0x1284de8 <col:24> col:27 'int'
| `-FunctionDecl 0x1284f40 <line:109:3, line:110:59> col:3 __throw_bad_function_call 'void () __attribute__((noreturn))'
|-LinkageSpecDecl 0x1285000 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:67:1, line:433:1> line:67:8 C++
| `-NamespaceDecl 0x1285070 prev 0x1281460 <line:69:1, line:432:1> line:69:11 std
|   |-original Namespace 0x103af10 'std'
|   |-VisibilityAttr 0x12850e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-CXXRecordDecl 0x1285138 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:73:3, col:24> col:10 referenced struct __true_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-CXXRecordDecl 0x1285258 <col:3, col:10> col:10 implicit struct __true_type
|   | |-CXXConstructorDecl 0x1a85e10 <col:10> col:10 implicit constexpr __true_type 'void ()' inline default trivial noexcept-unevaluated 0x1a85e10
|   | |-CXXConstructorDecl 0x1a85f18 <col:10> col:10 implicit constexpr __true_type 'void (const std::__true_type &)' inline default trivial noexcept-unevaluated 0x1a85f18
|   | | `-ParmVarDecl 0x1a86028 <col:10> col:10 'const std::__true_type &'
|   | `-CXXConstructorDecl 0x1a860c8 <col:10> col:10 implicit constexpr __true_type 'void (std::__true_type &&)' inline default trivial noexcept-unevaluated 0x1a860c8
|   |   `-ParmVarDecl 0x1a861d8 <col:10> col:10 'std::__true_type &&'
|   |-CXXRecordDecl 0x1285300 <line:74:3, col:25> col:10 referenced struct __false_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x1285418 <col:3, col:10> col:10 implicit struct __false_type
|   | |-CXXConstructorDecl 0x15e3708 <col:10> col:10 implicit referenced constexpr __false_type 'void () noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x15e3808 <col:10> col:10 implicit constexpr __false_type 'void (const std::__false_type &)' inline default trivial noexcept-unevaluated 0x15e3808
|   | | `-ParmVarDecl 0x15e3918 <col:10> col:10 'const std::__false_type &'
|   | |-CXXConstructorDecl 0x15e39b8 <col:10> col:10 implicit used constexpr __false_type 'void (std::__false_type &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x15e3ac8 <col:10> col:10 'std::__false_type &&'
|   | | `-CompoundStmt 0x1a866e0 <col:10>
|   | `-CXXDestructorDecl 0x15e3b68 <col:10> col:10 implicit referenced ~__false_type 'void () noexcept' inline default trivial
|   |-ClassTemplateDecl 0x12855e0 <line:76:3, line:78:36> line:77:12 __truth_type
|   | |-NonTypeTemplateParmDecl 0x12854d0 <line:76:12> col:16 'bool' depth 0 index 0
|   | |-CXXRecordDecl 0x1285550 <line:77:5, line:78:36> line:77:12 struct __truth_type definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x1285850 <col:5, col:12> col:12 implicit struct __truth_type
|   | | `-TypedefDecl 0x12858f0 <line:78:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | `-ClassTemplateSpecialization 0x12859a8 '__truth_type'
|   |-ClassTemplateSpecializationDecl 0x12859a8 <line:80:3, line:82:35> line:81:12 struct __truth_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x1285bc8 <col:5, col:12> col:12 implicit struct __truth_type
|   | `-TypedefDecl 0x1285c68 <line:82:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x1285e90 <line:86:3, line:91:5> line:87:12 __traitor
|   | |-TemplateTypeParmDecl 0x1285cd8 <line:86:12, col:18> col:18 class depth 0 index 0 _Sp
|   | |-TemplateTypeParmDecl 0x1285d58 <col:23, col:29> col:29 class depth 0 index 1 _Tp
|   | `-CXXRecordDecl 0x1285e00 <line:87:5, line:91:5> line:87:12 struct __traitor definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x1286120 <col:5, col:12> col:12 implicit struct __traitor
|   |   |-EnumDecl 0x12861b0 <line:89:7, col:65> col:7
|   |   | `-EnumConstantDecl 0x1286410 <col:14, col:63> col:14 referenced __value 'std::__traitor::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:89:7)'
|   |   |   `-BinaryOperator 0x12863f0 <col:24, col:63> 'bool' '||'
|   |   |     |-CXXUnresolvedConstructExpr 0x1286308 <col:24, col:41> 'bool' 'bool'
|   |   |     | `-DependentScopeDeclRefExpr 0x12862d0 <col:29, col:34> '<dependent type>' lvalue
|   |   |     `-CXXUnresolvedConstructExpr 0x12863c8 <col:46, col:63> 'bool' 'bool'
|   |   |       `-DependentScopeDeclRefExpr 0x1286390 <col:51, col:56> '<dependent type>' lvalue
|   |   `-TypedefDecl 0x1286630 <line:90:7, col:54> col:54 __type 'typename __truth_type<__value>::__type'
|   |     `-DependentNameType 0x12865c0 'typename __truth_type<__value>::__type' dependent
|   |-ClassTemplateDecl 0x1286850 <line:94:3, line:99:5> line:95:12 __are_same
|   | |-TemplateTypeParmDecl 0x12866a0 <line:94:12> col:20 typename depth 0 index 0
|   | |-TemplateTypeParmDecl 0x1286718 <col:22> col:30 typename depth 0 index 1
|   | |-CXXRecordDecl 0x12867c0 <line:95:5, line:99:5> line:95:12 struct __are_same definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x128aac0 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x128ab50 <line:97:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x128ac30 <col:14, col:24> col:14 __value 'std::__are_same::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   | | |   `-IntegerLiteral 0x128ac10 <col:24> 'int' 0
|   | | `-TypedefDecl 0x128ac90 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x16b6338 <line:101:3, line:106:5> line:102:12 struct __are_same definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument type 'float'
|   | | |-CXXRecordDecl 0x16b6620 prev 0x16b6338 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x16b66b0 <line:104:7> col:7
|   | | | `-EnumConstantDecl 0x16b67a0 <col:14, col:24> col:14 referenced __value 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
|   | | |   `-ImplicitCastExpr 0x16b67f0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x16b6780 <col:24> 'int' Int: 1
|   | | |       `-IntegerLiteral 0x128b2c0 <col:24> 'int' 1
|   | | `-TypedefDecl 0x16b6808 <line:105:7, col:27> col:27 __type 'std::__true_type'
|   | |   `-RecordType 0x12851d0 'std::__true_type'
|   | |     `-CXXRecord 0x1285138 '__true_type'
|   | |-ClassTemplateSpecializationDecl 0x16b68b8 <line:94:3, line:99:5> line:95:12 struct __are_same definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'float'
|   | | |-TemplateArgument type 'double'
|   | | |-CXXRecordDecl 0x16b6b40 prev 0x16b68b8 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x16b6bd0 <line:97:7> col:7
|   | | | `-EnumConstantDecl 0x16b6cc0 <col:14, col:24> col:14 referenced __value 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   | | |   `-ImplicitCastExpr 0x16b6d10 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x16b6ca0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128ac10 <col:24> 'int' 0
|   | | `-TypedefDecl 0x16b6d28 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x16b92a8 <line:94:3, line:99:5> line:95:12 struct __are_same definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument type 'float'
|   | | |-CXXRecordDecl 0x16b9530 prev 0x16b92a8 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x16b95c0 <line:97:7> col:7
|   | | | `-EnumConstantDecl 0x16b96b0 <col:14, col:24> col:14 referenced __value 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   | | |   `-ImplicitCastExpr 0x16b9700 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x16b9690 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128ac10 <col:24> 'int' 0
|   | | `-TypedefDecl 0x16b9718 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x16b97c8 <line:101:3, line:106:5> line:102:12 struct __are_same definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'double'
|   | | |-TemplateArgument type 'double'
|   | | |-CXXRecordDecl 0x16b9ab0 prev 0x16b97c8 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x16b9b40 <line:104:7> col:7
|   | | | `-EnumConstantDecl 0x16b9c30 <col:14, col:24> col:14 referenced __value 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
|   | | |   `-ImplicitCastExpr 0x16b9c80 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x16b9c10 <col:24> 'int' Int: 1
|   | | |       `-IntegerLiteral 0x128b2c0 <col:24> 'int' 1
|   | | `-TypedefDecl 0x16b9c98 <line:105:7, col:27> col:27 __type 'std::__true_type'
|   | |   `-RecordType 0x12851d0 'std::__true_type'
|   | |     `-CXXRecord 0x1285138 '__true_type'
|   | |-ClassTemplateSpecializationDecl 0x16bc208 <line:94:3, line:99:5> line:95:12 struct __are_same definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'long double'
|   | | |-TemplateArgument type 'float'
|   | | |-CXXRecordDecl 0x16bc490 prev 0x16bc208 <col:5, col:12> col:12 implicit struct __are_same
|   | | |-EnumDecl 0x16bc520 <line:97:7> col:7
|   | | | `-EnumConstantDecl 0x16bc610 <col:14, col:24> col:14 referenced __value 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   | | |   `-ImplicitCastExpr 0x16bc660 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x16bc5f0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128ac10 <col:24> 'int' 0
|   | | `-TypedefDecl 0x16bc678 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | `-ClassTemplateSpecializationDecl 0x16bc728 <line:94:3, line:99:5> line:95:12 struct __are_same definition
|   |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-TemplateArgument type 'long double'
|   |   |-TemplateArgument type 'double'
|   |   |-CXXRecordDecl 0x16bc9b0 prev 0x16bc728 <col:5, col:12> col:12 implicit struct __are_same
|   |   |-EnumDecl 0x16bca40 <line:97:7> col:7
|   |   | `-EnumConstantDecl 0x16bcb30 <col:14, col:24> col:14 referenced __value 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   |   |   `-ImplicitCastExpr 0x16bcb80 <col:24> 'unsigned int' <IntegralCast>
|   |   |     `-ConstantExpr 0x16bcb10 <col:24> 'int' Int: 0
|   |   |       `-IntegerLiteral 0x128ac10 <col:24> 'int' 0
|   |   `-TypedefDecl 0x16bcb98 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x1285390 'std::__false_type'
|   |       `-CXXRecord 0x1285300 '__false_type'
|   |-ClassTemplatePartialSpecializationDecl 0x128aee8 <line:101:3, line:106:5> line:102:12 struct __are_same definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x128ad00 <line:101:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x128b168 <line:102:5, col:12> col:12 implicit struct __are_same
|   | |-EnumDecl 0x128b1f8 <line:104:7, col:26> col:7
|   | | `-EnumConstantDecl 0x128b2e0 <col:14, col:24> col:14 __value 'std::__are_same<type-parameter-0-0, type-parameter-0-0>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
|   | |   `-IntegerLiteral 0x128b2c0 <col:24> 'int' 1
|   | `-TypedefDecl 0x128b340 <line:105:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x128b4d8 <line:109:3, line:114:5> line:110:12 __is_void
|   | |-TemplateTypeParmDecl 0x128b3b0 <line:109:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x128b448 <line:110:5, line:114:5> line:110:12 struct __is_void definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x128b730 <col:5, col:12> col:12 implicit struct __is_void
|   | | |-EnumDecl 0x128b7c0 <line:112:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x128b8a0 <col:14, col:24> col:14 __value 'std::__is_void::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:112:7)'
|   | | |   `-IntegerLiteral 0x128b880 <col:24> 'int' 0
|   | | `-TypedefDecl 0x128b900 <line:113:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | `-ClassTemplateSpecialization 0x128b998 '__is_void'
|   |-ClassTemplateSpecializationDecl 0x128b998 <line:116:3, line:121:5> line:117:12 struct __is_void definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'void'
|   | |-CXXRecordDecl 0x128bbb8 <col:5, col:12> col:12 implicit struct __is_void
|   | |-EnumDecl 0x128bc48 <line:119:7, col:26> col:7
|   | | `-EnumConstantDecl 0x128bd50 <col:14, col:24> col:14 __value 'std::__is_void<void>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:119:7)'
|   | |   `-ImplicitCastExpr 0x128bda0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x128bd30 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x128bd10 <col:24> 'int' 1
|   | `-TypedefDecl 0x128bdc8 <line:120:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x128bf68 <line:126:3, line:131:5> line:127:12 __is_integer
|   | |-TemplateTypeParmDecl 0x128be38 <line:126:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x128bed8 <line:127:5, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x128c1c0 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x128c250 <line:129:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x128c330 <col:14, col:24> col:14 __value 'std::__is_integer::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x128c390 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecialization 0x128c428 '__is_integer'
|   | |-ClassTemplateSpecialization 0x12900f8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x12905c8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1290a98 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1290f60 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1291420 '__is_integer'
|   | |-ClassTemplateSpecialization 0x12918e0 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1291da8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1295cf8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x12961c8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1296698 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1296b68 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1297038 '__is_integer'
|   | |-ClassTemplateSpecialization 0x1297508 '__is_integer'
|   | |-ClassTemplateSpecialization 0x12979d8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x129beb8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x129c388 '__is_integer'
|   | |-ClassTemplateSpecializationDecl 0x12bafb8 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'long double'
|   | | |-CXXRecordDecl 0x12bb1c8 prev 0x12bafb8 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x12bb258 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x12bb350 <col:14, col:24> col:14 referenced __value 'std::__is_integer<long double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x12bb3a0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x12bb330 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x12bb3b8 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x12bc3e0 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'double'
|   | | |-CXXRecordDecl 0x12bc5e8 prev 0x12bc3e0 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x12bc678 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x12bc770 <col:14, col:24> col:14 referenced __value 'std::__is_integer<double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x12bc7c0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x12bc750 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x12bc7d8 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x12bcc68 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'float'
|   | | |-CXXRecordDecl 0x12bce78 prev 0x12bcc68 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x12bcf08 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x12bd000 <col:14, col:24> col:14 referenced __value 'std::__is_integer<float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x12bd050 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x12bcfe0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x12bd068 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x1a856e8 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'char *'
|   | | |-CXXRecordDecl 0x1a858f8 prev 0x1a856e8 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x1a85988 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x1a85a80 <col:14, col:24> col:14 __value 'std::__is_integer<char *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x1a85ad0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x1a85a60 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x1a85ae8 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x1ab8038 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'wchar_t *'
|   | | |-CXXRecordDecl 0x1ab8248 prev 0x1ab8038 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x1ab82d8 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x1ab83d0 <col:14, col:24> col:14 __value 'std::__is_integer<wchar_t *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x1ab8420 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x1ab83b0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x1ab8438 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x1acc9b8 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'const char *'
|   | | |-CXXRecordDecl 0x1accbc8 prev 0x1acc9b8 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x1accc58 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x1accd50 <col:14, col:24> col:14 __value 'std::__is_integer<const char *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x1accda0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x1accd30 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x1accdb8 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x1ad3e38 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'const wchar_t *'
|   | | |-CXXRecordDecl 0x1ad4048 prev 0x1ad3e38 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x1ad40d8 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x1ad41d0 <col:14, col:24> col:14 __value 'std::__is_integer<const wchar_t *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x1ad4220 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x1ad41b0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x1ad4238 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x1adb8f8 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'const char16_t *'
|   | | |-CXXRecordDecl 0x1adbb08 prev 0x1adb8f8 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x1adbb98 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x1adbc90 <col:14, col:24> col:14 __value 'std::__is_integer<const char16_t *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x1adbce0 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x1adbc70 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   | | `-TypedefDecl 0x1adbcf8 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | `-ClassTemplateSpecializationDecl 0x1af1e18 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-TemplateArgument type 'const char32_t *'
|   |   |-CXXRecordDecl 0x1af2028 prev 0x1af1e18 <col:5, col:12> col:12 implicit struct __is_integer
|   |   |-EnumDecl 0x1af20b8 <line:129:7> col:7
|   |   | `-EnumConstantDecl 0x1af21b0 <col:14, col:24> col:14 __value 'std::__is_integer<const char32_t *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   |   |   `-ImplicitCastExpr 0x1af2200 <col:24> 'unsigned int' <IntegralCast>
|   |   |     `-ConstantExpr 0x1af2190 <col:24> 'int' Int: 0
|   |   |       `-IntegerLiteral 0x128c310 <col:24> 'int' 0
|   |   `-TypedefDecl 0x1af2218 <line:130:7, col:28> col:28 referenced __type 'std::__false_type'
|   |     `-RecordType 0x1285390 'std::__false_type'
|   |       `-CXXRecord 0x1285300 '__false_type'
|   |-ClassTemplateSpecializationDecl 0x128c428 <line:137:3, line:142:5> line:138:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'bool'
|   | |-CXXRecordDecl 0x128c648 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x128c6d8 <line:140:7, col:26> col:7
|   | | `-EnumConstantDecl 0x128c7e0 <col:14, col:24> col:14 __value 'std::__is_integer<bool>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:140:7)'
|   | |   `-ImplicitCastExpr 0x128c830 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x128c7c0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x128c7a0 <col:24> 'int' 1
|   | `-TypedefDecl 0x1290060 <line:141:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12900f8 <line:144:3, line:149:5> line:145:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x1290318 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x12903a8 <line:147:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12904b0 <col:14, col:24> col:14 referenced __value 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)'
|   | |   `-ImplicitCastExpr 0x1290500 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1290490 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1290470 <col:24> 'int' 1
|   | `-TypedefDecl 0x1290528 <line:148:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12905c8 <line:151:3, line:156:5> line:152:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x12907e8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1290878 <line:154:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1290980 <col:14, col:24> col:14 __value 'std::__is_integer<signed char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:154:7)'
|   | |   `-ImplicitCastExpr 0x12909d0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1290960 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1290940 <col:24> 'int' 1
|   | `-TypedefDecl 0x12909f8 <line:155:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1290a98 <line:158:3, line:163:5> line:159:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x1290cb8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1290d48 <line:161:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1290e50 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:161:7)'
|   | |   `-ImplicitCastExpr 0x1290ea0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1290e30 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1290e10 <col:24> 'int' 1
|   | `-TypedefDecl 0x1290ec8 <line:162:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1290f60 <line:166:3, line:171:5> line:167:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'wchar_t'
|   | |-CXXRecordDecl 0x1291178 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1291208 <line:169:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1291310 <col:14, col:24> col:14 __value 'std::__is_integer<wchar_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:169:7)'
|   | |   `-ImplicitCastExpr 0x1291360 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12912f0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12912d0 <col:24> 'int' 1
|   | `-TypedefDecl 0x1291388 <line:170:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1291420 <line:184:3, line:189:5> line:185:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char16_t'
|   | |-CXXRecordDecl 0x1291638 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x12916c8 <line:187:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12917d0 <col:14, col:24> col:14 __value 'std::__is_integer<char16_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:187:7)'
|   | |   `-ImplicitCastExpr 0x1291820 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12917b0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1291790 <col:24> 'int' 1
|   | `-TypedefDecl 0x1291848 <line:188:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12918e0 <line:191:3, line:196:5> line:192:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char32_t'
|   | |-CXXRecordDecl 0x1291af8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1291b88 <line:194:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1291c90 <col:14, col:24> col:14 __value 'std::__is_integer<char32_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:194:7)'
|   | |   `-ImplicitCastExpr 0x1291ce0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1291c70 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1291c50 <col:24> 'int' 1
|   | `-TypedefDecl 0x1291d08 <line:195:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1291da8 <line:199:3, line:204:5> line:200:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'short'
|   | |-CXXRecordDecl 0x1291fc8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1295ae0 <line:202:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1295be0 <col:14, col:24> col:14 referenced __value 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)'
|   | |   `-ImplicitCastExpr 0x1295c30 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1295bc0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1295ba0 <col:24> 'int' 1
|   | `-TypedefDecl 0x1295c58 <line:203:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1295cf8 <line:206:3, line:211:5> line:207:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned short'
|   | |-CXXRecordDecl 0x1295f18 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1295fa8 <line:209:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12960b0 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:209:7)'
|   | |   `-ImplicitCastExpr 0x1296100 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1296090 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1296070 <col:24> 'int' 1
|   | `-TypedefDecl 0x1296128 <line:210:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12961c8 <line:213:3, line:218:5> line:214:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'int'
|   | |-CXXRecordDecl 0x12963e8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1296478 <line:216:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1296580 <col:14, col:24> col:14 referenced __value 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)'
|   | |   `-ImplicitCastExpr 0x12965d0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1296560 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1296540 <col:24> 'int' 1
|   | `-TypedefDecl 0x12965f8 <line:217:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1296698 <line:220:3, line:225:5> line:221:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned int'
|   | |-CXXRecordDecl 0x12968b8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1296948 <line:223:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1296a50 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:223:7)'
|   | |   `-ImplicitCastExpr 0x1296aa0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1296a30 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1296a10 <col:24> 'int' 1
|   | `-TypedefDecl 0x1296ac8 <line:224:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1296b68 <line:227:3, line:232:5> line:228:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long'
|   | |-CXXRecordDecl 0x1296d88 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x1296e18 <line:230:7, col:26> col:7
|   | | `-EnumConstantDecl 0x1296f20 <col:14, col:24> col:14 referenced __value 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)'
|   | |   `-ImplicitCastExpr 0x1296f70 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x1296f00 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1296ee0 <col:24> 'int' 1
|   | `-TypedefDecl 0x1296f98 <line:231:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1297038 <line:234:3, line:239:5> line:235:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long'
|   | |-CXXRecordDecl 0x1297258 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x12972e8 <line:237:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12973f0 <col:14, col:24> col:14 referenced __value 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)'
|   | |   `-ImplicitCastExpr 0x1297440 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12973d0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12973b0 <col:24> 'int' 1
|   | `-TypedefDecl 0x1297468 <line:238:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x1297508 <line:241:3, line:246:5> line:242:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long long'
|   | |-CXXRecordDecl 0x1297728 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x12977b8 <line:244:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12978c0 <col:14, col:24> col:14 __value 'std::__is_integer<long long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:244:7)'
|   | |   `-ImplicitCastExpr 0x1297910 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12978a0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x1297880 <col:24> 'int' 1
|   | `-TypedefDecl 0x1297938 <line:245:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12979d8 <line:248:3, line:253:5> line:249:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long long'
|   | |-CXXRecordDecl 0x129bc08 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x129bc98 <line:251:7, col:26> col:7
|   | | `-EnumConstantDecl 0x129bda0 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned long long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:251:7)'
|   | |   `-ImplicitCastExpr 0x129bdf0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x129bd80 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x129bd60 <col:24> 'int' 1
|   | `-TypedefDecl 0x129be18 <line:252:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x129beb8 <line:256:3, line:261:5> line:257:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type '__int128'
|   | |-CXXRecordDecl 0x129c0d8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x129c168 <line:259:7, col:26> col:7
|   | | `-EnumConstantDecl 0x129c270 <col:14, col:24> col:14 __value 'std::__is_integer<__int128>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:270:1)'
|   | |   `-ImplicitCastExpr 0x129c2c0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x129c250 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x129c230 <col:24> 'int' 1
|   | `-TypedefDecl 0x129c2e8 <line:260:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x129c388 <line:262:3, line:267:5> line:263:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-CXXRecordDecl 0x129c5a8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x129c638 <line:265:7, col:26> col:7
|   | | `-EnumConstantDecl 0x129c740 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned __int128>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:270:1)'
|   | |   `-ImplicitCastExpr 0x129c790 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x129c720 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x129c700 <col:24> 'int' 1
|   | `-TypedefDecl 0x129c7b8 <line:266:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x129c958 <line:287:3, line:292:5> line:288:12 __is_floating
|   | |-TemplateTypeParmDecl 0x129c828 <line:287:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x129c8c8 <line:288:5, line:292:5> line:288:12 struct __is_floating definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x129cbb0 <col:5, col:12> col:12 implicit struct __is_floating
|   | | |-EnumDecl 0x129cc40 <line:290:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x129cd20 <col:14, col:24> col:14 __value 'std::__is_floating::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:290:7)'
|   | | |   `-IntegerLiteral 0x129cd00 <col:24> 'int' 0
|   | | `-TypedefDecl 0x129cd80 <line:291:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecialization 0x129ce20 '__is_floating'
|   | |-ClassTemplateSpecialization 0x129d2e8 '__is_floating'
|   | `-ClassTemplateSpecialization 0x129d7b8 '__is_floating'
|   |-ClassTemplateSpecializationDecl 0x129ce20 <line:295:3, line:300:5> line:296:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'float'
|   | |-CXXRecordDecl 0x129d038 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x129d0c8 <line:298:7, col:26> col:7
|   | | `-EnumConstantDecl 0x129d1d0 <col:14, col:24> col:14 __value 'std::__is_floating<float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:298:7)'
|   | |   `-ImplicitCastExpr 0x129d220 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x129d1b0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x129d190 <col:24> 'int' 1
|   | `-TypedefDecl 0x129d248 <line:299:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x129d2e8 <line:302:3, line:307:5> line:303:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'double'
|   | |-CXXRecordDecl 0x129d508 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x129d598 <line:305:7, col:26> col:7
|   | | `-EnumConstantDecl 0x129d6a0 <col:14, col:24> col:14 __value 'std::__is_floating<double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:305:7)'
|   | |   `-ImplicitCastExpr 0x129d6f0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x129d680 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x129d660 <col:24> 'int' 1
|   | `-TypedefDecl 0x129d718 <line:306:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x129d7b8 <line:309:3, line:314:5> line:310:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long double'
|   | |-CXXRecordDecl 0x129d9d8 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x12a1c30 <line:312:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a1d30 <col:14, col:24> col:14 __value 'std::__is_floating<long double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:312:7)'
|   | |   `-ImplicitCastExpr 0x12a1d80 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a1d10 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a1cf0 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a1da8 <line:313:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x12a1f48 <line:319:3, line:324:5> line:320:12 __is_pointer
|   | |-TemplateTypeParmDecl 0x12a1e18 <line:319:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x12a1eb8 <line:320:5, line:324:5> line:320:12 struct __is_pointer definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x12a21a0 <col:5, col:12> col:12 implicit struct __is_pointer
|   |   |-EnumDecl 0x12a2230 <line:322:7, col:26> col:7
|   |   | `-EnumConstantDecl 0x12a2310 <col:14, col:24> col:14 __value 'std::__is_pointer::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:322:7)'
|   |   |   `-IntegerLiteral 0x12a22f0 <col:24> 'int' 0
|   |   `-TypedefDecl 0x12a2370 <line:323:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x1285390 'std::__false_type'
|   |       `-CXXRecord 0x1285300 '__false_type'
|   |-ClassTemplatePartialSpecializationDecl 0x12a2580 <line:326:3, line:331:5> line:327:12 struct __is_pointer definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl 0x12a23e0 <line:326:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12a27a8 <line:327:5, col:12> col:12 implicit struct __is_pointer
|   | |-EnumDecl 0x12a2838 <line:329:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a2920 <col:14, col:24> col:14 __value 'std::__is_pointer<type-parameter-0-0 *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:329:7)'
|   | |   `-IntegerLiteral 0x12a2900 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a2980 <line:330:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x12a2b18 <line:336:3, line:339:7> line:337:12 __is_arithmetic
|   | |-TemplateTypeParmDecl 0x12a29f0 <line:336:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x12a2a88 <line:337:5, line:339:7> line:337:12 struct __is_arithmetic definition
|   |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-public '__traitor<__is_integer<_Tp>, __is_floating<_Tp> >'
|   |   `-CXXRecordDecl 0x12a3000 <col:5, col:12> col:12 implicit struct __is_arithmetic
|   |-ClassTemplateDecl 0x12a31d8 <line:344:3, line:347:7> line:345:12 __is_scalar
|   | |-TemplateTypeParmDecl 0x12a30a8 <line:344:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x12a3148 <line:345:5, line:347:7> line:345:12 struct __is_scalar definition
|   |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-public '__traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >'
|   |   `-CXXRecordDecl 0x12a36c0 <col:5, col:12> col:12 implicit struct __is_scalar
|   |-ClassTemplateDecl 0x12a3898 <line:352:3, line:357:5> line:353:12 __is_char
|   | |-TemplateTypeParmDecl 0x12a3768 <line:352:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12a3808 <line:353:5, line:357:5> line:353:12 struct __is_char definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12a3af0 <col:5, col:12> col:12 implicit struct __is_char
|   | | |-EnumDecl 0x12a3b80 <line:355:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x12a7940 <col:14, col:24> col:14 __value 'std::__is_char::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:355:7)'
|   | | |   `-IntegerLiteral 0x12a7920 <col:24> 'int' 0
|   | | `-TypedefDecl 0x12a79a0 <line:356:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecialization 0x12a7a38 '__is_char'
|   | `-ClassTemplateSpecialization 0x12a7f00 '__is_char'
|   |-ClassTemplateSpecializationDecl 0x12a7a38 <line:359:3, line:364:5> line:360:12 struct __is_char definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x12a7c58 <col:5, col:12> col:12 implicit struct __is_char
|   | |-EnumDecl 0x12a7ce8 <line:362:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a7df0 <col:14, col:24> col:14 __value 'std::__is_char<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:362:7)'
|   | |   `-ImplicitCastExpr 0x12a7e40 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a7dd0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a7db0 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a7e68 <line:363:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12a7f00 <line:367:3, line:372:5> line:368:12 struct __is_char definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'wchar_t'
|   | |-CXXRecordDecl 0x12a8118 <col:5, col:12> col:12 implicit struct __is_char
|   | |-EnumDecl 0x12a81a8 <line:370:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a82b0 <col:14, col:24> col:14 __value 'std::__is_char<wchar_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:370:7)'
|   | |   `-ImplicitCastExpr 0x12a8300 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a8290 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a8270 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a8328 <line:371:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x12a84c8 <line:375:3, line:380:5> line:376:12 __is_byte
|   | |-TemplateTypeParmDecl 0x12a8398 <line:375:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12a8438 <line:376:5, line:380:5> line:376:12 struct __is_byte definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12a8720 <col:5, col:12> col:12 implicit struct __is_byte
|   | | |-EnumDecl 0x12a87b0 <line:378:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x12a8890 <col:14, col:24> col:14 __value 'std::__is_byte::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:378:7)'
|   | | |   `-IntegerLiteral 0x12a8870 <col:24> 'int' 0
|   | | `-TypedefDecl 0x12a88f0 <line:379:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x1285390 'std::__false_type'
|   | |     `-CXXRecord 0x1285300 '__false_type'
|   | |-ClassTemplateSpecialization 0x12a8988 '__is_byte'
|   | |-ClassTemplateSpecialization 0x12a8e58 '__is_byte'
|   | `-ClassTemplateSpecialization 0x12a9328 '__is_byte'
|   |-ClassTemplateSpecializationDecl 0x12a8988 <line:382:3, line:387:5> line:383:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x12a8ba8 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x12a8c38 <line:385:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a8d40 <col:14, col:24> col:14 __value 'std::__is_byte<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:385:7)'
|   | |   `-ImplicitCastExpr 0x12a8d90 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a8d20 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a8d00 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a8db8 <line:386:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12a8e58 <line:389:3, line:394:5> line:390:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x12a9078 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x12a9108 <line:392:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a9210 <col:14, col:24> col:14 __value 'std::__is_byte<signed char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:392:7)'
|   | |   `-ImplicitCastExpr 0x12a9260 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a91f0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a91d0 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a9288 <line:393:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x12a9328 <line:396:3, line:401:5> line:397:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x12a9548 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x12a95d8 <line:399:7, col:26> col:7
|   | | `-EnumConstantDecl 0x12a96e0 <col:14, col:24> col:14 __value 'std::__is_byte<unsigned char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:399:7)'
|   | |   `-ImplicitCastExpr 0x12a9730 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x12a96c0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x12a96a0 <col:24> 'int' 1
|   | `-TypedefDecl 0x12a9758 <line:400:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x12851d0 'std::__true_type'
|   |     `-CXXRecord 0x1285138 '__true_type'
|   |-ClassTemplateDecl 0x12aecb0 <line:417:3, line:422:5> line:418:12 __is_move_iterator
|   | |-TemplateTypeParmDecl 0x12a97c8 <line:417:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x12a9868 <line:418:5, line:422:5> line:418:12 struct __is_move_iterator definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x12aef00 <col:5, col:12> col:12 implicit struct __is_move_iterator
|   |   |-EnumDecl 0x12aef90 <line:420:7, col:26> col:7
|   |   | `-EnumConstantDecl 0x12af070 <col:14, col:24> col:14 __value 'std::__is_move_iterator::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:420:7)'
|   |   |   `-IntegerLiteral 0x12af050 <col:24> 'int' 0
|   |   `-TypedefDecl 0x12af0d0 <line:421:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x1285390 'std::__false_type'
|   |       `-CXXRecord 0x1285300 '__false_type'
|   `-FunctionTemplateDecl 0x12af378 <line:426:3, line:429:20> line:428:5 __miter_base
|     |-TemplateTypeParmDecl 0x12af140 <line:426:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
|     `-FunctionDecl 0x12af2d8 <line:427:5, line:429:20> line:428:5 __miter_base '_Iterator (_Iterator)' inline
|       |-ParmVarDecl 0x12af1e8 <col:18, col:28> col:28 referenced __it '_Iterator'
|       `-CompoundStmt 0x12af408 <line:429:5, col:20>
|         `-ReturnStmt 0x12af3f8 <col:7, col:14>
|           `-DeclRefExpr 0x12af3d8 <col:14> '_Iterator' lvalue ParmVar 0x12af1e8 '__it' '_Iterator'
|-LinkageSpecDecl 0x12af440 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/type_traits.h:37:1, line:219:1> line:37:8 C++
| `-NamespaceDecl 0x12af4b0 prev 0x110f998 <line:39:1, line:218:1> line:39:11 __gnu_cxx
|   |-original Namespace 0x103b2f8 '__gnu_cxx'
|   |-VisibilityAttr 0x12af520 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-ClassTemplateDecl 0x12af720 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/type_traits.h:44:3, line:46:7> line:45:12 __enable_if
|   | |-NonTypeTemplateParmDecl 0x12af588 <line:44:12> col:16 'bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x12af5e8 <col:18> col:26 typename depth 0 index 1
|   | `-CXXRecordDecl 0x12af690 <line:45:5, line:46:7> line:45:12 struct __enable_if definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   `-CXXRecordDecl 0x12af9d0 <col:5, col:12> col:12 implicit struct __enable_if
|   |-ClassTemplatePartialSpecializationDecl 0x12afc88 <line:48:3, line:50:27> line:49:12 struct __enable_if definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x12afa78 <line:48:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12aff28 <line:49:5, col:12> col:12 implicit struct __enable_if
|   | `-TypedefDecl 0x12affc8 <line:50:7, col:19> col:19 __type '_Tp'
|   |   `-TemplateTypeParmType 0x12afad0 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x12afa78 '_Tp'
|   |-ClassTemplateDecl 0x12b0268 <line:54:3, line:56:31> line:55:12 __conditional_type
|   | |-NonTypeTemplateParmDecl 0x12b0048 <line:54:12, col:17> col:17 'bool' depth 0 index 0 _Cond
|   | |-TemplateTypeParmDecl 0x12b00a8 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
|   | |-TemplateTypeParmDecl 0x12b0128 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
|   | |-CXXRecordDecl 0x12b01d8 <line:55:5, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12b0540 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x12b05e0 <line:56:7, col:23> col:23 __type '_Iftrue'
|   | |   `-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |-ClassTemplateSpecializationDecl 0x15c9f48 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<int>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<int>'
|   | | |-CXXRecordDecl 0x15ca210 prev 0x15c9f48 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x15ca2d8 <line:56:7, col:23> col:23 referenced __type '__gnu_cxx::__numeric_traits_integer<int>':'__gnu_cxx::__numeric_traits_integer<int>'
|   | |   `-SubstTemplateTypeParmType 0x15ca2a0 '__gnu_cxx::__numeric_traits_integer<int>' sugar
|   | |     |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |     `-RecordType 0x15c9d00 '__gnu_cxx::__numeric_traits_integer<int>'
|   | |       `-ClassTemplateSpecialization 0x15c9c20 '__numeric_traits_integer'
|   | |-ClassTemplateSpecializationDecl 0x16b5c68 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<float>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<float>'
|   | | |-CXXRecordDecl 0x16b6010 prev 0x16b5c68 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x16b60b0 <line:60:7, col:24> col:24 referenced __type '__gnu_cxx::__numeric_traits_floating<float>':'__gnu_cxx::__numeric_traits_floating<float>'
|   | |   `-SubstTemplateTypeParmType 0x16b5f40 '__gnu_cxx::__numeric_traits_floating<float>' sugar
|   | |     |-TemplateTypeParmType 0x12b0720 '_Iffalse' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b06c8 '_Iffalse'
|   | |     `-RecordType 0x16b5ba0 '__gnu_cxx::__numeric_traits_floating<float>'
|   | |       `-ClassTemplateSpecialization 0x16b5ac0 '__numeric_traits_floating'
|   | |-ClassTemplateSpecializationDecl 0x16b8bd8 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<double>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<double>'
|   | | |-CXXRecordDecl 0x16b8f80 prev 0x16b8bd8 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x16b9020 <line:60:7, col:24> col:24 referenced __type '__gnu_cxx::__numeric_traits_floating<double>':'__gnu_cxx::__numeric_traits_floating<double>'
|   | |   `-SubstTemplateTypeParmType 0x16b8eb0 '__gnu_cxx::__numeric_traits_floating<double>' sugar
|   | |     |-TemplateTypeParmType 0x12b0720 '_Iffalse' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b06c8 '_Iffalse'
|   | |     `-RecordType 0x16b8b10 '__gnu_cxx::__numeric_traits_floating<double>'
|   | |       `-ClassTemplateSpecialization 0x16b8a30 '__numeric_traits_floating'
|   | |-ClassTemplateSpecializationDecl 0x16bbb38 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 0
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<long double>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<long double>'
|   | | |-CXXRecordDecl 0x16bbee0 prev 0x16bbb38 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x16bbf80 <line:60:7, col:24> col:24 referenced __type '__gnu_cxx::__numeric_traits_floating<long double>':'__gnu_cxx::__numeric_traits_floating<long double>'
|   | |   `-SubstTemplateTypeParmType 0x16bbe10 '__gnu_cxx::__numeric_traits_floating<long double>' sugar
|   | |     |-TemplateTypeParmType 0x12b0720 '_Iffalse' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b06c8 '_Iffalse'
|   | |     `-RecordType 0x16bba70 '__gnu_cxx::__numeric_traits_floating<long double>'
|   | |       `-ClassTemplateSpecialization 0x16bb990 '__numeric_traits_floating'
|   | |-ClassTemplateSpecializationDecl 0x17edfc8 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<unsigned long>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<unsigned long>'
|   | | |-CXXRecordDecl 0x17ee290 prev 0x17edfc8 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x17ee358 <line:56:7, col:23> col:23 referenced __type '__gnu_cxx::__numeric_traits_integer<unsigned long>':'__gnu_cxx::__numeric_traits_integer<unsigned long>'
|   | |   `-SubstTemplateTypeParmType 0x17ee320 '__gnu_cxx::__numeric_traits_integer<unsigned long>' sugar
|   | |     |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |     `-RecordType 0x17edd80 '__gnu_cxx::__numeric_traits_integer<unsigned long>'
|   | |       `-ClassTemplateSpecialization 0x17edca0 '__numeric_traits_integer'
|   | |-ClassTemplateSpecializationDecl 0x1911398 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<char>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<char>'
|   | | |-CXXRecordDecl 0x1911660 prev 0x1911398 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x1911728 <line:56:7, col:23> col:23 referenced __type '__gnu_cxx::__numeric_traits_integer<char>':'__gnu_cxx::__numeric_traits_integer<char>'
|   | |   `-SubstTemplateTypeParmType 0x19116f0 '__gnu_cxx::__numeric_traits_integer<char>' sugar
|   | |     |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |     `-RecordType 0x1911150 '__gnu_cxx::__numeric_traits_integer<char>'
|   | |       `-ClassTemplateSpecialization 0x1911070 '__numeric_traits_integer'
|   | |-ClassTemplateSpecializationDecl 0x1933850 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type 'unsigned long'
|   | | |-TemplateArgument type 'unsigned long long'
|   | | |-CXXRecordDecl 0x1933b18 prev 0x1933850 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x1933be8 <line:56:7, col:23> col:23 referenced __type 'unsigned long':'unsigned long'
|   | |   `-SubstTemplateTypeParmType 0x1933bb0 'unsigned long' sugar
|   | |     |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |     `-BuiltinType 0xffd2d0 'unsigned long'
|   | |-ClassTemplateSpecializationDecl 0x1a01a88 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument integral 1
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<short>'
|   | | |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<short>'
|   | | |-CXXRecordDecl 0x1a01d50 prev 0x1a01a88 <col:5, col:12> col:12 implicit struct __conditional_type
|   | | `-TypedefDecl 0x1a01e18 <line:56:7, col:23> col:23 referenced __type '__gnu_cxx::__numeric_traits_integer<short>':'__gnu_cxx::__numeric_traits_integer<short>'
|   | |   `-SubstTemplateTypeParmType 0x1a01de0 '__gnu_cxx::__numeric_traits_integer<short>' sugar
|   | |     |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   | |     | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   | |     `-RecordType 0x1a01840 '__gnu_cxx::__numeric_traits_integer<short>'
|   | |       `-ClassTemplateSpecialization 0x1a01760 '__numeric_traits_integer'
|   | `-ClassTemplateSpecializationDecl 0x1a0f2b8 <line:54:3, line:56:31> line:55:12 struct __conditional_type definition
|   |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-TemplateArgument integral 1
|   |   |-TemplateArgument type '__gnu_cxx::__numeric_traits_integer<long>'
|   |   |-TemplateArgument type '__gnu_cxx::__numeric_traits_floating<long>'
|   |   |-CXXRecordDecl 0x1a0f580 prev 0x1a0f2b8 <col:5, col:12> col:12 implicit struct __conditional_type
|   |   `-TypedefDecl 0x1a0f648 <line:56:7, col:23> col:23 referenced __type '__gnu_cxx::__numeric_traits_integer<long>':'__gnu_cxx::__numeric_traits_integer<long>'
|   |     `-SubstTemplateTypeParmType 0x1a0f610 '__gnu_cxx::__numeric_traits_integer<long>' sugar
|   |       |-TemplateTypeParmType 0x12b0100 '_Iftrue' dependent depth 0 index 1
|   |       | `-TemplateTypeParm 0x12b00a8 '_Iftrue'
|   |       `-RecordType 0x1a0f070 '__gnu_cxx::__numeric_traits_integer<long>'
|   |         `-ClassTemplateSpecialization 0x1a0ef90 '__numeric_traits_integer'
|   |-ClassTemplatePartialSpecializationDecl 0x12b0940 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x12b0650 <line:58:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
|   | |-TemplateTypeParmDecl 0x12b06c8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
|   | |-CXXRecordDecl 0x12b4240 <line:59:5, col:12> col:12 implicit struct __conditional_type
|   | `-TypedefDecl 0x12b42e0 <line:60:7, col:24> col:24 __type '_Iffalse'
|   |   `-TemplateTypeParmType 0x12b0720 '_Iffalse' dependent depth 0 index 1
|   |     `-TemplateTypeParm 0x12b06c8 '_Iffalse'
|   |-ClassTemplateDecl 0x12b4478 <line:64:3, line:72:5> line:65:12 __add_unsigned
|   | |-TemplateTypeParmDecl 0x12b4350 <line:64:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12b43e8 <line:65:5, line:72:5> line:65:12 struct __add_unsigned definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12b46d0 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | | |-AccessSpecDecl 0x12b4760 <line:67:5, col:12> col:5 private
|   | | |-TypedefDecl 0x12b4a78 <line:68:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
|   | | | `-TemplateSpecializationType 0x12b4990 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
|   | | |   |-TemplateArgument expr
|   | | |   | `-ImplicitCastExpr 0x12b48f8 <col:27, col:51> 'bool' <Dependent>
|   | | |   |   `-DependentScopeDeclRefExpr 0x12b48b0 <col:27, col:51> '<dependent type>' lvalue
|   | | |   `-TemplateArgument type '_Tp'
|   | | |-AccessSpecDecl 0x12b4ad0 <line:70:5, col:11> col:5 public
|   | | `-TypedefDecl 0x12b4c10 <line:71:7, col:42> col:42 __type 'typename __if_type::__type'
|   | |   `-DependentNameType 0x12b4ba0 'typename __if_type::__type' dependent
|   | |-ClassTemplateSpecialization 0x12b4ca8 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b5010 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b5370 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b56d0 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b5a30 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b5d90 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x12b60e8 '__add_unsigned'
|   | `-ClassTemplateSpecialization 0x12b6e28 '__add_unsigned'
|   |-ClassTemplateSpecializationDecl 0x12b4ca8 <line:74:3, line:76:37> line:75:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x12b4ec8 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b4f70 <line:76:7, col:29> col:29 __type 'unsigned char'
|   |   `-BuiltinType 0xffd270 'unsigned char'
|   |-ClassTemplateSpecializationDecl 0x12b5010 <line:78:3, line:80:37> line:79:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x12b5228 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b52d0 <line:80:7, col:29> col:29 __type 'unsigned char'
|   |   `-BuiltinType 0xffd270 'unsigned char'
|   |-ClassTemplateSpecializationDecl 0x12b5370 <line:82:3, line:84:38> line:83:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'short'
|   | |-CXXRecordDecl 0x12b5588 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b5630 <line:84:7, col:30> col:30 __type 'unsigned short'
|   |   `-BuiltinType 0xffd290 'unsigned short'
|   |-ClassTemplateSpecializationDecl 0x12b56d0 <line:86:3, line:88:36> line:87:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'int'
|   | |-CXXRecordDecl 0x12b58e8 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b5990 <line:88:7, col:28> col:28 __type 'unsigned int'
|   |   `-BuiltinType 0xffd2b0 'unsigned int'
|   |-ClassTemplateSpecializationDecl 0x12b5a30 <line:90:3, line:92:37> line:91:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long'
|   | |-CXXRecordDecl 0x12b5c48 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b5cf0 <line:92:7, col:29> col:29 __type 'unsigned long'
|   |   `-BuiltinType 0xffd2d0 'unsigned long'
|   |-ClassTemplateSpecializationDecl 0x12b5d90 <line:94:3, line:96:42> line:95:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long long'
|   | |-CXXRecordDecl 0x12b5fa8 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x12b6050 <line:96:7, col:34> col:34 __type 'unsigned long long'
|   |   `-BuiltinType 0xffd2f0 'unsigned long long'
|   |-ClassTemplateSpecializationDecl 0x12b60e8 <line:99:3, line:100:31> col:12 struct __add_unsigned
|   | `-TemplateArgument type 'bool'
|   |-ClassTemplateSpecializationDecl 0x12b6e28 <line:102:3, line:103:34> col:12 struct __add_unsigned
|   | `-TemplateArgument type 'wchar_t'
|   |-ClassTemplateDecl 0x12b7108 <line:107:3, line:115:5> line:108:12 __remove_unsigned
|   | |-TemplateTypeParmDecl 0x12b6fe0 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x12b7078 <line:108:5, line:115:5> line:108:12 struct __remove_unsigned definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12b7360 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | | |-AccessSpecDecl 0x12b73f0 <line:110:5, col:12> col:5 private
|   | | |-TypedefDecl 0x12b7658 <line:111:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
|   | | | `-TemplateSpecializationType 0x12b7570 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
|   | | |   |-TemplateArgument expr
|   | | |   | `-ImplicitCastExpr 0x12b7558 <col:27, col:51> 'bool' <Dependent>
|   | | |   |   `-DependentScopeDeclRefExpr 0x12b7510 <col:27, col:51> '<dependent type>' lvalue
|   | | |   `-TemplateArgument type '_Tp'
|   | | |-AccessSpecDecl 0x12b76b0 <line:113:5, col:11> col:5 public
|   | | `-TypedefDecl 0x12b77a0 <line:114:7, col:42> col:42 __type 'typename __if_type::__type'
|   | |   `-DependentNameType 0x12b7730 'typename __if_type::__type' dependent
|   | |-ClassTemplateSpecialization 0x12b7838 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b7ba0 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b7f00 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b8260 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b85c0 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b8920 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x12b8c78 '__remove_unsigned'
|   | `-ClassTemplateSpecialization 0x12b9938 '__remove_unsigned'
|   |-ClassTemplateSpecializationDecl 0x12b7838 <line:117:3, line:119:35> line:118:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x12b7a58 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b7b00 <line:119:7, col:27> col:27 __type 'signed char'
|   |   `-BuiltinType 0xffd1d0 'signed char'
|   |-ClassTemplateSpecializationDecl 0x12b7ba0 <line:121:3, line:123:35> line:122:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x12b7db8 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b7e60 <line:123:7, col:27> col:27 __type 'signed char'
|   |   `-BuiltinType 0xffd1d0 'signed char'
|   |-ClassTemplateSpecializationDecl 0x12b7f00 <line:125:3, line:127:29> line:126:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned short'
|   | |-CXXRecordDecl 0x12b8118 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b81c0 <line:127:7, col:21> col:21 __type 'short'
|   |   `-BuiltinType 0xffd1f0 'short'
|   |-ClassTemplateSpecializationDecl 0x12b8260 <line:129:3, line:131:27> line:130:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned int'
|   | |-CXXRecordDecl 0x12b8478 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b8520 <line:131:7, col:19> col:19 __type 'int'
|   |   `-BuiltinType 0xffd210 'int'
|   |-ClassTemplateSpecializationDecl 0x12b85c0 <line:133:3, line:135:28> line:134:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long'
|   | |-CXXRecordDecl 0x12b87d8 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b8880 <line:135:7, col:20> col:20 __type 'long'
|   |   `-BuiltinType 0xffd230 'long'
|   |-ClassTemplateSpecializationDecl 0x12b8920 <line:137:3, line:139:33> line:138:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long long'
|   | |-CXXRecordDecl 0x12b8b38 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x12b8be0 <line:139:7, col:25> col:25 __type 'long long'
|   |   `-BuiltinType 0xffd250 'long long'
|   |-ClassTemplateSpecializationDecl 0x12b8c78 <line:142:3, line:143:34> col:12 struct __remove_unsigned
|   | `-TemplateArgument type 'bool'
|   |-ClassTemplateSpecializationDecl 0x12b9938 <line:145:3, line:146:37> col:12 struct __remove_unsigned
|   | `-TemplateArgument type 'wchar_t'
|   |-FunctionTemplateDecl 0x12b9d58 <line:150:3, line:153:26> line:152:5 __is_null_pointer
|   | |-TemplateTypeParmDecl 0x12b9af0 <line:150:12, col:21> col:21 referenced typename depth 0 index 0 _Type
|   | |-FunctionDecl 0x12b9cb8 <line:151:5, line:153:26> line:152:5 __is_null_pointer 'bool (_Type *)' inline
|   | | |-ParmVarDecl 0x12b9bc8 <col:23, col:30> col:30 referenced __ptr '_Type *'
|   | | `-CompoundStmt 0x12b9e28 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x12b9e18 <col:7, col:23>
|   | |     `-BinaryOperator 0x12b9df8 <col:14, col:23> '<dependent type>' '=='
|   | |       |-DeclRefExpr 0x12b9db8 <col:14> '_Type *' lvalue ParmVar 0x12b9bc8 '__ptr' '_Type *'
|   | |       `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | |-FunctionDecl 0x1a8bb08 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (char *)' inline
|   | | |-TemplateArgument type 'char'
|   | | |-ParmVarDecl 0x1a8ba18 <col:23, col:30> col:30 used __ptr 'char *'
|   | | `-CompoundStmt 0x1a98558 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x1a98548 <col:7, col:23>
|   | |     `-BinaryOperator 0x1a98528 <col:14, col:23> 'bool' '=='
|   | |       |-ImplicitCastExpr 0x1a984f8 <col:14> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1a984d8 <col:14> 'char *' lvalue ParmVar 0x1a8ba18 '__ptr' 'char *'
|   | |       `-ImplicitCastExpr 0x1a98510 <col:23> 'char *' <NullToPointer>
|   | |         `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | |-FunctionDecl 0x1ab9ae8 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (wchar_t *)' inline
|   | | |-TemplateArgument type 'wchar_t'
|   | | |-ParmVarDecl 0x1ab99f8 <col:23, col:30> col:30 used __ptr 'wchar_t *'
|   | | `-CompoundStmt 0x1ac27a8 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x1ac2798 <col:7, col:23>
|   | |     `-BinaryOperator 0x1ac2778 <col:14, col:23> 'bool' '=='
|   | |       |-ImplicitCastExpr 0x1ac2748 <col:14> 'wchar_t *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1ac2728 <col:14> 'wchar_t *' lvalue ParmVar 0x1ab99f8 '__ptr' 'wchar_t *'
|   | |       `-ImplicitCastExpr 0x1ac2760 <col:23> 'wchar_t *' <NullToPointer>
|   | |         `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | |-FunctionDecl 0x1ace3d8 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (const char *)' inline
|   | | |-TemplateArgument type 'const char'
|   | | |-ParmVarDecl 0x1ace2e8 <col:23, col:30> col:30 used __ptr 'const char *'
|   | | `-CompoundStmt 0x1ad21f8 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x1ad21e8 <col:7, col:23>
|   | |     `-BinaryOperator 0x1ad21c8 <col:14, col:23> 'bool' '=='
|   | |       |-ImplicitCastExpr 0x1ad2198 <col:14> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1ad2178 <col:14> 'const char *' lvalue ParmVar 0x1ace2e8 '__ptr' 'const char *'
|   | |       `-ImplicitCastExpr 0x1ad21b0 <col:23> 'const char *' <NullToPointer>
|   | |         `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | |-FunctionDecl 0x1ad5858 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (const wchar_t *)' inline
|   | | |-TemplateArgument type 'const wchar_t'
|   | | |-ParmVarDecl 0x1ad5768 <col:23, col:30> col:30 used __ptr 'const wchar_t *'
|   | | `-CompoundStmt 0x1ad7148 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x1ad7138 <col:7, col:23>
|   | |     `-BinaryOperator 0x1ad7118 <col:14, col:23> 'bool' '=='
|   | |       |-ImplicitCastExpr 0x1ad70e8 <col:14> 'const wchar_t *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1ad70c8 <col:14> 'const wchar_t *' lvalue ParmVar 0x1ad5768 '__ptr' 'const wchar_t *'
|   | |       `-ImplicitCastExpr 0x1ad7100 <col:23> 'const wchar_t *' <NullToPointer>
|   | |         `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | |-FunctionDecl 0x1add9c8 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (const char16_t *)' inline
|   | | |-TemplateArgument type 'const char16_t'
|   | | |-ParmVarDecl 0x1add8d8 <col:23, col:30> col:30 used __ptr 'const char16_t *'
|   | | `-CompoundStmt 0x1ae4c18 <line:153:5, col:26>
|   | |   `-ReturnStmt 0x1ae4c08 <col:7, col:23>
|   | |     `-BinaryOperator 0x1ae4be8 <col:14, col:23> 'bool' '=='
|   | |       |-ImplicitCastExpr 0x1ae4bb8 <col:14> 'const char16_t *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1ae4b98 <col:14> 'const char16_t *' lvalue ParmVar 0x1add8d8 '__ptr' 'const char16_t *'
|   | |       `-ImplicitCastExpr 0x1ae4bd0 <col:23> 'const char16_t *' <NullToPointer>
|   | |         `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   | `-FunctionDecl 0x1af57b8 <line:151:5, line:153:26> line:152:5 used __is_null_pointer 'bool (const char32_t *)' inline
|   |   |-TemplateArgument type 'const char32_t'
|   |   |-ParmVarDecl 0x1af56c8 <col:23, col:30> col:30 used __ptr 'const char32_t *'
|   |   `-CompoundStmt 0x1afc598 <line:153:5, col:26>
|   |     `-ReturnStmt 0x1afc588 <col:7, col:23>
|   |       `-BinaryOperator 0x1afc568 <col:14, col:23> 'bool' '=='
|   |         |-ImplicitCastExpr 0x1afc538 <col:14> 'const char32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1afc518 <col:14> 'const char32_t *' lvalue ParmVar 0x1af56c8 '__ptr' 'const char32_t *'
|   |         `-ImplicitCastExpr 0x1afc550 <col:23> 'const char32_t *' <NullToPointer>
|   |           `-IntegerLiteral 0x12b9dd8 <col:23> 'int' 0
|   |-FunctionTemplateDecl 0x12ba078 <line:155:3, line:158:21> line:157:5 __is_null_pointer
|   | |-TemplateTypeParmDecl 0x12b9e40 <line:155:12, col:21> col:21 referenced typename depth 0 index 0 _Type
|   | |-FunctionDecl 0x12b9fd8 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (_Type)' inline
|   | | |-ParmVarDecl 0x12b9ee8 <col:23> col:28 '_Type'
|   | | `-CompoundStmt 0x12ba0f8 <line:158:5, col:21>
|   | |   `-ReturnStmt 0x12ba0e8 <col:7, col:14>
|   | |     `-CXXBoolLiteralExpr 0x12ba0d8 <col:14> 'bool' false
|   | |-FunctionDecl 0x1a8bdc8 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (char *)' inline
|   | | |-TemplateArgument type 'char *'
|   | | `-ParmVarDecl 0x1a8bd08 <col:23> col:28 'char *':'char *'
|   | |-FunctionDecl 0x1ab9d28 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (wchar_t *)' inline
|   | | |-TemplateArgument type 'wchar_t *'
|   | | `-ParmVarDecl 0x1ab9c68 <col:23> col:28 'wchar_t *':'wchar_t *'
|   | |-FunctionDecl 0x1ace618 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (const char *)' inline
|   | | |-TemplateArgument type 'const char *'
|   | | `-ParmVarDecl 0x1ace558 <col:23> col:28 'const char *':'const char *'
|   | |-FunctionDecl 0x1ad5a98 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (const wchar_t *)' inline
|   | | |-TemplateArgument type 'const wchar_t *'
|   | | `-ParmVarDecl 0x1ad59d8 <col:23> col:28 'const wchar_t *':'const wchar_t *'
|   | |-FunctionDecl 0x1addc08 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (const char16_t *)' inline
|   | | |-TemplateArgument type 'const char16_t *'
|   | | `-ParmVarDecl 0x1addb48 <col:23> col:28 'const char16_t *':'const char16_t *'
|   | `-FunctionDecl 0x1af59f8 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (const char32_t *)' inline
|   |   |-TemplateArgument type 'const char32_t *'
|   |   `-ParmVarDecl 0x1af5938 <col:23> col:28 'const char32_t *':'const char32_t *'
|   |-FunctionDecl 0x12ba278 <line:161:3, line:163:18> line:162:3 __is_null_pointer 'bool (std::nullptr_t)' inline
|   | |-ParmVarDecl 0x12ba188 <col:21, col:26> col:35 'std::nullptr_t':'nullptr_t'
|   | `-CompoundStmt 0x12ba340 <line:163:3, col:18>
|   |   `-ReturnStmt 0x12ba330 <col:5, col:12>
|   |     `-CXXBoolLiteralExpr 0x12ba320 <col:12> 'bool' true
|   |-ClassTemplateDecl 0x12ba628 <line:167:3, line:169:30> line:168:12 __promote
|   | |-TemplateTypeParmDecl 0x12ba358 <line:167:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x12ba4f8 <col:26, col:57> col:31 'bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 0x12ba558 <col:33, col:57> 'bool' <Dependent>
|   | |     `-DependentScopeDeclRefExpr 0x12ba4b0 <col:33, col:57> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x12ba598 <line:168:5, line:169:30> line:168:12 struct __promote definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x12ba8e0 <col:5, col:12> col:12 implicit struct __promote
|   | | `-TypedefDecl 0x12ba988 <line:169:7, col:22> col:22 __type 'double'
|   | |   `-BuiltinType 0xffd330 'double'
|   | |-ClassTemplateSpecialization 0x12bb490 '__promote'
|   | |-ClassTemplateSpecialization 0x12bc8b0 '__promote'
|   | `-ClassTemplateSpecialization 0x12bd140 '__promote'
|   |-ClassTemplatePartialSpecializationDecl 0x12bac08 <line:174:3, line:176:7> line:175:12 struct __promote definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x12ba9f8 <line:174:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x12baea8 <line:175:5, col:12> col:12 implicit struct __promote
|   |-ClassTemplateSpecializationDecl 0x12bb490 <line:178:3, line:180:35> line:179:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long double'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x12bb6c8 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x12bb770 <line:180:7, col:27> col:27 __type 'long double'
|   |   `-BuiltinType 0xffd350 'long double'
|   |-ClassTemplateSpecializationDecl 0x12bc8b0 <line:182:3, line:184:30> line:183:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'double'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x12bcae8 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x12bcb90 <line:184:7, col:22> col:22 __type 'double'
|   |   `-BuiltinType 0xffd330 'double'
|   |-ClassTemplateSpecializationDecl 0x12bd140 <line:186:3, line:188:29> line:187:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'float'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x12bd378 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x12bd420 <line:188:7, col:21> col:21 __type 'float'
|   |   `-BuiltinType 0xffd310 'float'
|   |-ClassTemplateDecl 0x12bdd90 <line:190:3, line:196:5> line:193:12 __promote_2
|   | |-TemplateTypeParmDecl 0x12bd490 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x12bd508 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x12bd880 <line:191:12, col:53> col:21 referenced typename depth 0 index 2 _Tp2
|   | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|   | |-TemplateTypeParmDecl 0x12bdc50 <line:192:12, col:53> col:21 referenced typename depth 0 index 3 _Up2
|   | | `-TemplateArgument type 'typename __promote<_Up>::__type'
|   | `-CXXRecordDecl 0x12bdd00 <line:193:5, line:196:5> line:193:12 struct __promote_2 definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x12be080 <col:5, col:12> col:12 implicit struct __promote_2
|   |   `-TypedefDecl 0x12be1f8 <line:195:7, col:43> col:43 __type 'typeof (_Tp2() + _Up2())'
|   |     `-TypeOfExprType 0x12be1b0 'typeof (_Tp2() + _Up2())' dependent
|   |       `-ParenExpr 0x12be190 <col:25, col:41> '<dependent type>'
|   |         `-BinaryOperator 0x12be170 <col:26, col:40> '<dependent type>' '+'
|   |           |-CXXUnresolvedConstructExpr 0x12be120 <col:26, col:31> '_Tp2' '_Tp2'
|   |           `-CXXUnresolvedConstructExpr 0x12be150 <col:35, col:40> '_Up2' '_Up2'
|   |-ClassTemplateDecl 0x12c0530 <line:198:3, line:205:5> line:202:12 __promote_3
|   | |-TemplateTypeParmDecl 0x12be268 <line:198:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x12be2e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x12be368 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
|   | |-TemplateTypeParmDecl 0x12bfd20 <line:199:12, col:53> col:21 referenced typename depth 0 index 3 _Tp2
|   | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|   | |-TemplateTypeParmDecl 0x12bffb0 <line:200:12, col:53> col:21 referenced typename depth 0 index 4 _Up2
|   | | `-TemplateArgument type 'typename __promote<_Up>::__type'
|   | |-TemplateTypeParmDecl 0x12c03b0 <line:201:12, col:53> col:21 referenced typename depth 0 index 5 _Vp2
|   | | `-TemplateArgument type 'typename __promote<_Vp>::__type'
|   | `-CXXRecordDecl 0x12c04a0 <line:202:5, line:205:5> line:202:12 struct __promote_3 definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x12c0880 <col:5, col:12> col:12 implicit struct __promote_3
|   |   `-TypedefDecl 0x12c0a48 <line:204:7, col:52> col:52 __type 'typeof (_Tp2() + _Up2() + _Vp2())'
|   |     `-TypeOfExprType 0x12c0a00 'typeof (_Tp2() + _Up2() + _Vp2())' dependent
|   |       `-ParenExpr 0x12c09e0 <col:25, col:50> '<dependent type>'
|   |         `-BinaryOperator 0x12c09c0 <col:26, col:49> '<dependent type>' '+'
|   |           |-BinaryOperator 0x12c0970 <col:26, col:40> '<dependent type>' '+'
|   |           | |-CXXUnresolvedConstructExpr 0x12c0920 <col:26, col:31> '_Tp2' '_Tp2'
|   |           | `-CXXUnresolvedConstructExpr 0x12c0950 <col:35, col:40> '_Up2' '_Up2'
|   |           `-CXXUnresolvedConstructExpr 0x12c09a0 <col:44, col:49> '_Vp2' '_Vp2'
|   `-ClassTemplateDecl 0x12c1980 <line:207:3, line:215:5> line:212:12 __promote_4
|     |-TemplateTypeParmDecl 0x12c0ab8 <line:207:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|     |-TemplateTypeParmDecl 0x12c0b38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|     |-TemplateTypeParmDecl 0x12c0bb8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
|     |-TemplateTypeParmDecl 0x12c0c38 <col:54, col:63> col:63 referenced typename depth 0 index 3 _Wp
|     |-TemplateTypeParmDecl 0x12c0ed0 <line:208:12, col:53> col:21 referenced typename depth 0 index 4 _Tp2
|     | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|     |-TemplateTypeParmDecl 0x12c1160 <line:209:12, col:53> col:21 referenced typename depth 0 index 5 _Up2
|     | `-TemplateArgument type 'typename __promote<_Up>::__type'
|     |-TemplateTypeParmDecl 0x12c13f0 <line:210:12, col:53> col:21 referenced typename depth 0 index 6 _Vp2
|     | `-TemplateArgument type 'typename __promote<_Vp>::__type'
|     |-TemplateTypeParmDecl 0x12c17f0 <line:211:12, col:53> col:21 referenced typename depth 0 index 7 _Wp2
|     | `-TemplateArgument type 'typename __promote<_Wp>::__type'
|     `-CXXRecordDecl 0x12c18f0 <line:212:5, line:215:5> line:212:12 struct __promote_4 definition
|       |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|       | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|       | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|       | |-MoveConstructor exists simple trivial needs_implicit
|       | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|       | |-MoveAssignment exists simple trivial needs_implicit
|       | `-Destructor simple irrelevant trivial needs_implicit
|       |-CXXRecordDecl 0x12c25a0 <col:5, col:12> col:12 implicit struct __promote_4
|       `-TypedefDecl 0x12c27b8 <line:214:7, col:61> col:61 __type 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())'
|         `-TypeOfExprType 0x12c2770 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())' dependent
|           `-ParenExpr 0x12c2750 <col:25, col:59> '<dependent type>'
|             `-BinaryOperator 0x12c2730 <col:26, col:58> '<dependent type>' '+'
|               |-BinaryOperator 0x12c26e0 <col:26, col:49> '<dependent type>' '+'
|               | |-BinaryOperator 0x12c2690 <col:26, col:40> '<dependent type>' '+'
|               | | |-CXXUnresolvedConstructExpr 0x12c2640 <col:26, col:31> '_Tp2' '_Tp2'
|               | | `-CXXUnresolvedConstructExpr 0x12c2670 <col:35, col:40> '_Up2' '_Up2'
|               | `-CXXUnresolvedConstructExpr 0x12c26c0 <col:44, col:49> '_Vp2' '_Vp2'
|               `-CXXUnresolvedConstructExpr 0x12c2710 <col:53, col:58> '_Wp2' '_Wp2'
|-NamespaceDecl 0x12c2848 prev 0x12af4b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:37:1, line:187:1> line:37:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| |-VisibilityAttr 0x12c28b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x12c2a38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:50:3, line:58:5> line:51:12 __is_integer_nonstrict
| | |-TemplateTypeParmDecl 0x12c2910 <line:50:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x12c29a8 <line:51:5, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__is_integer<_Tp>':'__is_integer<_Tp>'
| | | |-CXXRecordDecl 0x12c2d88 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| | | |-UnresolvedUsingValueDecl 0x12c2ec8 <line:54:7, col:37> col:37 std::__is_integer<_Tp>::__value '<dependent type>'
| | | `-EnumDecl 0x12c2f20 <line:57:7, col:65> col:7
| | |   `-EnumConstantDecl 0x12c3100 <col:14, col:63> col:14 __width '__gnu_cxx::__is_integer_nonstrict::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | |     `-ConditionalOperator 0x12c30d0 <col:24, col:63> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x12c2fe0 <col:24> '<dependent type>' lvalue (no ADL) = '__value' 0x12c2ec8
| | |       |-BinaryOperator 0x12c3090 <col:34, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0x12c3038 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof '_Tp'
| | |       | `-ImplicitCastExpr 0x12c3078 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| | |       `-IntegerLiteral 0x12c30b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x15ca4f8 <line:50:3, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__is_integer<int>':'std::__is_integer<int>'
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x15ca820 prev 0x15ca4f8 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| | | |-UsingDecl 0x15ca960 <line:54:7, col:37> col:37 std::__is_integer<int>::__value
| | | |-UsingShadowDecl 0x15ca9b8 <col:37> col:37 implicit EnumConstant 0x1296580 '__value' 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)'
| | | `-EnumDecl 0x15caa08 <line:57:7> col:7
| | |   `-EnumConstantDecl 0x15cabf0 <col:14, col:63> col:14 referenced __width '__gnu_cxx::__is_integer_nonstrict<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | |     `-ImplicitCastExpr 0x15cac40 <col:24, col:63> 'unsigned int' <IntegralCast>
| | |       `-ConstantExpr 0x15cabd0 <col:24, col:63> 'unsigned long' Int: 32
| | |         `-ConditionalOperator 0x15caba0 <col:24, col:63> 'unsigned long'
| | |           |-ImplicitCastExpr 0x15cab70 <col:24> 'bool' <IntegralToBoolean>
| | |           | `-DeclRefExpr 0x15caae0 <col:24> 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)' EnumConstant 0x1296580 '__value' 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)' (UsingShadow 0x15ca9b8 '__value')
| | |           |-BinaryOperator 0x15cab50 <col:34, <built-in>:71:22> 'unsigned long' '*'
| | |           | |-UnaryExprOrTypeTraitExpr 0x15cab18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof 'int':'int'
| | |           | `-ImplicitCastExpr 0x15cab38 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| | |           `-ImplicitCastExpr 0x15cab88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'unsigned long' <IntegralCast>
| | |             `-IntegerLiteral 0x12c30b0 <col:63> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x17ee578 <line:50:3, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__is_integer<unsigned long>':'std::__is_integer<unsigned long>'
| | | |-TemplateArgument type 'unsigned long'
| | | |-CXXRecordDecl 0x17ee8a0 prev 0x17ee578 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| | | |-UsingDecl 0x17ee9e0 <line:54:7, col:37> col:37 std::__is_integer<unsigned long>::__value
| | | |-UsingShadowDecl 0x17eea38 <col:37> col:37 implicit EnumConstant 0x12973f0 '__value' 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)'
| | | `-EnumDecl 0x17eea88 <line:57:7> col:7
| | |   `-EnumConstantDecl 0x17eec70 <col:14, col:63> col:14 referenced __width '__gnu_cxx::__is_integer_nonstrict<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | |     `-ImplicitCastExpr 0x17eecc0 <col:24, col:63> 'unsigned int' <IntegralCast>
| | |       `-ConstantExpr 0x17eec50 <col:24, col:63> 'unsigned long' Int: 64
| | |         `-ConditionalOperator 0x17eec20 <col:24, col:63> 'unsigned long'
| | |           |-ImplicitCastExpr 0x17eebf0 <col:24> 'bool' <IntegralToBoolean>
| | |           | `-DeclRefExpr 0x17eeb60 <col:24> 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)' EnumConstant 0x12973f0 '__value' 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)' (UsingShadow 0x17eea38 '__value')
| | |           |-BinaryOperator 0x17eebd0 <col:34, <built-in>:71:22> 'unsigned long' '*'
| | |           | |-UnaryExprOrTypeTraitExpr 0x17eeb98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof 'unsigned long':'unsigned long'
| | |           | `-ImplicitCastExpr 0x17eebb8 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| | |           `-ImplicitCastExpr 0x17eec08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'unsigned long' <IntegralCast>
| | |             `-IntegerLiteral 0x12c30b0 <col:63> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x1911948 <line:50:3, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__is_integer<char>':'std::__is_integer<char>'
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1911c70 prev 0x1911948 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| | | |-UsingDecl 0x1911db0 <line:54:7, col:37> col:37 std::__is_integer<char>::__value
| | | |-UsingShadowDecl 0x1911e08 <col:37> col:37 implicit EnumConstant 0x12904b0 '__value' 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)'
| | | `-EnumDecl 0x1911e58 <line:57:7> col:7
| | |   `-EnumConstantDecl 0x1912040 <col:14, col:63> col:14 referenced __width '__gnu_cxx::__is_integer_nonstrict<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | |     `-ImplicitCastExpr 0x1912090 <col:24, col:63> 'unsigned int' <IntegralCast>
| | |       `-ConstantExpr 0x1912020 <col:24, col:63> 'unsigned long' Int: 8
| | |         `-ConditionalOperator 0x1911ff0 <col:24, col:63> 'unsigned long'
| | |           |-ImplicitCastExpr 0x1911fc0 <col:24> 'bool' <IntegralToBoolean>
| | |           | `-DeclRefExpr 0x1911f30 <col:24> 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)' EnumConstant 0x12904b0 '__value' 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)' (UsingShadow 0x1911e08 '__value')
| | |           |-BinaryOperator 0x1911fa0 <col:34, <built-in>:71:22> 'unsigned long' '*'
| | |           | |-UnaryExprOrTypeTraitExpr 0x1911f68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof 'char':'char'
| | |           | `-ImplicitCastExpr 0x1911f88 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| | |           `-ImplicitCastExpr 0x1911fd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'unsigned long' <IntegralCast>
| | |             `-IntegerLiteral 0x12c30b0 <col:63> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x1a02038 <line:50:3, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__is_integer<short>':'std::__is_integer<short>'
| | | |-TemplateArgument type 'short'
| | | |-CXXRecordDecl 0x1a02360 prev 0x1a02038 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| | | |-UsingDecl 0x1a024a0 <line:54:7, col:37> col:37 std::__is_integer<short>::__value
| | | |-UsingShadowDecl 0x1a024f8 <col:37> col:37 implicit EnumConstant 0x1295be0 '__value' 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)'
| | | `-EnumDecl 0x1a02548 <line:57:7> col:7
| | |   `-EnumConstantDecl 0x1a02730 <col:14, col:63> col:14 referenced __width '__gnu_cxx::__is_integer_nonstrict<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | |     `-ImplicitCastExpr 0x1a02780 <col:24, col:63> 'unsigned int' <IntegralCast>
| | |       `-ConstantExpr 0x1a02710 <col:24, col:63> 'unsigned long' Int: 16
| | |         `-ConditionalOperator 0x1a026e0 <col:24, col:63> 'unsigned long'
| | |           |-ImplicitCastExpr 0x1a026b0 <col:24> 'bool' <IntegralToBoolean>
| | |           | `-DeclRefExpr 0x1a02620 <col:24> 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)' EnumConstant 0x1295be0 '__value' 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)' (UsingShadow 0x1a024f8 '__value')
| | |           |-BinaryOperator 0x1a02690 <col:34, <built-in>:71:22> 'unsigned long' '*'
| | |           | |-UnaryExprOrTypeTraitExpr 0x1a02658 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof 'short':'short'
| | |           | `-ImplicitCastExpr 0x1a02678 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| | |           `-ImplicitCastExpr 0x1a026c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'unsigned long' <IntegralCast>
| | |             `-IntegerLiteral 0x12c30b0 <col:63> 'int' 0
| | `-ClassTemplateSpecializationDecl 0x1a0f868 <line:50:3, line:58:5> line:51:12 struct __is_integer_nonstrict definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__is_integer<long>':'std::__is_integer<long>'
| |   |-TemplateArgument type 'long'
| |   |-CXXRecordDecl 0x1a0fb90 prev 0x1a0f868 <col:5, col:12> col:12 implicit struct __is_integer_nonstrict
| |   |-UsingDecl 0x1a0fcd0 <line:54:7, col:37> col:37 std::__is_integer<long>::__value
| |   |-UsingShadowDecl 0x1a0fd28 <col:37> col:37 implicit EnumConstant 0x1296f20 '__value' 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)'
| |   `-EnumDecl 0x1a0fd78 <line:57:7> col:7
| |     `-EnumConstantDecl 0x1a0ff60 <col:14, col:63> col:14 referenced __width '__gnu_cxx::__is_integer_nonstrict<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| |       `-ImplicitCastExpr 0x1a0ffb0 <col:24, col:63> 'unsigned int' <IntegralCast>
| |         `-ConstantExpr 0x1a0ff40 <col:24, col:63> 'unsigned long' Int: 64
| |           `-ConditionalOperator 0x1a0ff10 <col:24, col:63> 'unsigned long'
| |             |-ImplicitCastExpr 0x1a0fee0 <col:24> 'bool' <IntegralToBoolean>
| |             | `-DeclRefExpr 0x1a0fe50 <col:24> 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)' EnumConstant 0x1296f20 '__value' 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)' (UsingShadow 0x1a0fd28 '__value')
| |             |-BinaryOperator 0x1a0fec0 <col:34, <built-in>:71:22> 'unsigned long' '*'
| |             | |-UnaryExprOrTypeTraitExpr 0x1a0fe88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:34, col:44> 'unsigned long' sizeof 'long':'long'
| |             | `-ImplicitCastExpr 0x1a0fea8 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| |             |   `-IntegerLiteral 0x12c3058 <col:22> 'int' 8
| |             `-ImplicitCastExpr 0x1a0fef8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:63> 'unsigned long' <IntegralCast>
| |               `-IntegerLiteral 0x12c30b0 <col:63> 'int' 0
| |-ClassTemplateDecl 0x12c3298 <line:60:3, line:79:5> line:61:12 __numeric_traits_integer
| | |-TemplateTypeParmDecl 0x12c3168 <line:60:12, col:21> col:21 referenced typename depth 0 index 0 _Value
| | |-CXXRecordDecl 0x12c3208 <line:61:5, line:79:5> line:61:12 struct __numeric_traits_integer definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x12c34f0 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| | | |-StaticAssertDecl 0x12c3728 <line:64:7, line:65:31> line:64:7
| | | | |-DependentScopeDeclRefExpr 0x12c3640 <col:21, col:53> '<dependent type>' lvalue
| | | | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| | | |-VarDecl 0x12c3778 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| | | | `-BinaryOperator 0x12c38b0 <col:39, col:54> '<dependent type>' '<'
| | | |   |-CStyleCastExpr 0x12c3868 <col:39, col:50> '_Value' <Dependent>
| | | |   | `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| | | |   |   `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| | | |   |     `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| | | |   `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| | | |-VarDecl 0x12c38e8 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| | | | `-BinaryOperator 0x12c3a68 <line:72:4, col:46> '<dependent type>' '-'
| | | |   |-DependentScopeDeclRefExpr 0x12c3a10 <col:4, col:36> '<dependent type>' lvalue
| | | |   `-DeclRefExpr 0x12c3a48 <col:46> 'const bool' lvalue Var 0x12c3778 '__is_signed' 'const bool'
| | | |-VarDecl 0x12c3a98 <line:75:7, line:77:13> line:75:27 referenced __max 'const _Value' static cinit
| | | | `-ConditionalOperator 0x12c3df8 <col:35, line:77:13> '<dependent type>'
| | | |   |-ImplicitCastExpr 0x12c3de0 <line:75:35> 'bool' <LValueToRValue>
| | | |   | `-DeclRefExpr 0x12c3b00 <col:35> 'const bool' lvalue Var 0x12c3778 '__is_signed' 'const bool'
| | | |   |-ParenExpr 0x12c3d50 <line:76:4, col:51> '<dependent type>'
| | | |   | `-BinaryOperator 0x12c3d30 <col:5, col:50> '<dependent type>' '+'
| | | |   |   |-ParenExpr 0x12c3cf0 <col:5, col:46> '<dependent type>'
| | | |   |   | `-BinaryOperator 0x12c3cd0 <col:6, col:45> '<dependent type>' '<<'
| | | |   |   |   |-ParenExpr 0x12c3c90 <col:6, col:40> '<dependent type>'
| | | |   |   |   | `-BinaryOperator 0x12c3c70 <col:7, col:39> '<dependent type>' '-'
| | | |   |   |   |   |-ParenExpr 0x12c3c30 <col:7, col:35> '<dependent type>'
| | | |   |   |   |   | `-BinaryOperator 0x12c3c10 <col:8, col:34> '<dependent type>' '<<'
| | | |   |   |   |   |   |-CStyleCastExpr 0x12c3b50 <col:8, col:16> '_Value' <Dependent>
| | | |   |   |   |   |   | `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| | | |   |   |   |   |   `-ParenExpr 0x12c3bf0 <col:21, col:34> 'int'
| | | |   |   |   |   |     `-BinaryOperator 0x12c3bd0 <col:22, col:33> 'int' '-'
| | | |   |   |   |   |       |-ImplicitCastExpr 0x12c3bb8 <col:22> 'int' <LValueToRValue>
| | | |   |   |   |   |       | `-DeclRefExpr 0x12c3b78 <col:22> 'const int' lvalue Var 0x12c38e8 '__digits' 'const int'
| | | |   |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| | | |   |   |   |   `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| | | |   |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| | | |   |   `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| | | |   `-UnaryOperator 0x12c3dc8 <line:77:4, col:13> '<dependent type>' prefix '~' cannot overflow
| | | |     `-CStyleCastExpr 0x12c3da0 <col:5, col:13> '_Value' <Dependent>
| | | |       `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| | | `-VarDecl 0x12c3e38 <line:78:7, col:70> col:27 __min 'const _Value' static cinit
| | |   `-ConditionalOperator 0x12c3fa8 <col:35, col:70> '<dependent type>'
| | |     |-ImplicitCastExpr 0x12c3f90 <col:35> 'bool' <LValueToRValue>
| | |     | `-DeclRefExpr 0x12c3ea0 <col:35> 'const bool' lvalue Var 0x12c3778 '__is_signed' 'const bool'
| | |     |-BinaryOperator 0x12c3f18 <col:49, col:58> '<dependent type>' '-'
| | |     | |-UnaryOperator 0x12c3ee0 <col:49, col:50> '<dependent type>' prefix '-' cannot overflow
| | |     | | `-DeclRefExpr 0x12c3ec0 <col:50> 'const _Value' lvalue Var 0x12c3a98 '__max' 'const _Value'
| | |     | `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| | |     `-CStyleCastExpr 0x12c3f68 <col:62, col:70> '_Value' <Dependent>
| | |       `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x15c9c20 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x15ca428 prev 0x15c9c20 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| | | |-StaticAssertDecl 0x15cace0 <line:64:7, line:65:31> line:64:7
| | | | |-ImplicitCastExpr 0x15caca8 <col:21, col:53> 'bool' <IntegralToBoolean>
| | | | | `-DeclRefExpr 0x15cac70 <col:21, col:53> 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)' EnumConstant 0x1296580 '__value' 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)' (UsingShadow 0x15ca9b8 '__value')
| | | | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| | | |-VarDecl 0x15cad20 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| | | | `-BinaryOperator 0x15cadd0 <col:39, col:54> 'bool' '<'
| | | |   |-CStyleCastExpr 0x15cada8 <col:39, col:50> 'int':'int' <NoOp>
| | | |   | `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| | | |   |   `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| | | |   |     `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| | | |   `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| | | |-VarDecl 0x15cae48 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| | | | `-BinaryOperator 0x15cb210 <line:72:4, col:46> 'int' '-'
| | | |   |-ImplicitCastExpr 0x15cb1a8 <col:4, col:36> 'int' <IntegralCast>
| | | |   | `-DeclRefExpr 0x15caf68 <col:4, col:36> '__gnu_cxx::__is_integer_nonstrict<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)' EnumConstant 0x15cabf0 '__width' '__gnu_cxx::__is_integer_nonstrict<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | | |   `-ImplicitCastExpr 0x15cb1f8 <col:46> 'int' <IntegralCast>
| | | |     `-ImplicitCastExpr 0x15cb1e0 <col:46> 'bool' <LValueToRValue>
| | | |       `-DeclRefExpr 0x15cb1c0 <col:46> 'const bool' lvalue Var 0x15cad20 '__is_signed' 'const bool' non_odr_use_constant
| | | |-VarDecl 0x15cb298 <line:75:7, line:77:13> line:75:27 referenced __max 'const int':'const int' static cinit
| | | | `-ConditionalOperator 0x15cb718 <col:35, line:77:13> 'int'
| | | |   |-ImplicitCastExpr 0x15cb700 <line:75:35> 'bool' <LValueToRValue>
| | | |   | `-DeclRefExpr 0x15cb6e0 <col:35> 'const bool' lvalue Var 0x15cafb8 '__is_signed' 'const bool' non_odr_use_constant
| | | |   |-ParenExpr 0x15cb670 <line:76:4, col:51> 'int'
| | | |   | `-BinaryOperator 0x15cb650 <col:5, col:50> 'int' '+'
| | | |   |   |-ParenExpr 0x15cb630 <col:5, col:46> 'int'
| | | |   |   | `-BinaryOperator 0x15cb610 <col:6, col:45> 'int' '<<'
| | | |   |   |   |-ParenExpr 0x15cb5f0 <col:6, col:40> 'int'
| | | |   |   |   | `-BinaryOperator 0x15cb5d0 <col:7, col:39> 'int' '-'
| | | |   |   |   |   |-ParenExpr 0x15cb5b0 <col:7, col:35> 'int':'int'
| | | |   |   |   |   | `-BinaryOperator 0x15cb590 <col:8, col:34> 'int':'int' '<<'
| | | |   |   |   |   |   |-CStyleCastExpr 0x15cb340 <col:8, col:16> 'int':'int' <NoOp>
| | | |   |   |   |   |   | `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| | | |   |   |   |   |   `-ParenExpr 0x15cb570 <col:21, col:34> 'int'
| | | |   |   |   |   |     `-BinaryOperator 0x15cb550 <col:22, col:33> 'int' '-'
| | | |   |   |   |   |       |-ImplicitCastExpr 0x15cb538 <col:22> 'int' <LValueToRValue>
| | | |   |   |   |   |       | `-DeclRefExpr 0x15cb518 <col:22> 'const int' lvalue Var 0x15cae48 '__digits' 'const int' non_odr_use_constant
| | | |   |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| | | |   |   |   |   `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| | | |   |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| | | |   |   `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| | | |   `-UnaryOperator 0x15cb6c8 <line:77:4, col:13> 'int':'int' prefix '~' cannot overflow
| | | |     `-CStyleCastExpr 0x15cb6a0 <col:5, col:13> 'int':'int' <NoOp>
| | | |       `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| | | `-VarDecl 0x15cb7b0 <line:78:7, col:70> col:27 referenced __min 'const int':'const int' static cinit
| | |   `-ConditionalOperator 0x15cbae8 <col:35, col:70> 'int'
| | |     |-ImplicitCastExpr 0x15cbad0 <col:35> 'bool' <LValueToRValue>
| | |     | `-DeclRefExpr 0x15cbab0 <col:35> 'const bool' lvalue Var 0x15cafb8 '__is_signed' 'const bool' non_odr_use_constant
| | |     |-BinaryOperator 0x15cba58 <col:49, col:58> 'int' '-'
| | |     | |-UnaryOperator 0x15cba40 <col:49, col:50> 'int':'int' prefix '-'
| | |     | | `-ImplicitCastExpr 0x15cba28 <col:50> 'int':'int' <LValueToRValue>
| | |     | |   `-DeclRefExpr 0x15cba08 <col:50> 'const int':'const int' lvalue Var 0x15cb298 '__max' 'const int':'const int' non_odr_use_constant
| | |     | `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| | |     `-CStyleCastExpr 0x15cba88 <col:62, col:70> 'int':'int' <NoOp>
| | |       `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x16b5940 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer
| | | `-TemplateArgument type 'float'
| | |-ClassTemplateSpecializationDecl 0x16b88b0 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer
| | | `-TemplateArgument type 'double'
| | |-ClassTemplateSpecializationDecl 0x16bb810 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer
| | | `-TemplateArgument type 'long double'
| | |-ClassTemplateSpecializationDecl 0x17edca0 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned long'
| | | |-CXXRecordDecl 0x17ee4a8 prev 0x17edca0 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| | | |-StaticAssertDecl 0x17eed60 <line:64:7, line:65:31> line:64:7
| | | | |-ImplicitCastExpr 0x17eed28 <col:21, col:53> 'bool' <IntegralToBoolean>
| | | | | `-DeclRefExpr 0x17eecf0 <col:21, col:53> 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)' EnumConstant 0x12973f0 '__value' 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)' (UsingShadow 0x17eea38 '__value')
| | | | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| | | |-VarDecl 0x17eeda0 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| | | | `-BinaryOperator 0x17eee80 <col:39, col:54> 'bool' '<'
| | | |   |-CStyleCastExpr 0x17eee40 <col:39, col:50> 'unsigned long':'unsigned long' <NoOp>
| | | |   | `-ImplicitCastExpr 0x17eee28 <col:47, col:50> 'unsigned long':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |   |   `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| | | |   |     `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| | | |   |       `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| | | |   `-ImplicitCastExpr 0x17eee68 <col:54> 'unsigned long' <IntegralCast>
| | | |     `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| | | |-VarDecl 0x17eeef8 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| | | | `-BinaryOperator 0x17ef2c0 <line:72:4, col:46> 'int' '-'
| | | |   |-ImplicitCastExpr 0x17ef258 <col:4, col:36> 'int' <IntegralCast>
| | | |   | `-DeclRefExpr 0x17ef018 <col:4, col:36> '__gnu_cxx::__is_integer_nonstrict<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)' EnumConstant 0x17eec70 '__width' '__gnu_cxx::__is_integer_nonstrict<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | | |   `-ImplicitCastExpr 0x17ef2a8 <col:46> 'int' <IntegralCast>
| | | |     `-ImplicitCastExpr 0x17ef290 <col:46> 'bool' <LValueToRValue>
| | | |       `-DeclRefExpr 0x17ef270 <col:46> 'const bool' lvalue Var 0x17eeda0 '__is_signed' 'const bool' non_odr_use_constant
| | | |-VarDecl 0x17ef348 <line:75:7, line:77:13> line:75:27 referenced __max 'const unsigned long':'const unsigned long' static cinit
| | | | `-ConditionalOperator 0x17ef830 <col:35, line:77:13> 'unsigned long'
| | | |   |-ImplicitCastExpr 0x17ef818 <line:75:35> 'bool' <LValueToRValue>
| | | |   | `-DeclRefExpr 0x17ef7f8 <col:35> 'const bool' lvalue Var 0x17ef068 '__is_signed' 'const bool' non_odr_use_constant
| | | |   |-ParenExpr 0x17ef770 <line:76:4, col:51> 'unsigned long'
| | | |   | `-BinaryOperator 0x17ef750 <col:5, col:50> 'unsigned long' '+'
| | | |   |   |-ParenExpr 0x17ef718 <col:5, col:46> 'unsigned long'
| | | |   |   | `-BinaryOperator 0x17ef6f8 <col:6, col:45> 'unsigned long' '<<'
| | | |   |   |   |-ParenExpr 0x17ef6d8 <col:6, col:40> 'unsigned long'
| | | |   |   |   | `-BinaryOperator 0x17ef6b8 <col:7, col:39> 'unsigned long' '-'
| | | |   |   |   |   |-ParenExpr 0x17ef680 <col:7, col:35> 'unsigned long':'unsigned long'
| | | |   |   |   |   | `-BinaryOperator 0x17ef660 <col:8, col:34> 'unsigned long':'unsigned long' '<<'
| | | |   |   |   |   |   |-CStyleCastExpr 0x17ef408 <col:8, col:16> 'unsigned long':'unsigned long' <NoOp>
| | | |   |   |   |   |   | `-ImplicitCastExpr 0x17ef3f0 <col:16> 'unsigned long':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |   |   |   |   |   |   `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| | | |   |   |   |   |   `-ParenExpr 0x17ef640 <col:21, col:34> 'int'
| | | |   |   |   |   |     `-BinaryOperator 0x17ef620 <col:22, col:33> 'int' '-'
| | | |   |   |   |   |       |-ImplicitCastExpr 0x17ef608 <col:22> 'int' <LValueToRValue>
| | | |   |   |   |   |       | `-DeclRefExpr 0x17ef5e8 <col:22> 'const int' lvalue Var 0x17eeef8 '__digits' 'const int' non_odr_use_constant
| | | |   |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| | | |   |   |   |   `-ImplicitCastExpr 0x17ef6a0 <col:39> 'unsigned long' <IntegralCast>
| | | |   |   |   |     `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| | | |   |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| | | |   |   `-ImplicitCastExpr 0x17ef738 <col:50> 'unsigned long' <IntegralCast>
| | | |   |     `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| | | |   `-UnaryOperator 0x17ef7e0 <line:77:4, col:13> 'unsigned long':'unsigned long' prefix '~' cannot overflow
| | | |     `-CStyleCastExpr 0x17ef7b8 <col:5, col:13> 'unsigned long':'unsigned long' <NoOp>
| | | |       `-ImplicitCastExpr 0x17ef7a0 <col:13> 'unsigned long':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |         `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| | | `-VarDecl 0x17ef8c8 <line:78:7, col:70> col:27 __min 'const unsigned long':'const unsigned long' static cinit
| | |   `-ConditionalOperator 0x17efc28 <col:35, col:70> 'unsigned long'
| | |     |-ImplicitCastExpr 0x17efc10 <col:35> 'bool' <LValueToRValue>
| | |     | `-DeclRefExpr 0x17efbf0 <col:35> 'const bool' lvalue Var 0x17ef068 '__is_signed' 'const bool' non_odr_use_constant
| | |     |-BinaryOperator 0x17efb80 <col:49, col:58> 'unsigned long' '-'
| | |     | |-UnaryOperator 0x17efb50 <col:49, col:50> 'unsigned long':'unsigned long' prefix '-'
| | |     | | `-ImplicitCastExpr 0x17efb38 <col:50> 'unsigned long':'unsigned long' <LValueToRValue>
| | |     | |   `-DeclRefExpr 0x17efb18 <col:50> 'const unsigned long':'const unsigned long' lvalue Var 0x17ef348 '__max' 'const unsigned long':'const unsigned long' non_odr_use_constant
| | |     | `-ImplicitCastExpr 0x17efb68 <col:58> 'unsigned long' <IntegralCast>
| | |     |   `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| | |     `-CStyleCastExpr 0x17efbc8 <col:62, col:70> 'unsigned long':'unsigned long' <NoOp>
| | |       `-ImplicitCastExpr 0x17efbb0 <col:70> 'unsigned long':'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x1911070 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x1911878 prev 0x1911070 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| | | |-StaticAssertDecl 0x1912130 <line:64:7, line:65:31> line:64:7
| | | | |-ImplicitCastExpr 0x19120f8 <col:21, col:53> 'bool' <IntegralToBoolean>
| | | | | `-DeclRefExpr 0x19120c0 <col:21, col:53> 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)' EnumConstant 0x12904b0 '__value' 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)' (UsingShadow 0x1911e08 '__value')
| | | | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| | | |-VarDecl 0x1912170 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| | | | `-BinaryOperator 0x1912250 <col:39, col:54> 'bool' '<'
| | | |   |-ImplicitCastExpr 0x1912238 <col:39, col:50> 'int' <IntegralCast>
| | | |   | `-CStyleCastExpr 0x1912210 <col:39, col:50> 'char':'char' <NoOp>
| | | |   |   `-ImplicitCastExpr 0x19121f8 <col:47, col:50> 'char':'char' <IntegralCast> part_of_explicit_cast
| | | |   |     `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| | | |   |       `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| | | |   |         `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| | | |   `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| | | |-VarDecl 0x19122c8 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| | | | `-BinaryOperator 0x1912690 <line:72:4, col:46> 'int' '-'
| | | |   |-ImplicitCastExpr 0x1912628 <col:4, col:36> 'int' <IntegralCast>
| | | |   | `-DeclRefExpr 0x19123e8 <col:4, col:36> '__gnu_cxx::__is_integer_nonstrict<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)' EnumConstant 0x1912040 '__width' '__gnu_cxx::__is_integer_nonstrict<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | | |   `-ImplicitCastExpr 0x1912678 <col:46> 'int' <IntegralCast>
| | | |     `-ImplicitCastExpr 0x1912660 <col:46> 'bool' <LValueToRValue>
| | | |       `-DeclRefExpr 0x1912640 <col:46> 'const bool' lvalue Var 0x1912170 '__is_signed' 'const bool' non_odr_use_constant
| | | |-VarDecl 0x1912718 <line:75:7, line:77:13> line:75:27 referenced __max 'const char':'const char' static cinit
| | | | `-ImplicitCastExpr 0x1912c30 <col:35, line:77:13> 'const char':'const char' <IntegralCast>
| | | |   `-ConditionalOperator 0x1912c00 <line:75:35, line:77:13> 'int'
| | | |     |-ImplicitCastExpr 0x1912be8 <line:75:35> 'bool' <LValueToRValue>
| | | |     | `-DeclRefExpr 0x1912bc8 <col:35> 'const bool' lvalue Var 0x1912438 '__is_signed' 'const bool' non_odr_use_constant
| | | |     |-ParenExpr 0x1912b28 <line:76:4, col:51> 'int'
| | | |     | `-BinaryOperator 0x1912b08 <col:5, col:50> 'int' '+'
| | | |     |   |-ParenExpr 0x1912ae8 <col:5, col:46> 'int'
| | | |     |   | `-BinaryOperator 0x1912ac8 <col:6, col:45> 'int' '<<'
| | | |     |   |   |-ParenExpr 0x1912aa8 <col:6, col:40> 'int'
| | | |     |   |   | `-BinaryOperator 0x1912a88 <col:7, col:39> 'int' '-'
| | | |     |   |   |   |-ParenExpr 0x1912a68 <col:7, col:35> 'int'
| | | |     |   |   |   | `-BinaryOperator 0x1912a48 <col:8, col:34> 'int' '<<'
| | | |     |   |   |   |   |-ImplicitCastExpr 0x1912a30 <col:8, col:16> 'int' <IntegralCast>
| | | |     |   |   |   |   | `-CStyleCastExpr 0x19127d8 <col:8, col:16> 'char':'char' <NoOp>
| | | |     |   |   |   |   |   `-ImplicitCastExpr 0x19127c0 <col:16> 'char':'char' <IntegralCast> part_of_explicit_cast
| | | |     |   |   |   |   |     `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| | | |     |   |   |   |   `-ParenExpr 0x1912a10 <col:21, col:34> 'int'
| | | |     |   |   |   |     `-BinaryOperator 0x19129f0 <col:22, col:33> 'int' '-'
| | | |     |   |   |   |       |-ImplicitCastExpr 0x19129d8 <col:22> 'int' <LValueToRValue>
| | | |     |   |   |   |       | `-DeclRefExpr 0x19129b8 <col:22> 'const int' lvalue Var 0x19122c8 '__digits' 'const int' non_odr_use_constant
| | | |     |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| | | |     |   |   |   `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| | | |     |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| | | |     |   `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| | | |     `-UnaryOperator 0x1912bb0 <line:77:4, col:13> 'int' prefix '~' cannot overflow
| | | |       `-ImplicitCastExpr 0x1912b98 <col:5, col:13> 'int' <IntegralCast>
| | | |         `-CStyleCastExpr 0x1912b70 <col:5, col:13> 'char':'char' <NoOp>
| | | |           `-ImplicitCastExpr 0x1912b58 <col:13> 'char':'char' <IntegralCast> part_of_explicit_cast
| | | |             `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| | | `-VarDecl 0x1912cb0 <line:78:7, col:70> col:27 __min 'const char':'const char' static cinit
| | |   `-ImplicitCastExpr 0x1913060 <col:35, col:70> 'const char':'const char' <IntegralCast>
| | |     `-ConditionalOperator 0x1913030 <col:35, col:70> 'int'
| | |       |-ImplicitCastExpr 0x1913000 <col:35> 'bool' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1912fe0 <col:35> 'const bool' lvalue Var 0x1912438 '__is_signed' 'const bool' non_odr_use_constant
| | |       |-BinaryOperator 0x1912f70 <col:49, col:58> 'int' '-'
| | |       | |-UnaryOperator 0x1912f58 <col:49, col:50> 'int' prefix '-' cannot overflow
| | |       | | `-ImplicitCastExpr 0x1912f40 <col:50> 'int' <IntegralCast>
| | |       | |   `-ImplicitCastExpr 0x1912f28 <col:50> 'char':'char' <LValueToRValue>
| | |       | |     `-DeclRefExpr 0x1912f08 <col:50> 'const char':'const char' lvalue Var 0x1912718 '__max' 'const char':'const char' non_odr_use_constant
| | |       | `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| | |       `-ImplicitCastExpr 0x1913018 <col:62, col:70> 'int' <IntegralCast>
| | |         `-CStyleCastExpr 0x1912fb8 <col:62, col:70> 'char':'char' <NoOp>
| | |           `-ImplicitCastExpr 0x1912fa0 <col:70> 'char':'char' <IntegralCast> part_of_explicit_cast
| | |             `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| | |-ClassTemplateSpecializationDecl 0x1a01760 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'short'
| | | |-CXXRecordDecl 0x1a01f68 prev 0x1a01760 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| | | |-StaticAssertDecl 0x1a05dc0 <line:64:7, line:65:31> line:64:7
| | | | |-ImplicitCastExpr 0x1a027e8 <col:21, col:53> 'bool' <IntegralToBoolean>
| | | | | `-DeclRefExpr 0x1a027b0 <col:21, col:53> 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)' EnumConstant 0x1295be0 '__value' 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)' (UsingShadow 0x1a024f8 '__value')
| | | | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| | | |-VarDecl 0x1a05e00 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| | | | `-BinaryOperator 0x1a05ee0 <col:39, col:54> 'bool' '<'
| | | |   |-ImplicitCastExpr 0x1a05ec8 <col:39, col:50> 'int' <IntegralCast>
| | | |   | `-CStyleCastExpr 0x1a05ea0 <col:39, col:50> 'short':'short' <NoOp>
| | | |   |   `-ImplicitCastExpr 0x1a05e88 <col:47, col:50> 'short':'short' <IntegralCast> part_of_explicit_cast
| | | |   |     `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| | | |   |       `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| | | |   |         `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| | | |   `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| | | |-VarDecl 0x1a05f58 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| | | | `-BinaryOperator 0x1a06320 <line:72:4, col:46> 'int' '-'
| | | |   |-ImplicitCastExpr 0x1a062b8 <col:4, col:36> 'int' <IntegralCast>
| | | |   | `-DeclRefExpr 0x1a06078 <col:4, col:36> '__gnu_cxx::__is_integer_nonstrict<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)' EnumConstant 0x1a02730 '__width' '__gnu_cxx::__is_integer_nonstrict<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| | | |   `-ImplicitCastExpr 0x1a06308 <col:46> 'int' <IntegralCast>
| | | |     `-ImplicitCastExpr 0x1a062f0 <col:46> 'bool' <LValueToRValue>
| | | |       `-DeclRefExpr 0x1a062d0 <col:46> 'const bool' lvalue Var 0x1a05e00 '__is_signed' 'const bool' non_odr_use_constant
| | | |-VarDecl 0x1a063a8 <line:75:7, line:77:13> line:75:27 referenced __max 'const short':'const short' static cinit
| | | | `-ImplicitCastExpr 0x1a068c0 <col:35, line:77:13> 'const short':'const short' <IntegralCast>
| | | |   `-ConditionalOperator 0x1a06890 <line:75:35, line:77:13> 'int'
| | | |     |-ImplicitCastExpr 0x1a06878 <line:75:35> 'bool' <LValueToRValue>
| | | |     | `-DeclRefExpr 0x1a06858 <col:35> 'const bool' lvalue Var 0x1a060c8 '__is_signed' 'const bool' non_odr_use_constant
| | | |     |-ParenExpr 0x1a067b8 <line:76:4, col:51> 'int'
| | | |     | `-BinaryOperator 0x1a06798 <col:5, col:50> 'int' '+'
| | | |     |   |-ParenExpr 0x1a06778 <col:5, col:46> 'int'
| | | |     |   | `-BinaryOperator 0x1a06758 <col:6, col:45> 'int' '<<'
| | | |     |   |   |-ParenExpr 0x1a06738 <col:6, col:40> 'int'
| | | |     |   |   | `-BinaryOperator 0x1a06718 <col:7, col:39> 'int' '-'
| | | |     |   |   |   |-ParenExpr 0x1a066f8 <col:7, col:35> 'int'
| | | |     |   |   |   | `-BinaryOperator 0x1a066d8 <col:8, col:34> 'int' '<<'
| | | |     |   |   |   |   |-ImplicitCastExpr 0x1a066c0 <col:8, col:16> 'int' <IntegralCast>
| | | |     |   |   |   |   | `-CStyleCastExpr 0x1a06468 <col:8, col:16> 'short':'short' <NoOp>
| | | |     |   |   |   |   |   `-ImplicitCastExpr 0x1a06450 <col:16> 'short':'short' <IntegralCast> part_of_explicit_cast
| | | |     |   |   |   |   |     `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| | | |     |   |   |   |   `-ParenExpr 0x1a066a0 <col:21, col:34> 'int'
| | | |     |   |   |   |     `-BinaryOperator 0x1a06680 <col:22, col:33> 'int' '-'
| | | |     |   |   |   |       |-ImplicitCastExpr 0x1a06668 <col:22> 'int' <LValueToRValue>
| | | |     |   |   |   |       | `-DeclRefExpr 0x1a06648 <col:22> 'const int' lvalue Var 0x1a05f58 '__digits' 'const int' non_odr_use_constant
| | | |     |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| | | |     |   |   |   `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| | | |     |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| | | |     |   `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| | | |     `-UnaryOperator 0x1a06840 <line:77:4, col:13> 'int' prefix '~' cannot overflow
| | | |       `-ImplicitCastExpr 0x1a06828 <col:5, col:13> 'int' <IntegralCast>
| | | |         `-CStyleCastExpr 0x1a06800 <col:5, col:13> 'short':'short' <NoOp>
| | | |           `-ImplicitCastExpr 0x1a067e8 <col:13> 'short':'short' <IntegralCast> part_of_explicit_cast
| | | |             `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| | | `-VarDecl 0x1a06940 <line:78:7, col:70> col:27 referenced __min 'const short':'const short' static cinit
| | |   `-ImplicitCastExpr 0x1a06cf0 <col:35, col:70> 'const short':'const short' <IntegralCast>
| | |     `-ConditionalOperator 0x1a06cc0 <col:35, col:70> 'int'
| | |       |-ImplicitCastExpr 0x1a06c90 <col:35> 'bool' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1a06c70 <col:35> 'const bool' lvalue Var 0x1a060c8 '__is_signed' 'const bool' non_odr_use_constant
| | |       |-BinaryOperator 0x1a06c00 <col:49, col:58> 'int' '-'
| | |       | |-UnaryOperator 0x1a06be8 <col:49, col:50> 'int' prefix '-' cannot overflow
| | |       | | `-ImplicitCastExpr 0x1a06bd0 <col:50> 'int' <IntegralCast>
| | |       | |   `-ImplicitCastExpr 0x1a06bb8 <col:50> 'short':'short' <LValueToRValue>
| | |       | |     `-DeclRefExpr 0x1a06b98 <col:50> 'const short':'const short' lvalue Var 0x1a063a8 '__max' 'const short':'const short' non_odr_use_constant
| | |       | `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| | |       `-ImplicitCastExpr 0x1a06ca8 <col:62, col:70> 'int' <IntegralCast>
| | |         `-CStyleCastExpr 0x1a06c48 <col:62, col:70> 'short':'short' <NoOp>
| | |           `-ImplicitCastExpr 0x1a06c30 <col:70> 'short':'short' <IntegralCast> part_of_explicit_cast
| | |             `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| | `-ClassTemplateSpecializationDecl 0x1a0ef90 <line:60:3, line:79:5> line:61:12 struct __numeric_traits_integer definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'long'
| |   |-CXXRecordDecl 0x1a0f798 prev 0x1a0ef90 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
| |   |-StaticAssertDecl 0x1a10050 <line:64:7, line:65:31> line:64:7
| |   | |-ImplicitCastExpr 0x1a10018 <col:21, col:53> 'bool' <IntegralToBoolean>
| |   | | `-DeclRefExpr 0x1a0ffe0 <col:21, col:53> 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)' EnumConstant 0x1296f20 '__value' 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)' (UsingShadow 0x1a0fd28 '__value')
| |   | `-StringLiteral 0x12c36f8 <line:65:7> 'const char [23]' lvalue "invalid specialization"
| |   |-VarDecl 0x1a10090 <line:70:7, col:54> col:25 referenced __is_signed 'const bool' static cinit
| |   | `-BinaryOperator 0x1a10170 <col:39, col:54> 'bool' '<'
| |   |   |-CStyleCastExpr 0x1a10130 <col:39, col:50> 'long':'long' <NoOp>
| |   |   | `-ImplicitCastExpr 0x1a10118 <col:47, col:50> 'long':'long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-ParenExpr 0x12c3848 <col:47, col:50> 'int'
| |   |   |     `-UnaryOperator 0x12c3800 <col:48, col:49> 'int' prefix '-'
| |   |   |       `-IntegerLiteral 0x12c37e0 <col:49> 'int' 1
| |   |   `-ImplicitCastExpr 0x1a10158 <col:54> 'long' <IntegralCast>
| |   |     `-IntegerLiteral 0x12c3890 <col:54> 'int' 0
| |   |-VarDecl 0x1a101e8 <line:71:7, line:72:46> line:71:24 referenced __digits 'const int' static cinit
| |   | `-BinaryOperator 0x1a105b0 <line:72:4, col:46> 'int' '-'
| |   |   |-ImplicitCastExpr 0x1a10548 <col:4, col:36> 'int' <IntegralCast>
| |   |   | `-DeclRefExpr 0x1a10308 <col:4, col:36> '__gnu_cxx::__is_integer_nonstrict<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)' EnumConstant 0x1a0ff60 '__width' '__gnu_cxx::__is_integer_nonstrict<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:57:7)'
| |   |   `-ImplicitCastExpr 0x1a10598 <col:46> 'int' <IntegralCast>
| |   |     `-ImplicitCastExpr 0x1a10580 <col:46> 'bool' <LValueToRValue>
| |   |       `-DeclRefExpr 0x1a10560 <col:46> 'const bool' lvalue Var 0x1a10090 '__is_signed' 'const bool' non_odr_use_constant
| |   |-VarDecl 0x1a10638 <line:75:7, line:77:13> line:75:27 referenced __max 'const long':'const long' static cinit
| |   | `-ConditionalOperator 0x1a10b20 <col:35, line:77:13> 'long'
| |   |   |-ImplicitCastExpr 0x1a10b08 <line:75:35> 'bool' <LValueToRValue>
| |   |   | `-DeclRefExpr 0x1a10ae8 <col:35> 'const bool' lvalue Var 0x1a10358 '__is_signed' 'const bool' non_odr_use_constant
| |   |   |-ParenExpr 0x1a10a60 <line:76:4, col:51> 'long'
| |   |   | `-BinaryOperator 0x1a10a40 <col:5, col:50> 'long' '+'
| |   |   |   |-ParenExpr 0x1a10a08 <col:5, col:46> 'long'
| |   |   |   | `-BinaryOperator 0x1a109e8 <col:6, col:45> 'long' '<<'
| |   |   |   |   |-ParenExpr 0x1a109c8 <col:6, col:40> 'long'
| |   |   |   |   | `-BinaryOperator 0x1a109a8 <col:7, col:39> 'long' '-'
| |   |   |   |   |   |-ParenExpr 0x1a10970 <col:7, col:35> 'long':'long'
| |   |   |   |   |   | `-BinaryOperator 0x1a10950 <col:8, col:34> 'long':'long' '<<'
| |   |   |   |   |   |   |-CStyleCastExpr 0x1a106f8 <col:8, col:16> 'long':'long' <NoOp>
| |   |   |   |   |   |   | `-ImplicitCastExpr 0x1a106e0 <col:16> 'long':'long' <IntegralCast> part_of_explicit_cast
| |   |   |   |   |   |   |   `-IntegerLiteral 0x12c3b20 <col:16> 'int' 1
| |   |   |   |   |   |   `-ParenExpr 0x1a10930 <col:21, col:34> 'int'
| |   |   |   |   |   |     `-BinaryOperator 0x1a10910 <col:22, col:33> 'int' '-'
| |   |   |   |   |   |       |-ImplicitCastExpr 0x1a108f8 <col:22> 'int' <LValueToRValue>
| |   |   |   |   |   |       | `-DeclRefExpr 0x1a108d8 <col:22> 'const int' lvalue Var 0x1a101e8 '__digits' 'const int' non_odr_use_constant
| |   |   |   |   |   |       `-IntegerLiteral 0x12c3b98 <col:33> 'int' 1
| |   |   |   |   |   `-ImplicitCastExpr 0x1a10990 <col:39> 'long' <IntegralCast>
| |   |   |   |   |     `-IntegerLiteral 0x12c3c50 <col:39> 'int' 1
| |   |   |   |   `-IntegerLiteral 0x12c3cb0 <col:45> 'int' 1
| |   |   |   `-ImplicitCastExpr 0x1a10a28 <col:50> 'long' <IntegralCast>
| |   |   |     `-IntegerLiteral 0x12c3d10 <col:50> 'int' 1
| |   |   `-UnaryOperator 0x1a10ad0 <line:77:4, col:13> 'long':'long' prefix '~' cannot overflow
| |   |     `-CStyleCastExpr 0x1a10aa8 <col:5, col:13> 'long':'long' <NoOp>
| |   |       `-ImplicitCastExpr 0x1a10a90 <col:13> 'long':'long' <IntegralCast> part_of_explicit_cast
| |   |         `-IntegerLiteral 0x12c3d70 <col:13> 'int' 0
| |   `-VarDecl 0x1a10bb8 <line:78:7, col:70> col:27 referenced __min 'const long':'const long' static cinit
| |     `-ConditionalOperator 0x1a10f18 <col:35, col:70> 'long'
| |       |-ImplicitCastExpr 0x1a10f00 <col:35> 'bool' <LValueToRValue>
| |       | `-DeclRefExpr 0x1a10ee0 <col:35> 'const bool' lvalue Var 0x1a10358 '__is_signed' 'const bool' non_odr_use_constant
| |       |-BinaryOperator 0x1a10e70 <col:49, col:58> 'long' '-'
| |       | |-UnaryOperator 0x1a10e40 <col:49, col:50> 'long':'long' prefix '-'
| |       | | `-ImplicitCastExpr 0x1a10e28 <col:50> 'long':'long' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x1a10e08 <col:50> 'const long':'const long' lvalue Var 0x1a10638 '__max' 'const long':'const long' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x1a10e58 <col:58> 'long' <IntegralCast>
| |       |   `-IntegerLiteral 0x12c3ef8 <col:58> 'int' 1
| |       `-CStyleCastExpr 0x1a10eb8 <col:62, col:70> 'long':'long' <NoOp>
| |         `-ImplicitCastExpr 0x1a10ea0 <col:70> 'long':'long' <IntegralCast> part_of_explicit_cast
| |           `-IntegerLiteral 0x12c3f38 <col:70> 'int' 0
| |-VarDecl 0x12c4208 parent 0x12c3208 prev 0x12c3e38 <line:81:3, line:82:52> col:52 __min 'const _Value'
| |-VarDecl 0x12c8798 parent 0x12c3208 prev 0x12c3a98 <line:84:3, line:85:52> col:52 __max 'const _Value'
| |-VarDecl 0x12c8a48 parent 0x12c3208 prev 0x12c3778 <line:87:3, line:88:50> col:50 __is_signed 'const bool'
| |-VarDecl 0x12c8d00 parent 0x12c3208 prev 0x12c38e8 <line:90:3, line:91:49> col:49 __digits 'const int'
| |-TypeAliasTemplateDecl 0x12c8f60 <line:135:3, line:136:54> col:5 __int_traits
| | |-TemplateTypeParmDecl 0x12c8db0 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x12c8f00 <line:136:5, col:54> col:11 __int_traits '__numeric_traits_integer<_Tp>'
| |   `-TemplateSpecializationType 0x12c8e60 '__numeric_traits_integer<_Tp>' dependent __numeric_traits_integer
| |     `-TemplateArgument type '_Tp'
| |-ClassTemplateDecl 0x12c90e8 <line:155:3, line:165:5> line:156:12 __numeric_traits_floating
| | |-TemplateTypeParmDecl 0x12c8fb8 <line:155:12, col:21> col:21 referenced typename depth 0 index 0 _Value
| | |-CXXRecordDecl 0x12c9058 <line:156:5, line:165:5> line:156:12 struct __numeric_traits_floating definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x12c9340 <col:5, col:12> col:12 implicit struct __numeric_traits_floating
| | | |-VarDecl 0x12c93e8 <line:159:7, line:145:38> line:159:24 __max_digits10 'const int' static cinit
| | | | `-ParenExpr 0x12c9988 <line:144:3, line:145:38> '<dependent type>'
| | | |   `-BinaryOperator 0x12c9968 <line:144:4, line:145:34> '<dependent type>' '+'
| | | |     |-IntegerLiteral 0x12c9450 <line:144:4> 'int' 2
| | | |     `-BinaryOperator 0x12c9948 <line:140:3, line:145:34> '<dependent type>' '/'
| | | |       |-BinaryOperator 0x12c9908 <line:140:3, line:145:27> '<dependent type>' '*'
| | | |       | |-ParenExpr 0x12c98c8 <line:140:3, line:141:60> '<dependent type>'
| | | |       | | `-ConditionalOperator 0x12c9898 <line:140:4, <built-in>:173:27> '<dependent type>'
| | | |       | |   |-DependentScopeDeclRefExpr 0x12c9620 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> '<dependent type>' lvalue
| | | |       | |   |-IntegerLiteral 0x12c9658 <<built-in>:145:26> 'int' 24
| | | |       | |   `-ConditionalOperator 0x12c9868 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:173:27> '<dependent type>'
| | | |       | |     |-DependentScopeDeclRefExpr 0x12c97f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> '<dependent type>' lvalue
| | | |       | |     |-IntegerLiteral 0x12c9828 <<built-in>:159:26> 'int' 53
| | | |       | |     `-IntegerLiteral 0x12c9848 <line:173:27> 'int' 64
| | | |       | `-IntegerLiteral 0x12c98e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:145:27> 'long' 643
| | | |       `-IntegerLiteral 0x12c9928 <col:34> 'int' 2136
| | | |-VarDecl 0x12c99b8 <line:162:7, col:39> col:25 __is_signed 'const bool' static cinit
| | | | `-CXXBoolLiteralExpr 0x12c9a20 <col:39> 'bool' true
| | | |-VarDecl 0x12c9aa0 <line:163:7, line:141:60> line:163:24 __digits10 'const int' static cinit
| | | | `-ParenExpr 0x12c9e88 <line:140:3, line:141:60> '<dependent type>'
| | | |   `-ConditionalOperator 0x12c9e58 <line:140:4, <built-in>:168:22> '<dependent type>'
| | | |     |-DependentScopeDeclRefExpr 0x12c9c40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> '<dependent type>' lvalue
| | | |     |-IntegerLiteral 0x12c9c78 <<built-in>:140:21> 'int' 6
| | | |     `-ConditionalOperator 0x12c9e28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:168:22> '<dependent type>'
| | | |       |-DependentScopeDeclRefExpr 0x12c9db0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> '<dependent type>' lvalue
| | | |       |-IntegerLiteral 0x12c9de8 <<built-in>:154:21> 'int' 15
| | | |       `-IntegerLiteral 0x12c9e08 <line:168:22> 'int' 18
| | | `-VarDecl 0x12c9ec0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:164:7, line:141:60> line:164:24 __max_exponent10 'const int' static cinit
| | |   `-ParenExpr 0x12ca2a8 <line:140:3, line:141:60> '<dependent type>'
| | |     `-ConditionalOperator 0x12ca278 <line:140:4, <built-in>:174:29> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x12ca060 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> '<dependent type>' lvalue
| | |       |-IntegerLiteral 0x12ca098 <<built-in>:146:28> 'int' 38
| | |       `-ConditionalOperator 0x12ca248 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:174:29> '<dependent type>'
| | |         |-DependentScopeDeclRefExpr 0x12ca1d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> '<dependent type>' lvalue
| | |         |-IntegerLiteral 0x12ca208 <<built-in>:160:28> 'int' 308
| | |         `-IntegerLiteral 0x12ca228 <line:174:29> 'int' 4932
| | |-ClassTemplateSpecializationDecl 0x15c9da0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:155:3, line:165:5> line:156:12 struct __numeric_traits_floating
| | | `-TemplateArgument type 'int'
| | |-ClassTemplateSpecializationDecl 0x16b5ac0 <line:155:3, line:165:5> line:156:12 struct __numeric_traits_floating definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'float'
| | | |-CXXRecordDecl 0x16b61f8 prev 0x16b5ac0 <col:5, col:12> col:12 implicit struct __numeric_traits_floating
| | | |-VarDecl 0x16b6288 <line:159:7, line:145:38> line:159:24 __max_digits10 'const int' static cinit
| | | | `-ImplicitCastExpr 0x16b6f40 <line:144:3, line:145:38> 'const int' <IntegralCast>
| | | |   `-ParenExpr 0x16b6f20 <line:144:3, line:145:38> 'long'
| | | |     `-BinaryOperator 0x16b6f00 <line:144:4, line:145:34> 'long' '+'
| | | |       |-ImplicitCastExpr 0x16b6ee8 <line:144:4> 'long' <IntegralCast>
| | | |       | `-IntegerLiteral 0x12c9450 <col:4> 'int' 2
| | | |       `-BinaryOperator 0x16b6ec8 <line:140:3, line:145:34> 'long' '/'
| | | |         |-BinaryOperator 0x16b6e90 <line:140:3, line:145:27> 'long' '*'
| | | |         | |-ImplicitCastExpr 0x16b6e78 <line:140:3, line:141:60> 'long' <IntegralCast>
| | | |         | | `-ParenExpr 0x16b6e58 <line:140:3, line:141:60> 'int'
| | | |         | |   `-ConditionalOperator 0x16b6e28 <line:140:4, <built-in>:173:27> 'int'
| | | |         | |     |-ImplicitCastExpr 0x16b6e10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |         | |     | `-DeclRefExpr 0x16b6878 <col:4, col:33> 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b67a0 '__value' 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | | |         | |     |-IntegerLiteral 0x12c9658 <<built-in>:145:26> 'int' 24
| | | |         | |     `-ConditionalOperator 0x16b6de0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:173:27> 'int'
| | | |         | |       |-ImplicitCastExpr 0x16b6dc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |         | |       | `-DeclRefExpr 0x16b6d98 <col:6, col:36> 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b6cc0 '__value' 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |         | |       |-IntegerLiteral 0x12c9828 <<built-in>:159:26> 'int' 53
| | | |         | |       `-IntegerLiteral 0x12c9848 <line:173:27> 'int' 64
| | | |         | `-IntegerLiteral 0x12c98e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:145:27> 'long' 643
| | | |         `-ImplicitCastExpr 0x16b6eb0 <col:34> 'long' <IntegralCast>
| | | |           `-IntegerLiteral 0x12c9928 <col:34> 'int' 2136
| | | |-VarDecl 0x16b6fb0 <line:162:7, col:39> col:25 __is_signed 'const bool' static cinit
| | | | `-CXXBoolLiteralExpr 0x12c9a20 <col:39> 'bool' true
| | | |-VarDecl 0x16b7080 <line:163:7, line:141:60> line:163:24 __digits10 'const int' static cinit
| | | | `-ParenExpr 0x16b73b0 <line:140:3, line:141:60> 'int'
| | | |   `-ConditionalOperator 0x16b7380 <line:140:4, <built-in>:168:22> 'int'
| | | |     |-ImplicitCastExpr 0x16b7368 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |     | `-DeclRefExpr 0x16b71e0 <col:4, col:33> 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b67a0 '__value' 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | | |     |-IntegerLiteral 0x12c9c78 <<built-in>:140:21> 'int' 6
| | | |     `-ConditionalOperator 0x16b7338 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:168:22> 'int'
| | | |       |-ImplicitCastExpr 0x16b7320 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |       | `-DeclRefExpr 0x16b72f0 <col:6, col:36> 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b6cc0 '__value' 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |       |-IntegerLiteral 0x12c9de8 <<built-in>:154:21> 'int' 15
| | | |       `-IntegerLiteral 0x12c9e08 <line:168:22> 'int' 18
| | | `-VarDecl 0x16b7428 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:164:7, line:141:60> line:164:24 referenced __max_exponent10 'const int' static cinit
| | |   `-ParenExpr 0x16b7750 <line:140:3, line:141:60> 'int'
| | |     `-ConditionalOperator 0x16b7720 <line:140:4, <built-in>:174:29> 'int'
| | |       |-ImplicitCastExpr 0x16b7708 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | |       | `-DeclRefExpr 0x16b7580 <col:4, col:33> 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b67a0 '__value' 'std::__are_same<float, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | |       |-IntegerLiteral 0x12ca098 <<built-in>:146:28> 'int' 38
| | |       `-ConditionalOperator 0x16b76d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:174:29> 'int'
| | |         |-ImplicitCastExpr 0x16b76c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | |         | `-DeclRefExpr 0x16b7690 <col:6, col:36> 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b6cc0 '__value' 'std::__are_same<float, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | |         |-IntegerLiteral 0x12ca208 <<built-in>:160:28> 'int' 308
| | |         `-IntegerLiteral 0x12ca228 <line:174:29> 'int' 4932
| | |-ClassTemplateSpecializationDecl 0x16b8a30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:155:3, line:165:5> line:156:12 struct __numeric_traits_floating definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'double'
| | | |-CXXRecordDecl 0x16b9168 prev 0x16b8a30 <col:5, col:12> col:12 implicit struct __numeric_traits_floating
| | | |-VarDecl 0x16b91f8 <line:159:7, line:145:38> line:159:24 __max_digits10 'const int' static cinit
| | | | `-ImplicitCastExpr 0x16b9eb0 <line:144:3, line:145:38> 'const int' <IntegralCast>
| | | |   `-ParenExpr 0x16b9e90 <line:144:3, line:145:38> 'long'
| | | |     `-BinaryOperator 0x16b9e70 <line:144:4, line:145:34> 'long' '+'
| | | |       |-ImplicitCastExpr 0x16b9e58 <line:144:4> 'long' <IntegralCast>
| | | |       | `-IntegerLiteral 0x12c9450 <col:4> 'int' 2
| | | |       `-BinaryOperator 0x16b9e38 <line:140:3, line:145:34> 'long' '/'
| | | |         |-BinaryOperator 0x16b9e00 <line:140:3, line:145:27> 'long' '*'
| | | |         | |-ImplicitCastExpr 0x16b9de8 <line:140:3, line:141:60> 'long' <IntegralCast>
| | | |         | | `-ParenExpr 0x16b9dc8 <line:140:3, line:141:60> 'int'
| | | |         | |   `-ConditionalOperator 0x16b9d98 <line:140:4, <built-in>:173:27> 'int'
| | | |         | |     |-ImplicitCastExpr 0x16b9d80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |         | |     | `-DeclRefExpr 0x16b9788 <col:4, col:33> 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b96b0 '__value' 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |         | |     |-IntegerLiteral 0x12c9658 <<built-in>:145:26> 'int' 24
| | | |         | |     `-ConditionalOperator 0x16b9d50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:173:27> 'int'
| | | |         | |       |-ImplicitCastExpr 0x16b9d38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |         | |       | `-DeclRefExpr 0x16b9d08 <col:6, col:36> 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b9c30 '__value' 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | | |         | |       |-IntegerLiteral 0x12c9828 <<built-in>:159:26> 'int' 53
| | | |         | |       `-IntegerLiteral 0x12c9848 <line:173:27> 'int' 64
| | | |         | `-IntegerLiteral 0x12c98e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:145:27> 'long' 643
| | | |         `-ImplicitCastExpr 0x16b9e20 <col:34> 'long' <IntegralCast>
| | | |           `-IntegerLiteral 0x12c9928 <col:34> 'int' 2136
| | | |-VarDecl 0x16b9f20 <line:162:7, col:39> col:25 __is_signed 'const bool' static cinit
| | | | `-CXXBoolLiteralExpr 0x12c9a20 <col:39> 'bool' true
| | | |-VarDecl 0x16b9ff0 <line:163:7, line:141:60> line:163:24 __digits10 'const int' static cinit
| | | | `-ParenExpr 0x16ba320 <line:140:3, line:141:60> 'int'
| | | |   `-ConditionalOperator 0x16ba2f0 <line:140:4, <built-in>:168:22> 'int'
| | | |     |-ImplicitCastExpr 0x16ba2d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |     | `-DeclRefExpr 0x16ba150 <col:4, col:33> 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b96b0 '__value' 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |     |-IntegerLiteral 0x12c9c78 <<built-in>:140:21> 'int' 6
| | | |     `-ConditionalOperator 0x16ba2a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:168:22> 'int'
| | | |       |-ImplicitCastExpr 0x16ba290 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |       | `-DeclRefExpr 0x16ba260 <col:6, col:36> 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b9c30 '__value' 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | | |       |-IntegerLiteral 0x12c9de8 <<built-in>:154:21> 'int' 15
| | | |       `-IntegerLiteral 0x12c9e08 <line:168:22> 'int' 18
| | | `-VarDecl 0x16ba398 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:164:7, line:141:60> line:164:24 referenced __max_exponent10 'const int' static cinit
| | |   `-ParenExpr 0x16ba6c0 <line:140:3, line:141:60> 'int'
| | |     `-ConditionalOperator 0x16ba690 <line:140:4, <built-in>:174:29> 'int'
| | |       |-ImplicitCastExpr 0x16ba678 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | |       | `-DeclRefExpr 0x16ba4f0 <col:4, col:33> 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16b96b0 '__value' 'std::__are_same<double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | |       |-IntegerLiteral 0x12ca098 <<built-in>:146:28> 'int' 38
| | |       `-ConditionalOperator 0x16ba648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:174:29> 'int'
| | |         |-ImplicitCastExpr 0x16ba630 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | |         | `-DeclRefExpr 0x16ba600 <col:6, col:36> 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)' EnumConstant 0x16b9c30 '__value' 'std::__are_same<double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
| | |         |-IntegerLiteral 0x12ca208 <<built-in>:160:28> 'int' 308
| | |         `-IntegerLiteral 0x12ca228 <line:174:29> 'int' 4932
| | |-ClassTemplateSpecializationDecl 0x16bb990 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:155:3, line:165:5> line:156:12 struct __numeric_traits_floating definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long double'
| | | |-CXXRecordDecl 0x16bc0c8 prev 0x16bb990 <col:5, col:12> col:12 implicit struct __numeric_traits_floating
| | | |-VarDecl 0x16bc158 <line:159:7, line:145:38> line:159:24 __max_digits10 'const int' static cinit
| | | | `-ImplicitCastExpr 0x16bcdb0 <line:144:3, line:145:38> 'const int' <IntegralCast>
| | | |   `-ParenExpr 0x16bcd90 <line:144:3, line:145:38> 'long'
| | | |     `-BinaryOperator 0x16bcd70 <line:144:4, line:145:34> 'long' '+'
| | | |       |-ImplicitCastExpr 0x16bcd58 <line:144:4> 'long' <IntegralCast>
| | | |       | `-IntegerLiteral 0x12c9450 <col:4> 'int' 2
| | | |       `-BinaryOperator 0x16bcd38 <line:140:3, line:145:34> 'long' '/'
| | | |         |-BinaryOperator 0x16bcd00 <line:140:3, line:145:27> 'long' '*'
| | | |         | |-ImplicitCastExpr 0x16bcce8 <line:140:3, line:141:60> 'long' <IntegralCast>
| | | |         | | `-ParenExpr 0x16bccc8 <line:140:3, line:141:60> 'int'
| | | |         | |   `-ConditionalOperator 0x16bcc98 <line:140:4, <built-in>:173:27> 'int'
| | | |         | |     |-ImplicitCastExpr 0x16bcc80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |         | |     | `-DeclRefExpr 0x16bc6e8 <col:4, col:33> 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bc610 '__value' 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |         | |     |-IntegerLiteral 0x12c9658 <<built-in>:145:26> 'int' 24
| | | |         | |     `-ConditionalOperator 0x16bcc50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:173:27> 'int'
| | | |         | |       |-ImplicitCastExpr 0x16bcc38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |         | |       | `-DeclRefExpr 0x16bcc08 <col:6, col:36> 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bcb30 '__value' 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |         | |       |-IntegerLiteral 0x12c9828 <<built-in>:159:26> 'int' 53
| | | |         | |       `-IntegerLiteral 0x12c9848 <line:173:27> 'int' 64
| | | |         | `-IntegerLiteral 0x12c98e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:145:27> 'long' 643
| | | |         `-ImplicitCastExpr 0x16bcd20 <col:34> 'long' <IntegralCast>
| | | |           `-IntegerLiteral 0x12c9928 <col:34> 'int' 2136
| | | |-VarDecl 0x16bce20 <line:162:7, col:39> col:25 __is_signed 'const bool' static cinit
| | | | `-CXXBoolLiteralExpr 0x12c9a20 <col:39> 'bool' true
| | | |-VarDecl 0x16bcef0 <line:163:7, line:141:60> line:163:24 __digits10 'const int' static cinit
| | | | `-ParenExpr 0x16bd220 <line:140:3, line:141:60> 'int'
| | | |   `-ConditionalOperator 0x16bd1f0 <line:140:4, <built-in>:168:22> 'int'
| | | |     |-ImplicitCastExpr 0x16bd1d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | | |     | `-DeclRefExpr 0x16bd050 <col:4, col:33> 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bc610 '__value' 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |     |-IntegerLiteral 0x12c9c78 <<built-in>:140:21> 'int' 6
| | | |     `-ConditionalOperator 0x16bd1a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:168:22> 'int'
| | | |       |-ImplicitCastExpr 0x16bd190 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | | |       | `-DeclRefExpr 0x16bd160 <col:6, col:36> 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bcb30 '__value' 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | | |       |-IntegerLiteral 0x12c9de8 <<built-in>:154:21> 'int' 15
| | | |       `-IntegerLiteral 0x12c9e08 <line:168:22> 'int' 18
| | | `-VarDecl 0x16bd298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:164:7, line:141:60> line:164:24 referenced __max_exponent10 'const int' static cinit
| | |   `-ParenExpr 0x16c0000 <line:140:3, line:141:60> 'int'
| | |     `-ConditionalOperator 0x16bffd0 <line:140:4, <built-in>:174:29> 'int'
| | |       |-ImplicitCastExpr 0x16bd578 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:140:4, col:33> 'bool' <IntegralToBoolean>
| | |       | `-DeclRefExpr 0x16bd3f0 <col:4, col:33> 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bc610 '__value' 'std::__are_same<long double, float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | |       |-IntegerLiteral 0x12ca098 <<built-in>:146:28> 'int' 38
| | |       `-ConditionalOperator 0x16bd548 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, <built-in>:174:29> 'int'
| | |         |-ImplicitCastExpr 0x16bd530 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:141:6, col:36> 'bool' <IntegralToBoolean>
| | |         | `-DeclRefExpr 0x16bd500 <col:6, col:36> 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)' EnumConstant 0x16bcb30 '__value' 'std::__are_same<long double, double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
| | |         |-IntegerLiteral 0x12ca208 <<built-in>:160:28> 'int' 308
| | |         `-IntegerLiteral 0x12ca228 <line:174:29> 'int' 4932
| | |-ClassTemplateSpecializationDecl 0x17ede20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/numeric_traits.h:155:3, line:165:5> line:156:12 struct __numeric_traits_floating
| | | `-TemplateArgument type 'unsigned long'
| | |-ClassTemplateSpecializationDecl 0x19111f0 <line:155:3, line:165:5> line:156:12 struct __numeric_traits_floating
| | | `-TemplateArgument type 'char'
| | |-ClassTemplateSpecializationDecl 0x1a018e0 <line:155:3, line:165:5> line:156:12 struct __numeric_traits_floating
| | | `-TemplateArgument type 'short'
| | `-ClassTemplateSpecializationDecl 0x1a0f110 <line:155:3, line:165:5> line:156:12 struct __numeric_traits_floating
| |   `-TemplateArgument type 'long'
| |-VarDecl 0x12ca4e0 parent 0x12c9058 prev 0x12c93e8 <line:167:3, line:168:50> col:50 __max_digits10 'const int'
| |-VarDecl 0x12cc278 parent 0x12c9058 prev 0x12c99b8 <line:170:3, line:171:51> col:51 __is_signed 'const bool'
| |-VarDecl 0x12cc530 parent 0x12c9058 prev 0x12c9aa0 <line:173:3, line:174:50> col:50 __digits10 'const int'
| |-VarDecl 0x12cc7e0 parent 0x12c9058 prev 0x12c9ec0 <line:176:3, line:177:50> col:50 __max_exponent10 'const int'
| |-ClassTemplateDecl 0x12cc9b8 <line:179:3, line:184:7> line:180:12 __numeric_traits
| | |-TemplateTypeParmDecl 0x12cc890 <line:179:12, col:21> col:21 referenced typename depth 0 index 0 _Value
| | |-CXXRecordDecl 0x12cc928 <line:180:5, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type'
| | | `-CXXRecordDecl 0x12cd110 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x15c9910 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type':'__gnu_cxx::__numeric_traits_integer<int>'
| | | |-TemplateArgument type 'int'
| | | `-CXXRecordDecl 0x15cbbb8 prev 0x15c9910 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x16b5628 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<float>::__value, __numeric_traits_integer<float>, __numeric_traits_floating<float> >::__type':'__gnu_cxx::__numeric_traits_floating<float>'
| | | |-TemplateArgument type 'float'
| | | `-CXXRecordDecl 0x16b7810 prev 0x16b5628 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x16b8598 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<double>::__value, __numeric_traits_integer<double>, __numeric_traits_floating<double> >::__type':'__gnu_cxx::__numeric_traits_floating<double>'
| | | |-TemplateArgument type 'double'
| | | `-CXXRecordDecl 0x16ba780 prev 0x16b8598 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x16bb4f8 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<long double>::__value, __numeric_traits_integer<long double>, __numeric_traits_floating<long double> >::__type':'__gnu_cxx::__numeric_traits_floating<long double>'
| | | |-TemplateArgument type 'long double'
| | | `-CXXRecordDecl 0x16c00c0 prev 0x16bb4f8 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x17ed990 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type':'__gnu_cxx::__numeric_traits_integer<unsigned long>'
| | | |-TemplateArgument type 'unsigned long'
| | | `-CXXRecordDecl 0x17efcf8 prev 0x17ed990 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x1910d58 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type':'__gnu_cxx::__numeric_traits_integer<char>'
| | | |-TemplateArgument type 'char'
| | | `-CXXRecordDecl 0x1913118 prev 0x1910d58 <col:5, col:12> col:12 implicit struct __numeric_traits
| | |-ClassTemplateSpecializationDecl 0x1a01450 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type':'__gnu_cxx::__numeric_traits_integer<short>'
| | | |-TemplateArgument type 'short'
| | | `-CXXRecordDecl 0x1a06da8 prev 0x1a01450 <col:5, col:12> col:12 implicit struct __numeric_traits
| | `-ClassTemplateSpecializationDecl 0x1a0ec80 <line:179:3, line:184:7> line:180:12 struct __numeric_traits definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__conditional_type<std::__is_integer<long>::__value, __numeric_traits_integer<long>, __numeric_traits_floating<long> >::__type':'__gnu_cxx::__numeric_traits_integer<long>'
| |   |-TemplateArgument type 'long'
| |   `-CXXRecordDecl 0x1a10fe8 prev 0x1a0ec80 <col:5, col:12> col:12 implicit struct __numeric_traits
| |-VarDecl 0x15cafb8 parent 0x15c9c20 prev 0x15cad20 <line:88:5, col:50> col:50 referenced __is_signed 'const bool'
| |-VarDecl 0x15cb388 parent 0x15c9c20 prev 0x15cae48 <line:91:5, col:49> col:49 __digits 'const int'
| |-VarDecl 0x15cb8a8 parent 0x15c9c20 prev 0x15cb298 <line:85:5, col:52> col:52 referenced __max 'const int':'const int'
| |-VarDecl 0x15cc038 parent 0x15c9c20 prev 0x15cb7b0 <line:82:5, col:52> col:52 referenced __min 'const int':'const int'
| |-VarDecl 0x16b7928 parent 0x16b5ac0 prev 0x16b7428 <line:177:5, col:50> col:50 referenced __max_exponent10 'const int'
| |-VarDecl 0x16ba898 parent 0x16b8a30 prev 0x16ba398 <col:5, col:50> col:50 referenced __max_exponent10 'const int'
| |-VarDecl 0x16c01d8 parent 0x16bb990 prev 0x16bd298 <col:5, col:50> col:50 referenced __max_exponent10 'const int'
| |-VarDecl 0x17ef068 parent 0x17edca0 prev 0x17eeda0 <line:88:5, col:50> col:50 referenced __is_signed 'const bool'
| |-VarDecl 0x17ef450 parent 0x17edca0 prev 0x17eeef8 <line:91:5, col:49> col:49 referenced __digits 'const int'
| |-VarDecl 0x17ef9b8 parent 0x17edca0 prev 0x17ef348 <line:85:5, col:52> col:52 __max 'const unsigned long':'const unsigned long'
| |-VarDecl 0x1912438 parent 0x1911070 prev 0x1912170 <line:88:5, col:50> col:50 referenced __is_signed 'const bool'
| |-VarDecl 0x1912820 parent 0x1911070 prev 0x19122c8 <line:91:5, col:49> col:49 __digits 'const int'
| |-VarDecl 0x1912da8 parent 0x1911070 prev 0x1912718 <line:85:5, col:52> col:52 referenced __max 'const char':'const char'
| |-VarDecl 0x1a060c8 parent 0x1a01760 prev 0x1a05e00 <line:88:5, col:50> col:50 referenced __is_signed 'const bool'
| |-VarDecl 0x1a064b0 parent 0x1a01760 prev 0x1a05f58 <line:91:5, col:49> col:49 __digits 'const int'
| |-VarDecl 0x1a06a38 parent 0x1a01760 prev 0x1a063a8 <line:85:5, col:52> col:52 referenced __max 'const short':'const short'
| |-VarDecl 0x1a06ef8 parent 0x1a01760 prev 0x1a06940 <line:82:5, col:52> col:52 referenced __min 'const short':'const short'
| |-VarDecl 0x1a10358 parent 0x1a0ef90 prev 0x1a10090 <line:88:5, col:50> col:50 referenced __is_signed 'const bool'
| |-VarDecl 0x1a10740 parent 0x1a0ef90 prev 0x1a101e8 <line:91:5, col:49> col:49 __digits 'const int'
| |-VarDecl 0x1a10ca8 parent 0x1a0ef90 prev 0x1a10638 <line:85:5, col:52> col:52 referenced __max 'const long':'const long'
| `-VarDecl 0x1a11428 parent 0x1a0ef90 prev 0x1a10bb8 <line:82:5, col:52> col:52 referenced __min 'const long':'const long'
|-NamespaceDecl 0x12cd1d8 prev 0x1285070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_pair.h:65:1, line:541:1> line:65:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x12cd248 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-CXXRecordDecl 0x12cd2a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_pair.h:76:3, col:78> col:10 referenced struct piecewise_construct_t definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x12cd3b8 <col:3, col:10> col:10 implicit referenced struct piecewise_construct_t
| | |-CXXConstructorDecl 0x12cd4b0 <col:34, col:75> col:43 referenced constexpr piecewise_construct_t 'void () noexcept' default trivial
| | |-CXXConstructorDecl 0x12cd658 <col:10> col:10 implicit constexpr piecewise_construct_t 'void (const std::piecewise_construct_t &)' inline default trivial noexcept-unevaluated 0x12cd658
| | | `-ParmVarDecl 0x12cd768 <col:10> col:10 'const std::piecewise_construct_t &'
| | |-CXXConstructorDecl 0x12cd808 <col:10> col:10 implicit used constexpr piecewise_construct_t 'void (std::piecewise_construct_t &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x12cd918 <col:10> col:10 'std::piecewise_construct_t &&'
| | | `-CompoundStmt 0x12cdaf0 <col:10>
| | `-CXXDestructorDecl 0x12cd9b8 <col:10> col:10 implicit referenced ~piecewise_construct_t 'void () noexcept' inline default trivial
| |-VarDecl 0x12cd5b0 <line:79:21, line:80:27> line:79:53 piecewise_construct 'const std::piecewise_construct_t' constexpr cinit
| | `-ExprWithCleanups 0x12cdb30 <line:80:5, col:27> 'const std::piecewise_construct_t'
| |   `-CXXConstructExpr 0x12cdb00 <col:5, col:27> 'const std::piecewise_construct_t' 'void (std::piecewise_construct_t &&) noexcept' elidable
| |     `-MaterializeTemporaryExpr 0x12cdaa0 <col:5, col:27> 'std::piecewise_construct_t' xvalue
| |       `-CXXTemporaryObjectExpr 0x12cd988 <col:5, col:27> 'std::piecewise_construct_t' 'void () noexcept' zeroing
| |-ClassTemplateDecl 0x12cdd78 prev 0x124b248 <line:83:3, line:84:11> col:11 tuple
| | |-TemplateTypeParmDecl 0x12cdc50 <line:83:12> col:23 typename depth 0 index 0 ...
| | `-CXXRecordDecl 0x12cdce8 prev 0x124b1b8 <line:84:5, col:11> col:11 class tuple
| |-ClassTemplateDecl 0x12cdf80 <line:86:3, line:87:12> col:12 _Index_tuple
| | |-NonTypeTemplateParmDecl 0x12cde70 <line:86:12, col:17> col:26 'std::size_t':'unsigned long' depth 0 index 0 ...
| | `-CXXRecordDecl 0x12cdef0 <line:87:5, col:12> col:12 struct _Index_tuple
| |-ClassTemplateDecl 0x12d0398 <line:94:3, line:152:3> line:95:12 _PCC
| | |-NonTypeTemplateParmDecl 0x12d0178 <line:94:13> col:17 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0x12d01d8 <col:19, col:28> col:28 referenced typename depth 0 index 1 _T1
| | |-TemplateTypeParmDecl 0x12d0258 <col:33, col:42> col:42 referenced typename depth 0 index 2 _T2
| | `-CXXRecordDecl 0x12d0308 <line:95:5, line:152:3> line:95:12 struct _PCC definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x12d0670 <col:5, col:12> col:12 implicit struct _PCC
| |   |-FunctionTemplateDecl 0x12d0908 <line:97:7, line:102:7> line:98:29 _ConstructiblePair
| |   | |-TemplateTypeParmDecl 0x12d0700 <line:97:17, col:26> col:26 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12d0778 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12d0868 <line:98:7, line:102:7> line:98:29 constexpr _ConstructiblePair 'bool ()' static
| |   |   `-CompoundStmt 0x12d1b68 <line:99:7, line:102:7>
| |   |     `-ReturnStmt 0x12d1b58 <line:100:2, line:101:45>
| |   |       `-DependentScopeDeclRefExpr 0x12d1b20 <line:100:9, line:101:45> '<dependent type>' lvalue
| |   |-FunctionTemplateDecl 0x12d0b40 <line:104:7, line:109:7> line:105:29 _ImplicitlyConvertiblePair
| |   | |-TemplateTypeParmDecl 0x12d0960 <line:104:17, col:26> col:26 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12d09d8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12d0aa0 <line:105:7, line:109:7> line:105:29 constexpr _ImplicitlyConvertiblePair 'bool ()' static
| |   |   `-CompoundStmt 0x12d4ea8 <line:106:7, line:109:7>
| |   |     `-ReturnStmt 0x12d4e98 <line:107:2, line:108:43>
| |   |       `-DependentScopeDeclRefExpr 0x12d4e60 <line:107:9, line:108:43> '<dependent type>' lvalue
| |   |-FunctionTemplateDecl 0x12d0d80 <line:111:7, line:116:7> line:112:29 _MoveConstructiblePair
| |   | |-TemplateTypeParmDecl 0x12d0b98 <line:111:17, col:26> col:26 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12d0c18 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12d0ce0 <line:112:7, line:116:7> line:112:29 constexpr _MoveConstructiblePair 'bool ()' static
| |   |   `-CompoundStmt 0x12d5488 <line:113:7, line:116:7>
| |   |     `-ReturnStmt 0x12d5478 <line:114:2, line:115:40>
| |   |       `-DependentScopeDeclRefExpr 0x12d5440 <line:114:9, line:115:40> '<dependent type>' lvalue
| |   |-FunctionTemplateDecl 0x12d0fc0 <line:118:7, line:123:7> line:119:29 _ImplicitlyMoveConvertiblePair
| |   | |-TemplateTypeParmDecl 0x12d0dd8 <line:118:17, col:26> col:26 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12d0e58 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12d0f20 <line:119:7, line:123:7> line:119:29 constexpr _ImplicitlyMoveConvertiblePair 'bool ()' static
| |   |   `-CompoundStmt 0x12d59a8 <line:120:7, line:123:7>
| |   |     `-ReturnStmt 0x12d5998 <line:121:2, line:122:38>
| |   |       `-DependentScopeDeclRefExpr 0x12d5960 <line:121:9, line:122:38> '<dependent type>' lvalue
| |   |-FunctionTemplateDecl 0x12d1278 <line:125:7, line:137:7> line:126:29 _CopyMovePair
| |   | |-NonTypeTemplateParmDecl 0x12d1028 <line:125:17, col:22> col:22 referenced 'bool' depth 1 index 0 __implicit
| |   | |-TemplateTypeParmDecl 0x12d1088 <col:34, col:43> col:43 referenced typename depth 1 index 1 _U1
| |   | |-TemplateTypeParmDecl 0x12d1108 <col:48, col:57> col:57 referenced typename depth 1 index 2 _U2
| |   | `-CXXMethodDecl 0x12d11d8 <line:126:7, line:137:7> line:126:29 constexpr _CopyMovePair 'bool ()' static
| |   |   `-CompoundStmt 0x12d68a8 <line:127:7, line:137:7>
| |   |     |-DeclStmt 0x12d5f18 <line:128:2, line:129:34>
| |   |     | `-TypeAliasDecl 0x12d5eb8 <line:128:2, line:129:33> line:128:8 referenced __do_converts '__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'
| |   |     |   `-TemplateSpecializationType 0x12d5dd0 '__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >' dependent __and_
| |   |     |     |-TemplateArgument type 'is_convertible<const _U1 &, _T1>'
| |   |     |     `-TemplateArgument type 'is_convertible<_U2 &&, _T2>'
| |   |     |-DeclStmt 0x12d62f0 <line:130:2, line:132:40>
| |   |     | `-TypeAliasDecl 0x12d6290 <line:130:2, line:132:36> line:130:8 referenced __converts 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'
| |   |     |   `-DependentNameType 0x12d6220 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type' dependent
| |   |     `-ReturnStmt 0x12d6898 <line:133:2, line:136:12>
| |   |       `-DependentScopeDeclRefExpr 0x12d6860 <line:133:9, line:136:12> '<dependent type>' lvalue
| |   `-FunctionTemplateDecl 0x12d1528 <line:139:7, line:151:7> line:140:29 _MoveCopyPair
| |     |-NonTypeTemplateParmDecl 0x12d12e0 <line:139:17, col:22> col:22 referenced 'bool' depth 1 index 0 __implicit
| |     |-TemplateTypeParmDecl 0x12d1340 <col:34, col:43> col:43 referenced typename depth 1 index 1 _U1
| |     |-TemplateTypeParmDecl 0x12d13b8 <col:48, col:57> col:57 referenced typename depth 1 index 2 _U2
| |     `-CXXMethodDecl 0x12d1488 <line:140:7, line:151:7> line:140:29 constexpr _MoveCopyPair 'bool ()' static
| |       `-CompoundStmt 0x12d81c8 <line:141:7, line:151:7>
| |         |-DeclStmt 0x12d77d8 <line:142:2, line:143:39>
| |         | `-TypeAliasDecl 0x12d7778 <line:142:2, line:143:38> line:142:8 referenced __do_converts '__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'
| |         |   `-TemplateSpecializationType 0x12d6ce0 '__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >' dependent __and_
| |         |     |-TemplateArgument type 'is_convertible<_U1 &&, _T1>'
| |         |     `-TemplateArgument type 'is_convertible<const _U2 &, _T2>'
| |         |-DeclStmt 0x12d7bb0 <line:144:2, line:146:40>
| |         | `-TypeAliasDecl 0x12d7b50 <line:144:2, line:146:36> line:144:8 referenced __converts 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'
| |         |   `-DependentNameType 0x12d7ae0 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type' dependent
| |         `-ReturnStmt 0x12d81b8 <line:147:2, line:150:12>
| |           `-DependentScopeDeclRefExpr 0x12d8180 <line:147:9, line:150:12> '<dependent type>' lvalue
| |-ClassTemplatePartialSpecializationDecl 0x12d84e0 <line:154:3, line:180:3> line:155:12 struct _PCC definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x12d81f0 <line:154:13, col:22> col:22 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x12d8268 <col:27, col:36> col:36 referenced typename depth 0 index 1 _T2
| | |-CXXRecordDecl 0x12d87d8 <line:155:5, col:12> col:12 implicit struct _PCC
| | |-FunctionTemplateDecl 0x12d8a78 <line:157:7, line:161:7> line:158:29 _ConstructiblePair
| | | |-TemplateTypeParmDecl 0x12d8868 <line:157:17, col:26> col:26 typename depth 1 index 0 _U1
| | | |-TemplateTypeParmDecl 0x12d88e8 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | | `-CXXMethodDecl 0x12d89d8 <line:158:7, line:161:7> line:158:29 constexpr _ConstructiblePair 'bool ()' static
| | |   `-CompoundStmt 0x12d91c0 <line:159:7, line:161:7>
| | |     `-ReturnStmt 0x12d91b0 <line:160:2, col:9>
| | |       `-CXXBoolLiteralExpr 0x12d91a0 <col:9> 'bool' false
| | |-FunctionTemplateDecl 0x12d8cb0 <line:163:7, line:167:7> line:164:29 _ImplicitlyConvertiblePair
| | | |-TemplateTypeParmDecl 0x12d8ad0 <line:163:17, col:26> col:26 typename depth 1 index 0 _U1
| | | |-TemplateTypeParmDecl 0x12d8b48 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | | `-CXXMethodDecl 0x12d8c10 <line:164:7, line:167:7> line:164:29 constexpr _ImplicitlyConvertiblePair 'bool ()' static
| | |   `-CompoundStmt 0x12d91f8 <line:165:7, line:167:7>
| | |     `-ReturnStmt 0x12d91e8 <line:166:2, col:9>
| | |       `-CXXBoolLiteralExpr 0x12d91d8 <col:9> 'bool' false
| | |-FunctionTemplateDecl 0x12d8ef0 <line:169:7, line:173:7> line:170:29 _MoveConstructiblePair
| | | |-TemplateTypeParmDecl 0x12d8d08 <line:169:17, col:26> col:26 typename depth 1 index 0 _U1
| | | |-TemplateTypeParmDecl 0x12d8d88 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | | `-CXXMethodDecl 0x12d8e50 <line:170:7, line:173:7> line:170:29 constexpr _MoveConstructiblePair 'bool ()' static
| | |   `-CompoundStmt 0x12d9230 <line:171:7, line:173:7>
| | |     `-ReturnStmt 0x12d9220 <line:172:2, col:9>
| | |       `-CXXBoolLiteralExpr 0x12d9210 <col:9> 'bool' false
| | `-FunctionTemplateDecl 0x12d9130 <line:175:7, line:179:7> line:176:29 _ImplicitlyMoveConvertiblePair
| |   |-TemplateTypeParmDecl 0x12d8f48 <line:175:17, col:26> col:26 typename depth 1 index 0 _U1
| |   |-TemplateTypeParmDecl 0x12d8fc8 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| |   `-CXXMethodDecl 0x12d9090 <line:176:7, line:179:7> line:176:29 constexpr _ImplicitlyMoveConvertiblePair 'bool ()' static
| |     `-CompoundStmt 0x12d9268 <line:177:7, line:179:7>
| |       `-ReturnStmt 0x12d9258 <line:178:2, col:9>
| |         `-CXXBoolLiteralExpr 0x12d9248 <col:9> 'bool' false
| |-CXXRecordDecl 0x12d9280 <line:185:3, line:187:3> line:185:10 referenced struct __nonesuch_no_braces definition
| | |-DefinitionData empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor
| | | |-CopyConstructor trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor exists trivial needs_overload_resolution
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists trivial needs_overload_resolution
| | | `-Destructor trivial needs_overload_resolution
| | |-public 'std::__nonesuch':'std::__nonesuch'
| | |-CXXRecordDecl 0x12d9448 <col:3, col:10> col:10 implicit referenced struct __nonesuch_no_braces
| | |-CXXConstructorDecl 0x12d95b8 <line:186:5, col:61> col:14 __nonesuch_no_braces 'void (const std::__nonesuch &)' delete
| | | `-ParmVarDecl 0x12d94e8 <col:35, col:51> col:52 'const std::__nonesuch &'
| | |-CXXConstructorDecl 0x12d9740 <line:185:10> col:10 implicit __nonesuch_no_braces 'void (const std::__nonesuch_no_braces &)' inline default_delete trivial noexcept-unevaluated 0x12d9740
| | | `-ParmVarDecl 0x12d9858 <col:10> col:10 'const std::__nonesuch_no_braces &'
| | |-CXXConstructorDecl 0x12d98f8 <col:10> col:10 implicit __nonesuch_no_braces 'void (std::__nonesuch_no_braces &&)' inline default_delete trivial noexcept-unevaluated 0x12d98f8
| | | `-ParmVarDecl 0x12d9a08 <col:10> col:10 'std::__nonesuch_no_braces &&'
| | |-CXXMethodDecl 0x12d9aa8 <col:10> col:10 implicit operator= 'std::__nonesuch_no_braces &(std::__nonesuch_no_braces &&)' inline default_delete trivial noexcept-unevaluated 0x12d9aa8
| | | `-ParmVarDecl 0x12d9bb8 <col:10> col:10 'std::__nonesuch_no_braces &&'
| | `-CXXDestructorDecl 0x12d9c40 <col:10> col:10 implicit ~__nonesuch_no_braces 'void ()' inline default_delete trivial noexcept-unevaluated 0x12d9c40
| |-ClassTemplateDecl 0x12d9ed0 <line:190:3, line:199:3> line:190:46 __pair_base
| | |-TemplateTypeParmDecl 0x12d9d20 <col:12, col:21> col:21 typename depth 0 index 0 _U1
| | |-TemplateTypeParmDecl 0x12d9d98 <col:26, col:35> col:35 typename depth 0 index 1 _U2
| | `-CXXRecordDecl 0x12d9e40 <col:40, line:199:3> line:190:46 class __pair_base definition
| |   |-DefinitionData empty aggregate standard_layout has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor exists defaulted_is_constexpr
| |   | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |   | |-MoveConstructor
| |   | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |   | |-MoveAssignment
| |   | `-Destructor irrelevant non_trivial user_declared
| |   |-CXXRecordDecl 0x12da160 <col:40, col:46> col:46 implicit referenced class __pair_base
| |   |-FriendDecl 0x12da5e8 <line:193:5, col:56> col:56
| |   | `-ClassTemplateDecl 0x12da3a0 parent 0x12cd1d8 <col:5, col:56> col:56 pair
| |   |   |-TemplateTypeParmDecl 0x12da1f0 <col:14, col:23> col:23 typename depth 1 index 0 _T1
| |   |   |-TemplateTypeParmDecl 0x12da268 <col:28, col:37> col:37 typename depth 1 index 1 _T2
| |   |   `-CXXRecordDecl 0x12da310 parent 0x12cd1d8 <col:49, col:56> col:56 struct pair
| |   |-CXXConstructorDecl 0x12da6a0 <line:194:5, col:27> col:5 __pair_base<_U1, _U2> 'void ()' default
| |   |-CXXDestructorDecl 0x12da790 <line:195:5, col:28> col:5 ~__pair_base<_U1, _U2> 'void ()' default
| |   |-CXXConstructorDecl 0x12da938 <line:196:5, col:45> col:5 __pair_base<_U1, _U2> 'void (const __pair_base<_U1, _U2> &)' default
| |   | `-ParmVarDecl 0x12da878 <col:17, col:34> col:35 'const __pair_base<_U1, _U2> &'
| |   `-CXXMethodDecl 0x12daae8 <line:197:5, col:55> col:18 operator= '__pair_base<_U1, _U2> &(const __pair_base<_U1, _U2> &)' delete
| |     `-ParmVarDecl 0x12da9f8 <col:28, col:45> col:46 'const __pair_base<_U1, _U2> &'
| |-ClassTemplateDecl 0x12dad40 <line:207:3, line:439:5> line:208:12 pair
| | |-TemplateTypeParmDecl 0x12dab90 <line:207:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x12dac08 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-CXXRecordDecl 0x12dacb0 <line:208:5, line:439:5> line:208:12 struct pair definition
| |   |-DefinitionData standard_layout has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists non_trivial user_provided constexpr
| |   | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |   | |-MoveConstructor exists user_declared
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private '__pair_base<_T1, _T2>'
| |   |-CXXRecordDecl 0x12db0c0 <col:5, col:12> col:12 implicit referenced struct pair
| |   |-TypedefDecl 0x12db160 <line:211:7, col:19> col:19 referenced first_type '_T1'
| |   | `-TemplateTypeParmType 0x12dabe0 '_T1' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x12dab90 '_T1'
| |   |-TypedefDecl 0x12db1c8 <line:212:7, col:19> col:19 referenced second_type '_T2'
| |   | `-TemplateTypeParmType 0x12dac60 '_T2' dependent depth 0 index 1
| |   |   `-TemplateTypeParm 0x12dac08 '_T2'
| |   |-FieldDecl 0x12db230 <line:214:7, col:11> col:11 referenced first '_T1'
| |   |-FieldDecl 0x12db290 <line:215:7, col:11> col:11 referenced second '_T2'
| |   |-FunctionTemplateDecl 0x12de9b0 <line:222:7, line:230:29> line:229:26 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12db2f0 <line:222:17, col:32> col:26 referenced typename depth 1 index 0 _U1
| |   | | `-TemplateArgument type '_T1'
| |   | |-TemplateTypeParmDecl 0x12db378 <line:223:17, col:32> col:26 referenced typename depth 1 index 1 _U2
| |   | | `-TemplateArgument type '_T2'
| |   | |-NonTypeTemplateParmDecl 0x12de450 <line:224:17, line:227:59> col:57 'typename enable_if<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> >::value, bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12de4b0 <col:59> 'typename enable_if<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> >::value, bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12de420 <col:59> 'bool' true
| |   | `-CXXConstructorDecl 0x12de560 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_pair.h:230:29> line:229:26 constexpr pair<_T1, _T2> 'void ()'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fbb78 <line:230:14, col:15> 'NULL TYPE'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fbbb8 <col:24, col:25> 'NULL TYPE'
| |   |   `-CompoundStmt 0x12fbc08 <col:27, col:29>
| |   |-FunctionTemplateDecl 0x12dfce0 <line:233:7, line:243:29> line:242:26 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12dea18 <line:233:17, col:32> col:26 referenced typename depth 1 index 0 _U1
| |   | | `-TemplateArgument type '_T1'
| |   | |-TemplateTypeParmDecl 0x12deaa8 <line:234:17, col:32> col:26 referenced typename depth 1 index 1 _U2
| |   | | `-TemplateArgument type '_T2'
| |   | |-NonTypeTemplateParmDecl 0x12df500 <line:235:17, line:241:59> col:57 'typename enable_if<__and_<is_default_constructible<_U1>, is_default_constructible<_U2>, __not_<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> > > >::value, bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12df560 <col:59> 'typename enable_if<__and_<is_default_constructible<_U1>, is_default_constructible<_U2>, __not_<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> > > >::value, bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12df4d0 <col:59> 'bool' false
| |   | `-CXXConstructorDecl 0x12df5c8 <line:242:7, line:243:29> line:242:26 constexpr pair<_T1, _T2> 'void ()'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fbc18 <line:243:14, col:15> 'NULL TYPE'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fbc58 <col:24, col:25> 'NULL TYPE'
| |   |   `-CompoundStmt 0x12fbca8 <col:27, col:29>
| |   |-TypeAliasDecl 0x12dff30 <line:252:7, col:40> col:13 referenced _PCCP '_PCC<true, _T1, _T2>'
| |   | `-TemplateSpecializationType 0x12dfe00 '_PCC<true, _T1, _T2>' dependent _PCC
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0x12dfd68 <col:26> 'bool' Int: 1
| |   |   |   `-CXXBoolLiteralExpr 0x12dfd38 <col:26> 'bool' true
| |   |   |-TemplateArgument type '_T1'
| |   |   `-TemplateArgument type '_T2'
| |   |-FunctionTemplateDecl 0x12e1090 <line:254:7, line:261:35> line:260:17 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12dffa0 <line:254:16, col:31> col:25 referenced typename depth 1 index 0 _U1
| |   | | `-TemplateArgument type '_T1'
| |   | |-TemplateTypeParmDecl 0x12e0028 <col:36, col:49> col:45 referenced typename depth 1 index 1 _U2
| |   | | `-TemplateArgument type '_T2'
| |   | |-NonTypeTemplateParmDecl 0x12e09d0 <col:54, line:259:38> col:37 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e0a30 <col:38> 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e09a0 <col:38> 'bool' true
| |   | `-CXXConstructorDecl 0x12e0c98 <line:260:7, line:261:35> line:260:17 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
| |   |   |-ParmVarDecl 0x12e0ab8 <col:22, col:33> col:33 referenced __a 'const _T1 &'
| |   |   |-ParmVarDecl 0x12e0b88 <col:38, col:49> col:49 referenced __b 'const _T2 &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fbcd8 <line:261:14, col:18> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fbcb8 <col:15> 'const _T1' lvalue ParmVar 0x12e0ab8 '__a' 'const _T1 &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fbd40 <col:27, col:31> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fbd20 <col:28> 'const _T2' lvalue ParmVar 0x12e0b88 '__b' 'const _T2 &'
| |   |   `-CompoundStmt 0x12fbd98 <col:33, col:35>
| |   |-FunctionTemplateDecl 0x12e1c90 <line:263:8, line:270:35> line:269:26 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e1108 <line:263:17, col:32> col:26 referenced typename depth 1 index 0 _U1
| |   | | `-TemplateArgument type '_T1'
| |   | |-TemplateTypeParmDecl 0x12e1198 <col:37, col:50> col:46 referenced typename depth 1 index 1 _U2
| |   | | `-TemplateArgument type '_T2'
| |   | |-NonTypeTemplateParmDecl 0x12e16c0 <col:55, line:268:38> col:37 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e1720 <col:38> 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e1690 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12e1888 <line:269:7, line:270:35> line:269:26 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
| |   |   |-ParmVarDecl 0x12e1778 <col:31, col:42> col:42 referenced __a 'const _T1 &'
| |   |   |-ParmVarDecl 0x12e17f0 <col:47, col:58> col:58 referenced __b 'const _T2 &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fbdc8 <line:270:14, col:18> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fbda8 <col:15> 'const _T1' lvalue ParmVar 0x12e1778 '__a' 'const _T1 &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fbe30 <col:27, col:31> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fbe10 <col:28> 'const _T2' lvalue ParmVar 0x12e17f0 '__b' 'const _T2 &'
| |   |   `-CompoundStmt 0x12fbe88 <col:33, col:35>
| |   |-TypeAliasTemplateDecl 0x12e2410 <line:280:7, line:283:16> line:281:9 _PCCFP
| |   | |-TemplateTypeParmDecl 0x12e1cf8 <line:280:17, col:26> col:26 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12e1d78 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
| |   | `-TypeAliasDecl 0x12e23b0 <line:281:9, line:283:16> line:281:15 _PCCFP '_PCC<!is_same<_T1, _U1>::value || !is_same<_T2, _U2>::value, _T1, _T2>'
| |   |   `-TemplateSpecializationType 0x12e2280 '_PCC<!is_same<_T1, _U1>::value || !is_same<_T2, _U2>::value, _T1, _T2>' dependent _PCC
| |   |     |-TemplateArgument expr
| |   |     | `-ImplicitCastExpr 0x12e21c0 <col:29, line:282:31> 'bool' <Dependent>
| |   |     |   `-BinaryOperator 0x12e2180 <line:281:29, line:282:31> '<dependent type>' '||'
| |   |     |     |-UnaryOperator 0x12e1fb8 <line:281:29, col:49> '<dependent type>' prefix '!' cannot overflow
| |   |     |     | `-DependentScopeDeclRefExpr 0x12e1f80 <col:30, col:49> '<dependent type>' lvalue
| |   |     |     `-UnaryOperator 0x12e2168 <line:282:11, col:31> '<dependent type>' prefix '!' cannot overflow
| |   |     |       `-DependentScopeDeclRefExpr 0x12e2130 <col:12, col:31> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_T1'
| |   |     `-TemplateArgument type '_T2'
| |   |-FunctionTemplateDecl 0x12e53e0 <line:285:7, line:292:50> line:291:19 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e2468 <line:285:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12e24e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12e3e30 <col:44, line:290:18> col:17 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e3e90 <col:18> 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e3e00 <col:18> 'bool' true
| |   | `-CXXConstructorDecl 0x12e4198 <line:291:9, line:292:50> line:291:19 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
| |   |   |-ParmVarDecl 0x12e40a8 <col:24, col:46> col:46 referenced __p 'const pair<_U1, _U2> &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fbf00 <line:292:16, col:26> 'NULL TYPE'
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fbeb8 <col:17, col:21> '<dependent type>' lvalue .first
| |   |   |     `-DeclRefExpr 0x12fbe98 <col:17> 'const pair<_U1, _U2>' lvalue ParmVar 0x12e40a8 '__p' 'const pair<_U1, _U2> &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fbfb0 <col:35, col:46> 'NULL TYPE'
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fbf68 <col:36, col:40> '<dependent type>' lvalue .second
| |   |   |     `-DeclRefExpr 0x12fbf48 <col:36> 'const pair<_U1, _U2>' lvalue ParmVar 0x12e40a8 '__p' 'const pair<_U1, _U2> &'
| |   |   `-CompoundStmt 0x12fc008 <col:48, col:50>
| |   |-FunctionTemplateDecl 0x12e7d70 <line:294:7, line:301:43> line:300:21 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e5440 <line:294:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12e54b8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12e6410 <col:44, line:299:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e6470 <col:38> 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e63e0 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12e66b8 <line:300:2, line:301:43> line:300:21 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
| |   |   |-ParmVarDecl 0x12e65f8 <col:26, col:48> col:48 referenced __p 'const pair<_U1, _U2> &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fc080 <line:301:9, col:19> 'NULL TYPE'
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fc038 <col:10, col:14> '<dependent type>' lvalue .first
| |   |   |     `-DeclRefExpr 0x12fc018 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x12e65f8 '__p' 'const pair<_U1, _U2> &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fc130 <col:28, col:39> 'NULL TYPE'
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fc0e8 <col:29, col:33> '<dependent type>' lvalue .second
| |   |   |     `-DeclRefExpr 0x12fc0c8 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x12e65f8 '__p' 'const pair<_U1, _U2> &'
| |   |   `-CompoundStmt 0x12fc188 <col:41, col:43>
| |   |-CXXConstructorDecl 0x12e7ec8 <line:303:7, col:43> col:17 constexpr pair<_T1, _T2> 'void (const pair<_T1, _T2> &)' default
| |   | `-ParmVarDecl 0x12e7e08 <col:22, col:32> col:33 'const pair<_T1, _T2> &'
| |   |-CXXConstructorDecl 0x12e8078 <line:304:7, col:38> col:17 constexpr pair<_T1, _T2> 'void (pair<_T1, _T2> &&)' default
| |   | `-ParmVarDecl 0x12e7fb8 <col:22, col:26> col:28 'pair<_T1, _T2> &&'
| |   |-FunctionTemplateDecl 0x12e8af0 <line:307:7, line:312:55> line:311:18 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e8128 <line:307:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-NonTypeTemplateParmDecl 0x12e8580 <col:30, line:310:38> col:37 'typename enable_if<_PCCP::template _MoveCopyPair<true, _U1, _T2>(), bool>::type' depth 1 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e85e0 <col:38> 'typename enable_if<_PCCP::template _MoveCopyPair<true, _U1, _T2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e8550 <col:38> 'bool' true
| |   | `-CXXConstructorDecl 0x12e87e8 <line:311:8, line:312:55> line:311:18 constexpr pair<_T1, _T2> 'void (_U1 &&, const _T2 &)'
| |   |   |-ParmVarDecl 0x12e8658 <col:23, col:29> col:29 referenced __x '_U1 &&'
| |   |   |-ParmVarDecl 0x12e86d0 <col:34, col:45> col:45 referenced __y 'const _T2 &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fc2b8 <line:312:15, col:38> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fc290 <col:16, col:37> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fc1e0 <col:16, col:32> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fc270 <col:34> '_U1' lvalue ParmVar 0x12e8658 '__x' '_U1 &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fc320 <col:47, col:51> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fc300 <col:48> 'const _T2' lvalue ParmVar 0x12e86d0 '__y' 'const _T2 &'
| |   |   `-CompoundStmt 0x12fc378 <col:53, col:55>
| |   |-FunctionTemplateDecl 0x12e94a0 <line:314:7, line:319:55> line:318:27 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e8b58 <line:314:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-NonTypeTemplateParmDecl 0x12e8f70 <col:30, line:317:38> col:37 'typename enable_if<_PCCP::template _MoveCopyPair<false, _U1, _T2>(), bool>::type' depth 1 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e8fd0 <col:38> 'typename enable_if<_PCCP::template _MoveCopyPair<false, _U1, _T2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e8f40 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12e9198 <line:318:8, line:319:55> line:318:27 constexpr pair<_T1, _T2> 'void (_U1 &&, const _T2 &)'
| |   |   |-ParmVarDecl 0x12e9048 <col:32, col:38> col:38 referenced __x '_U1 &&'
| |   |   |-ParmVarDecl 0x12e90c0 <col:43, col:54> col:54 referenced __y 'const _T2 &'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fc4a8 <line:319:15, col:38> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fc480 <col:16, col:37> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fc3d0 <col:16, col:32> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fc460 <col:34> '_U1' lvalue ParmVar 0x12e9048 '__x' '_U1 &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fc510 <col:47, col:51> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fc4f0 <col:48> 'const _T2' lvalue ParmVar 0x12e90c0 '__y' 'const _T2 &'
| |   |   `-CompoundStmt 0x12fc568 <col:53, col:55>
| |   |-FunctionTemplateDecl 0x12eac30 <line:321:7, line:326:55> line:325:18 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12e9508 <line:321:16, col:25> col:25 referenced typename depth 1 index 0 _U2
| |   | |-NonTypeTemplateParmDecl 0x12e9960 <col:30, line:324:38> col:37 'typename enable_if<_PCCP::template _CopyMovePair<true, _T1, _U2>(), bool>::type' depth 1 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12e99c0 <col:38> 'typename enable_if<_PCCP::template _CopyMovePair<true, _T1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12e9930 <col:38> 'bool' true
| |   | `-CXXConstructorDecl 0x12ea928 <line:325:8, line:326:55> line:325:18 constexpr pair<_T1, _T2> 'void (const _T1 &, _U2 &&)'
| |   |   |-ParmVarDecl 0x12e9a10 <col:23, col:34> col:34 referenced __x 'const _T1 &'
| |   |   |-ParmVarDecl 0x12e9ab8 <col:39, col:45> col:45 referenced __y '_U2 &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fc598 <line:326:15, col:19> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fc578 <col:16> 'const _T1' lvalue ParmVar 0x12e9a10 '__x' 'const _T1 &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fc700 <col:28, col:51> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fc6d8 <col:29, col:50> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fc628 <col:29, col:45> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fc6b8 <col:47> '_U2' lvalue ParmVar 0x12e9ab8 '__y' '_U2 &&'
| |   |   `-CompoundStmt 0x12fc758 <col:53, col:55>
| |   |-FunctionTemplateDecl 0x12eb5e0 <line:328:7, line:333:55> line:332:17 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12eac98 <line:328:16, col:25> col:25 referenced typename depth 1 index 0 _U2
| |   | |-NonTypeTemplateParmDecl 0x12eb0b0 <col:30, line:331:38> col:37 'typename enable_if<_PCCP::template _CopyMovePair<false, _T1, _U2>(), bool>::type' depth 1 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12eb110 <col:38> 'typename enable_if<_PCCP::template _CopyMovePair<false, _T1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12eb080 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12eb2d8 <line:332:8, line:333:55> line:332:17 pair<_T1, _T2> 'void (const _T1 &, _U2 &&)'
| |   |   |-ParmVarDecl 0x12eb160 <col:22, col:33> col:33 referenced __x 'const _T1 &'
| |   |   |-ParmVarDecl 0x12eb208 <col:38, col:44> col:44 referenced __y '_U2 &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fc788 <line:333:15, col:19> 'NULL TYPE'
| |   |   |   `-DeclRefExpr 0x12fc768 <col:16> 'const _T1' lvalue ParmVar 0x12eb160 '__x' 'const _T1 &'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fc8f0 <col:28, col:51> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fc8c8 <col:29, col:50> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fc818 <col:29, col:45> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fc8a8 <col:47> '_U2' lvalue ParmVar 0x12eb208 '__y' '_U2 &&'
| |   |   `-CompoundStmt 0x12fc948 <col:53, col:55>
| |   |-FunctionTemplateDecl 0x12ec2f0 <line:335:7, line:342:68> line:341:12 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12eb648 <line:335:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12eb6c8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12ebc60 <col:44, line:340:38> col:37 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12ebcc0 <col:38> 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12ebc30 <col:38> 'bool' true
| |   | `-CXXConstructorDecl 0x12ebef8 <line:341:2, line:342:68> line:341:12 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
| |   |   |-ParmVarDecl 0x12ebd48 <col:17, col:23> col:23 referenced __x '_U1 &&'
| |   |   |-ParmVarDecl 0x12ebde8 <col:28, col:34> col:34 referenced __y '_U2 &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fca78 <line:342:9, col:32> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fca50 <col:10, col:31> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fc9a0 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fca30 <col:28> '_U1' lvalue ParmVar 0x12ebd48 '__x' '_U1 &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fcbe0 <col:41, col:64> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fcbb8 <col:42, col:63> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fcb08 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fcb98 <col:60> '_U2' lvalue ParmVar 0x12ebde8 '__y' '_U2 &&'
| |   |   `-CompoundStmt 0x12fcc38 <col:66, col:68>
| |   |-FunctionTemplateDecl 0x12ee600 <line:344:7, line:351:68> line:350:21 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12ec358 <line:344:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12ec3d8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12edfa0 <col:44, line:349:38> col:37 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12ee000 <col:38> 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12edf70 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12ee1f8 <line:350:2, line:351:68> line:350:21 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
| |   |   |-ParmVarDecl 0x12ee088 <col:26, col:32> col:32 referenced __x '_U1 &&'
| |   |   |-ParmVarDecl 0x12ee128 <col:37, col:43> col:43 referenced __y '_U2 &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fd8e8 <line:351:9, col:32> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fd8c0 <col:10, col:31> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fd810 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fd8a0 <col:28> '_U1' lvalue ParmVar 0x12ee088 '__x' '_U1 &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fda50 <col:41, col:64> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fda28 <col:42, col:63> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fd978 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-DeclRefExpr 0x12fda08 <col:60> '_U2' lvalue ParmVar 0x12ee128 '__y' '_U2 &&'
| |   |   `-CompoundStmt 0x12fdaa8 <col:66, col:68>
| |   |-FunctionTemplateDecl 0x12f10b0 <line:354:7, line:362:44> line:360:12 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12ee668 <line:354:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12ee6e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12ef670 <col:44, line:359:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12ef6d0 <col:38> 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12ef640 <col:38> 'bool' true
| |   | `-CXXConstructorDecl 0x12ef978 <line:360:2, line:362:44> line:360:12 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
| |   |   |-ParmVarDecl 0x12ef888 <col:17, col:34> col:34 referenced __p 'pair<_U1, _U2> &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fdc20 <line:361:9, col:38> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fdbf8 <col:10, col:37> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fdb00 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-CXXDependentScopeMemberExpr 0x12fdbb0 <col:28, col:32> '<dependent type>' lvalue .first
| |   |   |       `-DeclRefExpr 0x12fdb90 <col:28> 'pair<_U1, _U2>' lvalue ParmVar 0x12ef888 '__p' 'pair<_U1, _U2> &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fddd0 <line:362:10, col:40> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fdda8 <col:11, col:39> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fdcb0 <col:11, col:27> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-CXXDependentScopeMemberExpr 0x12fdd60 <col:29, col:33> '<dependent type>' lvalue .second
| |   |   |       `-DeclRefExpr 0x12fdd40 <col:29> 'pair<_U1, _U2>' lvalue ParmVar 0x12ef888 '__p' 'pair<_U1, _U2> &&'
| |   |   `-CompoundStmt 0x12fde28 <col:42, col:44>
| |   |-FunctionTemplateDecl 0x12f4a80 <line:364:7, line:372:44> line:370:21 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12f1110 <line:364:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12f1188 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | |-NonTypeTemplateParmDecl 0x12f20e0 <col:44, line:369:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x12f2140 <col:38> 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' <Dependent>
| |   | |     `-CXXBoolLiteralExpr 0x12f20b0 <col:38> 'bool' false
| |   | `-CXXConstructorDecl 0x12f2388 <line:370:2, line:372:44> line:370:21 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
| |   |   |-ParmVarDecl 0x12f22c8 <col:26, col:43> col:43 referenced __p 'pair<_U1, _U2> &&'
| |   |   |-CXXCtorInitializer Field 0x12db230 'first' '_T1'
| |   |   | `-ParenListExpr 0x12fdfa0 <line:371:9, col:38> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fdf78 <col:10, col:37> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fde80 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-CXXDependentScopeMemberExpr 0x12fdf30 <col:28, col:32> '<dependent type>' lvalue .first
| |   |   |       `-DeclRefExpr 0x12fdf10 <col:28> 'pair<_U1, _U2>' lvalue ParmVar 0x12f22c8 '__p' 'pair<_U1, _U2> &&'
| |   |   |-CXXCtorInitializer Field 0x12db290 'second' '_T2'
| |   |   | `-ParenListExpr 0x12fe150 <line:372:10, col:40> 'NULL TYPE'
| |   |   |   `-CallExpr 0x12fe128 <col:11, col:39> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x12fe030 <col:11, col:27> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |     `-CXXDependentScopeMemberExpr 0x12fe0e0 <col:29, col:33> '<dependent type>' lvalue .second
| |   |   |       `-DeclRefExpr 0x12fe0c0 <col:29> 'pair<_U1, _U2>' lvalue ParmVar 0x12f22c8 '__p' 'pair<_U1, _U2> &&'
| |   |   `-CompoundStmt 0x12fe1a8 <col:42, col:44>
| |   |-FunctionTemplateDecl 0x12f5210 <line:374:7, line:375:71> col:9 pair<_T1, _T2>
| |   | |-TemplateTypeParmDecl 0x12f4ae0 <line:374:16, col:28> col:28 referenced typename depth 1 index 0 ... _Args1
| |   | |-TemplateTypeParmDecl 0x12f4b58 <col:36, col:48> col:48 referenced typename depth 1 index 1 ... _Args2
| |   | `-CXXConstructorDecl 0x12f5168 <line:375:9, col:71> col:9 pair<_T1, _T2> 'void (std::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
| |   |   |-ParmVarDecl 0x12f4c40 <col:14> col:35 'std::piecewise_construct_t'
| |   |   |-ParmVarDecl 0x12f4e40 <col:37, col:52> col:53 'tuple<_Args1...>'
| |   |   `-ParmVarDecl 0x12f5040 <col:55, col:70> col:71 'tuple<_Args2...>'
| |   |-CXXMethodDecl 0x12f5988 <line:377:7, line:386:7> line:378:7 operator= 'pair<_T1, _T2> &(typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type)'
| |   | |-ParmVarDecl 0x12f5860 <col:17, line:381:51> col:51 referenced __p 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
| |   | `-CompoundStmt 0x12fe380 <line:382:7, line:386:7>
| |   |   |-BinaryOperator 0x12fe260 <line:383:2, col:14> '<dependent type>' '='
| |   |   | |-MemberExpr 0x12fe1c8 <col:2> '_T1' lvalue ->first 0x12db230
| |   |   | | `-CXXThisExpr 0x12fe1b8 <col:2> 'pair<_T1, _T2> *' implicit this
| |   |   | `-CXXDependentScopeMemberExpr 0x12fe218 <col:10, col:14> '<dependent type>' lvalue .first
| |   |   |   `-DeclRefExpr 0x12fe1f8 <col:10> 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type' lvalue ParmVar 0x12f5860 '__p' 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
| |   |   |-BinaryOperator 0x12fe328 <line:384:2, col:15> '<dependent type>' '='
| |   |   | |-MemberExpr 0x12fe290 <col:2> '_T2' lvalue ->second 0x12db290
| |   |   | | `-CXXThisExpr 0x12fe280 <col:2> 'pair<_T1, _T2> *' implicit this
| |   |   | `-CXXDependentScopeMemberExpr 0x12fe2e0 <col:11, col:15> '<dependent type>' lvalue .second
| |   |   |   `-DeclRefExpr 0x12fe2c0 <col:11> 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type' lvalue ParmVar 0x12f5860 '__p' 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
| |   |   `-ReturnStmt 0x12fe370 <line:385:2, col:10>
| |   |     `-UnaryOperator 0x12fe358 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x12fe348 <col:10> 'pair<_T1, _T2> *' this
| |   |-CXXMethodDecl 0x12f73c0 <line:388:7, line:399:7> line:389:7 operator= 'pair<_T1, _T2> &(typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<_T1>, is_nothrow_move_assignable<_T2> >::value)'
| |   | |-ParmVarDecl 0x12f6010 <col:17, line:392:41> col:41 referenced __p 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
| |   | `-CompoundStmt 0x12fe7b8 <line:395:7, line:399:7>
| |   |   |-BinaryOperator 0x12fe570 <line:396:2, col:44> '<dependent type>' '='
| |   |   | |-MemberExpr 0x12fe3b8 <col:2> '_T1' lvalue ->first 0x12db230
| |   |   | | `-CXXThisExpr 0x12fe3a8 <col:2> 'pair<_T1, _T2> *' implicit this
| |   |   | `-CallExpr 0x12fe548 <col:10, col:44> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x12fe450 <col:10, col:33> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fe500 <col:35, col:39> '<dependent type>' lvalue .first
| |   |   |     `-DeclRefExpr 0x12fe4e0 <col:35> 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type' lvalue ParmVar 0x12f6010 '__p' 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
| |   |   |-BinaryOperator 0x12fe760 <line:397:2, col:47> '<dependent type>' '='
| |   |   | |-MemberExpr 0x12fe5a0 <col:2> '_T2' lvalue ->second 0x12db290
| |   |   | | `-CXXThisExpr 0x12fe590 <col:2> 'pair<_T1, _T2> *' implicit this
| |   |   | `-CallExpr 0x12fe738 <col:11, col:47> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x12fe640 <col:11, col:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |   |   `-CXXDependentScopeMemberExpr 0x12fe6f0 <col:37, col:41> '<dependent type>' lvalue .second
| |   |   |     `-DeclRefExpr 0x12fe6d0 <col:37> 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type' lvalue ParmVar 0x12f6010 '__p' 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
| |   |   `-ReturnStmt 0x12fe7a8 <line:398:2, col:10>
| |   |     `-UnaryOperator 0x12fe790 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x12fe780 <col:10> 'pair<_T1, _T2> *' this
| |   |-FunctionTemplateDecl 0x12f7fd8 <line:401:7, line:410:2> line:405:2 operator=
| |   | |-TemplateTypeParmDecl 0x12f7468 <line:401:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12f74e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12f7f38 <line:402:7, line:410:2> line:405:2 operator= 'typename enable_if<__and_<is_assignable<_T1 &, const _U1 &>, is_assignable<_T2 &, const _U2 &> >::value, pair<_T1, _T2> &>::type (const pair<_U1, _U2> &)'
| |   |   |-ParmVarDecl 0x12f7e38 <col:12, col:34> col:34 referenced __p 'const pair<_U1, _U2> &'
| |   |   `-CompoundStmt 0x12fea00 <line:406:2, line:410:2>
| |   |     |-BinaryOperator 0x12fe888 <line:407:4, col:16> '<dependent type>' '='
| |   |     | |-MemberExpr 0x12fe7f0 <col:4> '_T1' lvalue ->first 0x12db230
| |   |     | | `-CXXThisExpr 0x12fe7e0 <col:4> 'pair<_T1, _T2> *' implicit this
| |   |     | `-CXXDependentScopeMemberExpr 0x12fe840 <col:12, col:16> '<dependent type>' lvalue .first
| |   |     |   `-DeclRefExpr 0x12fe820 <col:12> 'const pair<_U1, _U2>' lvalue ParmVar 0x12f7e38 '__p' 'const pair<_U1, _U2> &'
| |   |     |-BinaryOperator 0x12fe950 <line:408:4, col:17> '<dependent type>' '='
| |   |     | |-MemberExpr 0x12fe8b8 <col:4> '_T2' lvalue ->second 0x12db290
| |   |     | | `-CXXThisExpr 0x12fe8a8 <col:4> 'pair<_T1, _T2> *' implicit this
| |   |     | `-CXXDependentScopeMemberExpr 0x12fe908 <col:13, col:17> '<dependent type>' lvalue .second
| |   |     |   `-DeclRefExpr 0x12fe8e8 <col:13> 'const pair<_U1, _U2>' lvalue ParmVar 0x12f7e38 '__p' 'const pair<_U1, _U2> &'
| |   |     `-ReturnStmt 0x12fe9f0 <line:409:4, col:12>
| |   |       `-UnaryOperator 0x12fe9d8 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| |   |         `-CXXThisExpr 0x12fe9c8 <col:12> 'pair<_T1, _T2> *' this
| |   |-FunctionTemplateDecl 0x12f8b48 <line:412:7, line:421:2> line:416:2 operator=
| |   | |-TemplateTypeParmDecl 0x12f8038 <line:412:16, col:25> col:25 referenced typename depth 1 index 0 _U1
| |   | |-TemplateTypeParmDecl 0x12f80b8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
| |   | `-CXXMethodDecl 0x12f8aa8 <line:413:7, line:421:2> line:416:2 operator= 'typename enable_if<__and_<is_assignable<_T1 &, _U1 &&>, is_assignable<_T2 &, _U2 &&> >::value, pair<_T1, _T2> &>::type (pair<_U1, _U2> &&)'
| |   |   |-ParmVarDecl 0x12f89a8 <col:12, col:29> col:29 referenced __p 'pair<_U1, _U2> &&'
| |   |   `-CompoundStmt 0x12fee50 <line:417:2, line:421:2>
| |   |     |-BinaryOperator 0x12febd0 <line:418:4, col:39> '<dependent type>' '='
| |   |     | |-MemberExpr 0x12fea38 <col:4> '_T1' lvalue ->first 0x12db230
| |   |     | | `-CXXThisExpr 0x12fea28 <col:4> 'pair<_T1, _T2> *' implicit this
| |   |     | `-CallExpr 0x12feba8 <col:12, col:39> '<dependent type>'
| |   |     |   |-UnresolvedLookupExpr 0x12feab0 <col:12, col:28> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |     |   `-CXXDependentScopeMemberExpr 0x12feb60 <col:30, col:34> '<dependent type>' lvalue .first
| |   |     |     `-DeclRefExpr 0x12feb40 <col:30> 'pair<_U1, _U2>' lvalue ParmVar 0x12f89a8 '__p' 'pair<_U1, _U2> &&'
| |   |     |-BinaryOperator 0x12fed98 <line:419:4, col:41> '<dependent type>' '='
| |   |     | |-MemberExpr 0x12fec00 <col:4> '_T2' lvalue ->second 0x12db290
| |   |     | | `-CXXThisExpr 0x12febf0 <col:4> 'pair<_T1, _T2> *' implicit this
| |   |     | `-CallExpr 0x12fed70 <col:13, col:41> '<dependent type>'
| |   |     |   |-UnresolvedLookupExpr 0x12fec78 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
| |   |     |   `-CXXDependentScopeMemberExpr 0x12fed28 <col:31, col:35> '<dependent type>' lvalue .second
| |   |     |     `-DeclRefExpr 0x12fed08 <col:31> 'pair<_U1, _U2>' lvalue ParmVar 0x12f89a8 '__p' 'pair<_U1, _U2> &&'
| |   |     `-ReturnStmt 0x12fee40 <line:420:4, col:12>
| |   |       `-UnaryOperator 0x12fee28 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| |   |         `-CXXThisExpr 0x12fee18 <col:12> 'pair<_T1, _T2> *' this
| |   |-CXXMethodDecl 0x12f8cb0 <line:423:7, line:431:7> line:424:7 swap 'void (pair<_T1, _T2> &) noexcept(__and_<__is_nothrow_swappable<_T1>, __is_nothrow_swappable<_T2> >::value)'
| |   | |-ParmVarDecl 0x12f8bb8 <col:12, col:18> col:18 referenced __p 'pair<_T1, _T2> &'
| |   | `-CompoundStmt 0x12ff1e0 <line:427:7, line:431:7>
| |   |   |-DeclStmt 0x12fef78 <line:428:2, col:17>
| |   |   | `-UsingDecl 0x12fee80 <col:2, col:13> col:13 std::swap
| |   |   |-CallExpr 0x12ff088 <line:429:2, col:23> '<dependent type>'
| |   |   | |-UnresolvedLookupExpr 0x12fef90 <col:2> '<dependent type>' lvalue (ADL) = 'swap' 0x12fef28 0x12feed8
| |   |   | |-MemberExpr 0x12feff0 <col:7> '_T1' lvalue ->first 0x12db230
| |   |   | | `-CXXThisExpr 0x12fefe0 <col:7> 'pair<_T1, _T2> *' implicit this
| |   |   | `-CXXDependentScopeMemberExpr 0x12ff040 <col:14, col:18> '<dependent type>' lvalue .first
| |   |   |   `-DeclRefExpr 0x12ff020 <col:14> 'pair<_T1, _T2>' lvalue ParmVar 0x12f8bb8 '__p' 'pair<_T1, _T2> &'
| |   |   `-CallExpr 0x12ff1b0 <line:430:2, col:25> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x12ff0b8 <col:2> '<dependent type>' lvalue (ADL) = 'swap' 0x12fef28 0x12feed8
| |   |     |-MemberExpr 0x12ff118 <col:7> '_T2' lvalue ->second 0x12db290
| |   |     | `-CXXThisExpr 0x12ff108 <col:7> 'pair<_T1, _T2> *' implicit this
| |   |     `-CXXDependentScopeMemberExpr 0x12ff168 <col:15, col:19> '<dependent type>' lvalue .second
| |   |       `-DeclRefExpr 0x12ff148 <col:15> 'pair<_T1, _T2>' lvalue ParmVar 0x12f8bb8 '__p' 'pair<_T1, _T2> &'
| |   |-AccessSpecDecl 0x12f8d58 <line:433:5, col:12> col:5 private
| |   `-FunctionTemplateDecl 0x12fb310 <line:434:7, line:437:68> line:436:9 pair<_T1, _T2>
| |     |-TemplateTypeParmDecl 0x12f8d80 <line:434:16, col:28> col:28 referenced typename depth 1 index 0 ... _Args1
| |     |-NonTypeTemplateParmDecl 0x12f8e48 <col:36, col:51> col:51 referenced 'std::size_t':'unsigned long' depth 1 index 1 ... _Indexes1
| |     |-TemplateTypeParmDecl 0x12f8ea8 <line:435:16, col:28> col:28 referenced typename depth 1 index 2 ... _Args2
| |     |-NonTypeTemplateParmDecl 0x12f8fa8 <col:36, col:51> col:51 referenced 'std::size_t':'unsigned long' depth 1 index 3 ... _Indexes2
| |     `-CXXConstructorDecl 0x12fb268 <line:436:9, line:437:68> line:436:9 pair<_T1, _T2> 'void (tuple<_Args1...> &, tuple<_Args2...> &, _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)'
| |       |-ParmVarDecl 0x12f91c0 <col:14, col:30> col:31 'tuple<_Args1...> &'
| |       |-ParmVarDecl 0x12fad60 <col:33, col:49> col:50 'tuple<_Args2...> &'
| |       |-ParmVarDecl 0x12faf40 <line:437:14, col:39> col:40 '_Index_tuple<_Indexes1...>'
| |       `-ParmVarDecl 0x12fb120 <col:42, col:67> col:68 '_Index_tuple<_Indexes2...>'
| |-FunctionTemplateDecl 0x1300660 <line:446:3, line:449:66> line:448:5 operator==
| | |-TemplateTypeParmDecl 0x12ff208 <line:446:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x12ff288 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x12ff748 <line:447:5, line:449:66> line:448:5 constexpr operator== 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x12ff498 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x12ff638 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x13009a8 <line:449:5, col:66>
| |     `-ReturnStmt 0x1300998 <col:7, col:58>
| |       `-BinaryOperator 0x1300978 <col:14, col:58> '<dependent type>' '&&'
| |         |-CXXOperatorCallExpr 0x13007e8 <col:14, col:31> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x1300798 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1300660 0x10f8598
| |         | |-CXXDependentScopeMemberExpr 0x13006e8 <col:14, col:18> '<dependent type>' lvalue .first
| |         | | `-DeclRefExpr 0x13006c8 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x12ff498 '__x' 'const pair<_T1, _T2> &'
| |         | `-CXXDependentScopeMemberExpr 0x1300750 <col:27, col:31> '<dependent type>' lvalue .first
| |         |   `-DeclRefExpr 0x1300730 <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x12ff638 '__y' 'const pair<_T1, _T2> &'
| |         `-CXXOperatorCallExpr 0x1300940 <col:40, col:58> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13008f0 <col:51> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1300660 0x10f8598
| |           |-CXXDependentScopeMemberExpr 0x1300840 <col:40, col:44> '<dependent type>' lvalue .second
| |           | `-DeclRefExpr 0x1300820 <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x12ff498 '__x' 'const pair<_T1, _T2> &'
| |           `-CXXDependentScopeMemberExpr 0x13008a8 <col:54, col:58> '<dependent type>' lvalue .second
| |             `-DeclRefExpr 0x1300888 <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x12ff638 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x1300f28 <line:452:3, line:456:65> line:454:5 operator<
| | |-TemplateTypeParmDecl 0x13009c0 <line:452:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1300a38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1300e88 <line:453:5, line:456:65> line:454:5 constexpr operator< 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x1300c18 <col:15, col:37> col:37 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x1300db8 <col:42, col:64> col:64 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x1301428 <line:455:5, line:456:65>
| |     `-ReturnStmt 0x1301418 <line:455:7, line:456:62>
| |       `-BinaryOperator 0x13013f8 <line:455:14, line:456:62> '<dependent type>' '||'
| |         |-CXXOperatorCallExpr 0x13010a8 <line:455:14, col:30> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x1301060 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |         | |-CXXDependentScopeMemberExpr 0x1300fb0 <col:14, col:18> '<dependent type>' lvalue .first
| |         | | `-DeclRefExpr 0x1300f90 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300c18 '__x' 'const pair<_T1, _T2> &'
| |         | `-CXXDependentScopeMemberExpr 0x1301018 <col:26, col:30> '<dependent type>' lvalue .first
| |         |   `-DeclRefExpr 0x1300ff8 <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300db8 '__y' 'const pair<_T1, _T2> &'
| |         `-ParenExpr 0x13013d8 <line:456:10, col:62> '<dependent type>'
| |           `-BinaryOperator 0x13013b8 <col:11, col:56> '<dependent type>' '&&'
| |             |-UnaryOperator 0x1301250 <col:11, col:34> '<dependent type>' prefix '!' cannot overflow
| |             | `-ParenExpr 0x1301230 <col:12, col:34> '<dependent type>'
| |             |   `-CXXOperatorCallExpr 0x13011f8 <col:13, col:29> '<dependent type>'
| |             |     |-UnresolvedLookupExpr 0x13011b0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |             |     |-CXXDependentScopeMemberExpr 0x1301100 <col:13, col:17> '<dependent type>' lvalue .first
| |             |     | `-DeclRefExpr 0x13010e0 <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300db8 '__y' 'const pair<_T1, _T2> &'
| |             |     `-CXXDependentScopeMemberExpr 0x1301168 <col:25, col:29> '<dependent type>' lvalue .first
| |             |       `-DeclRefExpr 0x1301148 <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300c18 '__x' 'const pair<_T1, _T2> &'
| |             `-CXXOperatorCallExpr 0x1301380 <col:39, col:56> '<dependent type>'
| |               |-UnresolvedLookupExpr 0x1301338 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |               |-CXXDependentScopeMemberExpr 0x1301288 <col:39, col:43> '<dependent type>' lvalue .second
| |               | `-DeclRefExpr 0x1301268 <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300c18 '__x' 'const pair<_T1, _T2> &'
| |               `-CXXDependentScopeMemberExpr 0x13012f0 <col:52, col:56> '<dependent type>' lvalue .second
| |                 `-DeclRefExpr 0x13012d0 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x1300db8 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x13019a8 <line:459:3, line:462:29> line:461:5 operator!=
| | |-TemplateTypeParmDecl 0x1301440 <line:459:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x13014b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1301908 <line:460:5, line:462:29> line:461:5 constexpr operator!= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x1301698 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x1301838 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x1301b20 <line:462:5, col:29>
| |     `-ReturnStmt 0x1301b10 <col:7, col:26>
| |       `-UnaryOperator 0x1301af8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1301ad8 <col:15, col:26> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1301aa0 <col:16, col:23> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1301a50 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1300660 0x10f8598
| |             |-DeclRefExpr 0x1301a10 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x1301698 '__x' 'const pair<_T1, _T2> &'
| |             `-DeclRefExpr 0x1301a30 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x1301838 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x13020a8 <line:465:3, line:468:25> line:467:5 operator>
| | |-TemplateTypeParmDecl 0x1301b38 <line:465:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1301bb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1302008 <line:466:5, line:468:25> line:467:5 constexpr operator> 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x1301d98 <col:15, col:37> col:37 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x1301f38 <col:42, col:64> col:64 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x13021e0 <line:468:5, col:25>
| |     `-ReturnStmt 0x13021d0 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x1302198 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1302150 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |         |-DeclRefExpr 0x1302110 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x1301f38 '__y' 'const pair<_T1, _T2> &'
| |         `-DeclRefExpr 0x1302130 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x1301d98 '__x' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x1302778 <line:471:3, line:474:28> line:473:5 operator<=
| | |-TemplateTypeParmDecl 0x13021f8 <line:471:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1302278 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x13026d8 <line:472:5, line:474:28> line:473:5 constexpr operator<= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x1302458 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x13025f8 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x13028e8 <line:474:5, col:28>
| |     `-ReturnStmt 0x13028d8 <col:7, col:25>
| |       `-UnaryOperator 0x13028c0 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x13028a0 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1302868 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1302820 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |             |-DeclRefExpr 0x13027e0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x13025f8 '__y' 'const pair<_T1, _T2> &'
| |             `-DeclRefExpr 0x1302800 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x1302458 '__x' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x1302e68 <line:477:3, line:480:28> line:479:5 operator>=
| | |-TemplateTypeParmDecl 0x1302900 <line:477:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1302978 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1302dc8 <line:478:5, line:480:28> line:479:5 constexpr operator>= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| |   |-ParmVarDecl 0x1302b58 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x1302cf8 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
| |   `-CompoundStmt 0x1302fd8 <line:480:5, col:28>
| |     `-ReturnStmt 0x1302fc8 <col:7, col:25>
| |       `-UnaryOperator 0x1302fb0 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1302f90 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1302f58 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1302f10 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28
| |             |-DeclRefExpr 0x1302ed0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x1302b58 '__x' 'const pair<_T1, _T2> &'
| |             `-DeclRefExpr 0x1302ef0 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x1302cf8 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x1303be8 <line:486:3, line:497:22> line:495:5 swap
| | |-TemplateTypeParmDecl 0x1302ff0 <line:486:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1303068 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1303b48 <line:487:5, line:497:22> line:495:5 swap 'typename enable_if<__and_<__is_swappable<_T1>, __is_swappable<_T2> >::value>::type (pair<_T1, _T2> &, pair<_T1, _T2> &) noexcept(noexcept(__x.swap(__y)))' inline
| |   |-ParmVarDecl 0x13037a8 <col:10, col:26> col:26 referenced __x 'pair<_T1, _T2> &'
| |   |-ParmVarDecl 0x1303948 <col:31, col:47> col:47 referenced __y 'pair<_T1, _T2> &'
| |   `-CompoundStmt 0x1303d00 <line:497:5, col:22>
| |     `-CallExpr 0x1303cd8 <col:7, col:19> '<dependent type>'
| |       |-CXXDependentScopeMemberExpr 0x1303c70 <col:7, col:11> '<dependent type>' lvalue .swap
| |       | `-DeclRefExpr 0x1303c50 <col:7> 'pair<_T1, _T2>' lvalue ParmVar 0x13037a8 '__x' 'pair<_T1, _T2> &'
| |       `-DeclRefExpr 0x1303cb8 <col:16> 'pair<_T1, _T2>' lvalue ParmVar 0x1303948 '__y' 'pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x13057a8 <line:500:3, line:503:42> col:5 swap
| | |-TemplateTypeParmDecl 0x1303d18 <line:500:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| | |-TemplateTypeParmDecl 0x1303d98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| | `-FunctionDecl 0x1305708 <line:501:5, line:503:42> col:5 swap 'typename enable_if<!__and_<__is_swappable<_T1>, __is_swappable<_T2> >::value>::type (pair<_T1, _T2> &, pair<_T1, _T2> &)' delete
| |   |-ParmVarDecl 0x1304418 <col:10, col:24> col:25 'pair<_T1, _T2> &'
| |   `-ParmVarDecl 0x13045b8 <col:27, col:41> col:42 'pair<_T1, _T2> &'
| `-FunctionTemplateDecl 0x1305ff0 <line:521:3, line:530:5> line:524:5 make_pair
|   |-TemplateTypeParmDecl 0x1305810 <line:521:12, col:21> col:21 referenced typename depth 0 index 0 _T1
|   |-TemplateTypeParmDecl 0x1305888 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
|   `-FunctionDecl 0x1305f50 <line:522:5, line:530:5> line:524:5 constexpr make_pair 'pair<typename __decay_and_strip<_T1>::__type, typename __decay_and_strip<_T2>::__type> (_T1 &&, _T2 &&)'
|     |-ParmVarDecl 0x1305d68 <col:15, col:21> col:21 referenced __x '_T1 &&'
|     |-ParmVarDecl 0x1305e08 <col:26, col:32> col:32 referenced __y '_T2 &&'
|     `-CompoundStmt 0x13067d0 <line:525:5, line:530:5>
|       |-DeclStmt 0x13061c8 <line:526:7, col:65>
|       | `-TypedefDecl 0x1306170 <col:7, col:55> col:55 referenced __ds_type1 'typename __decay_and_strip<_T1>::__type'
|       |   `-DependentNameType 0x1306100 'typename __decay_and_strip<_T1>::__type' dependent
|       |-DeclStmt 0x1306348 <line:527:7, col:65>
|       | `-TypedefDecl 0x13062f0 <col:7, col:55> col:55 referenced __ds_type2 'typename __decay_and_strip<_T2>::__type'
|       |   `-DependentNameType 0x1306280 'typename __decay_and_strip<_T2>::__type' dependent
|       |-DeclStmt 0x1306500 <line:528:7, col:62>
|       | `-TypedefDecl 0x13064a8 <col:7, col:51> col:51 referenced __pair_type 'pair<__ds_type1, __ds_type2>'
|       |   `-TemplateSpecializationType 0x13063c0 'pair<__ds_type1, __ds_type2>' dependent pair
|       |     |-TemplateArgument type '__ds_type1':'typename __decay_and_strip<_T1>::__type'
|       |     `-TemplateArgument type '__ds_type2':'typename __decay_and_strip<_T2>::__type'
|       `-ReturnStmt 0x13067c0 <line:529:7, col:72>
|         `-CXXUnresolvedConstructExpr 0x1306790 <col:14, col:72> '__pair_type':'pair<__ds_type1, __ds_type2>' '__pair_type':'pair<__ds_type1, __ds_type2>'
|           |-CallExpr 0x1306648 <col:26, col:47> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x1306598 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
|           | `-DeclRefExpr 0x1306628 <col:44> '_T1' lvalue ParmVar 0x1305d68 '__x' '_T1 &&'
|           `-CallExpr 0x1306768 <col:50, col:71> '<dependent type>'
|             |-UnresolvedLookupExpr 0x13066b8 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'forward' 0x1274df0 0x12752d0
|             `-DeclRefExpr 0x1306748 <col:68> '_T2' lvalue ParmVar 0x1305e08 '__y' '_T2 &&'
|-NamespaceDecl 0x1306820 prev 0x12cd1d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_types.h:70:1, line:239:1> line:70:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1306890 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-CXXRecordDecl 0x13068e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_types.h:89:3, col:31> col:10 referenced struct input_iterator_tag definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x1306a08 <col:3, col:10> col:10 implicit struct input_iterator_tag
| | |-CXXConstructorDecl 0x1a803e0 <col:10> col:10 implicit constexpr input_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x1a804e8 <col:10> col:10 implicit constexpr input_iterator_tag 'void (const std::input_iterator_tag &)' inline default trivial noexcept-unevaluated 0x1a804e8
| | | `-ParmVarDecl 0x1a805f8 <col:10> col:10 'const std::input_iterator_tag &'
| | |-CXXConstructorDecl 0x1a80698 <col:10> col:10 implicit used constexpr input_iterator_tag 'void (std::input_iterator_tag &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x1a807a8 <col:10> col:10 'std::input_iterator_tag &&'
| | | `-CompoundStmt 0x1a8b510 <col:10>
| | `-CXXDestructorDecl 0x1a808d8 <col:10> col:10 implicit referenced ~input_iterator_tag 'void () noexcept' inline default trivial
| |-CXXRecordDecl 0x1306ab0 <line:92:3, col:32> col:10 referenced struct output_iterator_tag definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0x1306bc8 <col:3, col:10> col:10 implicit struct output_iterator_tag
| |-CXXRecordDecl 0x1306c70 <line:95:3, col:61> col:10 referenced struct forward_iterator_tag definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-public 'std::input_iterator_tag'
| | |-CXXRecordDecl 0x1306dc8 <col:3, col:10> col:10 implicit struct forward_iterator_tag
| | |-CXXConstructorDecl 0x1a89ea8 <col:10> col:10 implicit constexpr forward_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x1a89f80 <col:10> col:10 implicit referenced ~forward_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x1a8a1c8 <col:10> col:10 implicit constexpr forward_iterator_tag 'void (const std::forward_iterator_tag &)' inline default trivial noexcept-unevaluated 0x1a8a1c8
| | | `-ParmVarDecl 0x1a8a2d8 <col:10> col:10 'const std::forward_iterator_tag &'
| | `-CXXConstructorDecl 0x1a8a378 <col:10> col:10 implicit used constexpr forward_iterator_tag 'void (std::forward_iterator_tag &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x1a8a488 <col:10> col:10 used 'std::forward_iterator_tag &&'
| |   |-CXXCtorInitializer 'std::input_iterator_tag'
| |   | `-CXXConstructExpr 0x1a8b520 <col:10> 'std::input_iterator_tag' 'void (std::input_iterator_tag &&) noexcept'
| |   |   `-ImplicitCastExpr 0x1a8b4f0 <col:10> 'std::input_iterator_tag' xvalue <UncheckedDerivedToBase (input_iterator_tag)>
| |   |     `-CXXStaticCastExpr 0x1a8b4c0 <col:10> 'std::forward_iterator_tag' xvalue static_cast<struct std::forward_iterator_tag &&> <NoOp>
| |   |       `-DeclRefExpr 0x1a8b490 <col:10> 'std::forward_iterator_tag' lvalue ParmVar 0x1a8a488 '' 'std::forward_iterator_tag &&'
| |   `-CompoundStmt 0x1a8b590 <col:10>
| |-CXXRecordDecl 0x1306e70 <line:99:3, col:69> col:10 referenced struct bidirectional_iterator_tag definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-public 'std::forward_iterator_tag'
| | |-CXXRecordDecl 0x1306fc8 <col:3, col:10> col:10 implicit struct bidirectional_iterator_tag
| | |-CXXConstructorDecl 0x1a89db8 <col:10> col:10 implicit constexpr bidirectional_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x1a8a060 <col:10> col:10 implicit ~bidirectional_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x1a8a4f8 <col:10> col:10 implicit constexpr bidirectional_iterator_tag 'void (const std::bidirectional_iterator_tag &)' inline default trivial noexcept-unevaluated 0x1a8a4f8
| | | `-ParmVarDecl 0x1a8a608 <col:10> col:10 'const std::bidirectional_iterator_tag &'
| | `-CXXConstructorDecl 0x1a8a6a8 <col:10> col:10 implicit used constexpr bidirectional_iterator_tag 'void (std::bidirectional_iterator_tag &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x1a8a7b8 <col:10> col:10 used 'std::bidirectional_iterator_tag &&'
| |   |-CXXCtorInitializer 'std::forward_iterator_tag'
| |   | `-CXXConstructExpr 0x1a98d70 <col:10> 'std::forward_iterator_tag' 'void (std::forward_iterator_tag &&) noexcept'
| |   |   `-ImplicitCastExpr 0x1a98d50 <col:10> 'std::forward_iterator_tag' xvalue <UncheckedDerivedToBase (forward_iterator_tag)>
| |   |     `-CXXStaticCastExpr 0x1a98d20 <col:10> 'std::bidirectional_iterator_tag' xvalue static_cast<struct std::bidirectional_iterator_tag &&> <NoOp>
| |   |       `-DeclRefExpr 0x1a98cf0 <col:10> 'std::bidirectional_iterator_tag' lvalue ParmVar 0x1a8a7b8 '' 'std::bidirectional_iterator_tag &&'
| |   `-CompoundStmt 0x1a98de0 <col:10>
| |-CXXRecordDecl 0x1307070 <line:103:3, col:75> col:10 referenced struct random_access_iterator_tag definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-public 'std::bidirectional_iterator_tag'
| | |-CXXRecordDecl 0x13071c8 <col:3, col:10> col:10 implicit struct random_access_iterator_tag
| | |-CXXConstructorDecl 0x1a89cc8 <col:10> col:10 implicit referenced constexpr random_access_iterator_tag 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x1a8a828 <col:10> col:10 implicit constexpr random_access_iterator_tag 'void (const std::random_access_iterator_tag &)' inline default trivial noexcept-unevaluated 0x1a8a828
| | | `-ParmVarDecl 0x1a8a938 <col:10> col:10 'const std::random_access_iterator_tag &'
| | |-CXXConstructorDecl 0x1a8a9a8 <col:10> col:10 implicit used constexpr random_access_iterator_tag 'void (std::random_access_iterator_tag &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x1a8aab8 <col:10> col:10 used 'std::random_access_iterator_tag &&'
| | | |-CXXCtorInitializer 'std::bidirectional_iterator_tag'
| | | | `-CXXConstructExpr 0x1a98df0 <col:10> 'std::bidirectional_iterator_tag' 'void (std::bidirectional_iterator_tag &&) noexcept'
| | | |   `-ImplicitCastExpr 0x1a98cd0 <col:10> 'std::bidirectional_iterator_tag' xvalue <UncheckedDerivedToBase (bidirectional_iterator_tag)>
| | | |     `-CXXStaticCastExpr 0x1a98ca0 <col:10> 'std::random_access_iterator_tag' xvalue static_cast<struct std::random_access_iterator_tag &&> <NoOp>
| | | |       `-DeclRefExpr 0x1a98c70 <col:10> 'std::random_access_iterator_tag' lvalue ParmVar 0x1a8aab8 '' 'std::random_access_iterator_tag &&'
| | | `-CompoundStmt 0x1a98e60 <col:10>
| | `-CXXDestructorDecl 0x1a8ab58 <col:10> col:10 implicit referenced ~random_access_iterator_tag 'void () noexcept' inline default trivial
| |-ClassTemplateDecl 0x130a930 <line:116:3, line:130:5> line:118:12 iterator
| | |-TemplateTypeParmDecl 0x1307270 <line:116:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| | |-TemplateTypeParmDecl 0x13072e8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x1307378 <col:46, col:67> col:55 referenced typename depth 0 index 2 _Distance
| | | `-TemplateArgument type 'std::ptrdiff_t':'long'
| | |-TemplateTypeParmDecl 0x1307438 <line:117:12, col:35> col:21 referenced typename depth 0 index 3 _Pointer
| | | `-TemplateArgument type '_Tp *'
| | |-TemplateTypeParmDecl 0x13074f8 <col:38, col:63> col:47 referenced typename depth 0 index 4 _Reference
| | | `-TemplateArgument type '_Tp &'
| | |-CXXRecordDecl 0x13075b8 <line:118:5, line:130:5> line:118:12 struct iterator definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x130ac40 <col:5, col:12> col:12 implicit struct iterator
| | | |-TypedefDecl 0x130ace0 <line:121:7, col:26> col:26 iterator_category '_Category'
| | | | `-TemplateTypeParmType 0x13072c0 '_Category' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x1307270 '_Category'
| | | |-TypedefDecl 0x130ad48 <line:123:7, col:26> col:26 value_type '_Tp'
| | | | `-TemplateTypeParmType 0x1307340 '_Tp' dependent depth 0 index 1
| | | |   `-TemplateTypeParm 0x13072e8 '_Tp'
| | | |-TypedefDecl 0x130adb0 <line:125:7, col:26> col:26 difference_type '_Distance'
| | | | `-TemplateTypeParmType 0x13073d0 '_Distance' dependent depth 0 index 2
| | | |   `-TemplateTypeParm 0x1307378 '_Distance'
| | | |-TypedefDecl 0x130ae18 <line:127:7, col:26> col:26 pointer '_Pointer'
| | | | `-TemplateTypeParmType 0x1307490 '_Pointer' dependent depth 0 index 3
| | | |   `-TemplateTypeParm 0x1307438 '_Pointer'
| | | `-TypedefDecl 0x130ae80 <line:129:7, col:26> col:26 reference '_Reference'
| | |   `-TemplateTypeParmType 0x1307550 '_Reference' dependent depth 0 index 4
| | |     `-TemplateTypeParm 0x13074f8 '_Reference'
| | `-ClassTemplateSpecializationDecl 0x1331440 <line:116:3, line:130:5> line:118:12 struct iterator definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::output_iterator_tag'
| |   |-TemplateArgument type 'void'
| |   |-TemplateArgument type 'void'
| |   |-TemplateArgument type 'void'
| |   |-TemplateArgument type 'void'
| |   |-CXXRecordDecl 0x1331738 prev 0x1331440 <col:5, col:12> col:12 implicit struct iterator
| |   |-TypedefDecl 0x1331808 <line:121:7, col:26> col:26 iterator_category 'std::output_iterator_tag':'std::output_iterator_tag'
| |   | `-SubstTemplateTypeParmType 0x13317d0 'std::output_iterator_tag' sugar
| |   |   |-TemplateTypeParmType 0x13072c0 '_Category' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x1307270 '_Category'
| |   |   `-RecordType 0x1306b40 'std::output_iterator_tag'
| |   |     `-CXXRecord 0x1306ab0 'output_iterator_tag'
| |   |-TypedefDecl 0x1331898 <line:123:7, col:26> col:26 value_type 'void':'void'
| |   | `-SubstTemplateTypeParmType 0x1331860 'void' sugar
| |   |   |-TemplateTypeParmType 0x1307340 '_Tp' dependent depth 0 index 1
| |   |   | `-TemplateTypeParm 0x13072e8 '_Tp'
| |   |   `-BuiltinType 0xffd170 'void'
| |   |-TypedefDecl 0x1331928 <line:125:7, col:26> col:26 difference_type 'void':'void'
| |   | `-SubstTemplateTypeParmType 0x13318f0 'void' sugar
| |   |   |-TemplateTypeParmType 0x13073d0 '_Distance' dependent depth 0 index 2
| |   |   | `-TemplateTypeParm 0x1307378 '_Distance'
| |   |   `-BuiltinType 0xffd170 'void'
| |   |-TypedefDecl 0x13319b8 <line:127:7, col:26> col:26 pointer 'void':'void'
| |   | `-SubstTemplateTypeParmType 0x1331980 'void' sugar
| |   |   |-TemplateTypeParmType 0x1307490 '_Pointer' dependent depth 0 index 3
| |   |   | `-TemplateTypeParm 0x1307438 '_Pointer'
| |   |   `-BuiltinType 0xffd170 'void'
| |   `-TypedefDecl 0x1331a48 <line:129:7, col:26> col:26 reference 'void':'void'
| |     `-SubstTemplateTypeParmType 0x1331a10 'void' sugar
| |       |-TemplateTypeParmType 0x1307550 '_Reference' dependent depth 0 index 4
| |       | `-TemplateTypeParm 0x13074f8 '_Reference'
| |       `-BuiltinType 0xffd170 'void'
| |-ClassTemplateDecl 0x130b100 <line:143:3, line:144:32> col:12 __iterator_traits
| | |-TemplateTypeParmDecl 0x130aef0 <line:143:12, col:21> col:21 typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x130afd0 <col:32, <scratch space>:118:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_types.h:143:41 typename depth 0 index 1
| | | `-TemplateArgument type '__void_t<>':'void'
| | `-CXXRecordDecl 0x130b070 <line:144:5, col:32> col:12 struct __iterator_traits definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   `-CXXRecordDecl 0x130b390 <col:5, col:12> col:12 implicit struct __iterator_traits
| |-ClassTemplatePartialSpecializationDecl 0x130bc38 <line:146:3, line:159:5> line:147:12 struct __iterator_traits definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'void'
| | |-TemplateTypeParmDecl 0x130b438 <line:146:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-CXXRecordDecl 0x130beb8 <line:147:5, col:12> col:12 implicit struct __iterator_traits
| | |-TypedefDecl 0x130bfa0 <line:154:7, col:53> col:53 iterator_category 'typename _Iterator::iterator_category'
| | | `-DependentNameType 0x130b550 'typename _Iterator::iterator_category' dependent
| | |-TypedefDecl 0x130c050 <line:155:7, col:53> col:53 value_type 'typename _Iterator::value_type'
| | | `-DependentNameType 0x130b610 'typename _Iterator::value_type' dependent
| | |-TypedefDecl 0x130c100 <line:156:7, col:53> col:53 difference_type 'typename _Iterator::difference_type'
| | | `-DependentNameType 0x130b6d0 'typename _Iterator::difference_type' dependent
| | |-TypedefDecl 0x130c1b0 <line:157:7, col:53> col:53 pointer 'typename _Iterator::pointer'
| | | `-DependentNameType 0x130b790 'typename _Iterator::pointer' dependent
| | `-TypedefDecl 0x130c260 <line:158:7, col:53> col:53 reference 'typename _Iterator::reference'
| |   `-DependentNameType 0x130b850 'typename _Iterator::reference' dependent
| |-ClassTemplateDecl 0x130c3f8 <line:161:3, line:163:45> line:162:12 iterator_traits
| | |-TemplateTypeParmDecl 0x130c2d0 <line:161:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-CXXRecordDecl 0x130c368 <line:162:5, line:163:45> line:162:12 struct iterator_traits definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__iterator_traits<_Iterator>'
| | | `-CXXRecordDecl 0x130c700 <col:5, col:12> col:12 implicit struct iterator_traits
| | |-ClassTemplateSpecializationDecl 0x1a77728 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char *'
| | | |-CXXRecordDecl 0x1a77a18 prev 0x1a77728 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1a77aa8 <line:180:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1a77b10 <line:181:7, col:43> col:43 referenced value_type 'char':'char'
| | | | `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | | |   |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |   `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a77b68 <line:182:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1a77bd0 <line:183:7, col:43> col:43 referenced pointer 'char *'
| | | | `-PointerType 0x1a77930 'char *'
| | | |   `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | | |     |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |     `-BuiltinType 0xffd1b0 'char'
| | | `-TypedefDecl 0x1a77c68 <line:184:7, col:43> col:43 referenced reference 'char &'
| | |   `-LValueReferenceType 0x1a77c30 'char &'
| | |     `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | |       `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1a8fcc8 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char *'
| | | |-CXXRecordDecl 0x1a90228 prev 0x1a8fcc8 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1a902b8 <line:191:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1a90320 <line:192:7, col:43> col:43 referenced value_type 'char':'char'
| | | | `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | | |   |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |   `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a90378 <line:193:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1a903e0 <line:194:7, col:43> col:43 referenced pointer 'const char *'
| | | | `-PointerType 0x1a90090 'const char *'
| | | |   `-QualType 0x1a90061 'const char' const
| | | |     `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd1b0 'char'
| | | `-TypedefDecl 0x1a90478 <line:195:7, col:43> col:43 referenced reference 'const char &'
| | |   `-LValueReferenceType 0x1a90440 'const char &'
| | |     `-QualType 0x1a90061 'const char' const
| | |       `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | |         |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x130ce88 '_Tp'
| | |         `-BuiltinType 0xffd1b0 'char'
| | |-ClassTemplateSpecializationDecl 0x1ab3fe8 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t *'
| | | |-CXXRecordDecl 0x1ab42d8 prev 0x1ab3fe8 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1ab4368 <line:180:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1ab43d0 <line:181:7, col:43> col:43 referenced value_type 'wchar_t':'wchar_t'
| | | | `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | | |   |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |   `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ab4428 <line:182:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1ab4490 <line:183:7, col:43> col:43 referenced pointer 'wchar_t *'
| | | | `-PointerType 0x1ab41f0 'wchar_t *'
| | | |   `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | | |     |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | | `-TypedefDecl 0x1ab4528 <line:184:7, col:43> col:43 referenced reference 'wchar_t &'
| | |   `-LValueReferenceType 0x1ab44f0 'wchar_t &'
| | |     `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1abf998 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-CXXRecordDecl 0x1abfea0 prev 0x1abf998 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1abff30 <line:191:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1abff98 <line:192:7, col:43> col:43 referenced value_type 'wchar_t':'wchar_t'
| | | | `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | | |   |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |   `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1abfff0 <line:193:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1ac0058 <line:194:7, col:43> col:43 referenced pointer 'const wchar_t *'
| | | | `-PointerType 0x1abfd60 'const wchar_t *'
| | | |   `-QualType 0x1abfd31 'const wchar_t' const
| | | |     `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | | `-TypedefDecl 0x1ac00e8 <line:195:7, col:43> col:43 referenced reference 'const wchar_t &'
| | |   `-LValueReferenceType 0x1ac00b0 'const wchar_t &'
| | |     `-QualType 0x1abfd31 'const wchar_t' const
| | |       `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | |         |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x130ce88 '_Tp'
| | |         `-BuiltinType 0xffd6f0 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x1adc498 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t *'
| | | |-CXXRecordDecl 0x1adc880 prev 0x1adc498 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1adc910 <line:191:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1adc978 <line:192:7, col:43> col:43 referenced value_type 'char16_t':'char16_t'
| | | | `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | | |   |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |   `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1adc9d0 <line:193:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1adca38 <line:194:7, col:43> col:43 referenced pointer 'const char16_t *'
| | | | `-PointerType 0x1adc740 'const char16_t *'
| | | |   `-QualType 0x1adc711 'const char16_t' const
| | | |     `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | `-TypedefDecl 0x1adcac8 <line:195:7, col:43> col:43 referenced reference 'const char16_t &'
| | |   `-LValueReferenceType 0x1adca90 'const char16_t &'
| | |     `-QualType 0x1adc711 'const char16_t' const
| | |       `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | |         |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x130ce88 '_Tp'
| | |         `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1adf158 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t *'
| | | |-CXXRecordDecl 0x1adf568 prev 0x1adf158 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1adf5f8 <line:180:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1adf660 <line:181:7, col:43> col:43 referenced value_type 'char16_t':'char16_t'
| | | | `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | | |   |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |   `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1adf6b8 <line:182:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1adf720 <line:183:7, col:43> col:43 referenced pointer 'char16_t *'
| | | | `-PointerType 0x1adf480 'char16_t *'
| | | |   `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | | |     |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | `-TypedefDecl 0x1adf7b8 <line:184:7, col:43> col:43 referenced reference 'char16_t &'
| | |   `-LValueReferenceType 0x1adf780 'char16_t &'
| | |     `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | |       `-BuiltinType 0xffd730 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x1af29b8 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char32_t *'
| | | |-CXXRecordDecl 0x1af2da0 prev 0x1af29b8 <col:5, col:12> col:12 implicit struct iterator_traits
| | | |-TypedefDecl 0x1af2e30 <line:191:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| | | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1af2e98 <line:192:7, col:43> col:43 referenced value_type 'char32_t':'char32_t'
| | | | `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| | | |   |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |   `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1af2ef0 <line:193:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1af2f58 <line:194:7, col:43> col:43 referenced pointer 'const char32_t *'
| | | | `-PointerType 0x1af2c60 'const char32_t *'
| | | |   `-QualType 0x1af2c31 'const char32_t' const
| | | |     `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd750 'char32_t'
| | | `-TypedefDecl 0x1af2fe8 <line:195:7, col:43> col:43 referenced reference 'const char32_t &'
| | |   `-LValueReferenceType 0x1af2fb0 'const char32_t &'
| | |     `-QualType 0x1af2c31 'const char32_t' const
| | |       `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| | |         |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0x130ce88 '_Tp'
| | |         `-BuiltinType 0xffd750 'char32_t'
| | `-ClassTemplateSpecializationDecl 0x1af6f48 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'char32_t *'
| |   |-CXXRecordDecl 0x1af7358 prev 0x1af6f48 <col:5, col:12> col:12 implicit struct iterator_traits
| |   |-TypedefDecl 0x1af73e8 <line:180:7, col:42> col:42 referenced iterator_category 'std::random_access_iterator_tag'
| |   | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |   |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |   |-TypedefDecl 0x1af7450 <line:181:7, col:43> col:43 referenced value_type 'char32_t':'char32_t'
| |   | `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| |   |   |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x130c7a8 '_Tp'
| |   |   `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1af74a8 <line:182:7, col:43> col:43 referenced difference_type 'std::ptrdiff_t':'long'
| |   | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   |   |-Typedef 0x103b008 'ptrdiff_t'
| |   |   `-BuiltinType 0xffd230 'long'
| |   |-TypedefDecl 0x1af7510 <line:183:7, col:43> col:43 referenced pointer 'char32_t *'
| |   | `-PointerType 0x1af7270 'char32_t *'
| |   |   `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| |   |     |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| |   |     | `-TemplateTypeParm 0x130c7a8 '_Tp'
| |   |     `-BuiltinType 0xffd750 'char32_t'
| |   `-TypedefDecl 0x1af75a8 <line:184:7, col:43> col:43 referenced reference 'char32_t &'
| |     `-LValueReferenceType 0x1af7570 'char32_t &'
| |       `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| |         `-BuiltinType 0xffd750 'char32_t'
| |-ClassTemplatePartialSpecializationDecl 0x130c980 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x130c7a8 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x130cba8 <line:178:5, col:12> col:12 implicit struct iterator_traits
| | |-TypedefDecl 0x130cc48 <line:180:7, col:42> col:42 iterator_category 'std::random_access_iterator_tag'
| | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | |-TypedefDecl 0x130ccb0 <line:181:7, col:43> col:43 value_type '_Tp'
| | | `-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | |   `-TemplateTypeParm 0x130c7a8 '_Tp'
| | |-TypedefDecl 0x130cd18 <line:182:7, col:43> col:43 difference_type 'std::ptrdiff_t':'long'
| | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | |   |-Typedef 0x103b008 'ptrdiff_t'
| | |   `-BuiltinType 0xffd230 'long'
| | |-TypedefDecl 0x130cd80 <line:183:7, col:43> col:43 pointer '_Tp *'
| | | `-PointerType 0x130c850 '_Tp *' dependent
| | |   `-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x130c7a8 '_Tp'
| | `-TypedefDecl 0x130ce18 <line:184:7, col:43> col:43 reference '_Tp &'
| |   `-LValueReferenceType 0x130cde0 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x130c7a8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x130d030 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x130ce88 <line:188:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x130d258 <line:189:5, col:12> col:12 implicit struct iterator_traits
| | |-TypedefDecl 0x130d2f8 <line:191:7, col:42> col:42 iterator_category 'std::random_access_iterator_tag'
| | | `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | |   `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | |-TypedefDecl 0x130d360 <line:192:7, col:43> col:43 value_type '_Tp'
| | | `-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |   `-TemplateTypeParm 0x130ce88 '_Tp'
| | |-TypedefDecl 0x130d3c8 <line:193:7, col:43> col:43 difference_type 'std::ptrdiff_t':'long'
| | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | |   |-Typedef 0x103b008 'ptrdiff_t'
| | |   `-BuiltinType 0xffd230 'long'
| | |-TypedefDecl 0x130d430 <line:194:7, col:43> col:43 pointer 'const _Tp *'
| | | `-PointerType 0x130cf30 'const _Tp *' dependent
| | |   `-QualType 0x130cee1 'const _Tp' const
| | |     `-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x130ce88 '_Tp'
| | `-TypedefDecl 0x130d4c8 <line:195:7, col:43> col:43 reference 'const _Tp &'
| |   `-LValueReferenceType 0x130d490 'const _Tp &' dependent
| |     `-QualType 0x130cee1 'const _Tp' const
| |       `-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x130ce88 '_Tp'
| |-FunctionTemplateDecl 0x130d8f8 <line:202:3, line:206:68> line:205:5 __iterator_category
| | |-TemplateTypeParmDecl 0x130d538 <line:202:12, col:21> col:21 referenced typename depth 0 index 0 _Iter
| | |-FunctionDecl 0x130d858 <line:203:5, line:206:68> line:205:5 constexpr __iterator_category 'typename iterator_traits<_Iter>::iterator_category (const _Iter &)' inline
| | | |-ParmVarDecl 0x130d758 <col:25, col:36> col:37 'const _Iter &'
| | | `-CompoundStmt 0x130daa0 <line:206:5, col:68>
| | |   `-ReturnStmt 0x130da90 <col:7, col:65>
| | |     `-CXXUnresolvedConstructExpr 0x130da70 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category' 'typename iterator_traits<_Iter>::iterator_category'
| | |-FunctionDecl 0x1a98988 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<char *>::iterator_category (char *const &)' inline
| | | |-TemplateArgument type 'char *'
| | | |-ParmVarDecl 0x1a98888 <col:25, col:36> col:37 'char *const &'
| | | `-CompoundStmt 0x1a98ec8 <line:206:5, col:68>
| | |   `-ReturnStmt 0x1a98eb8 <col:7, col:65>
| | |     `-ExprWithCleanups 0x1a98ea0 <col:14, col:65> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'
| | |       `-CXXConstructExpr 0x1a98e70 <col:14, col:65> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |         `-MaterializeTemporaryExpr 0x1a98bf0 <col:14, col:65> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |           `-CXXTemporaryObjectExpr 0x1a98bc0 <col:14, col:65> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| | |-FunctionDecl 0x1ac2b58 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)' inline
| | | |-TemplateArgument type 'wchar_t *'
| | | |-ParmVarDecl 0x1ac2a58 <col:25, col:36> col:37 'wchar_t *const &'
| | | `-CompoundStmt 0x1ac2e30 <line:206:5, col:68>
| | |   `-ReturnStmt 0x1ac2e20 <col:7, col:65>
| | |     `-ExprWithCleanups 0x1ac2e08 <col:14, col:65> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'
| | |       `-CXXConstructExpr 0x1ac2dd8 <col:14, col:65> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |         `-MaterializeTemporaryExpr 0x1ac2dc0 <col:14, col:65> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |           `-CXXTemporaryObjectExpr 0x1ac2d90 <col:14, col:65> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| | |-FunctionDecl 0x1ad25a8 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<const char *>::iterator_category (const char *const &)' inline
| | | |-TemplateArgument type 'const char *'
| | | |-ParmVarDecl 0x1ad24a8 <col:25, col:36> col:37 'const char *const &'
| | | `-CompoundStmt 0x1ad2880 <line:206:5, col:68>
| | |   `-ReturnStmt 0x1ad2870 <col:7, col:65>
| | |     `-ExprWithCleanups 0x1ad2858 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'
| | |       `-CXXConstructExpr 0x1ad2828 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |         `-MaterializeTemporaryExpr 0x1ad2810 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |           `-CXXTemporaryObjectExpr 0x1ad27e0 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| | |-FunctionDecl 0x1ad74f8 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)' inline
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-ParmVarDecl 0x1ad73f8 <col:25, col:36> col:37 'const wchar_t *const &'
| | | `-CompoundStmt 0x1ad77d0 <line:206:5, col:68>
| | |   `-ReturnStmt 0x1ad77c0 <col:7, col:65>
| | |     `-ExprWithCleanups 0x1ad77a8 <col:14, col:65> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'
| | |       `-CXXConstructExpr 0x1ad7778 <col:14, col:65> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |         `-MaterializeTemporaryExpr 0x1ad7760 <col:14, col:65> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |           `-CXXTemporaryObjectExpr 0x1ad7730 <col:14, col:65> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| | |-FunctionDecl 0x1ae4fc8 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)' inline
| | | |-TemplateArgument type 'const char16_t *'
| | | |-ParmVarDecl 0x1ae4ec8 <col:25, col:36> col:37 'const char16_t *const &'
| | | `-CompoundStmt 0x1ae52a0 <line:206:5, col:68>
| | |   `-ReturnStmt 0x1ae5290 <col:7, col:65>
| | |     `-ExprWithCleanups 0x1ae5278 <col:14, col:65> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'
| | |       `-CXXConstructExpr 0x1ae5248 <col:14, col:65> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |         `-MaterializeTemporaryExpr 0x1ae5230 <col:14, col:65> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |           `-CXXTemporaryObjectExpr 0x1ae5200 <col:14, col:65> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| | `-FunctionDecl 0x1afc948 <line:203:5, line:206:68> line:205:5 used constexpr __iterator_category 'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)' inline
| |   |-TemplateArgument type 'const char32_t *'
| |   |-ParmVarDecl 0x1afc848 <col:25, col:36> col:37 'const char32_t *const &'
| |   `-CompoundStmt 0x1afcc20 <line:206:5, col:68>
| |     `-ReturnStmt 0x1afcc10 <col:7, col:65>
| |       `-ExprWithCleanups 0x1afcbf8 <col:14, col:65> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'
| |         `-CXXConstructExpr 0x1afcbc8 <col:14, col:65> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| |           `-MaterializeTemporaryExpr 0x1afcbb0 <col:14, col:65> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| |             `-CXXTemporaryObjectExpr 0x1afcb80 <col:14, col:65> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag' 'void () noexcept' zeroing
| `-TypeAliasTemplateDecl 0x130e050 <line:231:3, line:235:40> line:232:5 _RequireInputIter
|   |-TemplateTypeParmDecl 0x130dab8 <line:231:12, col:21> col:21 referenced typename depth 0 index 0 _InIter
|   `-TypeAliasDecl 0x130dff0 <line:232:5, line:235:40> line:232:11 _RequireInputIter 'typename enable_if<is_convertible<typename iterator_traits<_InIter>::iterator_category, input_iterator_tag>::value>::type'
|     `-DependentNameType 0x130df80 'typename enable_if<is_convertible<typename iterator_traits<_InIter>::iterator_category, input_iterator_tag>::value>::type' dependent
|-NamespaceDecl 0x130e0c8 prev 0x1306820 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:67:1, line:237:1> line:67:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x130e138 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x130e2b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:73:3, col:30> col:30 _List_iterator
| | |-TemplateTypeParmDecl 0x130e190 <col:13> col:21 typename depth 0 index 0
| | `-CXXRecordDecl 0x130e228 <col:23, col:30> col:30 struct _List_iterator
| |-ClassTemplateDecl 0x130e5d8 <line:74:3, col:30> col:30 _List_const_iterator
| | |-TemplateTypeParmDecl 0x130e4a8 <col:13> col:21 typename depth 0 index 0
| | `-CXXRecordDecl 0x130e548 <col:23, col:30> col:30 struct _List_const_iterator
| |-FunctionTemplateDecl 0x13126f8 <line:77:3, line:93:5> line:80:5 __distance
| | |-TemplateTypeParmDecl 0x130e7c8 <line:77:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| | |-FunctionDecl 0x1312658 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)' inline
| | | |-ParmVarDecl 0x1312430 <col:16, col:31> col:31 referenced __first '_InputIterator'
| | | |-ParmVarDecl 0x13124a8 <col:40, col:55> col:55 referenced __last '_InputIterator'
| | | |-ParmVarDecl 0x1312520 <line:81:16> col:34 'std::input_iterator_tag'
| | | `-CompoundStmt 0x1312ac8 <line:82:5, line:93:5>
| | |   |-DeclStmt 0x1312908 <line:86:7, col:72>
| | |   | `-VarDecl 0x1312880 <col:7, col:71> col:65 referenced __n 'typename iterator_traits<_InputIterator>::difference_type' nrvo cinit
| | |   |   `-IntegerLiteral 0x13128e8 <col:71> 'int' 0
| | |   |-WhileStmt 0x1312a78 <line:87:7, line:91:2>
| | |   | |-CXXOperatorCallExpr 0x13129b0 <line:87:14, col:25> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x1312960 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8
| | |   | | |-DeclRefExpr 0x1312920 <col:14> '_InputIterator' lvalue ParmVar 0x1312430 '__first' '_InputIterator'
| | |   | | `-DeclRefExpr 0x1312940 <col:25> '_InputIterator' lvalue ParmVar 0x13124a8 '__last' '_InputIterator'
| | |   | `-CompoundStmt 0x1312a58 <line:88:2, line:91:2>
| | |   |   |-UnaryOperator 0x1312a08 <line:89:4, col:6> '<dependent type>' prefix '++' cannot overflow
| | |   |   | `-DeclRefExpr 0x13129e8 <col:6> '_InputIterator' lvalue ParmVar 0x1312430 '__first' '_InputIterator'
| | |   |   `-UnaryOperator 0x1312a40 <line:90:4, col:6> '<dependent type>' prefix '++' cannot overflow
| | |   |     `-DeclRefExpr 0x1312a20 <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x1312880 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
| | |   `-ReturnStmt 0x1312ab0 <line:92:7, col:14>
| | |     `-DeclRefExpr 0x1312a90 <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x1312880 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
| | |-FunctionDecl 0x1a99388 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<char *>::difference_type (char *, char *, std::input_iterator_tag)' inline
| | | |-TemplateArgument type 'char *'
| | | |-ParmVarDecl 0x1a99170 <col:16, col:31> col:31 __first 'char *':'char *'
| | | |-ParmVarDecl 0x1a991e8 <col:40, col:55> col:55 __last 'char *':'char *'
| | | `-ParmVarDecl 0x1a99250 <line:81:16> col:34 'std::input_iterator_tag'
| | |-FunctionDecl 0x1ac3278 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::input_iterator_tag)' inline
| | | |-TemplateArgument type 'wchar_t *'
| | | |-ParmVarDecl 0x1ac3060 <col:16, col:31> col:31 __first 'wchar_t *':'wchar_t *'
| | | |-ParmVarDecl 0x1ac30d8 <col:40, col:55> col:55 __last 'wchar_t *':'wchar_t *'
| | | `-ParmVarDecl 0x1ac3140 <line:81:16> col:34 'std::input_iterator_tag'
| | |-FunctionDecl 0x1ad2cc8 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::input_iterator_tag)' inline
| | | |-TemplateArgument type 'const char *'
| | | |-ParmVarDecl 0x1ad2ab0 <col:16, col:31> col:31 __first 'const char *':'const char *'
| | | |-ParmVarDecl 0x1ad2b28 <col:40, col:55> col:55 __last 'const char *':'const char *'
| | | `-ParmVarDecl 0x1ad2b90 <line:81:16> col:34 'std::input_iterator_tag'
| | |-FunctionDecl 0x1ad7c18 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::input_iterator_tag)' inline
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-ParmVarDecl 0x1ad7a00 <col:16, col:31> col:31 __first 'const wchar_t *':'const wchar_t *'
| | | |-ParmVarDecl 0x1ad7a78 <col:40, col:55> col:55 __last 'const wchar_t *':'const wchar_t *'
| | | `-ParmVarDecl 0x1ad7ae0 <line:81:16> col:34 'std::input_iterator_tag'
| | |-FunctionDecl 0x1ae56e8 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::input_iterator_tag)' inline
| | | |-TemplateArgument type 'const char16_t *'
| | | |-ParmVarDecl 0x1ae54d0 <col:16, col:31> col:31 __first 'const char16_t *':'const char16_t *'
| | | |-ParmVarDecl 0x1ae5548 <col:40, col:55> col:55 __last 'const char16_t *':'const char16_t *'
| | | `-ParmVarDecl 0x1ae55b0 <line:81:16> col:34 'std::input_iterator_tag'
| | `-FunctionDecl 0x1afd9c0 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::input_iterator_tag)' inline
| |   |-TemplateArgument type 'const char32_t *'
| |   |-ParmVarDecl 0x1afce50 <col:16, col:31> col:31 __first 'const char32_t *':'const char32_t *'
| |   |-ParmVarDecl 0x1afcec8 <col:40, col:55> col:55 __last 'const char32_t *':'const char32_t *'
| |   `-ParmVarDecl 0x1afcf30 <line:81:16> col:34 'std::input_iterator_tag'
| |-FunctionTemplateDecl 0x1312f58 <line:95:3, line:105:5> line:98:5 __distance
| | |-TemplateTypeParmDecl 0x1312af0 <line:95:12, col:21> col:21 referenced typename depth 0 index 0 _RandomAccessIterator
| | |-FunctionDecl 0x1312eb8 <line:96:5, line:105:5> line:98:5 constexpr __distance 'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)' inline
| | | |-ParmVarDecl 0x1312c90 <col:16, col:38> col:38 referenced __first '_RandomAccessIterator'
| | | |-ParmVarDecl 0x1312d08 <col:47, col:69> col:69 referenced __last '_RandomAccessIterator'
| | | |-ParmVarDecl 0x1312d80 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1313038 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1313028 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1313008 <col:14, col:23> '<dependent type>' '-'
| | |       |-DeclRefExpr 0x1312fc8 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x1312d08 '__last' '_RandomAccessIterator'
| | |       `-DeclRefExpr 0x1312fe8 <col:23> '_RandomAccessIterator' lvalue ParmVar 0x1312c90 '__first' '_RandomAccessIterator'
| | |-FunctionDecl 0x1a99898 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)' inline
| | | |-TemplateArgument type 'char *'
| | | |-ParmVarDecl 0x1a99680 <col:16, col:38> col:38 used __first 'char *':'char *'
| | | |-ParmVarDecl 0x1a996f8 <col:47, col:69> col:69 used __last 'char *':'char *'
| | | |-ParmVarDecl 0x1a99760 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1a99ae0 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1a99ad0 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1a99ab0 <col:14, col:23> 'long' '-'
| | |       |-ImplicitCastExpr 0x1a99a80 <col:14> 'char *':'char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1a99a40 <col:14> 'char *':'char *' lvalue ParmVar 0x1a996f8 '__last' 'char *':'char *'
| | |       `-ImplicitCastExpr 0x1a99a98 <col:23> 'char *':'char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x1a99a60 <col:23> 'char *':'char *' lvalue ParmVar 0x1a99680 '__first' 'char *':'char *'
| | |-FunctionDecl 0x1ac3708 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)' inline
| | | |-TemplateArgument type 'wchar_t *'
| | | |-ParmVarDecl 0x1ac34f0 <col:16, col:38> col:38 used __first 'wchar_t *':'wchar_t *'
| | | |-ParmVarDecl 0x1ac3568 <col:47, col:69> col:69 used __last 'wchar_t *':'wchar_t *'
| | | |-ParmVarDecl 0x1ac35d0 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1ac3950 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1ac3940 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1ac3920 <col:14, col:23> 'long' '-'
| | |       |-ImplicitCastExpr 0x1ac38f0 <col:14> 'wchar_t *':'wchar_t *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1ac38b0 <col:14> 'wchar_t *':'wchar_t *' lvalue ParmVar 0x1ac3568 '__last' 'wchar_t *':'wchar_t *'
| | |       `-ImplicitCastExpr 0x1ac3908 <col:23> 'wchar_t *':'wchar_t *' <LValueToRValue>
| | |         `-DeclRefExpr 0x1ac38d0 <col:23> 'wchar_t *':'wchar_t *' lvalue ParmVar 0x1ac34f0 '__first' 'wchar_t *':'wchar_t *'
| | |-FunctionDecl 0x1ad3158 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)' inline
| | | |-TemplateArgument type 'const char *'
| | | |-ParmVarDecl 0x1ad2f40 <col:16, col:38> col:38 used __first 'const char *':'const char *'
| | | |-ParmVarDecl 0x1ad2fb8 <col:47, col:69> col:69 used __last 'const char *':'const char *'
| | | |-ParmVarDecl 0x1ad3020 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1ad33a0 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1ad3390 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1ad3370 <col:14, col:23> 'long' '-'
| | |       |-ImplicitCastExpr 0x1ad3340 <col:14> 'const char *':'const char *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1ad3300 <col:14> 'const char *':'const char *' lvalue ParmVar 0x1ad2fb8 '__last' 'const char *':'const char *'
| | |       `-ImplicitCastExpr 0x1ad3358 <col:23> 'const char *':'const char *' <LValueToRValue>
| | |         `-DeclRefExpr 0x1ad3320 <col:23> 'const char *':'const char *' lvalue ParmVar 0x1ad2f40 '__first' 'const char *':'const char *'
| | |-FunctionDecl 0x1ad80a8 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)' inline
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-ParmVarDecl 0x1ad7e90 <col:16, col:38> col:38 used __first 'const wchar_t *':'const wchar_t *'
| | | |-ParmVarDecl 0x1ad7f08 <col:47, col:69> col:69 used __last 'const wchar_t *':'const wchar_t *'
| | | |-ParmVarDecl 0x1ad7f70 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1ad82f0 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1ad82e0 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1ad82c0 <col:14, col:23> 'long' '-'
| | |       |-ImplicitCastExpr 0x1ad8290 <col:14> 'const wchar_t *':'const wchar_t *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1ad8250 <col:14> 'const wchar_t *':'const wchar_t *' lvalue ParmVar 0x1ad7f08 '__last' 'const wchar_t *':'const wchar_t *'
| | |       `-ImplicitCastExpr 0x1ad82a8 <col:23> 'const wchar_t *':'const wchar_t *' <LValueToRValue>
| | |         `-DeclRefExpr 0x1ad8270 <col:23> 'const wchar_t *':'const wchar_t *' lvalue ParmVar 0x1ad7e90 '__first' 'const wchar_t *':'const wchar_t *'
| | |-FunctionDecl 0x1ae5b78 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)' inline
| | | |-TemplateArgument type 'const char16_t *'
| | | |-ParmVarDecl 0x1ae5960 <col:16, col:38> col:38 used __first 'const char16_t *':'const char16_t *'
| | | |-ParmVarDecl 0x1ae59d8 <col:47, col:69> col:69 used __last 'const char16_t *':'const char16_t *'
| | | |-ParmVarDecl 0x1ae5a40 <line:99:16> col:42 'std::random_access_iterator_tag'
| | | `-CompoundStmt 0x1ae5dc0 <line:100:5, line:105:5>
| | |   `-ReturnStmt 0x1ae5db0 <line:104:7, col:23>
| | |     `-BinaryOperator 0x1ae5d90 <col:14, col:23> 'long' '-'
| | |       |-ImplicitCastExpr 0x1ae5d60 <col:14> 'const char16_t *':'const char16_t *' <LValueToRValue>
| | |       | `-DeclRefExpr 0x1ae5d20 <col:14> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ae59d8 '__last' 'const char16_t *':'const char16_t *'
| | |       `-ImplicitCastExpr 0x1ae5d78 <col:23> 'const char16_t *':'const char16_t *' <LValueToRValue>
| | |         `-DeclRefExpr 0x1ae5d40 <col:23> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ae5960 '__first' 'const char16_t *':'const char16_t *'
| | `-FunctionDecl 0x1afde48 <line:96:5, line:105:5> line:98:5 used constexpr __distance 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)' inline
| |   |-TemplateArgument type 'const char32_t *'
| |   |-ParmVarDecl 0x1afdc30 <col:16, col:38> col:38 used __first 'const char32_t *':'const char32_t *'
| |   |-ParmVarDecl 0x1afdca8 <col:47, col:69> col:69 used __last 'const char32_t *':'const char32_t *'
| |   |-ParmVarDecl 0x1afdd10 <line:99:16> col:42 'std::random_access_iterator_tag'
| |   `-CompoundStmt 0x1afe090 <line:100:5, line:105:5>
| |     `-ReturnStmt 0x1afe080 <line:104:7, col:23>
| |       `-BinaryOperator 0x1afe060 <col:14, col:23> 'long' '-'
| |         |-ImplicitCastExpr 0x1afe030 <col:14> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |         | `-DeclRefExpr 0x1afdff0 <col:14> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1afdca8 '__last' 'const char32_t *':'const char32_t *'
| |         `-ImplicitCastExpr 0x1afe048 <col:23> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |           `-DeclRefExpr 0x1afe010 <col:23> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1afdc30 '__first' 'const char32_t *':'const char32_t *'
| |-FunctionTemplateDecl 0x13135d8 <line:109:3, line:113:27> line:111:5 __distance
| | |-TemplateTypeParmDecl 0x1313050 <line:109:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1313538 <line:110:5, line:113:27> line:111:5 __distance 'std::ptrdiff_t (std::_List_iterator<_Tp>, std::_List_iterator<_Tp>, std::input_iterator_tag)'
| |   |-ParmVarDecl 0x1313228 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:399:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:111:50> col:51 'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'
| |   |-ParmVarDecl 0x13133a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:399:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:112:43> col:44 'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'
| |   `-ParmVarDecl 0x1313418 <line:113:9> col:27 'std::input_iterator_tag'
| |-FunctionTemplateDecl 0x1313bb8 <line:115:3, line:119:27> line:117:5 __distance
| | |-TemplateTypeParmDecl 0x1313648 <line:115:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1313b18 <line:116:5, line:119:27> line:117:5 __distance 'std::ptrdiff_t (std::_List_const_iterator<_Tp>, std::_List_const_iterator<_Tp>, std::input_iterator_tag)'
| |   |-ParmVarDecl 0x1313808 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:399:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:117:56> col:57 'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'
| |   |-ParmVarDecl 0x1313980 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:399:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator_base_funcs.h:118:49> col:50 'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'
| |   `-ParmVarDecl 0x13139f8 <line:119:9> col:27 'std::input_iterator_tag'
| |-FunctionTemplateDecl 0x1314008 <line:135:3, line:143:5> line:138:5 distance
| | |-TemplateTypeParmDecl 0x1313c28 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| | |-FunctionDecl 0x1313f68 <line:136:5, line:143:5> line:138:5 distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)' inline
| | | |-ParmVarDecl 0x1313dd0 <col:14, col:29> col:29 referenced __first '_InputIterator'
| | | |-ParmVarDecl 0x1313e48 <col:38, col:53> col:53 referenced __last '_InputIterator'
| | | `-CompoundStmt 0x1314228 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1314218 <line:141:7, line:142:42>
| | |     `-CallExpr 0x13141e0 <line:141:14, line:142:42> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x1314090 <line:141:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__distance' 0x13126f8 0x1312f58 0x13135d8 0x1313bb8
| | |       |-DeclRefExpr 0x13140f0 <col:30> '_InputIterator' lvalue ParmVar 0x1313dd0 '__first' '_InputIterator'
| | |       |-DeclRefExpr 0x1314110 <col:39> '_InputIterator' lvalue ParmVar 0x1313e48 '__last' '_InputIterator'
| | |       `-CallExpr 0x13141b8 <line:142:9, col:41> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x1314150 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x130d8f8
| | |         `-DeclRefExpr 0x1314198 <col:34> '_InputIterator' lvalue ParmVar 0x1313dd0 '__first' '_InputIterator'
| | |-FunctionDecl 0x1a8c608 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<char *>::difference_type (char *, char *)' inline
| | | |-TemplateArgument type 'char *'
| | | |-ParmVarDecl 0x1a8c470 <col:14, col:29> col:29 used __first 'char *':'char *'
| | | |-ParmVarDecl 0x1a8c4e8 <col:38, col:53> col:53 used __last 'char *':'char *'
| | | `-CompoundStmt 0x1a99c48 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1a99c38 <line:141:7, line:142:42>
| | |     `-ExprWithCleanups 0x1a99c20 <line:141:14, line:142:42> 'typename iterator_traits<char *>::difference_type':'long'
| | |       `-CallExpr 0x1a99b70 <line:141:14, line:142:42> 'typename iterator_traits<char *>::difference_type':'long'
| | |         |-ImplicitCastExpr 0x1a99b58 <line:141:14, col:19> 'typename iterator_traits<char *>::difference_type (*)(char *, char *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1a99a08 <col:14, col:19> 'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)' lvalue Function 0x1a99898 '__distance' 'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| | |         |-ImplicitCastExpr 0x1a99ba8 <col:30> 'char *':'char *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1a985d0 <col:30> 'char *':'char *' lvalue ParmVar 0x1a8c470 '__first' 'char *':'char *'
| | |         |-ImplicitCastExpr 0x1a99bc0 <col:39> 'char *':'char *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1a985f0 <col:39> 'char *':'char *' lvalue ParmVar 0x1a8c4e8 '__last' 'char *':'char *'
| | |         `-CXXConstructExpr 0x1a99bf0 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0x1a99bd8 <col:9, col:41> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |             `-CallExpr 0x1a98f50 <col:9, col:41> 'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'
| | |               |-ImplicitCastExpr 0x1a98f38 <col:9, col:14> 'typename iterator_traits<char *>::iterator_category (*)(char *const &)' <FunctionToPointerDecay>
| | |               | `-DeclRefExpr 0x1a98a88 <col:9, col:14> 'typename iterator_traits<char *>::iterator_category (char *const &)' lvalue Function 0x1a98988 '__iterator_category' 'typename iterator_traits<char *>::iterator_category (char *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| | |               `-ImplicitCastExpr 0x1a98f78 <col:34> 'char *const':'char *const' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x1a98658 <col:34> 'char *':'char *' lvalue ParmVar 0x1a8c470 '__first' 'char *':'char *'
| | |-FunctionDecl 0x1aba4e8 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *)' inline
| | | |-TemplateArgument type 'wchar_t *'
| | | |-ParmVarDecl 0x1aba350 <col:14, col:29> col:29 used __first 'wchar_t *':'wchar_t *'
| | | |-ParmVarDecl 0x1aba3c8 <col:38, col:53> col:53 used __last 'wchar_t *':'wchar_t *'
| | | `-CompoundStmt 0x1ac3ab8 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1ac3aa8 <line:141:7, line:142:42>
| | |     `-ExprWithCleanups 0x1ac3a90 <line:141:14, line:142:42> 'typename iterator_traits<wchar_t *>::difference_type':'long'
| | |       `-CallExpr 0x1ac39e0 <line:141:14, line:142:42> 'typename iterator_traits<wchar_t *>::difference_type':'long'
| | |         |-ImplicitCastExpr 0x1ac39c8 <line:141:14, col:19> 'typename iterator_traits<wchar_t *>::difference_type (*)(wchar_t *, wchar_t *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ac3878 <col:14, col:19> 'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)' lvalue Function 0x1ac3708 '__distance' 'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| | |         |-ImplicitCastExpr 0x1ac3a18 <col:30> 'wchar_t *':'wchar_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ac2820 <col:30> 'wchar_t *':'wchar_t *' lvalue ParmVar 0x1aba350 '__first' 'wchar_t *':'wchar_t *'
| | |         |-ImplicitCastExpr 0x1ac3a30 <col:39> 'wchar_t *':'wchar_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ac2840 <col:39> 'wchar_t *':'wchar_t *' lvalue ParmVar 0x1aba3c8 '__last' 'wchar_t *':'wchar_t *'
| | |         `-CXXConstructExpr 0x1ac3a60 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0x1ac3a48 <col:9, col:41> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |             `-CallExpr 0x1ac2ec0 <col:9, col:41> 'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'
| | |               |-ImplicitCastExpr 0x1ac2ea8 <col:9, col:14> 'typename iterator_traits<wchar_t *>::iterator_category (*)(wchar_t *const &)' <FunctionToPointerDecay>
| | |               | `-DeclRefExpr 0x1ac2c58 <col:9, col:14> 'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)' lvalue Function 0x1ac2b58 '__iterator_category' 'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| | |               `-ImplicitCastExpr 0x1ac2ee8 <col:34> 'wchar_t *const':'wchar_t *const' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x1ac28a8 <col:34> 'wchar_t *':'wchar_t *' lvalue ParmVar 0x1aba350 '__first' 'wchar_t *':'wchar_t *'
| | |-FunctionDecl 0x1acedb8 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<const char *>::difference_type (const char *, const char *)' inline
| | | |-TemplateArgument type 'const char *'
| | | |-ParmVarDecl 0x1acec20 <col:14, col:29> col:29 used __first 'const char *':'const char *'
| | | |-ParmVarDecl 0x1acec98 <col:38, col:53> col:53 used __last 'const char *':'const char *'
| | | `-CompoundStmt 0x1ad3508 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1ad34f8 <line:141:7, line:142:42>
| | |     `-ExprWithCleanups 0x1ad34e0 <line:141:14, line:142:42> 'typename iterator_traits<const char *>::difference_type':'long'
| | |       `-CallExpr 0x1ad3430 <line:141:14, line:142:42> 'typename iterator_traits<const char *>::difference_type':'long'
| | |         |-ImplicitCastExpr 0x1ad3418 <line:141:14, col:19> 'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ad32c8 <col:14, col:19> 'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)' lvalue Function 0x1ad3158 '__distance' 'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| | |         |-ImplicitCastExpr 0x1ad3468 <col:30> 'const char *':'const char *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ad2270 <col:30> 'const char *':'const char *' lvalue ParmVar 0x1acec20 '__first' 'const char *':'const char *'
| | |         |-ImplicitCastExpr 0x1ad3480 <col:39> 'const char *':'const char *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ad2290 <col:39> 'const char *':'const char *' lvalue ParmVar 0x1acec98 '__last' 'const char *':'const char *'
| | |         `-CXXConstructExpr 0x1ad34b0 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0x1ad3498 <col:9, col:41> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |             `-CallExpr 0x1ad2910 <col:9, col:41> 'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'
| | |               |-ImplicitCastExpr 0x1ad28f8 <col:9, col:14> 'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)' <FunctionToPointerDecay>
| | |               | `-DeclRefExpr 0x1ad26a8 <col:9, col:14> 'typename iterator_traits<const char *>::iterator_category (const char *const &)' lvalue Function 0x1ad25a8 '__iterator_category' 'typename iterator_traits<const char *>::iterator_category (const char *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| | |               `-ImplicitCastExpr 0x1ad2938 <col:34> 'const char *const':'const char *const' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x1ad22f8 <col:34> 'const char *':'const char *' lvalue ParmVar 0x1acec20 '__first' 'const char *':'const char *'
| | |-FunctionDecl 0x1ad6238 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *)' inline
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-ParmVarDecl 0x1ad60a0 <col:14, col:29> col:29 used __first 'const wchar_t *':'const wchar_t *'
| | | |-ParmVarDecl 0x1ad6118 <col:38, col:53> col:53 used __last 'const wchar_t *':'const wchar_t *'
| | | `-CompoundStmt 0x1ad8458 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1ad8448 <line:141:7, line:142:42>
| | |     `-ExprWithCleanups 0x1ad8430 <line:141:14, line:142:42> 'typename iterator_traits<const wchar_t *>::difference_type':'long'
| | |       `-CallExpr 0x1ad8380 <line:141:14, line:142:42> 'typename iterator_traits<const wchar_t *>::difference_type':'long'
| | |         |-ImplicitCastExpr 0x1ad8368 <line:141:14, col:19> 'typename iterator_traits<const wchar_t *>::difference_type (*)(const wchar_t *, const wchar_t *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ad8218 <col:14, col:19> 'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)' lvalue Function 0x1ad80a8 '__distance' 'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| | |         |-ImplicitCastExpr 0x1ad83b8 <col:30> 'const wchar_t *':'const wchar_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ad71c0 <col:30> 'const wchar_t *':'const wchar_t *' lvalue ParmVar 0x1ad60a0 '__first' 'const wchar_t *':'const wchar_t *'
| | |         |-ImplicitCastExpr 0x1ad83d0 <col:39> 'const wchar_t *':'const wchar_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ad71e0 <col:39> 'const wchar_t *':'const wchar_t *' lvalue ParmVar 0x1ad6118 '__last' 'const wchar_t *':'const wchar_t *'
| | |         `-CXXConstructExpr 0x1ad8400 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0x1ad83e8 <col:9, col:41> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |             `-CallExpr 0x1ad7860 <col:9, col:41> 'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'
| | |               |-ImplicitCastExpr 0x1ad7848 <col:9, col:14> 'typename iterator_traits<const wchar_t *>::iterator_category (*)(const wchar_t *const &)' <FunctionToPointerDecay>
| | |               | `-DeclRefExpr 0x1ad75f8 <col:9, col:14> 'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)' lvalue Function 0x1ad74f8 '__iterator_category' 'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| | |               `-ImplicitCastExpr 0x1ad7888 <col:34> 'const wchar_t *const':'const wchar_t *const' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x1ad7248 <col:34> 'const wchar_t *':'const wchar_t *' lvalue ParmVar 0x1ad60a0 '__first' 'const wchar_t *':'const wchar_t *'
| | |-FunctionDecl 0x1ade3c8 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)' inline
| | | |-TemplateArgument type 'const char16_t *'
| | | |-ParmVarDecl 0x1ade230 <col:14, col:29> col:29 used __first 'const char16_t *':'const char16_t *'
| | | |-ParmVarDecl 0x1ade2a8 <col:38, col:53> col:53 used __last 'const char16_t *':'const char16_t *'
| | | `-CompoundStmt 0x1ae5f28 <line:139:5, line:143:5>
| | |   `-ReturnStmt 0x1ae5f18 <line:141:7, line:142:42>
| | |     `-ExprWithCleanups 0x1ae5f00 <line:141:14, line:142:42> 'typename iterator_traits<const char16_t *>::difference_type':'long'
| | |       `-CallExpr 0x1ae5e50 <line:141:14, line:142:42> 'typename iterator_traits<const char16_t *>::difference_type':'long'
| | |         |-ImplicitCastExpr 0x1ae5e38 <line:141:14, col:19> 'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ae5ce8 <col:14, col:19> 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)' lvalue Function 0x1ae5b78 '__distance' 'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| | |         |-ImplicitCastExpr 0x1ae5e88 <col:30> 'const char16_t *':'const char16_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ae4c90 <col:30> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ade230 '__first' 'const char16_t *':'const char16_t *'
| | |         |-ImplicitCastExpr 0x1ae5ea0 <col:39> 'const char16_t *':'const char16_t *' <LValueToRValue>
| | |         | `-DeclRefExpr 0x1ae4cb0 <col:39> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ade2a8 '__last' 'const char16_t *':'const char16_t *'
| | |         `-CXXConstructExpr 0x1ae5ed0 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0x1ae5eb8 <col:9, col:41> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| | |             `-CallExpr 0x1ae5330 <col:9, col:41> 'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'
| | |               |-ImplicitCastExpr 0x1ae5318 <col:9, col:14> 'typename iterator_traits<const char16_t *>::iterator_category (*)(const char16_t *const &)' <FunctionToPointerDecay>
| | |               | `-DeclRefExpr 0x1ae50c8 <col:9, col:14> 'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)' lvalue Function 0x1ae4fc8 '__iterator_category' 'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| | |               `-ImplicitCastExpr 0x1ae5358 <col:34> 'const char16_t *const':'const char16_t *const' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x1ae4d18 <col:34> 'const char16_t *':'const char16_t *' lvalue ParmVar 0x1ade230 '__first' 'const char16_t *':'const char16_t *'
| | `-FunctionDecl 0x1af61b8 <line:136:5, line:143:5> line:138:5 used distance 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)' inline
| |   |-TemplateArgument type 'const char32_t *'
| |   |-ParmVarDecl 0x1af6020 <col:14, col:29> col:29 used __first 'const char32_t *':'const char32_t *'
| |   |-ParmVarDecl 0x1af6098 <col:38, col:53> col:53 used __last 'const char32_t *':'const char32_t *'
| |   `-CompoundStmt 0x1afe1f8 <line:139:5, line:143:5>
| |     `-ReturnStmt 0x1afe1e8 <line:141:7, line:142:42>
| |       `-ExprWithCleanups 0x1afe1d0 <line:141:14, line:142:42> 'typename iterator_traits<const char32_t *>::difference_type':'long'
| |         `-CallExpr 0x1afe120 <line:141:14, line:142:42> 'typename iterator_traits<const char32_t *>::difference_type':'long'
| |           |-ImplicitCastExpr 0x1afe108 <line:141:14, col:19> 'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *, std::random_access_iterator_tag)' <FunctionToPointerDecay>
| |           | `-DeclRefExpr 0x1afdfb8 <col:14, col:19> 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)' lvalue Function 0x1afde48 '__distance' 'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)' (FunctionTemplate 0x1312f58 '__distance')
| |           |-ImplicitCastExpr 0x1afe158 <col:30> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |           | `-DeclRefExpr 0x1afc610 <col:30> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af6020 '__first' 'const char32_t *':'const char32_t *'
| |           |-ImplicitCastExpr 0x1afe170 <col:39> 'const char32_t *':'const char32_t *' <LValueToRValue>
| |           | `-DeclRefExpr 0x1afc630 <col:39> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af6098 '__last' 'const char32_t *':'const char32_t *'
| |           `-CXXConstructExpr 0x1afe1a0 <line:142:9, col:41> 'std::random_access_iterator_tag' 'void (std::random_access_iterator_tag &&) noexcept' elidable
| |             `-MaterializeTemporaryExpr 0x1afe188 <col:9, col:41> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag' xvalue
| |               `-CallExpr 0x1afccb0 <col:9, col:41> 'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'
| |                 |-ImplicitCastExpr 0x1afcc98 <col:9, col:14> 'typename iterator_traits<const char32_t *>::iterator_category (*)(const char32_t *const &)' <FunctionToPointerDecay>
| |                 | `-DeclRefExpr 0x1afca48 <col:9, col:14> 'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)' lvalue Function 0x1afc948 '__iterator_category' 'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)' (FunctionTemplate 0x130d8f8 '__iterator_category')
| |                 `-ImplicitCastExpr 0x1afccd8 <col:34> 'const char32_t *const':'const char32_t *const' lvalue <NoOp>
| |                   `-DeclRefExpr 0x1afc698 <col:34> 'const char32_t *':'const char32_t *' lvalue ParmVar 0x1af6020 '__first' 'const char32_t *':'const char32_t *'
| |-FunctionTemplateDecl 0x1314698 <line:145:3, line:154:5> line:147:5 __advance
| | |-TemplateTypeParmDecl 0x1314240 <line:145:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| | |-TemplateTypeParmDecl 0x13142b8 <col:37, col:46> col:46 referenced typename depth 0 index 1 _Distance
| | `-FunctionDecl 0x13145f8 <line:146:5, line:154:5> line:147:5 constexpr __advance 'void (_InputIterator &, _Distance, std::input_iterator_tag)' inline
| |   |-ParmVarDecl 0x13143e0 <col:15, col:31> col:31 referenced __i '_InputIterator &'
| |   |-ParmVarDecl 0x1314458 <col:36, col:46> col:46 referenced __n '_Distance'
| |   |-ParmVarDecl 0x13144d0 <col:51> col:69 'std::input_iterator_tag'
| |   `-CompoundStmt 0x13147b8 <line:148:5, line:154:5>
| |     |-NullStmt 0x1314708 <line:151:33>
| |     `-WhileStmt 0x13147a0 <line:152:7, line:153:4>
| |       |-UnaryOperator 0x1314750 <line:152:14, col:17> '<dependent type>' postfix '--' cannot overflow
| |       | `-DeclRefExpr 0x1314710 <col:14> '_Distance' lvalue ParmVar 0x1314458 '__n' '_Distance'
| |       `-UnaryOperator 0x1314788 <line:153:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |         `-DeclRefExpr 0x1314768 <col:4> '_InputIterator' lvalue ParmVar 0x13143e0 '__i' '_InputIterator &'
| |-FunctionTemplateDecl 0x1314be8 <line:156:3, line:170:5> line:158:5 __advance
| | |-TemplateTypeParmDecl 0x13147d8 <line:156:12, col:21> col:21 referenced typename depth 0 index 0 _BidirectionalIterator
| | |-TemplateTypeParmDecl 0x1314858 <col:45, col:54> col:54 referenced typename depth 0 index 1 _Distance
| | `-FunctionDecl 0x1314b48 <line:157:5, line:170:5> line:158:5 constexpr __advance 'void (_BidirectionalIterator &, _Distance, std::bidirectional_iterator_tag)' inline
| |   |-ParmVarDecl 0x1314938 <col:15, col:39> col:39 referenced __i '_BidirectionalIterator &'
| |   |-ParmVarDecl 0x13149b0 <col:44, col:54> col:54 referenced __n '_Distance'
| |   |-ParmVarDecl 0x1314a28 <line:159:8> col:34 'std::bidirectional_iterator_tag'
| |   `-CompoundStmt 0x1314e90 <line:160:5, line:170:5>
| |     `-IfStmt 0x1314e68 <line:164:7, line:169:6> has_else
| |       |-CXXOperatorCallExpr 0x1314ce0 <line:164:11, col:17> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x1314c98 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8
| |       | |-DeclRefExpr 0x1314c58 <col:11> '_Distance' lvalue ParmVar 0x13149b0 '__n' '_Distance'
| |       | `-IntegerLiteral 0x1314c78 <col:17> 'int' 0
| |       |-WhileStmt 0x1314da8 <line:165:9, line:166:6>
| |       | |-UnaryOperator 0x1314d58 <line:165:16, col:19> '<dependent type>' postfix '--' cannot overflow
| |       | | `-DeclRefExpr 0x1314d18 <col:16> '_Distance' lvalue ParmVar 0x13149b0 '__n' '_Distance'
| |       | `-UnaryOperator 0x1314d90 <line:166:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |       |   `-DeclRefExpr 0x1314d70 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x1314938 '__i' '_BidirectionalIterator &'
| |       `-WhileStmt 0x1314e50 <line:168:9, line:169:6>
| |         |-UnaryOperator 0x1314e00 <line:168:16, col:19> '<dependent type>' postfix '++' cannot overflow
| |         | `-DeclRefExpr 0x1314dc0 <col:16> '_Distance' lvalue ParmVar 0x13149b0 '__n' '_Distance'
| |         `-UnaryOperator 0x1314e38 <line:169:4, col:6> '<dependent type>' prefix '--' cannot overflow
| |           `-DeclRefExpr 0x1314e18 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x1314938 '__i' '_BidirectionalIterator &'
| |-FunctionTemplateDecl 0x13152b8 <line:172:3, line:186:5> line:174:5 __advance
| | |-TemplateTypeParmDecl 0x1314ea8 <line:172:12, col:21> col:21 referenced typename depth 0 index 0 _RandomAccessIterator
| | |-TemplateTypeParmDecl 0x1314f28 <col:44, col:53> col:53 referenced typename depth 0 index 1 _Distance
| | `-FunctionDecl 0x1315218 <line:173:5, line:186:5> line:174:5 constexpr __advance 'void (_RandomAccessIterator &, _Distance, std::random_access_iterator_tag)' inline
| |   |-ParmVarDecl 0x1315008 <col:15, col:38> col:38 referenced __i '_RandomAccessIterator &'
| |   |-ParmVarDecl 0x1315080 <col:43, col:53> col:53 referenced __n '_Distance'
| |   |-ParmVarDecl 0x13150f8 <line:175:15> col:41 'std::random_access_iterator_tag'
| |   `-CompoundStmt 0x13158e8 <line:176:5, line:186:5>
| |     `-IfStmt 0x13158c0 <line:180:7, line:185:9> has_else
| |       |-BinaryOperator 0x1315630 <line:180:11, col:47> '<dependent type>' '&&'
| |       | |-CallExpr 0x1315540 <col:11, col:35> '<dependent type>'
| |       | | |-DeclRefExpr 0x1315500 <col:11> '<builtin fn type>' Function 0x13153e0 '__builtin_constant_p' 'int (...) noexcept'
| |       | | `-DeclRefExpr 0x1315520 <col:32> '_Distance' lvalue ParmVar 0x1315080 '__n' '_Distance'
| |       | `-CXXOperatorCallExpr 0x13155f8 <col:40, col:47> '<dependent type>'
| |       |   |-UnresolvedLookupExpr 0x13155a8 <col:44> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660
| |       |   |-DeclRefExpr 0x1315568 <col:40> '_Distance' lvalue ParmVar 0x1315080 '__n' '_Distance'
| |       |   `-IntegerLiteral 0x1315588 <col:47> 'int' 1
| |       |-UnaryOperator 0x1315670 <line:181:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |       | `-DeclRefExpr 0x1315650 <col:4> '_RandomAccessIterator' lvalue ParmVar 0x1315008 '__i' '_RandomAccessIterator &'
| |       `-IfStmt 0x1315898 <line:182:12, line:185:9> has_else
| |         |-BinaryOperator 0x13157d0 <line:182:16, col:53> '<dependent type>' '&&'
| |         | |-CallExpr 0x13156c8 <col:16, col:40> '<dependent type>'
| |         | | |-DeclRefExpr 0x1315688 <col:16> '<builtin fn type>' Function 0x13153e0 '__builtin_constant_p' 'int (...) noexcept'
| |         | | `-DeclRefExpr 0x13156a8 <col:37> '_Distance' lvalue ParmVar 0x1315080 '__n' '_Distance'
| |         | `-CXXOperatorCallExpr 0x1315798 <col:45, col:53> '<dependent type>'
| |         |   |-UnresolvedLookupExpr 0x1315748 <col:49> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660
| |         |   |-DeclRefExpr 0x13156f0 <col:45> '_Distance' lvalue ParmVar 0x1315080 '__n' '_Distance'
| |         |   `-UnaryOperator 0x1315730 <col:52, col:53> 'int' prefix '-'
| |         |     `-IntegerLiteral 0x1315710 <col:53> 'int' 1
| |         |-UnaryOperator 0x1315810 <line:183:2, col:4> '<dependent type>' prefix '--' cannot overflow
| |         | `-DeclRefExpr 0x13157f0 <col:4> '_RandomAccessIterator' lvalue ParmVar 0x1315008 '__i' '_RandomAccessIterator &'
| |         `-CompoundAssignOperator 0x1315868 <line:185:2, col:9> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |           |-DeclRefExpr 0x1315828 <col:2> '_RandomAccessIterator' lvalue ParmVar 0x1315008 '__i' '_RandomAccessIterator &'
| |           `-DeclRefExpr 0x1315848 <col:9> '_Distance' lvalue ParmVar 0x1315080 '__n' '_Distance'
| |-FunctionTemplateDecl 0x1315c88 <line:200:3, line:207:5> line:202:5 advance
| | |-TemplateTypeParmDecl 0x1315900 <line:200:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| | |-TemplateTypeParmDecl 0x1315978 <col:37, col:46> col:46 referenced typename depth 0 index 1 _Distance
| | `-FunctionDecl 0x1315be8 <line:201:5, line:207:5> line:202:5 advance 'void (_InputIterator &, _Distance)' inline
| |   |-ParmVarDecl 0x1315a58 <col:13, col:29> col:29 referenced __i '_InputIterator &'
| |   |-ParmVarDecl 0x1315ad0 <col:34, col:44> col:44 referenced __n '_Distance'
| |   `-CompoundStmt 0x1316040 <line:203:5, line:207:5>
| |     |-DeclStmt 0x1315e88 <line:205:7, col:74>
| |     | `-VarDecl 0x1315e00 <col:7, col:71> col:65 referenced __d 'typename iterator_traits<_InputIterator>::difference_type' cinit
| |     |   `-DeclRefExpr 0x1315e68 <col:71> '_Distance' lvalue ParmVar 0x1315ad0 '__n' '_Distance'
| |     `-CallExpr 0x1316008 <line:206:7, col:61> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x1315ec0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__advance' 0x1314698 0x1314be8 0x13152b8
| |       |-DeclRefExpr 0x1315f18 <col:22> '_InputIterator' lvalue ParmVar 0x1315a58 '__i' '_InputIterator &'
| |       |-DeclRefExpr 0x1315f38 <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x1315e00 '__d' 'typename iterator_traits<_InputIterator>::difference_type'
| |       `-CallExpr 0x1315fe0 <col:32, col:60> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1315f78 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x130d8f8
| |         `-DeclRefExpr 0x1315fc0 <col:57> '_InputIterator' lvalue ParmVar 0x1315a58 '__i' '_InputIterator &'
| |-FunctionTemplateDecl 0x13174a0 <line:211:3, line:220:5> line:213:5 next
| | |-TemplateTypeParmDecl 0x1316060 <line:211:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| | `-FunctionDecl 0x1317400 <line:212:5, line:220:5> line:213:5 next '_InputIterator (_InputIterator, typename iterator_traits<_InputIterator>::difference_type)' inline
| |   |-ParmVarDecl 0x1316108 <col:10, col:25> col:25 referenced __x '_InputIterator'
| |   |-ParmVarDecl 0x1316280 <col:30, line:214:58> col:52 referenced __n 'typename iterator_traits<_InputIterator>::difference_type' cinit
| |   | `-IntegerLiteral 0x13162e8 <col:58> 'int' 1
| |   `-CompoundStmt 0x1317610 <line:215:5, line:220:5>
| |     |-CallExpr 0x13175b0 <line:218:7, col:28> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x1317528 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x1315c88
| |     | |-DeclRefExpr 0x1317570 <col:20> '_InputIterator' lvalue ParmVar 0x1316108 '__x' '_InputIterator'
| |     | `-DeclRefExpr 0x1317590 <col:25> 'typename iterator_traits<_InputIterator>::difference_type' lvalue ParmVar 0x1316280 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
| |     `-ReturnStmt 0x1317600 <line:219:7, col:14>
| |       `-DeclRefExpr 0x13175e0 <col:14> '_InputIterator' lvalue ParmVar 0x1316108 '__x' '_InputIterator'
| `-FunctionTemplateDecl 0x13179e8 <line:222:3, line:232:5> line:224:5 prev
|   |-TemplateTypeParmDecl 0x1317630 <line:222:12, col:21> col:21 referenced typename depth 0 index 0 _BidirectionalIterator
|   `-FunctionDecl 0x1317948 <line:223:5, line:232:5> line:224:5 prev '_BidirectionalIterator (_BidirectionalIterator, typename iterator_traits<_BidirectionalIterator>::difference_type)' inline
|     |-ParmVarDecl 0x13176d8 <col:10, col:33> col:33 referenced __x '_BidirectionalIterator'
|     |-ParmVarDecl 0x1317850 <col:38, line:225:66> col:60 referenced __n 'typename iterator_traits<_BidirectionalIterator>::difference_type' cinit
|     | `-IntegerLiteral 0x13178b8 <col:66> 'int' 1
|     `-CompoundStmt 0x1317b70 <line:226:5, line:232:5>
|       |-CallExpr 0x1317b10 <line:230:7, col:29> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x1317a70 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x1315c88
|       | |-DeclRefExpr 0x1317ab8 <col:20> '_BidirectionalIterator' lvalue ParmVar 0x13176d8 '__x' '_BidirectionalIterator'
|       | `-UnaryOperator 0x1317af8 <col:25, col:26> '<dependent type>' prefix '-' cannot overflow
|       |   `-DeclRefExpr 0x1317ad8 <col:26> 'typename iterator_traits<_BidirectionalIterator>::difference_type' lvalue ParmVar 0x1317850 '__n' 'typename iterator_traits<_BidirectionalIterator>::difference_type'
|       `-ReturnStmt 0x1317b60 <line:231:7, col:14>
|         `-DeclRefExpr 0x1317b40 <col:14> '_BidirectionalIterator' lvalue ParmVar 0x13176d8 '__x' '_BidirectionalIterator'
|-LinkageSpecDecl 0x1315390 <line:180:11> col:11 implicit C
| `-FunctionDecl 0x13153e0 <col:11> col:11 implicit referenced __builtin_constant_p 'int (...) noexcept' extern
|   |-NoThrowAttr 0x1315480 <col:11> Implicit
|   `-ConstAttr 0x13154d8 <col:11> Implicit
|-NamespaceDecl 0x1317bb0 prev 0x130e0c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/ptr_traits.h:42:1, line:211:1> line:42:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1317c20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-CXXRecordDecl 0x1317c78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/ptr_traits.h:46:3, col:9> col:9 referenced class __undefined
| |-ClassTemplateDecl 0x1317e58 <line:49:3, line:51:33> line:50:12 __get_first_arg
| | |-TemplateTypeParmDecl 0x1317d30 <line:49:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x1317dc8 <line:50:5, line:51:33> line:50:12 struct __get_first_arg definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x13180b0 <col:5, col:12> col:12 implicit struct __get_first_arg
| |   `-TypeAliasDecl 0x1318150 <line:51:7, col:20> col:13 type 'std::__undefined'
| |     `-RecordType 0x1317d10 'std::__undefined'
| |       `-CXXRecord 0x1317c78 '__undefined'
| |-ClassTemplatePartialSpecializationDecl 0x13188a0 <line:53:3, line:56:25> line:55:12 struct __get_first_arg definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type '<type-parameter-0-1, type-parameter-0-2...>'
| | |-TemplateTemplateParmDecl 0x13182f0 <line:53:12, col:50> col:50 depth 0 index 0 _Template
| | | |-TemplateTypeParmDecl 0x13181c8 <col:21> col:29 typename depth 1 index 0
| | | `-TemplateTypeParmDecl 0x1318248 <col:31> col:42 typename depth 1 index 1 ...
| | |-TemplateTypeParmDecl 0x1318348 <col:61, col:70> col:70 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x13183c8 <line:54:12, col:24> col:24 referenced typename depth 0 index 2 ... _Types
| | |-CXXRecordDecl 0x1318b08 <line:55:5, col:12> col:12 implicit struct __get_first_arg
| | `-TypeAliasDecl 0x1318ba8 <line:56:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x13183a0 '_Tp' dependent depth 0 index 1
| |     `-TemplateTypeParm 0x1318348 '_Tp'
| |-TypeAliasTemplateDecl 0x1318e80 <line:58:3, line:59:62> col:5 __get_first_arg_t
| | |-TemplateTypeParmDecl 0x1318c20 <line:58:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x1318e20 <line:59:5, col:62> col:11 __get_first_arg_t 'typename __get_first_arg<_Tp>::type'
| |   `-DependentNameType 0x1318db0 'typename __get_first_arg<_Tp>::type' dependent
| |-ClassTemplateDecl 0x1319090 <line:62:3, line:64:7> line:63:12 __replace_first_arg
| | |-TemplateTypeParmDecl 0x1318ed8 <line:62:12, col:21> col:21 typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x1318f58 <col:26, col:35> col:35 typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x1319000 <line:63:5, line:64:7> line:63:12 struct __replace_first_arg definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   `-CXXRecordDecl 0x1319320 <col:5, col:12> col:12 implicit struct __replace_first_arg
| |-ClassTemplatePartialSpecializationDecl 0x131c538 <line:66:3, line:69:47> line:68:12 struct __replace_first_arg definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type '<type-parameter-0-2, type-parameter-0-3...>'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTemplateParmDecl 0x131c010 <line:66:12, col:50> col:50 depth 0 index 0 _Template
| | | |-TemplateTypeParmDecl 0x131bef0 <col:21> col:29 typename depth 1 index 0
| | | `-TemplateTypeParmDecl 0x131bf68 <col:31> col:42 typename depth 1 index 1 ...
| | |-TemplateTypeParmDecl 0x131c068 <col:61, col:70> col:70 referenced typename depth 0 index 1 _Up
| | |-TemplateTypeParmDecl 0x131c0e8 <line:67:12, col:21> col:21 referenced typename depth 0 index 2 _Tp
| | |-TemplateTypeParmDecl 0x131c168 <col:26, col:38> col:38 referenced typename depth 0 index 3 ... _Types
| | |-CXXRecordDecl 0x131c7f8 <line:68:5, col:12> col:12 implicit struct __replace_first_arg
| | `-TypeAliasDecl 0x131ca38 <line:69:7, col:44> col:13 type '_Template<_Up, _Types...>'
| |   `-TemplateSpecializationType 0x131c950 '_Template<_Up, _Types...>' dependent _Template
| |     |-TemplateArgument type '_Up'
| |     `-TemplateArgument type '_Types...'
| |-TypeAliasTemplateDecl 0x131cdd0 <line:71:3, line:72:75> col:5 __replace_first_arg_t
| | |-TemplateTypeParmDecl 0x131cab0 <line:71:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x131cb28 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-TypeAliasDecl 0x131cd70 <line:72:5, col:75> col:11 __replace_first_arg_t 'typename __replace_first_arg<_Tp, _Up>::type'
| |   `-DependentNameType 0x131cd00 'typename __replace_first_arg<_Tp, _Up>::type' dependent
| |-TypeAliasTemplateDecl 0x131d2b0 <line:74:3, line:76:70> line:75:5 __make_not_void
| | |-TemplateTypeParmDecl 0x131ce28 <line:74:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x131d250 <line:75:5, line:76:70> line:75:11 __make_not_void 'typename conditional<is_void<_Tp>::value, __undefined, _Tp>::type'
| |   `-DependentNameType 0x131d1e0 'typename conditional<is_void<_Tp>::value, __undefined, _Tp>::type' dependent
| |-ClassTemplateDecl 0x131d438 <line:82:3, line:121:5> line:83:12 pointer_traits
| | |-TemplateTypeParmDecl 0x131d308 <line:82:12, col:21> col:21 referenced typename depth 0 index 0 _Ptr
| | |-CXXRecordDecl 0x131d3a8 <line:83:5, line:121:5> line:83:12 struct pointer_traits definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x131d690 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-AccessSpecDecl 0x131d720 <line:85:5, col:12> col:5 private
| | | |-TypeAliasTemplateDecl 0x131d930 <line:86:7, line:87:39> col:2 __element_type
| | | | |-TemplateTypeParmDecl 0x131d748 <line:86:16, col:25> col:25 typename depth 1 index 0 _Tp
| | | | `-TypeAliasDecl 0x131d8d0 <line:87:2, col:39> col:8 __element_type 'typename _Tp::element_type'
| | | |   `-DependentNameType 0x131d860 'typename _Tp::element_type' dependent
| | | |-TypeAliasTemplateDecl 0x131db60 <line:89:7, line:90:42> col:2 __difference_type
| | | | |-TemplateTypeParmDecl 0x131d988 <line:89:16, col:25> col:25 typename depth 1 index 0 _Tp
| | | | `-TypeAliasDecl 0x131db00 <line:90:2, col:42> col:8 __difference_type 'typename _Tp::difference_type'
| | | |   `-DependentNameType 0x131da90 'typename _Tp::difference_type' dependent
| | | |-ClassTemplateDecl 0x131de08 <line:92:7, line:93:52> col:9 __rebind
| | | | |-TemplateTypeParmDecl 0x131dbb8 <line:92:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x131dc38 <col:30, col:39> col:39 referenced typename depth 1 index 1 _Up
| | | | |-TemplateTypeParmDecl 0x131dcc8 <col:44, col:55> col:53 typename depth 1 index 2
| | | | | `-TemplateArgument type 'void'
| | | | `-CXXRecordDecl 0x131dd78 <line:93:2, col:52> col:9 struct __rebind definition
| | | |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |   | |-MoveConstructor exists simple trivial needs_implicit
| | | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |   | |-MoveAssignment exists simple trivial needs_implicit
| | | |   | `-Destructor simple irrelevant trivial needs_implicit
| | | |   |-public '__replace_first_arg<_Tp, _Up>'
| | | |   `-CXXRecordDecl 0x131f2c0 <col:2, col:9> col:9 implicit struct __rebind
| | | |-ClassTemplatePartialSpecializationDecl 0x131f890 <line:95:7, line:97:53> line:96:9 struct __rebind definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-TemplateArgument type 'type-parameter-1-0'
| | | | |-TemplateArgument type 'type-parameter-1-1'
| | | | |-TemplateArgument type 'void'
| | | | |-TemplateTypeParmDecl 0x131f368 <line:95:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x131f3e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _Up
| | | | |-CXXRecordDecl 0x131fb38 <line:96:2, col:9> col:9 implicit struct __rebind
| | | | `-TypeAliasDecl 0x131fc70 <line:97:4, col:50> col:10 type 'typename _Tp::rebind<_Up>'
| | | |   `-DependentTemplateSpecializationType 0x131f570 'typename _Tp::rebind<_Up>' dependent
| | | |-AccessSpecDecl 0x131fce8 <line:99:5, col:11> col:5 public
| | | |-TypeAliasDecl 0x131fd20 <line:101:7, col:23> col:13 pointer '_Ptr'
| | | | `-TemplateTypeParmType 0x131d360 '_Ptr' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x131d308 '_Ptr'
| | | |-TypeAliasDecl 0x1320948 <line:104:7, line:105:65> line:104:13 referenced element_type '__detected_or_t<__get_first_arg_t<_Ptr>, __element_type, _Ptr>':'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type'
| | | | `-TemplateSpecializationType 0x1320810 '__detected_or_t<__get_first_arg_t<_Ptr>, __element_type, _Ptr>' sugar dependent alias __detected_or_t
| | | |   |-TemplateArgument type '__get_first_arg_t<_Ptr>':'typename __get_first_arg<type-parameter-0-0>::type'
| | | |   |-TemplateArgument template __element_type
| | | |   |-TemplateArgument type '_Ptr'
| | | |   |-DependentNameType 0x13207c0 'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type' dependent
| | | |   `-DependentNameType 0x13207c0 'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type' dependent
| | | |-TypeAliasDecl 0x13212f8 <line:108:7, line:109:54> line:108:13 difference_type '__detected_or_t<std::ptrdiff_t, __difference_type, _Ptr>':'typename __detected_or<long, __difference_type, type-parameter-0-0>::type'
| | | | `-TemplateSpecializationType 0x13211c0 '__detected_or_t<std::ptrdiff_t, __difference_type, _Ptr>' sugar dependent alias __detected_or_t
| | | |   |-TemplateArgument type 'std::ptrdiff_t':'long'
| | | |   |-TemplateArgument template __difference_type
| | | |   |-TemplateArgument type '_Ptr'
| | | |   |-DependentNameType 0x1321170 'typename __detected_or<long, __difference_type, type-parameter-0-0>::type' dependent
| | | |   `-DependentNameType 0x1321170 'typename __detected_or<long, __difference_type, type-parameter-0-0>::type' dependent
| | | |-TypeAliasTemplateDecl 0x1321670 <line:112:7, line:113:54> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1321358 <line:112:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| | | | `-TypeAliasDecl 0x1321610 <line:113:9, col:54> col:15 rebind 'typename __rebind<_Ptr, _Up>::type'
| | | |   `-DependentNameType 0x13215a0 'typename __rebind<_Ptr, _Up>::type' dependent
| | | |-CXXMethodDecl 0x1321d78 <line:115:7, line:117:39> line:116:7 pointer_to '_Ptr (__make_not_void<std::pointer_traits::element_type> &)' static
| | | | |-ParmVarDecl 0x1321c50 <col:18, col:49> col:49 referenced __e '__make_not_void<std::pointer_traits::element_type> &'
| | | | `-CompoundStmt 0x13221e0 <line:117:7, col:39>
| | | |   `-ReturnStmt 0x13221d0 <col:9, col:36>
| | | |     `-CallExpr 0x13221a8 <col:16, col:36> '<dependent type>'
| | | |       |-DependentScopeDeclRefExpr 0x1322150 <col:16, col:22> '<dependent type>' lvalue
| | | |       `-DeclRefExpr 0x1322188 <col:33> '__make_not_void<std::pointer_traits::element_type>':'typename conditional<is_void<typename __detector<typename __get_first_arg<type-parameter-0-0>::type, void, __element_type, type-parameter-0-0>::type>::value, __undefined, typename __detector<typename __get_first_arg<type-parameter-0-0>::type, void, __element_type, type-parameter-0-0>::type>::type' lvalue ParmVar 0x1321c50 '__e' '__make_not_void<std::pointer_traits::element_type> &'
| | | `-StaticAssertDecl 0x13220a8 <line:119:7, line:120:71> line:119:7
| | |   |-UnaryOperator 0x1321fb8 <col:21, col:58> '<dependent type>' prefix '!' cannot overflow
| | |   | `-DependentScopeDeclRefExpr 0x1321f80 <col:22, col:58> '<dependent type>' lvalue
| | |   `-StringLiteral 0x1322048 <line:120:4> 'const char [66]' lvalue "pointer type defines element_type or is like SomePointer<T, Args>"
| | |-ClassTemplateSpecializationDecl 0x1a81fa0 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char *'
| | | |-CXXRecordDecl 0x1a82260 prev 0x1a81fa0 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1a82300 <line:131:7, col:20> col:20 pointer 'char *'
| | | | `-PointerType 0x1a821b0 'char *'
| | | |   `-SubstTemplateTypeParmType 0x1a82180 'char' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a82368 <line:133:7, col:20> col:20 element_type 'char':'char'
| | | | `-SubstTemplateTypeParmType 0x1a82180 'char' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a823c0 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1a82558 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1a82418 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1a824f8 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1a824c0 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1a82470 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1a82418 '_Up'
| | | `-CXXMethodDecl 0x1a84050 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<char *>::pointer (__make_not_void<std::pointer_traits<char *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1a83f50 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<char *>::element_type> &'
| | |   `-CompoundStmt 0x1a84a88 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1a84a78 <col:9, col:34>
| | |       `-CallExpr 0x1a84a50 <col:16, col:34> 'char *'
| | |         |-ImplicitCastExpr 0x1a84a38 <col:16, col:21> 'char *(*)(char &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1a849d8 <col:16, col:21> 'char *(char &) noexcept' lvalue Function 0x1a84560 'addressof' 'char *(char &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1a84320 <col:31> '__make_not_void<std::pointer_traits<char *>::element_type>':'char' lvalue ParmVar 0x1a83f50 '__r' '__make_not_void<std::pointer_traits<char *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1a9aa20 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char *'
| | | |-CXXRecordDecl 0x1a9ace0 prev 0x1a9aa20 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1a9ad80 <line:131:7, col:20> col:20 pointer 'const char *'
| | | | `-PointerType 0x1a9ac30 'const char *'
| | | |   `-SubstTemplateTypeParmType 0x1a9ac00 'const char' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-QualType 0xffd1b1 'const char' const
| | | |       `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a9ade8 <line:133:7, col:20> col:20 element_type 'const char':'const char'
| | | | `-SubstTemplateTypeParmType 0x1a9ac00 'const char' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-QualType 0xffd1b1 'const char' const
| | | |     `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a9ae40 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1a9afd8 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1a9ae98 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1a9af78 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1a9af40 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1a9aef0 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1a9ae98 '_Up'
| | | `-CXXMethodDecl 0x1a9c870 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<const char *>::pointer (__make_not_void<std::pointer_traits<const char *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1a9c770 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<const char *>::element_type> &'
| | |   `-CompoundStmt 0x1a9cf28 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1a9cf18 <col:9, col:34>
| | |       `-CallExpr 0x1a9cef0 <col:16, col:34> 'const char *'
| | |         |-ImplicitCastExpr 0x1a9ced8 <col:16, col:21> 'const char *(*)(const char &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1a9ce78 <col:16, col:21> 'const char *(const char &) noexcept' lvalue Function 0x1a9cd40 'addressof' 'const char *(const char &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1a9cb80 <col:31> '__make_not_void<std::pointer_traits<const char *>::element_type>':'const char' lvalue ParmVar 0x1a9c770 '__r' '__make_not_void<std::pointer_traits<const char *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1ab5590 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t *'
| | | |-CXXRecordDecl 0x1ab5850 prev 0x1ab5590 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1ab58f0 <line:131:7, col:20> col:20 pointer 'wchar_t *'
| | | | `-PointerType 0x1ab57a0 'wchar_t *'
| | | |   `-SubstTemplateTypeParmType 0x1ab5770 'wchar_t' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ab5958 <line:133:7, col:20> col:20 element_type 'wchar_t':'wchar_t'
| | | | `-SubstTemplateTypeParmType 0x1ab5770 'wchar_t' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ab59b0 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1ab5b48 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1ab5a08 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1ab5ae8 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1ab5ab0 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1ab5a60 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1ab5a08 '_Up'
| | | `-CXXMethodDecl 0x1ab6b70 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<wchar_t *>::pointer (__make_not_void<std::pointer_traits<wchar_t *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1ab6a70 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<wchar_t *>::element_type> &'
| | |   `-CompoundStmt 0x1ab74a8 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1ab7498 <col:9, col:34>
| | |       `-CallExpr 0x1ab7470 <col:16, col:34> 'wchar_t *'
| | |         |-ImplicitCastExpr 0x1ab7458 <col:16, col:21> 'wchar_t *(*)(wchar_t &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ab73f8 <col:16, col:21> 'wchar_t *(wchar_t &) noexcept' lvalue Function 0x1ab7000 'addressof' 'wchar_t *(wchar_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1ab6e40 <col:31> '__make_not_void<std::pointer_traits<wchar_t *>::element_type>':'wchar_t' lvalue ParmVar 0x1ab6a70 '__r' '__make_not_void<std::pointer_traits<wchar_t *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1ac4860 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-CXXRecordDecl 0x1ac4b20 prev 0x1ac4860 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1ac4bc0 <line:131:7, col:20> col:20 pointer 'const wchar_t *'
| | | | `-PointerType 0x1ac4a70 'const wchar_t *'
| | | |   `-SubstTemplateTypeParmType 0x1ac4a40 'const wchar_t' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-QualType 0xffd6f1 'const wchar_t' const
| | | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ac4c28 <line:133:7, col:20> col:20 element_type 'const wchar_t':'const wchar_t'
| | | | `-SubstTemplateTypeParmType 0x1ac4a40 'const wchar_t' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-QualType 0xffd6f1 'const wchar_t' const
| | | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ac4c80 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1ac4e18 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1ac4cd8 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1ac4db8 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1ac4d80 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1ac4d30 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1ac4cd8 '_Up'
| | | `-CXXMethodDecl 0x1ac8490 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<const wchar_t *>::pointer (__make_not_void<std::pointer_traits<const wchar_t *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1ac8390 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<const wchar_t *>::element_type> &'
| | |   `-CompoundStmt 0x1ac8b48 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1ac8b38 <col:9, col:34>
| | |       `-CallExpr 0x1ac8b10 <col:16, col:34> 'const wchar_t *'
| | |         |-ImplicitCastExpr 0x1ac8af8 <col:16, col:21> 'const wchar_t *(*)(const wchar_t &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1ac8a98 <col:16, col:21> 'const wchar_t *(const wchar_t &) noexcept' lvalue Function 0x1ac8960 'addressof' 'const wchar_t *(const wchar_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1ac87a0 <col:31> '__make_not_void<std::pointer_traits<const wchar_t *>::element_type>':'const wchar_t' lvalue ParmVar 0x1ac8390 '__r' '__make_not_void<std::pointer_traits<const wchar_t *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1ad8e28 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t *'
| | | |-CXXRecordDecl 0x1ad90f0 prev 0x1ad8e28 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1ad9190 <line:131:7, col:20> col:20 pointer 'char16_t *'
| | | | `-PointerType 0x1ad9040 'char16_t *'
| | | |   `-SubstTemplateTypeParmType 0x1ad9010 'char16_t' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ad91f8 <line:133:7, col:20> col:20 element_type 'char16_t':'char16_t'
| | | | `-SubstTemplateTypeParmType 0x1ad9010 'char16_t' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ad9250 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1ad93e8 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1ad92a8 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1ad9388 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1ad9350 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1ad9300 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1ad92a8 '_Up'
| | | `-CXXMethodDecl 0x1ada430 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<char16_t *>::pointer (__make_not_void<std::pointer_traits<char16_t *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1ada330 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<char16_t *>::element_type> &'
| | |   `-CompoundStmt 0x1adad68 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1adad58 <col:9, col:34>
| | |       `-CallExpr 0x1adad30 <col:16, col:34> 'char16_t *'
| | |         |-ImplicitCastExpr 0x1adad18 <col:16, col:21> 'char16_t *(*)(char16_t &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1adacb8 <col:16, col:21> 'char16_t *(char16_t &) noexcept' lvalue Function 0x1ada8c0 'addressof' 'char16_t *(char16_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1ada700 <col:31> '__make_not_void<std::pointer_traits<char16_t *>::element_type>':'char16_t' lvalue ParmVar 0x1ada330 '__r' '__make_not_void<std::pointer_traits<char16_t *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1ae8330 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t *'
| | | |-CXXRecordDecl 0x1ae85f0 prev 0x1ae8330 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1ae8690 <line:131:7, col:20> col:20 pointer 'const char16_t *'
| | | | `-PointerType 0x1ae8540 'const char16_t *'
| | | |   `-SubstTemplateTypeParmType 0x1ae8510 'const char16_t' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-QualType 0xffd731 'const char16_t' const
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ae86f8 <line:133:7, col:20> col:20 element_type 'const char16_t':'const char16_t'
| | | | `-SubstTemplateTypeParmType 0x1ae8510 'const char16_t' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-QualType 0xffd731 'const char16_t' const
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ae8750 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1ae88e8 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1ae87a8 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1ae8888 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1ae8850 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1ae8800 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1ae87a8 '_Up'
| | | `-CXXMethodDecl 0x1aeb9d0 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<const char16_t *>::pointer (__make_not_void<std::pointer_traits<const char16_t *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1aeb8d0 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<const char16_t *>::element_type> &'
| | |   `-CompoundStmt 0x1aec088 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1aec078 <col:9, col:34>
| | |       `-CallExpr 0x1aec050 <col:16, col:34> 'const char16_t *'
| | |         |-ImplicitCastExpr 0x1aec038 <col:16, col:21> 'const char16_t *(*)(const char16_t &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1aebfd8 <col:16, col:21> 'const char16_t *(const char16_t &) noexcept' lvalue Function 0x1aebea0 'addressof' 'const char16_t *(const char16_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1aebce0 <col:31> '__make_not_void<std::pointer_traits<const char16_t *>::element_type>':'const char16_t' lvalue ParmVar 0x1aeb8d0 '__r' '__make_not_void<std::pointer_traits<const char16_t *>::element_type> &'
| | |-ClassTemplateSpecializationDecl 0x1aef368 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t *'
| | | |-CXXRecordDecl 0x1aef630 prev 0x1aef368 <col:5, col:12> col:12 implicit struct pointer_traits
| | | |-TypedefDecl 0x1aef6d0 <line:131:7, col:20> col:20 pointer 'char32_t *'
| | | | `-PointerType 0x1aef580 'char32_t *'
| | | |   `-SubstTemplateTypeParmType 0x1aef550 'char32_t' sugar
| | | |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |     `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1aef738 <line:133:7, col:20> col:20 element_type 'char32_t':'char32_t'
| | | | `-SubstTemplateTypeParmType 0x1aef550 'char32_t' sugar
| | | |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| | | |   `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1aef790 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |   |-Typedef 0x103b008 'ptrdiff_t'
| | | |   `-BuiltinType 0xffd230 'long'
| | | |-TypeAliasTemplateDecl 0x1aef928 <line:137:7, line:138:27> col:9 rebind
| | | | |-TemplateTypeParmDecl 0x1aef7e8 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| | | | `-TypeAliasDecl 0x1aef8c8 <line:138:9, col:27> col:15 rebind '_Up *'
| | | |   `-PointerType 0x1aef890 '_Up *' dependent
| | | |     `-TemplateTypeParmType 0x1aef840 '_Up' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x1aef7e8 '_Up'
| | | `-CXXMethodDecl 0x1af0950 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<char32_t *>::pointer (__make_not_void<std::pointer_traits<char32_t *>::element_type> &) noexcept' static
| | |   |-ParmVarDecl 0x1af0850 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<char32_t *>::element_type> &'
| | |   `-CompoundStmt 0x1af1288 <line:147:7, col:37>
| | |     `-ReturnStmt 0x1af1278 <col:9, col:34>
| | |       `-CallExpr 0x1af1250 <col:16, col:34> 'char32_t *'
| | |         |-ImplicitCastExpr 0x1af1238 <col:16, col:21> 'char32_t *(*)(char32_t &) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x1af11d8 <col:16, col:21> 'char32_t *(char32_t &) noexcept' lvalue Function 0x1af0de0 'addressof' 'char32_t *(char32_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| | |         `-DeclRefExpr 0x1af0c20 <col:31> '__make_not_void<std::pointer_traits<char32_t *>::element_type>':'char32_t' lvalue ParmVar 0x1af0850 '__r' '__make_not_void<std::pointer_traits<char32_t *>::element_type> &'
| | `-ClassTemplateSpecializationDecl 0x1b00600 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const char32_t *'
| |   |-CXXRecordDecl 0x1b008c0 prev 0x1b00600 <col:5, col:12> col:12 implicit struct pointer_traits
| |   |-TypedefDecl 0x1b00960 <line:131:7, col:20> col:20 pointer 'const char32_t *'
| |   | `-PointerType 0x1b00810 'const char32_t *'
| |   |   `-SubstTemplateTypeParmType 0x1b007e0 'const char32_t' sugar
| |   |     |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| |   |     | `-TemplateTypeParm 0x13221f8 '_Tp'
| |   |     `-QualType 0xffd751 'const char32_t' const
| |   |       `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1b009c8 <line:133:7, col:20> col:20 element_type 'const char32_t':'const char32_t'
| |   | `-SubstTemplateTypeParmType 0x1b007e0 'const char32_t' sugar
| |   |   |-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x13221f8 '_Tp'
| |   |   `-QualType 0xffd751 'const char32_t' const
| |   |     `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1b00a20 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| |   | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   |   |-Typedef 0x103b008 'ptrdiff_t'
| |   |   `-BuiltinType 0xffd230 'long'
| |   |-TypeAliasTemplateDecl 0x1b00bb8 <line:137:7, line:138:27> col:9 rebind
| |   | |-TemplateTypeParmDecl 0x1b00a78 <line:137:16, col:25> col:25 typename depth 0 index 0 _Up
| |   | `-TypeAliasDecl 0x1b00b58 <line:138:9, col:27> col:15 rebind '_Up *'
| |   |   `-PointerType 0x1b00b20 '_Up *' dependent
| |   |     `-TemplateTypeParmType 0x1b00ad0 '_Up' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x1b00a78 '_Up'
| |   `-CXXMethodDecl 0x1b02450 <line:145:7, line:147:37> line:146:7 used pointer_to 'std::pointer_traits<const char32_t *>::pointer (__make_not_void<std::pointer_traits<const char32_t *>::element_type> &) noexcept' static
| |     |-ParmVarDecl 0x1b02350 <col:18, col:49> col:49 used __r '__make_not_void<std::pointer_traits<const char32_t *>::element_type> &'
| |     `-CompoundStmt 0x1b02b08 <line:147:7, col:37>
| |       `-ReturnStmt 0x1b02af8 <col:9, col:34>
| |         `-CallExpr 0x1b02ad0 <col:16, col:34> 'const char32_t *'
| |           |-ImplicitCastExpr 0x1b02ab8 <col:16, col:21> 'const char32_t *(*)(const char32_t &) noexcept' <FunctionToPointerDecay>
| |           | `-DeclRefExpr 0x1b02a58 <col:16, col:21> 'const char32_t *(const char32_t &) noexcept' lvalue Function 0x1b02920 'addressof' 'const char32_t *(const char32_t &) noexcept' (FunctionTemplate 0x1277f10 'addressof')
| |           `-DeclRefExpr 0x1b02760 <col:31> '__make_not_void<std::pointer_traits<const char32_t *>::element_type>':'const char32_t' lvalue ParmVar 0x1b02350 '__r' '__make_not_void<std::pointer_traits<const char32_t *>::element_type> &'
| |-ClassTemplatePartialSpecializationDecl 0x13223a0 <line:127:3, line:148:5> line:128:12 struct pointer_traits definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x13221f8 <line:127:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x13225c8 <line:128:5, col:12> col:12 implicit struct pointer_traits
| | |-TypedefDecl 0x1322668 <line:131:7, col:20> col:20 referenced pointer '_Tp *'
| | | `-PointerType 0x13222a0 '_Tp *' dependent
| | |   `-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x13221f8 '_Tp'
| | |-TypedefDecl 0x13226d0 <line:133:7, col:20> col:20 referenced element_type '_Tp'
| | | `-TemplateTypeParmType 0x1322250 '_Tp' dependent depth 0 index 0
| | |   `-TemplateTypeParm 0x13221f8 '_Tp'
| | |-TypedefDecl 0x1322738 <line:135:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | | `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | |   |-Typedef 0x103b008 'ptrdiff_t'
| | |   `-BuiltinType 0xffd230 'long'
| | |-TypeAliasTemplateDecl 0x13228f8 <line:137:7, line:138:27> col:9 rebind
| | | |-TemplateTypeParmDecl 0x1322790 <line:137:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| | | `-TypeAliasDecl 0x1322898 <line:138:9, col:27> col:15 rebind '_Up *'
| | |   `-PointerType 0x1322860 '_Up *' dependent
| | |     `-TemplateTypeParmType 0x13227e0 '_Up' dependent depth 1 index 0
| | |       `-TemplateTypeParm 0x1322790 '_Up'
| | `-CXXMethodDecl 0x1322f30 <line:145:7, line:147:37> line:146:7 pointer_to 'std::pointer_traits<type-parameter-0-0 *>::pointer (__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &) noexcept' static
| |   |-ParmVarDecl 0x1322df0 <col:18, col:49> col:49 referenced __r '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &'
| |   `-CompoundStmt 0x13230d0 <line:147:7, col:37>
| |     `-ReturnStmt 0x13230c0 <col:9, col:34>
| |       `-CallExpr 0x1323098 <col:16, col:34> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1323028 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'addressof' 0x1277f10 0x1278348
| |         `-DeclRefExpr 0x1323078 <col:31> '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type>':'typename conditional<is_void<type-parameter-0-0>::value, __undefined, type-parameter-0-0>::type' lvalue ParmVar 0x1322df0 '__r' '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &'
| |-TypeAliasTemplateDecl 0x1323498 <line:151:3, line:152:76> col:5 __ptr_rebind
| | |-TemplateTypeParmDecl 0x13230e8 <line:151:12, col:21> col:21 referenced typename depth 0 index 0 _Ptr
| | |-TemplateTypeParmDecl 0x1323168 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp
| | `-TypeAliasDecl 0x1323438 <line:152:5, col:76> col:11 __ptr_rebind 'typename pointer_traits<_Ptr>::rebind<_Tp>'
| |   `-DependentTemplateSpecializationType 0x1323360 'typename pointer_traits<_Ptr>::rebind<_Tp>' dependent
| |-FunctionTemplateDecl 0x1323760 <line:154:3, line:160:5> line:156:5 __to_address
| | |-TemplateTypeParmDecl 0x13234f0 <line:154:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x13236c0 <line:155:5, line:160:5> line:156:5 constexpr __to_address '_Tp *(_Tp *) noexcept'
| |   |-ParmVarDecl 0x13235c8 <col:18, col:23> col:23 referenced __ptr '_Tp *'
| |   `-CompoundStmt 0x13239b8 <line:157:5, line:160:5>
| |     |-DeclStmt 0x1323970 <line:158:7, col:77>
| |     | `-StaticAssertDecl 0x1323930 <col:7, col:76> col:7
| |     |   |-UnaryOperator 0x13238e8 <col:21, col:45> '<dependent type>' prefix '!' cannot overflow
| |     |   | `-DependentScopeDeclRefExpr 0x13238b0 <col:22, col:45> '<dependent type>' lvalue
| |     |   `-StringLiteral 0x1323900 <col:52> 'const char [23]' lvalue "not a function pointer"
| |     `-ReturnStmt 0x13239a8 <line:159:7, col:14>
| |       `-DeclRefExpr 0x1323988 <col:14> '_Tp *' lvalue ParmVar 0x13235c8 '__ptr' '_Tp *'
| `-FunctionTemplateDecl 0x1323e00 <line:163:3, line:166:53> line:165:5 __to_address
|   |-TemplateTypeParmDecl 0x13239d8 <line:163:12, col:21> col:21 referenced typename depth 0 index 0 _Ptr
|   `-FunctionDecl 0x1323d60 <line:164:5, line:166:53> line:165:5 constexpr __to_address 'typename std::pointer_traits<_Ptr>::element_type *(const _Ptr &)'
|     |-ParmVarDecl 0x1323bf8 <col:18, col:30> col:30 referenced __ptr 'const _Ptr &'
|     `-CompoundStmt 0x1323f90 <line:166:5, col:53>
|       `-ReturnStmt 0x1323f80 <col:7, col:50>
|         `-CallExpr 0x1323f58 <col:14, col:50> '<dependent type>'
|           |-UnresolvedLookupExpr 0x1323e80 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__to_address' 0x1323760 0x1323e00
|           `-CallExpr 0x1323f38 <col:32, col:49> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x1323ef0 <col:32, col:46> '<dependent type>' lvalue .operator->
|               `-DeclRefExpr 0x1323ed0 <col:32> 'const _Ptr' lvalue ParmVar 0x1323bf8 '__ptr' 'const _Ptr &'
|-NamespaceDecl 0x1323fc8 prev 0x1317bb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:76:1, line:768:1> line:76:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1324038 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x13241b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:104:3, line:311:5> line:105:11 reverse_iterator
| | |-TemplateTypeParmDecl 0x1324090 <line:104:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-CXXRecordDecl 0x1324128 <line:105:5, line:311:5> line:105:11 class reverse_iterator definition
| | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided
| | | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| | | | |-MoveConstructor
| | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| | | | |-MoveAssignment
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference>'
| | | |-PointerAttr 0x1577048 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1324bf0 <col:5, col:11> col:11 implicit referenced class reverse_iterator
| | | |-AccessSpecDecl 0x1324c80 <line:112:5, col:14> col:5 protected
| | | |-FieldDecl 0x1324cb8 <line:113:7, col:17> col:17 referenced current '_Iterator'
| | | |-TypedefDecl 0x1324dc0 <line:115:7, col:43> col:43 referenced __traits_type 'iterator_traits<_Iterator>'
| | | | `-TemplateSpecializationType 0x1324d20 'iterator_traits<_Iterator>' dependent iterator_traits
| | | |   `-TemplateArgument type '_Iterator'
| | | |-AccessSpecDecl 0x1324e18 <line:117:5, col:11> col:5 public
| | | |-TypedefDecl 0x1324e50 <line:118:7, col:29> col:29 referenced iterator_type '_Iterator'
| | | | `-TemplateTypeParmType 0x13240e0 '_Iterator' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x1324090 '_Iterator'
| | | |-TypedefDecl 0x1324f80 <line:119:7, col:55> col:55 referenced difference_type 'typename __traits_type::difference_type'
| | | | `-DependentNameType 0x1324f00 'typename __traits_type::difference_type' dependent
| | | |-TypedefDecl 0x1325060 <line:120:7, col:48> col:48 referenced pointer 'typename __traits_type::pointer'
| | | | `-DependentNameType 0x1324ff0 'typename __traits_type::pointer' dependent
| | | |-TypedefDecl 0x1325140 <line:121:7, col:50> col:50 referenced reference 'typename __traits_type::reference'
| | | | `-DependentNameType 0x13250d0 'typename __traits_type::reference' dependent
| | | |-CXXConstructorDecl 0x1325200 <line:131:7, col:40> col:7 reverse_iterator<_Iterator> 'void ()'
| | | | |-CXXCtorInitializer Field 0x1324cb8 'current' '_Iterator'
| | | | | `-ParenListExpr 0x1327160 <col:35, col:36> 'NULL TYPE'
| | | | `-CompoundStmt 0x13271a8 <col:38, col:40>
| | | |-CXXConstructorDecl 0x13253a8 <line:136:7, line:137:60> col:7 reverse_iterator<_Iterator> 'void (std::reverse_iterator::iterator_type)'
| | | | |-ParmVarDecl 0x13252e0 <col:24, col:38> col:38 referenced __x 'std::reverse_iterator::iterator_type':'_Iterator'
| | | | |-CXXCtorInitializer Field 0x1324cb8 'current' '_Iterator'
| | | | | `-ParenListExpr 0x13271d8 <col:52, col:56> 'NULL TYPE'
| | | | |   `-DeclRefExpr 0x13271b8 <col:53> 'std::reverse_iterator::iterator_type':'_Iterator' lvalue ParmVar 0x13252e0 '__x' 'std::reverse_iterator::iterator_type':'_Iterator'
| | | | `-CompoundStmt 0x1327228 <col:58, col:60>
| | | |-CXXConstructorDecl 0x1325558 <line:143:7, line:144:32> line:143:7 reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iterator> &)'
| | | | |-ParmVarDecl 0x1325498 <col:24, col:48> col:48 referenced __x 'const reverse_iterator<_Iterator> &'
| | | | |-CXXCtorInitializer Field 0x1324cb8 'current' '_Iterator'
| | | | | `-ParenListExpr 0x13272a0 <line:144:16, col:28> 'NULL TYPE'
| | | | |   `-CXXDependentScopeMemberExpr 0x1327258 <col:17, col:21> '<dependent type>' lvalue .current
| | | | |     `-DeclRefExpr 0x1327238 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1325498 '__x' 'const reverse_iterator<_Iterator> &'
| | | | `-CompoundStmt 0x13272f0 <col:30, col:32>
| | | |-CXXMethodDecl 0x1325708 <line:147:7, col:68> col:25 operator= 'reverse_iterator<_Iterator> &(const reverse_iterator<_Iterator> &)' default
| | | | `-ParmVarDecl 0x1325618 <col:35, col:57> col:58 'const reverse_iterator<_Iterator> &'
| | | |-FunctionTemplateDecl 0x1325b40 <line:154:7, line:157:26> line:156:9 reverse_iterator<_Iterator>
| | | | |-TemplateTypeParmDecl 0x13257b0 <line:154:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1325a98 <line:156:9, line:157:26> line:156:9 reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iter> &)'
| | | |   |-ParmVarDecl 0x13259a0 <col:26, col:57> col:57 referenced __x 'const reverse_iterator<_Iter> &'
| | | |   |-CXXCtorInitializer Field 0x1324cb8 'current' '_Iterator'
| | | |   | `-ParenListExpr 0x1327388 <line:157:11, col:22> 'NULL TYPE'
| | | |   |   `-CallExpr 0x1327368 <col:12, col:21> '<dependent type>'
| | | |   |     `-CXXDependentScopeMemberExpr 0x1327320 <col:12, col:16> '<dependent type>' lvalue .base
| | | |   |       `-DeclRefExpr 0x1327300 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x13259a0 '__x' 'const reverse_iterator<_Iter> &'
| | | |   `-CompoundStmt 0x13273d8 <col:24, col:26>
| | | |-CXXMethodDecl 0x1325c18 <line:162:28, line:164:25> line:163:7 base 'std::reverse_iterator::iterator_type () const'
| | | | `-CompoundStmt 0x1327438 <line:164:7, col:25>
| | | |   `-ReturnStmt 0x1327428 <col:9, col:16>
| | | |     `-MemberExpr 0x13273f8 <col:16> 'const _Iterator' lvalue ->current 0x1324cb8
| | | |       `-CXXThisExpr 0x13273e8 <col:16> 'const reverse_iterator<_Iterator> *' implicit this
| | | |-CXXMethodDecl 0x1325d58 <line:176:28, line:181:7> line:177:7 operator* 'std::reverse_iterator::reference () const'
| | | | `-CompoundStmt 0x13275d8 <line:178:7, line:181:7>
| | | |   |-DeclStmt 0x1327508 <line:179:2, col:27>
| | | |   | `-VarDecl 0x1327460 <col:2, col:20> col:12 referenced __tmp '_Iterator' cinit
| | | |   |   `-MemberExpr 0x13274d8 <col:20> 'const _Iterator' lvalue ->current 0x1324cb8
| | | |   |     `-CXXThisExpr 0x13274c8 <col:20> 'const reverse_iterator<_Iterator> *' implicit this
| | | |   `-ReturnStmt 0x13275c8 <line:180:2, col:12>
| | | |     `-UnaryOperator 0x13275b0 <col:9, col:12> '<dependent type>' prefix '*' cannot overflow
| | | |       `-UnaryOperator 0x1327598 <col:10, col:12> '<dependent type>' prefix '--' cannot overflow
| | | |         `-DeclRefExpr 0x1327578 <col:12> '_Iterator' lvalue Var 0x1327460 '__tmp' '_Iterator'
| | | |-CXXMethodDecl 0x1325e98 <line:188:28, line:196:7> line:189:7 operator-> 'std::reverse_iterator::pointer () const'
| | | | `-CompoundStmt 0x13277a8 <line:190:7, line:196:7>
| | | |   |-DeclStmt 0x13276b0 <line:193:2, col:27>
| | | |   | `-VarDecl 0x1327608 <col:2, col:20> col:12 referenced __tmp '_Iterator' cinit
| | | |   |   `-MemberExpr 0x1327680 <col:20> 'const _Iterator' lvalue ->current 0x1324cb8
| | | |   |     `-CXXThisExpr 0x1327670 <col:20> 'const reverse_iterator<_Iterator> *' implicit this
| | | |   |-UnaryOperator 0x13276e8 <line:194:2, col:4> '<dependent type>' prefix '--' cannot overflow
| | | |   | `-DeclRefExpr 0x13276c8 <col:4> '_Iterator' lvalue Var 0x1327608 '__tmp' '_Iterator'
| | | |   `-ReturnStmt 0x1327798 <line:195:2, col:28>
| | | |     `-CallExpr 0x1327770 <col:9, col:28> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x1327700 <col:9> '<dependent type>' lvalue (no ADL) = '_S_to_pointer' 0x13270e8 0x1326e18
| | | |       `-DeclRefExpr 0x1327750 <col:23> '_Iterator' lvalue Var 0x1327608 '__tmp' '_Iterator'
| | | |-CXXMethodDecl 0x1325f88 <line:203:28, line:208:7> line:204:7 operator++ 'reverse_iterator<_Iterator> &()'
| | | | `-CompoundStmt 0x1327860 <line:205:7, line:208:7>
| | | |   |-UnaryOperator 0x1327810 <line:206:2, col:4> '<dependent type>' prefix '--' cannot overflow
| | | |   | `-MemberExpr 0x13277e0 <col:4> '_Iterator' lvalue ->current 0x1324cb8
| | | |   |   `-CXXThisExpr 0x13277d0 <col:4> 'reverse_iterator<_Iterator> *' implicit this
| | | |   `-ReturnStmt 0x1327850 <line:207:2, col:10>
| | | |     `-UnaryOperator 0x1327838 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x1327828 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x1326108 <line:215:28, line:221:7> line:216:7 operator++ 'reverse_iterator<_Iterator> (int)'
| | | | |-ParmVarDecl 0x1326040 <col:18> col:21 'int'
| | | | `-CompoundStmt 0x13279c8 <line:217:7, line:221:7>
| | | |   |-DeclStmt 0x1327920 <line:218:2, col:32>
| | | |   | `-VarDecl 0x1327890 <col:2, col:28> col:19 referenced __tmp 'reverse_iterator<_Iterator>' nrvo cinit
| | | |   |   `-UnaryOperator 0x1327908 <col:27, col:28> '<dependent type>' prefix '*' cannot overflow
| | | |   |     `-CXXThisExpr 0x13278f8 <col:28> 'reverse_iterator<_Iterator> *' this
| | | |   |-UnaryOperator 0x1327978 <line:219:2, col:4> '<dependent type>' prefix '--' cannot overflow
| | | |   | `-MemberExpr 0x1327948 <col:4> '_Iterator' lvalue ->current 0x1324cb8
| | | |   |   `-CXXThisExpr 0x1327938 <col:4> 'reverse_iterator<_Iterator> *' implicit this
| | | |   `-ReturnStmt 0x13279b0 <line:220:2, col:9>
| | | |     `-DeclRefExpr 0x1327990 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x1327890 '__tmp' 'reverse_iterator<_Iterator>'
| | | |-CXXMethodDecl 0x13261d0 <line:228:28, line:233:7> line:229:7 operator-- 'reverse_iterator<_Iterator> &()'
| | | | `-CompoundStmt 0x1327a80 <line:230:7, line:233:7>
| | | |   |-UnaryOperator 0x1327a30 <line:231:2, col:4> '<dependent type>' prefix '++' cannot overflow
| | | |   | `-MemberExpr 0x1327a00 <col:4> '_Iterator' lvalue ->current 0x1324cb8
| | | |   |   `-CXXThisExpr 0x13279f0 <col:4> 'reverse_iterator<_Iterator> *' implicit this
| | | |   `-ReturnStmt 0x1327a70 <line:232:2, col:10>
| | | |     `-UnaryOperator 0x1327a58 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x1327a48 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x1326318 <line:240:28, line:246:7> line:241:7 operator-- 'reverse_iterator<_Iterator> (int)'
| | | | |-ParmVarDecl 0x1326288 <col:18> col:21 'int'
| | | | `-CompoundStmt 0x1327be8 <line:242:7, line:246:7>
| | | |   |-DeclStmt 0x1327b40 <line:243:2, col:32>
| | | |   | `-VarDecl 0x1327ab0 <col:2, col:28> col:19 referenced __tmp 'reverse_iterator<_Iterator>' nrvo cinit
| | | |   |   `-UnaryOperator 0x1327b28 <col:27, col:28> '<dependent type>' prefix '*' cannot overflow
| | | |   |     `-CXXThisExpr 0x1327b18 <col:28> 'reverse_iterator<_Iterator> *' this
| | | |   |-UnaryOperator 0x1327b98 <line:244:2, col:4> '<dependent type>' prefix '++' cannot overflow
| | | |   | `-MemberExpr 0x1327b68 <col:4> '_Iterator' lvalue ->current 0x1324cb8
| | | |   |   `-CXXThisExpr 0x1327b58 <col:4> 'reverse_iterator<_Iterator> *' implicit this
| | | |   `-ReturnStmt 0x1327bd0 <line:245:2, col:9>
| | | |     `-DeclRefExpr 0x1327bb0 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x1327ab0 '__tmp' 'reverse_iterator<_Iterator>'
| | | |-CXXMethodDecl 0x13264e8 <line:253:28, line:255:49> line:254:7 operator+ 'reverse_iterator<_Iterator> (std::reverse_iterator::difference_type) const'
| | | | |-ParmVarDecl 0x13263f0 <col:17, col:33> col:33 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x1327cd8 <line:255:7, col:49>
| | | |   `-ReturnStmt 0x1327cc8 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x1327ca0 <col:16, col:46> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
| | | |       `-BinaryOperator 0x1327c80 <col:33, col:43> '<dependent type>' '-'
| | | |         |-MemberExpr 0x1327c30 <col:33> 'const _Iterator' lvalue ->current 0x1324cb8
| | | |         | `-CXXThisExpr 0x1327c20 <col:33> 'const reverse_iterator<_Iterator> *' implicit this
| | | |         `-DeclRefExpr 0x1327c60 <col:43> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x13263f0 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x1326698 <line:263:28, line:268:7> line:264:7 operator+= 'reverse_iterator<_Iterator> &(std::reverse_iterator::difference_type)'
| | | | |-ParmVarDecl 0x13265a0 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x1327db8 <line:265:7, line:268:7>
| | | |   |-CompoundAssignOperator 0x1327d50 <line:266:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x1327d00 <col:2> '_Iterator' lvalue ->current 0x1324cb8
| | | |   | | `-CXXThisExpr 0x1327cf0 <col:2> 'reverse_iterator<_Iterator> *' implicit this
| | | |   | `-DeclRefExpr 0x1327d30 <col:13> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x13265a0 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x1327da8 <line:267:2, col:10>
| | | |     `-UnaryOperator 0x1327d90 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x1327d80 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x13267e0 <line:275:28, line:277:49> line:276:7 operator- 'reverse_iterator<_Iterator> (std::reverse_iterator::difference_type) const'
| | | | |-ParmVarDecl 0x1326750 <col:17, col:33> col:33 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x1327ea0 <line:277:7, col:49>
| | | |   `-ReturnStmt 0x1327e90 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x1327e68 <col:16, col:46> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
| | | |       `-BinaryOperator 0x1327e48 <col:33, col:43> '<dependent type>' '+'
| | | |         |-MemberExpr 0x1327df8 <col:33> 'const _Iterator' lvalue ->current 0x1324cb8
| | | |         | `-CXXThisExpr 0x1327de8 <col:33> 'const reverse_iterator<_Iterator> *' implicit this
| | | |         `-DeclRefExpr 0x1327e28 <col:43> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1326750 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x1326928 <line:285:28, line:290:7> line:286:7 operator-= 'reverse_iterator<_Iterator> &(std::reverse_iterator::difference_type)'
| | | | |-ParmVarDecl 0x1326898 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x1327f80 <line:287:7, line:290:7>
| | | |   |-CompoundAssignOperator 0x1327f18 <line:288:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x1327ec8 <col:2> '_Iterator' lvalue ->current 0x1324cb8
| | | |   | | `-CXXThisExpr 0x1327eb8 <col:2> 'reverse_iterator<_Iterator> *' implicit this
| | | |   | `-DeclRefExpr 0x1327ef8 <col:13> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1326898 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x1327f70 <line:289:2, col:10>
| | | |     `-UnaryOperator 0x1327f58 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x1327f48 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x1326ad8 <line:297:28, line:299:32> line:298:7 operator[] 'std::reverse_iterator::reference (std::reverse_iterator::difference_type) const'
| | | | |-ParmVarDecl 0x13269e0 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x13280a8 <line:299:7, col:32>
| | | |   `-ReturnStmt 0x1328098 <col:9, col:29>
| | | |     `-UnaryOperator 0x1328080 <col:16, col:29> '<dependent type>' prefix '*' cannot overflow
| | | |       `-ParenExpr 0x1328060 <col:17, col:29> '<dependent type>'
| | | |         `-BinaryOperator 0x1328040 <col:18, col:26> '<dependent type>' '+'
| | | |           |-UnaryOperator 0x1328008 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
| | | |           | `-CXXThisExpr 0x1327ff8 <col:19> 'const reverse_iterator<_Iterator> *' this
| | | |           `-DeclRefExpr 0x1328020 <col:26> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x13269e0 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
| | | |-AccessSpecDecl 0x1326b80 <line:301:5, col:12> col:5 private
| | | |-FunctionTemplateDecl 0x1326e18 <line:302:7, line:305:23> line:304:2 _S_to_pointer
| | | | |-TemplateTypeParmDecl 0x1326ba8 <line:302:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | | `-CXXMethodDecl 0x1326d78 <line:303:2, line:305:23> line:304:2 _S_to_pointer '_Tp *(_Tp *)' static
| | | |   |-ParmVarDecl 0x1326c88 <col:16, col:21> col:21 referenced __p '_Tp *'
| | | |   `-CompoundStmt 0x13280f0 <line:305:9, col:23>
| | | |     `-ReturnStmt 0x13280e0 <col:11, col:18>
| | | |       `-DeclRefExpr 0x13280c0 <col:18> '_Tp *' lvalue ParmVar 0x1326c88 '__p' '_Tp *'
| | | `-FunctionTemplateDecl 0x13270e8 <line:307:7, line:310:36> line:309:2 _S_to_pointer
| | |   |-TemplateTypeParmDecl 0x1326e78 <line:307:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | |   `-CXXMethodDecl 0x1327048 <line:308:2, line:310:36> line:309:2 _S_to_pointer 'std::reverse_iterator::pointer (_Tp)' static
| | |     |-ParmVarDecl 0x1326f50 <col:16, col:20> col:20 referenced __t '_Tp'
| | |     `-CompoundStmt 0x13281a0 <line:310:9, col:36>
| | |       `-ReturnStmt 0x1328190 <col:11, col:33>
| | |         `-CallExpr 0x1328170 <col:18, col:33> '<dependent type>'
| | |           `-CXXDependentScopeMemberExpr 0x1328128 <col:18, col:30> '<dependent type>' lvalue .operator->
| | |             `-DeclRefExpr 0x1328108 <col:18> '_Tp' lvalue ParmVar 0x1326f50 '__t' '_Tp'
| | |-ClassTemplateSpecializationDecl 0x1686790 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >'
| | |-ClassTemplateSpecializationDecl 0x16869d0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >'
| | |-ClassTemplateSpecializationDecl 0x16caac0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >'
| | |-ClassTemplateSpecializationDecl 0x16cad00 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >'
| | |-ClassTemplateSpecializationDecl 0x172e9b0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| | |-ClassTemplateSpecializationDecl 0x172ebf0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >'
| | |-ClassTemplateSpecializationDecl 0x175eeb0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| | | `-TemplateArgument type '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| | `-ClassTemplateSpecializationDecl 0x175f0f0 <line:104:3, line:311:5> line:105:11 class reverse_iterator
| |   `-TemplateArgument type '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >'
| |-FunctionTemplateDecl 0x1328678 <line:323:3, line:327:40> line:325:5 operator==
| | |-TemplateTypeParmDecl 0x13281b8 <line:323:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x13285d8 <line:324:5, line:327:40> line:325:5 operator== 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1328370 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x13284c0 <line:326:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1328890 <line:327:5, col:40>
| |     `-ReturnStmt 0x1328880 <col:7, col:37>
| |       `-CXXOperatorCallExpr 0x1328848 <col:14, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13287f0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1328678 0x10f8598 0x1300660
| |         |-CallExpr 0x1328748 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x1328700 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x13286e0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1328370 '__x' 'const reverse_iterator<_Iterator> &'
| |         `-CallExpr 0x13287d0 <col:28, col:37> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x1328788 <col:28, col:32> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x1328768 <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x13284c0 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x1328cf8 <line:329:3, line:333:39> line:331:5 operator<
| | |-TemplateTypeParmDecl 0x13288a8 <line:329:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1328c58 <line:330:5, line:333:39> line:331:5 operator< 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1328a30 <col:15, col:50> col:50 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1328b80 <line:332:8, col:43> col:43 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1328f08 <line:333:5, col:39>
| |     `-ReturnStmt 0x1328ef8 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x1328ec0 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1328e70 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1328cf8 0x1300f28
| |         |-CallExpr 0x1328dc8 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x1328d80 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x1328d60 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1328b80 '__y' 'const reverse_iterator<_Iterator> &'
| |         `-CallExpr 0x1328e50 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x1328e08 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x1328de8 <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1328a30 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x13297b8 <line:335:3, line:339:29> line:337:5 operator!=
| | |-TemplateTypeParmDecl 0x1329370 <line:335:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1329718 <line:336:5, line:339:29> line:337:5 operator!= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x13294f0 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1329640 <line:338:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1329938 <line:339:5, col:29>
| |     `-ReturnStmt 0x1329928 <col:7, col:26>
| |       `-UnaryOperator 0x1329910 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x13298f0 <col:15, col:26> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x13298b8 <col:16, col:23> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1329860 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1328678 0x10f8598 0x1300660
| |             |-DeclRefExpr 0x1329820 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x13294f0 '__x' 'const reverse_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x1329840 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1329640 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x1329d98 <line:341:3, line:345:25> line:343:5 operator>
| | |-TemplateTypeParmDecl 0x1329950 <line:341:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1329cf8 <line:342:5, line:345:25> line:343:5 operator> 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1329ad0 <col:15, col:50> col:50 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1329c20 <line:344:8, col:43> col:43 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1329ed8 <line:345:5, col:25>
| |     `-ReturnStmt 0x1329ec8 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x1329e90 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1329e40 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1328cf8 0x1300f28
| |         |-DeclRefExpr 0x1329e00 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1329c20 '__y' 'const reverse_iterator<_Iterator> &'
| |         `-DeclRefExpr 0x1329e20 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x1329ad0 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x132a338 <line:347:3, line:351:28> line:349:5 operator<=
| | |-TemplateTypeParmDecl 0x1329ef0 <line:347:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x132a298 <line:348:5, line:351:28> line:349:5 operator<= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x132a070 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x132a1c0 <line:350:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x132a4b0 <line:351:5, col:28>
| |     `-ReturnStmt 0x132a4a0 <col:7, col:25>
| |       `-UnaryOperator 0x132a488 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x132a468 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x132a430 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x132a3e0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1328cf8 0x1300f28
| |             |-DeclRefExpr 0x132a3a0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x132a1c0 '__y' 'const reverse_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x132a3c0 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x132a070 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x132a918 <line:353:3, line:357:28> line:355:5 operator>=
| | |-TemplateTypeParmDecl 0x132a4c8 <line:353:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x132a878 <line:354:5, line:357:28> line:355:5 operator>= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x132a650 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x132a7a0 <line:356:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x132aa90 <line:357:5, col:28>
| |     `-ReturnStmt 0x132aa80 <col:7, col:25>
| |       `-UnaryOperator 0x132aa68 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x132aa48 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x132aa10 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x132a9c0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1328cf8 0x1300f28
| |             |-DeclRefExpr 0x132a980 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x132a650 '__x' 'const reverse_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x132a9a0 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x132a7a0 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x132b028 <line:361:3, line:365:40> line:363:5 operator==
| | |-TemplateTypeParmDecl 0x132aaa8 <line:361:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132ab28 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132af88 <line:362:5, line:365:40> line:363:5 operator== 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132acb0 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132ae70 <line:364:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132b248 <line:365:5, col:40>
| |     `-ReturnStmt 0x132b238 <col:7, col:37>
| |       `-CXXOperatorCallExpr 0x132b200 <col:14, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x132b1a0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x132b028 0x1328678 0x10f8598 0x1300660
| |         |-CallExpr 0x132b0f8 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x132b0b0 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x132b090 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132acb0 '__x' 'const reverse_iterator<_IteratorL> &'
| |         `-CallExpr 0x132b180 <col:28, col:37> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x132b138 <col:28, col:32> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x132b118 <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132ae70 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x132b758 <line:367:3, line:371:39> line:369:5 operator<
| | |-TemplateTypeParmDecl 0x132b260 <line:367:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132b2d8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132b6b8 <line:368:5, line:371:39> line:369:5 operator< 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132b490 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132b5e0 <line:370:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132b970 <line:371:5, col:39>
| |     `-ReturnStmt 0x132b960 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x132b928 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x132b8d0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x132b758 0x1328cf8 0x1300f28
| |         |-CallExpr 0x132b828 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x132b7e0 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x132b7c0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132b5e0 '__y' 'const reverse_iterator<_IteratorR> &'
| |         `-CallExpr 0x132b8b0 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x132b868 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x132b848 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132b490 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x132be58 <line:373:3, line:377:29> line:375:5 operator!=
| | |-TemplateTypeParmDecl 0x132b988 <line:373:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132ba08 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132bdb8 <line:374:5, line:377:29> line:375:5 operator!= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132bb90 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132bce0 <line:376:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132bfe0 <line:377:5, col:29>
| |     `-ReturnStmt 0x132bfd0 <col:7, col:26>
| |       `-UnaryOperator 0x132bfb8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x132bf98 <col:15, col:26> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x132bf60 <col:16, col:23> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x132bf00 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x132b028 0x1328678 0x10f8598 0x1300660
| |             |-DeclRefExpr 0x132bec0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132bb90 '__x' 'const reverse_iterator<_IteratorL> &'
| |             `-DeclRefExpr 0x132bee0 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132bce0 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x132c4c8 <line:379:3, line:383:25> line:381:5 operator>
| | |-TemplateTypeParmDecl 0x132bff8 <line:379:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132c078 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132c428 <line:380:5, line:383:25> line:381:5 operator> 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132c200 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132c350 <line:382:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132c610 <line:383:5, col:25>
| |     `-ReturnStmt 0x132c600 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x132c5c8 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x132c570 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x132b758 0x1328cf8 0x1300f28
| |         |-DeclRefExpr 0x132c530 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132c350 '__y' 'const reverse_iterator<_IteratorR> &'
| |         `-DeclRefExpr 0x132c550 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132c200 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x132caf8 <line:385:3, line:389:28> line:387:5 operator<=
| | |-TemplateTypeParmDecl 0x132c628 <line:385:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132c6a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132ca58 <line:386:5, line:389:28> line:387:5 operator<= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132c830 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132c980 <line:388:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132cc78 <line:389:5, col:28>
| |     `-ReturnStmt 0x132cc68 <col:7, col:25>
| |       `-UnaryOperator 0x132cc50 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x132cc30 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x132cbf8 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x132cba0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x132b758 0x1328cf8 0x1300f28
| |             |-DeclRefExpr 0x132cb60 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132c980 '__y' 'const reverse_iterator<_IteratorR> &'
| |             `-DeclRefExpr 0x132cb80 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132c830 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x132d158 <line:391:3, line:395:28> line:393:5 operator>=
| | |-TemplateTypeParmDecl 0x132cc90 <line:391:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132cd08 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132d0b8 <line:392:5, line:395:28> line:393:5 operator>= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x132ce90 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132cfe0 <line:394:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132d2d8 <line:395:5, col:28>
| |     `-ReturnStmt 0x132d2c8 <col:7, col:25>
| |       `-UnaryOperator 0x132d2b0 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x132d290 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x132d258 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x132d200 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x132b758 0x1328cf8 0x1300f28
| |             |-DeclRefExpr 0x132d1c0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132ce90 '__x' 'const reverse_iterator<_IteratorL> &'
| |             `-DeclRefExpr 0x132d1e0 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132cfe0 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x132e9d8 <line:413:3, line:418:39> line:415:5 operator-
| | |-TemplateTypeParmDecl 0x132d2f0 <line:413:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x132e3a0 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x132e938 <line:414:5, line:418:39> line:415:5 operator- 'auto (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &) -> decltype(__y.base() - __x.base())' inline
| |   |-ParmVarDecl 0x132e520 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x132e670 <line:416:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x132ebe0 <line:418:5, col:39>
| |     `-ReturnStmt 0x132ebd0 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x132eb98 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x132eb50 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8
| |         |-CallExpr 0x132eaa8 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x132ea60 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x132ea40 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x132e670 '__y' 'const reverse_iterator<_IteratorR> &'
| |         `-CallExpr 0x132eb30 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x132eae8 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x132eac8 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x132e520 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x132f1a8 <line:421:3, line:425:61> line:423:5 operator+
| | |-TemplateTypeParmDecl 0x132ebf8 <line:421:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x132f108 <line:422:5, line:425:61> line:423:5 operator+ 'reverse_iterator<_Iterator> (typename reverse_iterator<_Iterator>::difference_type, const reverse_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x132ee80 <col:15, col:69> col:69 referenced __n 'typename reverse_iterator<_Iterator>::difference_type'
| |   |-ParmVarDecl 0x132efd0 <line:424:8, col:43> col:43 referenced __x 'const reverse_iterator<_Iterator> &'
| |   `-CompoundStmt 0x132f420 <line:425:5, col:61>
| |     `-ReturnStmt 0x132f410 <col:7, col:58>
| |       `-CXXUnresolvedConstructExpr 0x132f3e8 <col:14, col:58> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
| |         `-CXXOperatorCallExpr 0x132f3b0 <col:42, col:55> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x132f368 <col:53> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8
| |           |-CallExpr 0x132f328 <col:42, col:51> '<dependent type>'
| |           | `-CXXDependentScopeMemberExpr 0x132f2e0 <col:42, col:46> '<dependent type>' lvalue .base
| |           |   `-DeclRefExpr 0x132f2c0 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x132efd0 '__x' 'const reverse_iterator<_Iterator> &'
| |           `-DeclRefExpr 0x132f348 <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x132ee80 '__n' 'typename reverse_iterator<_Iterator>::difference_type'
| |-FunctionTemplateDecl 0x132f728 <line:429:3, line:432:48> line:431:5 __make_reverse_iterator
| | |-TemplateTypeParmDecl 0x132f438 <line:429:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x132f688 <line:430:5, line:432:48> line:431:5 __make_reverse_iterator 'reverse_iterator<_Iterator> (_Iterator)' inline
| |   |-ParmVarDecl 0x132f570 <col:29, col:39> col:39 referenced __i '_Iterator'
| |   `-CompoundStmt 0x132f898 <line:432:5, col:48>
| |     `-ReturnStmt 0x132f888 <col:7, col:45>
| |       `-CXXUnresolvedConstructExpr 0x132f860 <col:14, col:45> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
| |         `-DeclRefExpr 0x132f840 <col:42> '_Iterator' lvalue ParmVar 0x132f570 '__i' '_Iterator'
| |-FunctionTemplateDecl 0x132fb68 <line:440:3, line:443:48> line:442:5 make_reverse_iterator
| | |-TemplateTypeParmDecl 0x132f8b0 <line:440:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x132fac8 <line:441:5, line:443:48> line:442:5 make_reverse_iterator 'reverse_iterator<_Iterator> (_Iterator)' inline
| |   |-ParmVarDecl 0x132f9e0 <col:27, col:37> col:37 referenced __i '_Iterator'
| |   `-CompoundStmt 0x132fcd8 <line:443:5, col:48>
| |     `-ReturnStmt 0x132fcc8 <col:7, col:45>
| |       `-CXXUnresolvedConstructExpr 0x132fca0 <col:14, col:45> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
| |         `-DeclRefExpr 0x132fc80 <col:42> '_Iterator' lvalue ParmVar 0x132f9e0 '__i' '_Iterator'
| |-FunctionTemplateDecl 0x13301b8 <line:448:3, line:452:66> line:450:5 __niter_base
| | |-TemplateTypeParmDecl 0x132fcf0 <line:448:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1330118 <line:449:5, line:452:66> line:450:5 __niter_base 'auto (reverse_iterator<_Iterator>) -> decltype(__make_reverse_iterator(__niter_base(__it.base())))'
| |   |-ParmVarDecl 0x132fe40 <col:18, col:46> col:46 referenced __it 'reverse_iterator<_Iterator>'
| |   `-CompoundStmt 0x13303b0 <line:452:5, col:66>
| |     `-ReturnStmt 0x1330380 <col:7, col:63>
| |       `-CallExpr 0x1330358 <col:14, col:63> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1330218 <col:14> '<overloaded function type>' lvalue (ADL) = '__make_reverse_iterator' 0x132f728
| |         `-CallExpr 0x1330330 <col:38, col:62> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1330260 <col:38> '<overloaded function type>' lvalue (ADL) = '__niter_base' 0x13301b8
| |           `-CallExpr 0x1330310 <col:51, col:61> '<dependent type>'
| |             `-CXXDependentScopeMemberExpr 0x13302c8 <col:51, col:56> '<dependent type>' lvalue .base
| |               `-DeclRefExpr 0x13302a8 <col:51> 'reverse_iterator<_Iterator>' lvalue ParmVar 0x132fe40 '__it' 'reverse_iterator<_Iterator>'
| |-ClassTemplatePartialSpecializationDecl 0x13305e0 parent 0x1285070 <line:454:3, line:457:7> line:455:12 struct __is_move_iterator definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_move_iterator<_Iterator>'
| | |-TemplateArgument type 'reverse_iterator<type-parameter-0-0>'
| | |-TemplateTypeParmDecl 0x13303c8 <line:454:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-CXXRecordDecl 0x1330900 <line:455:5, col:12> col:12 implicit struct __is_move_iterator
| |-FunctionTemplateDecl 0x1330e78 <line:459:3, line:463:66> line:461:5 __miter_base
| | |-TemplateTypeParmDecl 0x13309a8 <line:459:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1330dd8 <line:460:5, line:463:66> line:461:5 __miter_base 'auto (reverse_iterator<_Iterator>) -> decltype(__make_reverse_iterator(__miter_base(__it.base())))'
| |   |-ParmVarDecl 0x1330b00 <col:18, col:46> col:46 referenced __it 'reverse_iterator<_Iterator>'
| |   `-CompoundStmt 0x1331058 <line:463:5, col:66>
| |     `-ReturnStmt 0x1331048 <col:7, col:63>
| |       `-CallExpr 0x1331020 <col:14, col:63> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1330ed8 <col:14> '<overloaded function type>' lvalue (ADL) = '__make_reverse_iterator' 0x132f728
| |         `-CallExpr 0x1330ff8 <col:38, col:62> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1330f20 <col:38> '<overloaded function type>' lvalue (ADL) = '__miter_base' 0x1330e78 0x12af378
| |           `-CallExpr 0x1330fd8 <col:51, col:61> '<dependent type>'
| |             `-CXXDependentScopeMemberExpr 0x1330f90 <col:51, col:56> '<dependent type>' lvalue .base
| |               `-DeclRefExpr 0x1330f70 <col:51> 'reverse_iterator<_Iterator>' lvalue ParmVar 0x1330b00 '__it' 'reverse_iterator<_Iterator>'
| |-ClassTemplateDecl 0x1331198 <line:477:3, line:541:5> line:478:11 back_insert_iterator
| | |-TemplateTypeParmDecl 0x1331070 <line:477:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| | `-CXXRecordDecl 0x1331108 <line:478:5, line:541:5> line:478:11 class back_insert_iterator definition
| |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x1331ae8 <col:5, col:11> col:11 implicit referenced class back_insert_iterator
| |   |-AccessSpecDecl 0x1331b78 <line:481:5, col:14> col:5 protected
| |   |-FieldDecl 0x1331bd8 <line:482:7, col:19> col:19 referenced container '_Container *'
| |   |-AccessSpecDecl 0x1331c28 <line:484:5, col:11> col:5 public
| |   |-TypedefDecl 0x1331c60 <line:486:7, col:35> col:35 container_type '_Container'
| |   | `-TemplateTypeParmType 0x13310c0 '_Container' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x1331070 '_Container'
| |   |-CXXConstructorDecl 0x1331e28 <line:489:7, line:491:44> line:490:7 back_insert_iterator<_Container> 'void (_Container &)'
| |   | |-ParmVarDecl 0x1331cf8 <col:28, col:40> col:40 referenced __x '_Container &'
| |   | |-CXXCtorInitializer Field 0x1331bd8 'container' '_Container *'
| |   | | `-ParenListExpr 0x1332880 <line:491:18, col:40> 'NULL TYPE'
| |   | |   `-CallExpr 0x1332858 <col:19, col:39> '<dependent type>'
| |   | |     |-UnresolvedLookupExpr 0x13327f0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x112fdf0
| |   | |     `-DeclRefExpr 0x1332838 <col:36> '_Container' lvalue ParmVar 0x1331cf8 '__x' '_Container &'
| |   | `-CompoundStmt 0x13328d0 <col:42, col:44>
| |   |-CXXMethodDecl 0x1332108 <line:512:7, line:517:7> line:513:7 operator= 'back_insert_iterator<_Container> &(const typename _Container::value_type &)'
| |   | |-ParmVarDecl 0x1331fe0 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
| |   | `-CompoundStmt 0x13329e8 <line:514:7, line:517:7>
| |   |   |-CallExpr 0x1332988 <line:515:2, col:30> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x1332920 <col:2, col:13> '<dependent type>' lvalue ->push_back
| |   |   | | `-MemberExpr 0x13328f0 <col:2> '_Container *' lvalue ->container 0x1331bd8
| |   |   | |   `-CXXThisExpr 0x13328e0 <col:2> 'back_insert_iterator<_Container> *' implicit this
| |   |   | `-DeclRefExpr 0x1332968 <col:23> 'const typename _Container::value_type' lvalue ParmVar 0x1331fe0 '__value' 'const typename _Container::value_type &'
| |   |   `-ReturnStmt 0x13329d8 <line:516:2, col:10>
| |   |     `-UnaryOperator 0x13329c0 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x13329b0 <col:10> 'back_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x13323c0 <line:519:7, line:524:7> line:520:7 operator= 'back_insert_iterator<_Container> &(typename _Container::value_type &&)'
| |   | |-ParmVarDecl 0x1332270 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
| |   | `-CompoundStmt 0x1332ba0 <line:521:7, line:524:7>
| |   |   |-CallExpr 0x1332b40 <line:522:2, col:41> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x1332a48 <col:2, col:13> '<dependent type>' lvalue ->push_back
| |   |   | | `-MemberExpr 0x1332a18 <col:2> '_Container *' lvalue ->container 0x1331bd8
| |   |   | |   `-CXXThisExpr 0x1332a08 <col:2> 'back_insert_iterator<_Container> *' implicit this
| |   |   | `-CallExpr 0x1332b18 <col:23, col:40> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x1332ab0 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |   |   |   `-DeclRefExpr 0x1332af8 <col:33> 'typename _Container::value_type' lvalue ParmVar 0x1332270 '__value' 'typename _Container::value_type &&'
| |   |   `-ReturnStmt 0x1332b90 <line:523:2, col:10>
| |   |     `-UnaryOperator 0x1332b78 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1332b68 <col:10> 'back_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x13324b8 <line:528:7, line:530:23> line:529:7 operator* 'back_insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x1332bf8 <line:530:7, col:23>
| |   |   `-ReturnStmt 0x1332be8 <col:9, col:17>
| |   |     `-UnaryOperator 0x1332bd0 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1332bc0 <col:17> 'back_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1332578 <line:533:7, line:535:23> line:534:7 operator++ 'back_insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x1332c48 <line:535:7, col:23>
| |   |   `-ReturnStmt 0x1332c38 <col:9, col:17>
| |   |     `-UnaryOperator 0x1332c20 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1332c10 <col:17> 'back_insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x13326f8 <line:538:7, line:540:23> line:539:7 operator++ 'back_insert_iterator<_Container> (int)'
| |     |-ParmVarDecl 0x1332630 <col:18> col:21 'int'
| |     `-CompoundStmt 0x1332c98 <line:540:7, col:23>
| |       `-ReturnStmt 0x1332c88 <col:9, col:17>
| |         `-UnaryOperator 0x1332c70 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |           `-CXXThisExpr 0x1332c60 <col:17> 'back_insert_iterator<_Container> *' this
| |-FunctionTemplateDecl 0x1332fb8 <line:554:3, line:557:53> line:556:5 back_inserter
| | |-TemplateTypeParmDecl 0x1332cb0 <line:554:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| | `-FunctionDecl 0x1332f18 <line:555:5, line:557:53> line:556:5 back_inserter 'back_insert_iterator<_Container> (_Container &)' inline
| |   |-ParmVarDecl 0x1332e08 <col:19, col:31> col:31 referenced __x '_Container &'
| |   `-CompoundStmt 0x1333128 <line:557:5, col:53>
| |     `-ReturnStmt 0x1333118 <col:7, col:50>
| |       `-CXXUnresolvedConstructExpr 0x13330f0 <col:14, col:50> 'back_insert_iterator<_Container>' 'back_insert_iterator<_Container>'
| |         `-DeclRefExpr 0x13330d0 <col:47> '_Container' lvalue ParmVar 0x1332e08 '__x' '_Container &'
| |-ClassTemplateDecl 0x1333268 <line:569:3, line:632:5> line:570:11 front_insert_iterator
| | |-TemplateTypeParmDecl 0x1333140 <line:569:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| | `-CXXRecordDecl 0x13331d8 <line:570:5, line:632:5> line:570:11 class front_insert_iterator definition
| |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x1333670 <col:5, col:11> col:11 implicit referenced class front_insert_iterator
| |   |-AccessSpecDecl 0x1333700 <line:573:5, col:14> col:5 protected
| |   |-FieldDecl 0x1333768 <line:574:7, col:19> col:19 referenced container '_Container *'
| |   |-AccessSpecDecl 0x13337b8 <line:576:5, col:11> col:5 public
| |   |-TypedefDecl 0x13337f0 <line:578:7, col:35> col:35 container_type '_Container'
| |   | `-TemplateTypeParmType 0x1333190 '_Container' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x1333140 '_Container'
| |   |-CXXConstructorDecl 0x1333988 <line:581:7, line:582:44> line:581:16 front_insert_iterator<_Container> 'void (_Container &)'
| |   | |-ParmVarDecl 0x1333888 <col:38, col:50> col:50 referenced __x '_Container &'
| |   | |-CXXCtorInitializer Field 0x1333768 'container' '_Container *'
| |   | | `-ParenListExpr 0x1334308 <line:582:18, col:40> 'NULL TYPE'
| |   | |   `-CallExpr 0x13342e0 <col:19, col:39> '<dependent type>'
| |   | |     |-UnresolvedLookupExpr 0x1334278 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x112fdf0
| |   | |     `-DeclRefExpr 0x13342c0 <col:36> '_Container' lvalue ParmVar 0x1333888 '__x' '_Container &'
| |   | `-CompoundStmt 0x1334358 <col:42, col:44>
| |   |-CXXMethodDecl 0x1333c38 <line:603:7, line:608:7> line:604:7 operator= 'front_insert_iterator<_Container> &(const typename _Container::value_type &)'
| |   | |-ParmVarDecl 0x1333b10 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
| |   | `-CompoundStmt 0x13348a8 <line:605:7, line:608:7>
| |   |   |-CallExpr 0x1334848 <line:606:2, col:31> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x13347e0 <col:2, col:13> '<dependent type>' lvalue ->push_front
| |   |   | | `-MemberExpr 0x1334378 <col:2> '_Container *' lvalue ->container 0x1333768
| |   |   | |   `-CXXThisExpr 0x1334368 <col:2> 'front_insert_iterator<_Container> *' implicit this
| |   |   | `-DeclRefExpr 0x1334828 <col:24> 'const typename _Container::value_type' lvalue ParmVar 0x1333b10 '__value' 'const typename _Container::value_type &'
| |   |   `-ReturnStmt 0x1334898 <line:607:2, col:10>
| |   |     `-UnaryOperator 0x1334880 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1334870 <col:10> 'front_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1333e68 <line:610:7, line:615:7> line:611:7 operator= 'front_insert_iterator<_Container> &(typename _Container::value_type &&)'
| |   | |-ParmVarDecl 0x1333d70 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
| |   | `-CompoundStmt 0x1334a60 <line:612:7, line:615:7>
| |   |   |-CallExpr 0x1334a00 <line:613:2, col:42> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x1334908 <col:2, col:13> '<dependent type>' lvalue ->push_front
| |   |   | | `-MemberExpr 0x13348d8 <col:2> '_Container *' lvalue ->container 0x1333768
| |   |   | |   `-CXXThisExpr 0x13348c8 <col:2> 'front_insert_iterator<_Container> *' implicit this
| |   |   | `-CallExpr 0x13349d8 <col:24, col:41> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x1334970 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |   |   |   `-DeclRefExpr 0x13349b8 <col:34> 'typename _Container::value_type' lvalue ParmVar 0x1333d70 '__value' 'typename _Container::value_type &&'
| |   |   `-ReturnStmt 0x1334a50 <line:614:2, col:10>
| |   |     `-UnaryOperator 0x1334a38 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1334a28 <col:10> 'front_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1333f58 <line:619:7, line:621:23> line:620:7 operator* 'front_insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x1334ab8 <line:621:7, col:23>
| |   |   `-ReturnStmt 0x1334aa8 <col:9, col:17>
| |   |     `-UnaryOperator 0x1334a90 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1334a80 <col:17> 'front_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1334018 <line:624:7, line:626:23> line:625:7 operator++ 'front_insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x1334b08 <line:626:7, col:23>
| |   |   `-ReturnStmt 0x1334af8 <col:9, col:17>
| |   |     `-UnaryOperator 0x1334ae0 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1334ad0 <col:17> 'front_insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x1334198 <line:629:7, line:631:23> line:630:7 operator++ 'front_insert_iterator<_Container> (int)'
| |     |-ParmVarDecl 0x13340d0 <col:18> col:21 'int'
| |     `-CompoundStmt 0x1334b58 <line:631:7, col:23>
| |       `-ReturnStmt 0x1334b48 <col:9, col:17>
| |         `-UnaryOperator 0x1334b30 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |           `-CXXThisExpr 0x1334b20 <col:17> 'front_insert_iterator<_Container> *' this
| |-FunctionTemplateDecl 0x1334e78 <line:645:3, line:648:54> line:647:5 front_inserter
| | |-TemplateTypeParmDecl 0x1334b70 <line:645:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| | `-FunctionDecl 0x1334dd8 <line:646:5, line:648:54> line:647:5 front_inserter 'front_insert_iterator<_Container> (_Container &)' inline
| |   |-ParmVarDecl 0x1334cc8 <col:20, col:32> col:32 referenced __x '_Container &'
| |   `-CompoundStmt 0x1334fe8 <line:648:5, col:54>
| |     `-ReturnStmt 0x1334fd8 <col:7, col:51>
| |       `-CXXUnresolvedConstructExpr 0x1334fb0 <col:14, col:51> 'front_insert_iterator<_Container>' 'front_insert_iterator<_Container>'
| |         `-DeclRefExpr 0x1334f90 <col:48> '_Container' lvalue ParmVar 0x1334cc8 '__x' '_Container &'
| |-ClassTemplateDecl 0x1335128 <line:664:3, line:746:5> line:665:11 insert_iterator
| | |-TemplateTypeParmDecl 0x1335000 <line:664:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| | `-CXXRecordDecl 0x1335098 <line:665:5, line:746:5> line:665:11 class insert_iterator definition
| |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x1335530 <col:5, col:11> col:11 implicit referenced class insert_iterator
| |   |-AccessSpecDecl 0x13355c0 <line:668:5, col:14> col:5 protected
| |   |-FieldDecl 0x1335628 <line:669:7, col:19> col:19 referenced container '_Container *'
| |   |-FieldDecl 0x1335750 <line:670:7, col:37> col:37 referenced iter 'typename _Container::iterator'
| |   |-AccessSpecDecl 0x13357a0 <line:672:5, col:11> col:5 public
| |   |-TypedefDecl 0x13357d8 <line:674:7, col:35> col:35 container_type '_Container'
| |   | `-TemplateTypeParmType 0x1335050 '_Container' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x1335000 '_Container'
| |   |-CXXConstructorDecl 0x1335a78 <line:680:7, line:681:54> line:680:7 insert_iterator<_Container> 'void (_Container &, typename _Container::iterator)'
| |   | |-ParmVarDecl 0x1335868 <col:23, col:35> col:35 referenced __x '_Container &'
| |   | |-ParmVarDecl 0x1335928 <col:40, col:70> col:70 referenced __i 'typename _Container::iterator'
| |   | |-CXXCtorInitializer Field 0x1335628 'container' '_Container *'
| |   | | `-ParenListExpr 0x13363e8 <line:681:18, col:40> 'NULL TYPE'
| |   | |   `-CallExpr 0x13363c0 <col:19, col:39> '<dependent type>'
| |   | |     |-UnresolvedLookupExpr 0x1336358 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x112fdf0
| |   | |     `-DeclRefExpr 0x13363a0 <col:36> '_Container' lvalue ParmVar 0x1335868 '__x' '_Container &'
| |   | |-CXXCtorInitializer Field 0x1335750 'iter' 'typename _Container::iterator'
| |   | | `-ParenListExpr 0x1336450 <col:47, col:51> 'NULL TYPE'
| |   | |   `-DeclRefExpr 0x1336430 <col:48> 'typename _Container::iterator' lvalue ParmVar 0x1335928 '__i' 'typename _Container::iterator'
| |   | `-CompoundStmt 0x13364a8 <col:53, col:54>
| |   |-CXXMethodDecl 0x1335d18 <line:715:7, line:721:7> line:716:7 operator= 'insert_iterator<_Container> &(const typename _Container::value_type &)'
| |   | |-ParmVarDecl 0x1335bf0 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
| |   | `-CompoundStmt 0x13366c0 <line:717:7, line:721:7>
| |   |   |-BinaryOperator 0x1336610 <line:718:2, col:40> '<dependent type>' '='
| |   |   | |-MemberExpr 0x13364c8 <col:2> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   | | `-CXXThisExpr 0x13364b8 <col:2> 'insert_iterator<_Container> *' implicit this
| |   |   | `-CallExpr 0x13365e0 <col:9, col:40> '<dependent type>'
| |   |   |   |-CXXDependentScopeMemberExpr 0x1336538 <col:9, col:20> '<dependent type>' lvalue ->insert
| |   |   |   | `-MemberExpr 0x1336508 <col:9> '_Container *' lvalue ->container 0x1335628
| |   |   |   |   `-CXXThisExpr 0x13364f8 <col:9> 'insert_iterator<_Container> *' implicit this
| |   |   |   |-MemberExpr 0x1336590 <col:27> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   |   | `-CXXThisExpr 0x1336580 <col:27> 'insert_iterator<_Container> *' implicit this
| |   |   |   `-DeclRefExpr 0x13365c0 <col:33> 'const typename _Container::value_type' lvalue ParmVar 0x1335bf0 '__value' 'const typename _Container::value_type &'
| |   |   |-UnaryOperator 0x1336670 <line:719:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |   |   | `-MemberExpr 0x1336640 <col:4> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   |   `-CXXThisExpr 0x1336630 <col:4> 'insert_iterator<_Container> *' implicit this
| |   |   `-ReturnStmt 0x13366b0 <line:720:2, col:10>
| |   |     `-UnaryOperator 0x1336698 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1336688 <col:10> 'insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1335f48 <line:723:7, line:729:7> line:724:7 operator= 'insert_iterator<_Container> &(typename _Container::value_type &&)'
| |   | |-ParmVarDecl 0x1335e50 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
| |   | `-CompoundStmt 0x1337730 <line:725:7, line:729:7>
| |   |   |-BinaryOperator 0x1337680 <line:726:2, col:51> '<dependent type>' '='
| |   |   | |-MemberExpr 0x13366f8 <col:2> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   | | `-CXXThisExpr 0x13366e8 <col:2> 'insert_iterator<_Container> *' implicit this
| |   |   | `-CallExpr 0x1337650 <col:9, col:51> '<dependent type>'
| |   |   |   |-CXXDependentScopeMemberExpr 0x1336768 <col:9, col:20> '<dependent type>' lvalue ->insert
| |   |   |   | `-MemberExpr 0x1336738 <col:9> '_Container *' lvalue ->container 0x1335628
| |   |   |   |   `-CXXThisExpr 0x1336728 <col:9> 'insert_iterator<_Container> *' implicit this
| |   |   |   |-MemberExpr 0x1337570 <col:27> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   |   | `-CXXThisExpr 0x13367b0 <col:27> 'insert_iterator<_Container> *' implicit this
| |   |   |   `-CallExpr 0x1337628 <col:33, col:50> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x13375c0 <col:33, col:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |   |   |     `-DeclRefExpr 0x1337608 <col:43> 'typename _Container::value_type' lvalue ParmVar 0x1335e50 '__value' 'typename _Container::value_type &&'
| |   |   |-UnaryOperator 0x13376e0 <line:727:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |   |   | `-MemberExpr 0x13376b0 <col:4> 'typename _Container::iterator' lvalue ->iter 0x1335750
| |   |   |   `-CXXThisExpr 0x13376a0 <col:4> 'insert_iterator<_Container> *' implicit this
| |   |   `-ReturnStmt 0x1337720 <line:728:2, col:10>
| |   |     `-UnaryOperator 0x1337708 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x13376f8 <col:10> 'insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x1336038 <line:733:7, line:735:23> line:734:7 operator* 'insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x1337790 <line:735:7, col:23>
| |   |   `-ReturnStmt 0x1337780 <col:9, col:17>
| |   |     `-UnaryOperator 0x1337768 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1337758 <col:17> 'insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x13360f8 <line:738:7, line:740:23> line:739:7 operator++ 'insert_iterator<_Container> &()'
| |   | `-CompoundStmt 0x13377e0 <line:740:7, col:23>
| |   |   `-ReturnStmt 0x13377d0 <col:9, col:17>
| |   |     `-UnaryOperator 0x13377b8 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x13377a8 <col:17> 'insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x1336278 <line:743:7, line:745:23> line:744:7 operator++ 'insert_iterator<_Container> &(int)'
| |     |-ParmVarDecl 0x13361b0 <col:18> col:21 'int'
| |     `-CompoundStmt 0x1337830 <line:745:7, col:23>
| |       `-ReturnStmt 0x1337820 <col:9, col:17>
| |         `-UnaryOperator 0x1337808 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| |           `-CXXThisExpr 0x13377f8 <col:17> 'insert_iterator<_Container> *' this
| `-FunctionTemplateDecl 0x1337c88 <line:760:3, line:763:53> line:762:5 inserter
|   |-TemplateTypeParmDecl 0x1337848 <line:760:12, col:21> col:21 referenced typename depth 0 index 0 _Container
|   `-FunctionDecl 0x1337be8 <line:761:5, line:763:53> line:762:5 inserter 'insert_iterator<_Container> (_Container &, typename _Container::iterator)' inline
|     |-ParmVarDecl 0x13379a8 <col:14, col:26> col:26 referenced __x '_Container &'
|     |-ParmVarDecl 0x1337ab0 <col:31, col:61> col:61 referenced __i 'typename _Container::iterator'
|     `-CompoundStmt 0x1337e20 <line:763:5, col:53>
|       `-ReturnStmt 0x1337e10 <col:7, col:50>
|         `-CXXUnresolvedConstructExpr 0x1337de0 <col:14, col:50> 'insert_iterator<_Container>' 'insert_iterator<_Container>'
|           |-DeclRefExpr 0x1337da0 <col:42> '_Container' lvalue ParmVar 0x13379a8 '__x' '_Container &'
|           `-DeclRefExpr 0x1337dc0 <col:47> 'typename _Container::iterator' lvalue ParmVar 0x1337ab0 '__i' 'typename _Container::iterator'
|-NamespaceDecl 0x1337e58 prev 0x12c2848 <line:770:1, line:999:1> line:770:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| |-VisibilityAttr 0x1337ec8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-UsingDecl 0x1337f28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:781:3, col:14> col:14 std::iterator_traits
| |-UsingShadowDecl 0x1337f80 <col:14> col:14 implicit ClassTemplate 0x130c3f8 'iterator_traits'
| |-UsingDecl 0x1337fd8 <line:782:3, col:14> col:14 std::iterator
| |-UsingShadowDecl 0x1338030 <col:14> col:14 implicit ClassTemplate 0x130a930 'iterator'
| |-ClassTemplateDecl 0x1338230 <line:783:3, line:870:5> line:784:11 __normal_iterator
| | |-TemplateTypeParmDecl 0x1338080 <line:783:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x13380f8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | |-CXXRecordDecl 0x13381a0 <line:784:5, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-PointerAttr 0x1576b98 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x13384c0 <col:5, col:11> col:11 implicit referenced class __normal_iterator
| | | |-AccessSpecDecl 0x1338550 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1338588 <line:787:7, col:17> col:17 referenced _M_current '_Iterator'
| | | |-TypedefDecl 0x1338690 <line:789:7, col:43> col:43 referenced __traits_type 'iterator_traits<_Iterator>'
| | | | `-TemplateSpecializationType 0x13385f0 'iterator_traits<_Iterator>' dependent iterator_traits
| | | |   `-TemplateArgument type '_Iterator'
| | | |-AccessSpecDecl 0x13386e8 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1338720 <line:792:7, col:29> col:29 iterator_type '_Iterator'
| | | | `-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |-TypedefDecl 0x1338840 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category'
| | | | `-DependentNameType 0x13387d0 'typename __traits_type::iterator_category' dependent
| | | |-TypedefDecl 0x1338920 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type'
| | | | `-DependentNameType 0x13388b0 'typename __traits_type::value_type' dependent
| | | |-TypedefDecl 0x1338a00 <line:795:7, col:56> col:56 referenced difference_type 'typename __traits_type::difference_type'
| | | | `-DependentNameType 0x1338990 'typename __traits_type::difference_type' dependent
| | | |-TypedefDecl 0x1338ae0 <line:796:7, col:50> col:50 referenced reference 'typename __traits_type::reference'
| | | | `-DependentNameType 0x1338a70 'typename __traits_type::reference' dependent
| | | |-TypedefDecl 0x1338bc0 <line:797:7, col:50> col:50 referenced pointer 'typename __traits_type::pointer'
| | | | `-DependentNameType 0x1338b50 'typename __traits_type::pointer' dependent
| | | |-CXXConstructorDecl 0x1338c88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator<_Iterator, _Container> 'void () noexcept'
| | | | |-CXXCtorInitializer Field 0x1338588 '_M_current' '_Iterator'
| | | | | `-ParenListExpr 0x133a918 <line:800:19, col:31> 'NULL TYPE'
| | | | |   `-CXXUnresolvedConstructExpr 0x133a8f8 <col:20, col:30> '_Iterator' '_Iterator'
| | | | `-CompoundStmt 0x133a968 <col:33, col:35>
| | | |-CXXConstructorDecl 0x1338e30 <line:802:7, line:804:27> line:803:7 __normal_iterator<_Iterator, _Container> 'void (const _Iterator &) noexcept'
| | | | |-ParmVarDecl 0x1338d68 <col:25, col:42> col:42 referenced __i 'const _Iterator &'
| | | | |-CXXCtorInitializer Field 0x1338588 '_M_current' '_Iterator'
| | | | | `-ParenListExpr 0x133a998 <line:804:19, col:23> 'NULL TYPE'
| | | | |   `-DeclRefExpr 0x133a978 <col:20> 'const _Iterator' lvalue ParmVar 0x1338d68 '__i' 'const _Iterator &'
| | | | `-CompoundStmt 0x133a9e8 <col:25, col:27>
| | | |-FunctionTemplateDecl 0x1339818 <line:807:7, line:812:36> line:808:9 __normal_iterator<_Iterator, _Container>
| | | | |-TemplateTypeParmDecl 0x1338ee0 <line:807:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1339770 <line:808:9, line:812:36> line:808:9 __normal_iterator<_Iterator, _Container> 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &) noexcept'
| | | |   |-ParmVarDecl 0x1339678 <col:27, line:811:31> col:31 referenced __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
| | | |   |-CXXCtorInitializer Field 0x1338588 '_M_current' '_Iterator'
| | | |   | `-ParenListExpr 0x133aa80 <line:812:21, col:32> 'NULL TYPE'
| | | |   |   `-CallExpr 0x133aa60 <col:22, col:31> '<dependent type>'
| | | |   |     `-CXXDependentScopeMemberExpr 0x133aa18 <col:22, col:26> '<dependent type>' lvalue .base
| | | |   |       `-DeclRefExpr 0x133a9f8 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x1339678 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
| | | |   `-CompoundStmt 0x133aad0 <col:34, col:36>
| | | |-CXXMethodDecl 0x1339920 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator::reference () const noexcept'
| | | | `-CompoundStmt 0x133ab70 <line:817:7, col:29>
| | | |   `-ReturnStmt 0x133ab60 <col:9, col:17>
| | | |     `-UnaryOperator 0x133ab48 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
| | | |       `-MemberExpr 0x133ab18 <col:17> 'const _Iterator' lvalue ->_M_current 0x1338588
| | | |         `-CXXThisExpr 0x133ab08 <col:17> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | | |-CXXMethodDecl 0x1339a30 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator::pointer () const noexcept'
| | | | `-CompoundStmt 0x133abd8 <line:821:7, col:28>
| | | |   `-ReturnStmt 0x133abc8 <col:9, col:16>
| | | |     `-MemberExpr 0x133ab98 <col:16> 'const _Iterator' lvalue ->_M_current 0x1338588
| | | |       `-CXXThisExpr 0x133ab88 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | | |-CXXMethodDecl 0x1339b80 <line:823:7, line:828:7> line:824:7 operator++ '__normal_iterator<_Iterator, _Container> &() noexcept'
| | | | `-CompoundStmt 0x133ac80 <line:825:7, line:828:7>
| | | |   |-UnaryOperator 0x133ac30 <line:826:2, col:4> '<dependent type>' prefix '++' cannot overflow
| | | |   | `-MemberExpr 0x133ac00 <col:4> '_Iterator' lvalue ->_M_current 0x1338588
| | | |   |   `-CXXThisExpr 0x133abf0 <col:4> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |   `-ReturnStmt 0x133ac70 <line:827:2, col:10>
| | | |     `-UnaryOperator 0x133ac58 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x133ac48 <col:10> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x1339d30 <line:830:7, line:832:49> line:831:7 operator++ '__normal_iterator<_Iterator, _Container> (int) noexcept'
| | | | |-ParmVarDecl 0x1339c38 <col:18> col:21 'int'
| | | | `-CompoundStmt 0x133ad60 <line:832:7, col:49>
| | | |   `-ReturnStmt 0x133ad50 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x133ad28 <col:16, col:46> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
| | | |       `-UnaryOperator 0x133ad10 <col:34, col:44> '<dependent type>' postfix '++' cannot overflow
| | | |         `-MemberExpr 0x133acc0 <col:34> '_Iterator' lvalue ->_M_current 0x1338588
| | | |           `-CXXThisExpr 0x133acb0 <col:34> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |-CXXMethodDecl 0x1339e00 <line:835:7, line:840:7> line:836:7 operator-- '__normal_iterator<_Iterator, _Container> &() noexcept'
| | | | `-CompoundStmt 0x133ae08 <line:837:7, line:840:7>
| | | |   |-UnaryOperator 0x133adb8 <line:838:2, col:4> '<dependent type>' prefix '--' cannot overflow
| | | |   | `-MemberExpr 0x133ad88 <col:4> '_Iterator' lvalue ->_M_current 0x1338588
| | | |   |   `-CXXThisExpr 0x133ad78 <col:4> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |   `-ReturnStmt 0x133adf8 <line:839:2, col:10>
| | | |     `-UnaryOperator 0x133ade0 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x133add0 <col:10> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x1339f50 <line:842:7, line:844:49> line:843:7 operator-- '__normal_iterator<_Iterator, _Container> (int) noexcept'
| | | | |-ParmVarDecl 0x1339eb8 <col:18> col:21 'int'
| | | | `-CompoundStmt 0x133aee8 <line:844:7, col:49>
| | | |   `-ReturnStmt 0x133aed8 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x133aeb0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
| | | |       `-UnaryOperator 0x133ae98 <col:34, col:44> '<dependent type>' postfix '--' cannot overflow
| | | |         `-MemberExpr 0x133ae48 <col:34> '_Iterator' lvalue ->_M_current 0x1338588
| | | |           `-CXXThisExpr 0x133ae38 <col:34> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |-CXXMethodDecl 0x133a100 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator::reference (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
| | | | |-ParmVarDecl 0x133a030 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x133af90 <line:849:7, col:33>
| | | |   `-ReturnStmt 0x133af80 <col:9, col:30>
| | | |     `-ArraySubscriptExpr 0x133af60 <col:16, col:30> '<dependent type>' lvalue
| | | |       |-MemberExpr 0x133af10 <col:16> 'const _Iterator' lvalue ->_M_current 0x1338588
| | | |       | `-CXXThisExpr 0x133af00 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | | |       `-DeclRefExpr 0x133af40 <col:27> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x133a030 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x133a2b0 <line:851:7, line:853:42> line:852:7 operator+= '__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'
| | | | |-ParmVarDecl 0x133a1b8 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x133b070 <line:853:7, col:42>
| | | |   |-CompoundAssignOperator 0x133b008 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x133afb8 <col:9> '_Iterator' lvalue ->_M_current 0x1338588
| | | |   | | `-CXXThisExpr 0x133afa8 <col:9> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |   | `-DeclRefExpr 0x133afe8 <col:23> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x133a1b8 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x133b060 <col:28, col:36>
| | | |     `-UnaryOperator 0x133b048 <col:35, col:36> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x133b038 <col:36> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x133a460 <line:855:7, line:857:53> line:856:7 operator+ '__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
| | | | |-ParmVarDecl 0x133a368 <col:17, col:33> col:33 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x133b158 <line:857:7, col:53>
| | | |   `-ReturnStmt 0x133b148 <col:9, col:50>
| | | |     `-CXXUnresolvedConstructExpr 0x133b120 <col:16, col:50> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
| | | |       `-BinaryOperator 0x133b100 <col:34, col:47> '<dependent type>' '+'
| | | |         |-MemberExpr 0x133b0b0 <col:34> 'const _Iterator' lvalue ->_M_current 0x1338588
| | | |         | `-CXXThisExpr 0x133b0a0 <col:34> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | | |         `-DeclRefExpr 0x133b0e0 <col:47> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x133a368 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x133a5b0 <line:859:7, line:861:42> line:860:7 operator-= '__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'
| | | | |-ParmVarDecl 0x133a518 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x133b238 <line:861:7, col:42>
| | | |   |-CompoundAssignOperator 0x133b1d0 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x133b180 <col:9> '_Iterator' lvalue ->_M_current 0x1338588
| | | |   | | `-CXXThisExpr 0x133b170 <col:9> '__normal_iterator<_Iterator, _Container> *' implicit this
| | | |   | `-DeclRefExpr 0x133b1b0 <col:23> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x133a518 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x133b228 <col:28, col:36>
| | | |     `-UnaryOperator 0x133b210 <col:35, col:36> '<dependent type>' prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x133b200 <col:36> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x133a700 <line:863:7, line:865:53> line:864:7 operator- '__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
| | | | |-ParmVarDecl 0x133a668 <col:17, col:33> col:33 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x133b320 <line:865:7, col:53>
| | | |   `-ReturnStmt 0x133b310 <col:9, col:50>
| | | |     `-CXXUnresolvedConstructExpr 0x133b2e8 <col:16, col:50> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
| | | |       `-BinaryOperator 0x133b2c8 <col:34, col:47> '<dependent type>' '-'
| | | |         |-MemberExpr 0x133b278 <col:34> 'const _Iterator' lvalue ->_M_current 0x1338588
| | | |         | `-CXXThisExpr 0x133b268 <col:34> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | | |         `-DeclRefExpr 0x133b2a8 <col:47> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x133a668 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
| | | `-CXXMethodDecl 0x133a830 <line:867:7, line:869:28> line:868:7 base 'const _Iterator &() const noexcept'
| | |   `-CompoundStmt 0x133b388 <line:869:7, col:28>
| | |     `-ReturnStmt 0x133b378 <col:9, col:16>
| | |       `-MemberExpr 0x133b348 <col:16> 'const _Iterator' lvalue ->_M_current 0x1338588
| | |         `-CXXThisExpr 0x133b338 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
| | |-ClassTemplateSpecializationDecl 0x1686260 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<char>'
| | | |-PointerAttr 0x1a8d178 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1a8d240 prev 0x1686260 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1a8d2d0 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1a8d338 <line:787:7, col:17> col:17 _M_current 'char *':'char *'
| | | |-TypedefDecl 0x1a8d410 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<char *>':'std::iterator_traits<char *>'
| | | | `-TemplateSpecializationType 0x1a8d3a0 'iterator_traits<char *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'char *':'char *'
| | | |   `-RecordType 0x1a77810 'std::iterator_traits<char *>'
| | | |     `-ClassTemplateSpecialization 0x1a77728 'iterator_traits'
| | | |-AccessSpecDecl 0x1a8d468 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1a8d4a0 <line:792:7, col:29> col:29 iterator_type 'char *':'char *'
| | | | `-SubstTemplateTypeParmType 0x1a8d300 'char *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0xffde30 'char *'
| | | |     `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a8d5b0 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1a8d560 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1a77ce0 'std::iterator_traits<char *>::iterator_category' sugar
| | | |     |-Typedef 0x1a77aa8 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1a8d6a0 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char'
| | | | `-ElaboratedType 0x1a8d650 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1a8d630 'std::iterator_traits<char *>::value_type' sugar
| | | |     |-Typedef 0x1a77b10 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |       `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a8d770 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1a8d720 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1a8c410 'std::iterator_traits<char *>::difference_type' sugar
| | | |     |-Typedef 0x1a77b68 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1a8d860 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'char &'
| | | | `-ElaboratedType 0x1a8d810 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1a8d7f0 'std::iterator_traits<char *>::reference' sugar
| | | |     |-Typedef 0x1a77c68 'reference'
| | | |     `-LValueReferenceType 0x1a77c30 'char &'
| | | |       `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a8d950 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'char *'
| | | | `-ElaboratedType 0x1a8d900 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1a8d8e0 'std::iterator_traits<char *>::pointer' sugar
| | | |     |-Typedef 0x1a77bd0 'pointer'
| | | |     `-PointerType 0x1a77930 'char *'
| | | |       `-SubstTemplateTypeParmType 0x1a77900 'char' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd1b0 'char'
| | | |-CXXConstructorDecl 0x1a8d9e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1a8dc20 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (char *const &) noexcept'
| | | | `-ParmVarDecl 0x1a8db08 <col:25, col:42> col:42 __i 'char *const &'
| | | |-FunctionTemplateDecl 0x1a8e508 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1a8dce0 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1a8e460 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1a8e348 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &'
| | | |-CXXMethodDecl 0x1a8e690 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1a8e7b0 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1a8e910 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &() noexcept'
| | | |-CXXMethodDecl 0x1a8eac0 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (int) noexcept'
| | | | `-ParmVarDecl 0x1a8e9c0 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1a8eba0 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &() noexcept'
| | | |-CXXMethodDecl 0x1a8ece8 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (int) noexcept'
| | | | `-ParmVarDecl 0x1a8ec50 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1a8eed0 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::reference (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a8edd0 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a8f090 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1a8ef98 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a8f250 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a8f158 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a8f3b0 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1a8f318 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a8f510 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a8f478 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a8f650 <line:867:7, line:869:28> line:868:7 base 'char *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1a8f748 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &)' inline default trivial noexcept-unevaluated 0x1a8f748
| | | | `-ParmVarDecl 0x1a8f858 <col:11> col:11 'const __gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &'
| | | `-CXXConstructorDecl 0x1a8f8f8 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &&)' inline default trivial noexcept-unevaluated 0x1a8f8f8
| | |   `-ParmVarDecl 0x1a8fa08 <col:11> col:11 '__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &&'
| | |-ClassTemplateSpecializationDecl 0x1686500 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<char>'
| | | |-PointerAttr 0x1a8faa8 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1a8fb70 prev 0x1686500 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1a8fc00 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1a8fc68 <line:787:7, col:17> col:17 _M_current 'const char *':'const char *'
| | | |-TypedefDecl 0x1a8fe40 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<const char *>':'std::iterator_traits<const char *>'
| | | | `-TemplateSpecializationType 0x1a8fdd0 'iterator_traits<const char *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'const char *':'const char *'
| | | |   `-RecordType 0x1a8fdb0 'std::iterator_traits<const char *>'
| | | |     `-ClassTemplateSpecialization 0x1a8fcc8 'iterator_traits'
| | | |-AccessSpecDecl 0x1a8fe98 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1a8fed0 <line:792:7, col:29> col:29 iterator_type 'const char *':'const char *'
| | | | `-SubstTemplateTypeParmType 0x1a8fc30 'const char *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0xffdc60 'const char *'
| | | |     `-QualType 0xffd1b1 'const char' const
| | | |       `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a90560 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1a90510 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1a904f0 'std::iterator_traits<const char *>::iterator_category' sugar
| | | |     |-Typedef 0x1a902b8 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1a90650 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char'
| | | | `-ElaboratedType 0x1a90600 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1a905e0 'std::iterator_traits<const char *>::value_type' sugar
| | | |     |-Typedef 0x1a90320 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a90740 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1a906f0 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1a906d0 'std::iterator_traits<const char *>::difference_type' sugar
| | | |     |-Typedef 0x1a90378 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1a90830 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'const char &'
| | | | `-ElaboratedType 0x1a907e0 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1a907c0 'std::iterator_traits<const char *>::reference' sugar
| | | |     |-Typedef 0x1a90478 'reference'
| | | |     `-LValueReferenceType 0x1a90440 'const char &'
| | | |       `-QualType 0x1a90061 'const char' const
| | | |         `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd1b0 'char'
| | | |-TypedefDecl 0x1a90920 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'const char *'
| | | | `-ElaboratedType 0x1a908d0 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1a908b0 'std::iterator_traits<const char *>::pointer' sugar
| | | |     |-Typedef 0x1a903e0 'pointer'
| | | |     `-PointerType 0x1a90090 'const char *'
| | | |       `-QualType 0x1a90061 'const char' const
| | | |         `-SubstTemplateTypeParmType 0x1a90060 'char' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd1b0 'char'
| | | |-CXXConstructorDecl 0x1a909b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1a90bf0 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (const char *const &) noexcept'
| | | | `-ParmVarDecl 0x1a90ad8 <col:25, col:42> col:42 __i 'const char *const &'
| | | |-FunctionTemplateDecl 0x1a91288 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1a90cb0 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1a911e0 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1a910f8 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &'
| | | |-CXXMethodDecl 0x1a913e0 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1a91500 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1a91660 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &() noexcept'
| | | |-CXXMethodDecl 0x1a91810 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (int) noexcept'
| | | | `-ParmVarDecl 0x1a91710 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1a918f0 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &() noexcept'
| | | |-CXXMethodDecl 0x1a91a38 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (int) noexcept'
| | | | `-ParmVarDecl 0x1a919a0 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1a97640 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::reference (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a91b20 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a97800 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1a97708 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a979c0 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a978c8 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a97b20 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1a97a88 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a97c80 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1a97be8 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1a97dc0 <line:867:7, line:869:28> line:868:7 base 'const char *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1a97eb8 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &)' inline default trivial noexcept-unevaluated 0x1a97eb8
| | | | `-ParmVarDecl 0x1a97fc8 <col:11> col:11 'const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &'
| | | `-CXXConstructorDecl 0x1a98068 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &&)' inline default trivial noexcept-unevaluated 0x1a98068
| | |   `-ParmVarDecl 0x1a98178 <col:11> col:11 '__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &&'
| | |-ClassTemplateSpecializationDecl 0x16ca590 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<wchar_t>'
| | | |-PointerAttr 0x1abb058 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1abb120 prev 0x16ca590 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1abb1b0 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1abb218 <line:787:7, col:17> col:17 _M_current 'wchar_t *':'wchar_t *'
| | | |-TypedefDecl 0x1abb2f0 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<wchar_t *>':'std::iterator_traits<wchar_t *>'
| | | | `-TemplateSpecializationType 0x1abb280 'iterator_traits<wchar_t *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'wchar_t *':'wchar_t *'
| | | |   `-RecordType 0x1ab40d0 'std::iterator_traits<wchar_t *>'
| | | |     `-ClassTemplateSpecialization 0x1ab3fe8 'iterator_traits'
| | | |-AccessSpecDecl 0x1abb348 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1abb380 <line:792:7, col:29> col:29 iterator_type 'wchar_t *':'wchar_t *'
| | | | `-SubstTemplateTypeParmType 0x1abb1e0 'wchar_t *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0x10c6b40 'wchar_t *'
| | | |     `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1abb490 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1abb440 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1ab45a0 'std::iterator_traits<wchar_t *>::iterator_category' sugar
| | | |     |-Typedef 0x1ab4368 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1abb580 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'wchar_t'
| | | | `-ElaboratedType 0x1abb530 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1abb510 'std::iterator_traits<wchar_t *>::value_type' sugar
| | | |     |-Typedef 0x1ab43d0 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1abb650 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1abb600 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1aba2f0 'std::iterator_traits<wchar_t *>::difference_type' sugar
| | | |     |-Typedef 0x1ab4428 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1abb740 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'wchar_t &'
| | | | `-ElaboratedType 0x1abb6f0 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1abb6d0 'std::iterator_traits<wchar_t *>::reference' sugar
| | | |     |-Typedef 0x1ab4528 'reference'
| | | |     `-LValueReferenceType 0x1ab44f0 'wchar_t &'
| | | |       `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1abb830 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'wchar_t *'
| | | | `-ElaboratedType 0x1abb7e0 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1abb7c0 'std::iterator_traits<wchar_t *>::pointer' sugar
| | | |     |-Typedef 0x1ab4490 'pointer'
| | | |     `-PointerType 0x1ab41f0 'wchar_t *'
| | | |       `-SubstTemplateTypeParmType 0x1ab41c0 'wchar_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-CXXConstructorDecl 0x1abb8c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1abd8f0 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (wchar_t *const &) noexcept'
| | | | `-ParmVarDecl 0x1abb9e8 <col:25, col:42> col:42 __i 'wchar_t *const &'
| | | |-FunctionTemplateDecl 0x1abe1d8 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1abd9b0 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1abe130 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1abe018 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &'
| | | |-CXXMethodDecl 0x1abe360 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1abe480 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1abe5e0 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'
| | | |-CXXMethodDecl 0x1abe790 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'
| | | | `-ParmVarDecl 0x1abe690 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1abe870 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'
| | | |-CXXMethodDecl 0x1abe9b8 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'
| | | | `-ParmVarDecl 0x1abe920 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1abeba0 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1abeaa0 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1abed60 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1abec68 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1abef20 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1abee28 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1abf080 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1abefe8 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1abf1e0 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1abf148 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1abf320 <line:867:7, line:869:28> line:868:7 base 'wchar_t *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1abf418 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &)' inline default trivial noexcept-unevaluated 0x1abf418
| | | | `-ParmVarDecl 0x1abf528 <col:11> col:11 'const __gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &'
| | | `-CXXConstructorDecl 0x1abf5c8 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &&)' inline default trivial noexcept-unevaluated 0x1abf5c8
| | |   `-ParmVarDecl 0x1abf6d8 <col:11> col:11 '__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &&'
| | |-ClassTemplateSpecializationDecl 0x16ca830 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const wchar_t *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<wchar_t>'
| | | |-PointerAttr 0x1abf778 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1abf840 prev 0x16ca830 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1abf8d0 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1abf938 <line:787:7, col:17> col:17 _M_current 'const wchar_t *':'const wchar_t *'
| | | |-TypedefDecl 0x1abfb10 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<const wchar_t *>':'std::iterator_traits<const wchar_t *>'
| | | | `-TemplateSpecializationType 0x1abfaa0 'iterator_traits<const wchar_t *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'const wchar_t *':'const wchar_t *'
| | | |   `-RecordType 0x1abfa80 'std::iterator_traits<const wchar_t *>'
| | | |     `-ClassTemplateSpecialization 0x1abf998 'iterator_traits'
| | | |-AccessSpecDecl 0x1abfb68 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1abfba0 <line:792:7, col:29> col:29 iterator_type 'const wchar_t *':'const wchar_t *'
| | | | `-SubstTemplateTypeParmType 0x1abf900 'const wchar_t *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0x10c6bf0 'const wchar_t *'
| | | |     `-QualType 0xffd6f1 'const wchar_t' const
| | | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ac01d0 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1ac0180 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1ac0160 'std::iterator_traits<const wchar_t *>::iterator_category' sugar
| | | |     |-Typedef 0x1abff30 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1ac02c0 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'wchar_t'
| | | | `-ElaboratedType 0x1ac0270 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1ac0250 'std::iterator_traits<const wchar_t *>::value_type' sugar
| | | |     |-Typedef 0x1abff98 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ac03b0 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1ac0360 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1ac0340 'std::iterator_traits<const wchar_t *>::difference_type' sugar
| | | |     |-Typedef 0x1abfff0 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1ac04a0 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'const wchar_t &'
| | | | `-ElaboratedType 0x1ac0450 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1ac0430 'std::iterator_traits<const wchar_t *>::reference' sugar
| | | |     |-Typedef 0x1ac00e8 'reference'
| | | |     `-LValueReferenceType 0x1ac00b0 'const wchar_t &'
| | | |       `-QualType 0x1abfd31 'const wchar_t' const
| | | |         `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-TypedefDecl 0x1ac0590 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'const wchar_t *'
| | | | `-ElaboratedType 0x1ac0540 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1ac0520 'std::iterator_traits<const wchar_t *>::pointer' sugar
| | | |     |-Typedef 0x1ac0058 'pointer'
| | | |     `-PointerType 0x1abfd60 'const wchar_t *'
| | | |       `-QualType 0x1abfd31 'const wchar_t' const
| | | |         `-SubstTemplateTypeParmType 0x1abfd30 'wchar_t' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd6f0 'wchar_t'
| | | |-CXXConstructorDecl 0x1ac0620 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1ac0860 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (const wchar_t *const &) noexcept'
| | | | `-ParmVarDecl 0x1ac0748 <col:25, col:42> col:42 __i 'const wchar_t *const &'
| | | |-FunctionTemplateDecl 0x1ac0ef8 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1ac0920 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1ac0e50 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1ac0d68 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &'
| | | |-CXXMethodDecl 0x1ac1050 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1ac1170 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1ac12d0 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'
| | | |-CXXMethodDecl 0x1ac1480 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'
| | | | `-ParmVarDecl 0x1ac1380 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ac1560 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'
| | | |-CXXMethodDecl 0x1ac16a8 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'
| | | | `-ParmVarDecl 0x1ac1610 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ac1890 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ac1790 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ac1a50 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ac1958 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ac1c10 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ac1b18 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ac1d70 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ac1cd8 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ac1ed0 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ac1e38 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ac2010 <line:867:7, line:869:28> line:868:7 base 'const wchar_t *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1ac2108 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &)' inline default trivial noexcept-unevaluated 0x1ac2108
| | | | `-ParmVarDecl 0x1ac2218 <col:11> col:11 'const __gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &'
| | | `-CXXConstructorDecl 0x1ac22b8 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &&)' inline default trivial noexcept-unevaluated 0x1ac22b8
| | |   `-ParmVarDecl 0x1ac23c8 <col:11> col:11 '__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &&'
| | |-ClassTemplateSpecializationDecl 0x172e480 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| | | |-PointerAttr 0x1adef38 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1adf000 prev 0x172e480 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1adf090 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1adf0f8 <line:787:7, col:17> col:17 _M_current 'char16_t *':'char16_t *'
| | | |-TypedefDecl 0x1adf2d0 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<char16_t *>':'std::iterator_traits<char16_t *>'
| | | | `-TemplateSpecializationType 0x1adf260 'iterator_traits<char16_t *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'char16_t *':'char16_t *'
| | | |   `-RecordType 0x1adf240 'std::iterator_traits<char16_t *>'
| | | |     `-ClassTemplateSpecialization 0x1adf158 'iterator_traits'
| | | |-AccessSpecDecl 0x1adf328 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1adf360 <line:792:7, col:29> col:29 iterator_type 'char16_t *':'char16_t *'
| | | | `-SubstTemplateTypeParmType 0x1adf0c0 'char16_t *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0x13e0d80 'char16_t *'
| | | |     `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1adf8a0 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1adf850 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1adf830 'std::iterator_traits<char16_t *>::iterator_category' sugar
| | | |     |-Typedef 0x1adf5f8 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1adf990 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char16_t'
| | | | `-ElaboratedType 0x1adf940 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1adf920 'std::iterator_traits<char16_t *>::value_type' sugar
| | | |     |-Typedef 0x1adf660 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1adfa80 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1adfa30 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1adfa10 'std::iterator_traits<char16_t *>::difference_type' sugar
| | | |     |-Typedef 0x1adf6b8 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1adfb70 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'char16_t &'
| | | | `-ElaboratedType 0x1adfb20 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1adfb00 'std::iterator_traits<char16_t *>::reference' sugar
| | | |     |-Typedef 0x1adf7b8 'reference'
| | | |     `-LValueReferenceType 0x1adf780 'char16_t &'
| | | |       `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1adfc60 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'char16_t *'
| | | | `-ElaboratedType 0x1adfc10 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1adfbf0 'std::iterator_traits<char16_t *>::pointer' sugar
| | | |     |-Typedef 0x1adf720 'pointer'
| | | |     `-PointerType 0x1adf480 'char16_t *'
| | | |       `-SubstTemplateTypeParmType 0x1adf450 'char16_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd730 'char16_t'
| | | |-CXXConstructorDecl 0x1adfcf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1adff30 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (char16_t *const &) noexcept'
| | | | `-ParmVarDecl 0x1adfe18 <col:25, col:42> col:42 __i 'char16_t *const &'
| | | |-FunctionTemplateDecl 0x1ae0818 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1adfff0 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1ae0770 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1ae0658 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &'
| | | |-CXXMethodDecl 0x1ae09a0 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1ae0ac0 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1ae0c20 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1ae0dd0 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1ae0cd0 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ae0eb0 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1ae0ff8 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1ae0f60 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ae11e0 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae10e0 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae13a0 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ae12a8 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae1560 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae1468 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae16c0 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ae1628 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae1820 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae1788 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae1960 <line:867:7, line:869:28> line:868:7 base 'char16_t *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1ae1a58 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &)' inline default trivial noexcept-unevaluated 0x1ae1a58
| | | | `-ParmVarDecl 0x1ae1fe0 <col:11> col:11 'const __gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &'
| | | `-CXXConstructorDecl 0x1ae2078 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&)' inline default trivial noexcept-unevaluated 0x1ae2078
| | |   `-ParmVarDecl 0x1ae2188 <col:11> col:11 '__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&'
| | |-ClassTemplateSpecializationDecl 0x172e720 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const char16_t *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| | | |-PointerAttr 0x1ae2228 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1ae22f0 prev 0x172e720 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1ae2380 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1ae23e8 <line:787:7, col:17> col:17 _M_current 'const char16_t *':'const char16_t *'
| | | |-TypedefDecl 0x1ae24c0 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<const char16_t *>':'std::iterator_traits<const char16_t *>'
| | | | `-TemplateSpecializationType 0x1ae2450 'iterator_traits<const char16_t *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'const char16_t *':'const char16_t *'
| | | |   `-RecordType 0x1adc580 'std::iterator_traits<const char16_t *>'
| | | |     `-ClassTemplateSpecialization 0x1adc498 'iterator_traits'
| | | |-AccessSpecDecl 0x1ae2518 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1ae2550 <line:792:7, col:29> col:29 iterator_type 'const char16_t *':'const char16_t *'
| | | | `-SubstTemplateTypeParmType 0x1ae23b0 'const char16_t *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0x13e05c0 'const char16_t *'
| | | |     `-QualType 0xffd731 'const char16_t' const
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ae2660 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1ae2610 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1adcb40 'std::iterator_traits<const char16_t *>::iterator_category' sugar
| | | |     |-Typedef 0x1adc910 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1ae2750 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char16_t'
| | | | `-ElaboratedType 0x1ae2700 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1ae26e0 'std::iterator_traits<const char16_t *>::value_type' sugar
| | | |     |-Typedef 0x1adc978 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | | |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |       `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ae2820 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1ae27d0 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1ade1d0 'std::iterator_traits<const char16_t *>::difference_type' sugar
| | | |     |-Typedef 0x1adc9d0 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1ae2910 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'const char16_t &'
| | | | `-ElaboratedType 0x1ae28c0 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1ae28a0 'std::iterator_traits<const char16_t *>::reference' sugar
| | | |     |-Typedef 0x1adcac8 'reference'
| | | |     `-LValueReferenceType 0x1adca90 'const char16_t &'
| | | |       `-QualType 0x1adc711 'const char16_t' const
| | | |         `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd730 'char16_t'
| | | |-TypedefDecl 0x1ae2a00 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'const char16_t *'
| | | | `-ElaboratedType 0x1ae29b0 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1ae2990 'std::iterator_traits<const char16_t *>::pointer' sugar
| | | |     |-Typedef 0x1adca38 'pointer'
| | | |     `-PointerType 0x1adc740 'const char16_t *'
| | | |       `-QualType 0x1adc711 'const char16_t' const
| | | |         `-SubstTemplateTypeParmType 0x1adc710 'char16_t' sugar
| | | |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| | | |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| | | |           `-BuiltinType 0xffd730 'char16_t'
| | | |-CXXConstructorDecl 0x1ae2a90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1ae2cd0 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (const char16_t *const &) noexcept'
| | | | `-ParmVarDecl 0x1ae2bb8 <col:25, col:42> col:42 __i 'const char16_t *const &'
| | | |-FunctionTemplateDecl 0x1ae3368 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1ae2d90 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1ae32c0 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1ae31d8 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &'
| | | |-CXXMethodDecl 0x1ae34c0 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1ae35e0 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1ae3740 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1ae38f0 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1ae37f0 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ae39d0 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1ae3b18 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1ae3a80 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1ae3d00 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae3c00 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae3ec0 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ae3dc8 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae4080 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae3f88 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae41e0 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1ae4148 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae4340 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1ae42a8 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1ae4480 <line:867:7, line:869:28> line:868:7 base 'const char16_t *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1ae4578 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &)' inline default trivial noexcept-unevaluated 0x1ae4578
| | | | `-ParmVarDecl 0x1ae4688 <col:11> col:11 'const __gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &'
| | | `-CXXConstructorDecl 0x1ae4728 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&)' inline default trivial noexcept-unevaluated 0x1ae4728
| | |   `-ParmVarDecl 0x1ae4838 <col:11> col:11 '__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&'
| | |-ClassTemplateSpecializationDecl 0x175e980 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t *'
| | | |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
| | | |-PointerAttr 0x1af6d28 <<invalid sloc>> Implicit
| | | |-CXXRecordDecl 0x1af6df0 prev 0x175e980 <col:5, col:11> col:11 implicit class __normal_iterator
| | | |-AccessSpecDecl 0x1af6e80 <line:786:5, col:14> col:5 protected
| | | |-FieldDecl 0x1af6ee8 <line:787:7, col:17> col:17 _M_current 'char32_t *':'char32_t *'
| | | |-TypedefDecl 0x1af70c0 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<char32_t *>':'std::iterator_traits<char32_t *>'
| | | | `-TemplateSpecializationType 0x1af7050 'iterator_traits<char32_t *>' sugar iterator_traits
| | | |   |-TemplateArgument type 'char32_t *':'char32_t *'
| | | |   `-RecordType 0x1af7030 'std::iterator_traits<char32_t *>'
| | | |     `-ClassTemplateSpecialization 0x1af6f48 'iterator_traits'
| | | |-AccessSpecDecl 0x1af7118 <line:791:5, col:11> col:5 public
| | | |-TypedefDecl 0x1af7150 <line:792:7, col:29> col:29 iterator_type 'char32_t *':'char32_t *'
| | | | `-SubstTemplateTypeParmType 0x1af6eb0 'char32_t *' sugar
| | | |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| | | |   `-PointerType 0x13f0700 'char32_t *'
| | | |     `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1af7690 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| | | | `-ElaboratedType 0x1af7640 'typename __traits_type::iterator_category' sugar
| | | |   `-TypedefType 0x1af7620 'std::iterator_traits<char32_t *>::iterator_category' sugar
| | | |     |-Typedef 0x1af73e8 'iterator_category'
| | | |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| | | |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| | | |-TypedefDecl 0x1af7780 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char32_t'
| | | | `-ElaboratedType 0x1af7730 'typename __traits_type::value_type' sugar
| | | |   `-TypedefType 0x1af7710 'std::iterator_traits<char32_t *>::value_type' sugar
| | | |     |-Typedef 0x1af7450 'value_type'
| | | |     `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| | | |       |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |       `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1af7870 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| | | | `-ElaboratedType 0x1af7820 'typename __traits_type::difference_type' sugar
| | | |   `-TypedefType 0x1af7800 'std::iterator_traits<char32_t *>::difference_type' sugar
| | | |     |-Typedef 0x1af74a8 'difference_type'
| | | |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| | | |       |-Typedef 0x103b008 'ptrdiff_t'
| | | |       `-BuiltinType 0xffd230 'long'
| | | |-TypedefDecl 0x1af7960 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'char32_t &'
| | | | `-ElaboratedType 0x1af7910 'typename __traits_type::reference' sugar
| | | |   `-TypedefType 0x1af78f0 'std::iterator_traits<char32_t *>::reference' sugar
| | | |     |-Typedef 0x1af75a8 'reference'
| | | |     `-LValueReferenceType 0x1af7570 'char32_t &'
| | | |       `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd750 'char32_t'
| | | |-TypedefDecl 0x1af7a50 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'char32_t *'
| | | | `-ElaboratedType 0x1af7a00 'typename __traits_type::pointer' sugar
| | | |   `-TypedefType 0x1af79e0 'std::iterator_traits<char32_t *>::pointer' sugar
| | | |     |-Typedef 0x1af7510 'pointer'
| | | |     `-PointerType 0x1af7270 'char32_t *'
| | | |       `-SubstTemplateTypeParmType 0x1af7240 'char32_t' sugar
| | | |         |-TemplateTypeParmType 0x130c800 '_Tp' dependent depth 0 index 0
| | | |         | `-TemplateTypeParm 0x130c7a8 '_Tp'
| | | |         `-BuiltinType 0xffd750 'char32_t'
| | | |-CXXConstructorDecl 0x1af7ae0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| | | |-CXXConstructorDecl 0x1af7d20 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (char32_t *const &) noexcept'
| | | | `-ParmVarDecl 0x1af7c08 <col:25, col:42> col:42 __i 'char32_t *const &'
| | | |-FunctionTemplateDecl 0x1af8608 <line:807:7, line:812:36> line:808:9 __normal_iterator
| | | | |-TemplateTypeParmDecl 0x1af7de0 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| | | | `-CXXConstructorDecl 0x1af8560 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &) noexcept'
| | | |   `-ParmVarDecl 0x1af8448 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &'
| | | |-CXXMethodDecl 0x1af8790 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference () const noexcept'
| | | |-CXXMethodDecl 0x1af88b0 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::pointer () const noexcept'
| | | |-CXXMethodDecl 0x1af8a10 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1af8bc0 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1af8ac0 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1af8ca0 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'
| | | |-CXXMethodDecl 0x1af8de8 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'
| | | | `-ParmVarDecl 0x1af8d50 <col:18> col:21 'int'
| | | |-CXXMethodDecl 0x1af8fd0 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1af8ed0 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1af9190 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1af9098 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1af9350 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1af9258 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1af94b0 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'
| | | | `-ParmVarDecl 0x1af9418 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1af9610 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| | | | `-ParmVarDecl 0x1af9578 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| | | |-CXXMethodDecl 0x1af9750 <line:867:7, line:869:28> line:868:7 base 'char32_t *const &() const noexcept'
| | | |-CXXConstructorDecl 0x1af9848 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &)' inline default trivial noexcept-unevaluated 0x1af9848
| | | | `-ParmVarDecl 0x1af9958 <col:11> col:11 'const __gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &'
| | | `-CXXConstructorDecl 0x1af99f8 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&)' inline default trivial noexcept-unevaluated 0x1af99f8
| | |   `-ParmVarDecl 0x1af9b08 <col:11> col:11 '__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&'
| | `-ClassTemplateSpecializationDecl 0x175ec20 <line:783:3, line:870:5> line:784:11 class __normal_iterator definition
| |   |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists non_trivial user_provided constexpr
| |   | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const char32_t *'
| |   |-TemplateArgument type 'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
| |   |-PointerAttr 0x1af9ba8 <<invalid sloc>> Implicit
| |   |-CXXRecordDecl 0x1af9c70 prev 0x175ec20 <col:5, col:11> col:11 implicit class __normal_iterator
| |   |-AccessSpecDecl 0x1af9d00 <line:786:5, col:14> col:5 protected
| |   |-FieldDecl 0x1af9d68 <line:787:7, col:17> col:17 _M_current 'const char32_t *':'const char32_t *'
| |   |-TypedefDecl 0x1af9e40 <line:789:7, col:43> col:43 __traits_type 'iterator_traits<const char32_t *>':'std::iterator_traits<const char32_t *>'
| |   | `-TemplateSpecializationType 0x1af9dd0 'iterator_traits<const char32_t *>' sugar iterator_traits
| |   |   |-TemplateArgument type 'const char32_t *':'const char32_t *'
| |   |   `-RecordType 0x1af2aa0 'std::iterator_traits<const char32_t *>'
| |   |     `-ClassTemplateSpecialization 0x1af29b8 'iterator_traits'
| |   |-AccessSpecDecl 0x1af9e98 <line:791:5, col:11> col:5 public
| |   |-TypedefDecl 0x1af9ed0 <line:792:7, col:29> col:29 iterator_type 'const char32_t *':'const char32_t *'
| |   | `-SubstTemplateTypeParmType 0x1af9d30 'const char32_t *' sugar
| |   |   |-TemplateTypeParmType 0x13380d0 '_Iterator' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0x1338080 '_Iterator'
| |   |   `-PointerType 0x13ee660 'const char32_t *'
| |   |     `-QualType 0xffd751 'const char32_t' const
| |   |       `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1af9fe0 <line:793:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category':'std::random_access_iterator_tag'
| |   | `-ElaboratedType 0x1af9f90 'typename __traits_type::iterator_category' sugar
| |   |   `-TypedefType 0x1af3060 'std::iterator_traits<const char32_t *>::iterator_category' sugar
| |   |     |-Typedef 0x1af2e30 'iterator_category'
| |   |     `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |   |       `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |   |-TypedefDecl 0x1afa0d0 <line:794:7, col:52> col:52 value_type 'typename __traits_type::value_type':'char32_t'
| |   | `-ElaboratedType 0x1afa080 'typename __traits_type::value_type' sugar
| |   |   `-TypedefType 0x1afa060 'std::iterator_traits<const char32_t *>::value_type' sugar
| |   |     |-Typedef 0x1af2e98 'value_type'
| |   |     `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| |   |       |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x130ce88 '_Tp'
| |   |       `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1afa1a0 <line:795:7, col:56> col:56 difference_type 'typename __traits_type::difference_type':'long'
| |   | `-ElaboratedType 0x1afa150 'typename __traits_type::difference_type' sugar
| |   |   `-TypedefType 0x1af5fc0 'std::iterator_traits<const char32_t *>::difference_type' sugar
| |   |     |-Typedef 0x1af2ef0 'difference_type'
| |   |     `-TypedefType 0x10f3cd0 'std::ptrdiff_t' sugar
| |   |       |-Typedef 0x103b008 'ptrdiff_t'
| |   |       `-BuiltinType 0xffd230 'long'
| |   |-TypedefDecl 0x1afa290 <line:796:7, col:50> col:50 reference 'typename __traits_type::reference':'const char32_t &'
| |   | `-ElaboratedType 0x1afa240 'typename __traits_type::reference' sugar
| |   |   `-TypedefType 0x1afa220 'std::iterator_traits<const char32_t *>::reference' sugar
| |   |     |-Typedef 0x1af2fe8 'reference'
| |   |     `-LValueReferenceType 0x1af2fb0 'const char32_t &'
| |   |       `-QualType 0x1af2c31 'const char32_t' const
| |   |         `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| |   |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| |   |           `-BuiltinType 0xffd750 'char32_t'
| |   |-TypedefDecl 0x1afa380 <line:797:7, col:50> col:50 pointer 'typename __traits_type::pointer':'const char32_t *'
| |   | `-ElaboratedType 0x1afa330 'typename __traits_type::pointer' sugar
| |   |   `-TypedefType 0x1afa310 'std::iterator_traits<const char32_t *>::pointer' sugar
| |   |     |-Typedef 0x1af2f58 'pointer'
| |   |     `-PointerType 0x1af2c60 'const char32_t *'
| |   |       `-QualType 0x1af2c31 'const char32_t' const
| |   |         `-SubstTemplateTypeParmType 0x1af2c30 'char32_t' sugar
| |   |           |-TemplateTypeParmType 0x130cee0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x130ce88 '_Tp'
| |   |           `-BuiltinType 0xffd750 'char32_t'
| |   |-CXXConstructorDecl 0x1afa410 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:120:30, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:800:35> line:799:26 constexpr __normal_iterator 'void () noexcept'
| |   |-CXXConstructorDecl 0x1afa650 <line:802:7, line:804:27> line:803:7 __normal_iterator 'void (const char32_t *const &) noexcept'
| |   | `-ParmVarDecl 0x1afa538 <col:25, col:42> col:42 __i 'const char32_t *const &'
| |   |-FunctionTemplateDecl 0x1aface8 <line:807:7, line:812:36> line:808:9 __normal_iterator
| |   | |-TemplateTypeParmDecl 0x1afa710 <line:807:16, col:25> col:25 typename depth 0 index 0 _Iter
| |   | `-CXXConstructorDecl 0x1afac40 <line:808:9, line:812:36> line:808:9 __normal_iterator 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &) noexcept'
| |   |   `-ParmVarDecl 0x1afab58 <col:27, line:811:31> col:31 __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &'
| |   |-CXXMethodDecl 0x1afae40 <line:815:7, line:817:29> line:816:7 operator* '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference () const noexcept'
| |   |-CXXMethodDecl 0x1afaf60 <line:819:7, line:821:28> line:820:7 operator-> '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::pointer () const noexcept'
| |   |-CXXMethodDecl 0x1afb0c0 <line:823:7, line:828:7> line:824:7 operator++ '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'
| |   |-CXXMethodDecl 0x1afb270 <line:830:7, line:832:49> line:831:7 operator++ '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'
| |   | `-ParmVarDecl 0x1afb170 <col:18> col:21 'int'
| |   |-CXXMethodDecl 0x1afb350 <line:835:7, line:840:7> line:836:7 operator-- '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'
| |   |-CXXMethodDecl 0x1afb498 <line:842:7, line:844:49> line:843:7 operator-- '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'
| |   | `-ParmVarDecl 0x1afb400 <col:18> col:21 'int'
| |   |-CXXMethodDecl 0x1afb680 <line:847:7, line:849:33> line:848:7 operator[] '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| |   | `-ParmVarDecl 0x1afb580 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| |   |-CXXMethodDecl 0x1afb840 <line:851:7, line:853:42> line:852:7 operator+= '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'
| |   | `-ParmVarDecl 0x1afb748 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| |   |-CXXMethodDecl 0x1afba00 <line:855:7, line:857:53> line:856:7 operator+ '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| |   | `-ParmVarDecl 0x1afb908 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| |   |-CXXMethodDecl 0x1afbb60 <line:859:7, line:861:42> line:860:7 operator-= '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'
| |   | `-ParmVarDecl 0x1afbac8 <col:18, col:34> col:34 __n '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| |   |-CXXMethodDecl 0x1afbcc0 <line:863:7, line:865:53> line:864:7 operator- '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'
| |   | `-ParmVarDecl 0x1afbc28 <col:17, col:33> col:33 __n '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'
| |   |-CXXMethodDecl 0x1afbe00 <line:867:7, line:869:28> line:868:7 base 'const char32_t *const &() const noexcept'
| |   |-CXXConstructorDecl 0x1afbef8 <line:784:11> col:11 implicit constexpr __normal_iterator 'void (const __gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &)' inline default trivial noexcept-unevaluated 0x1afbef8
| |   | `-ParmVarDecl 0x1afc008 <col:11> col:11 'const __gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &'
| |   `-CXXConstructorDecl 0x1afc0a8 <col:11> col:11 implicit constexpr __normal_iterator 'void (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&)' inline default trivial noexcept-unevaluated 0x1afc0a8
| |     `-ParmVarDecl 0x1afc1b8 <col:11> col:11 '__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&'
| |-FunctionTemplateDecl 0x10dae50 <line:881:3, line:886:44> line:883:5 operator==
| | |-TemplateTypeParmDecl 0x133b3a0 <line:881:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x133b418 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x133b498 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10dadb0 <line:882:5, line:886:44> line:883:5 operator== 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10daa68 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10dac98 <line:884:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10db058 <line:886:5, col:44>
| |     `-ReturnStmt 0x10db048 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10db010 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dafc8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50
| |         |-CallExpr 0x10daf20 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10daed8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10daeb8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10daa68 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10dafa8 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10daf60 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10daf40 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10dac98 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10db650 <line:888:3, line:893:44> line:890:5 operator==
| | |-TemplateTypeParmDecl 0x10db070 <line:888:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10db0e8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10db5b0 <line:889:5, line:893:44> line:890:5 operator== 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10db2f8 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10db498 <line:891:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10db860 <line:893:5, col:44>
| |     `-ReturnStmt 0x10db850 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10db818 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10db7c8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10db650 0x10dae50
| |         |-CallExpr 0x10db720 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10db6d8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10db6b8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10db2f8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10db7a8 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10db760 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10db740 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10db498 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x10dbe80 <line:895:3, line:900:44> line:897:5 operator!=
| | |-TemplateTypeParmDecl 0x10db878 <line:895:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10db8f8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10db978 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10dbde0 <line:896:5, line:900:44> line:897:5 operator!= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10dbb68 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10dbd08 <line:898:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10dc088 <line:900:5, col:44>
| |     `-ReturnStmt 0x10dc078 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10dc040 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dbff8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10dbe80
| |         |-CallExpr 0x10dbf50 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dbf08 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dbee8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10dbb68 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10dbfd8 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10dbf90 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10dbf70 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10dbd08 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10dc610 <line:902:3, line:907:44> line:904:5 operator!=
| | |-TemplateTypeParmDecl 0x10dc0a0 <line:902:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10dc118 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10dc570 <line:903:5, line:907:44> line:904:5 operator!= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10dc2f8 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10dc498 <line:905:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10dc820 <line:907:5, col:44>
| |     `-ReturnStmt 0x10dc810 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10dc7d8 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dc788 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10dc610 0x10dbe80
| |         |-CallExpr 0x10dc6e0 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dc698 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dc678 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10dc2f8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10dc768 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10dc720 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10dc700 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10dc498 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x10dce50 <line:910:3, line:915:43> line:912:5 operator<
| | |-TemplateTypeParmDecl 0x10dc838 <line:910:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10dc8d0 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10dc948 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10dcdb0 <line:911:5, line:915:43> line:912:5 operator< 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10dcb38 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10dccd8 <line:913:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10dd058 <line:915:5, col:43>
| |     `-ReturnStmt 0x10dd048 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x10dd010 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dcfc8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dce50
| |         |-CallExpr 0x10dcf20 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dced8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dceb8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10dcb38 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10dcfa8 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10dcf60 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10dcf40 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10dccd8 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10dd5e0 <line:917:3, line:922:43> line:919:5 operator<
| | |-TemplateTypeParmDecl 0x10dd070 <line:917:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10dd0e8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10dd540 <line:918:5, line:922:43> line:919:5 operator< 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10dd2c8 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10dd468 <line:920:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10dd7f0 <line:922:5, col:43>
| |     `-ReturnStmt 0x10dd7e0 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x10dd7a8 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dd758 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dd5e0 0x10dce50
| |         |-CallExpr 0x10dd6b0 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dd668 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dd648 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10dd2c8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10dd738 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10dd6f0 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10dd6d0 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10dd468 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x10dde10 <line:924:3, line:929:43> line:926:5 operator>
| | |-TemplateTypeParmDecl 0x10dd808 <line:924:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10dd888 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10dd908 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10ddd70 <line:925:5, line:929:43> line:926:5 operator> 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10ddaf8 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10ddc98 <line:927:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10de018 <line:929:5, col:43>
| |     `-ReturnStmt 0x10de008 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x10ddfd0 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10ddf88 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x10dde10
| |         |-CallExpr 0x10ddee0 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dde98 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dde78 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10ddaf8 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10ddf68 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10ddf20 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10ddf00 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10ddc98 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10de5a0 <line:931:3, line:936:43> line:933:5 operator>
| | |-TemplateTypeParmDecl 0x10de030 <line:931:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10de0a8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10de500 <line:932:5, line:936:43> line:933:5 operator> 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10de288 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10de428 <line:934:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10de7b0 <line:936:5, col:43>
| |     `-ReturnStmt 0x10de7a0 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x10de768 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10de718 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x10de5a0 0x10dde10
| |         |-CallExpr 0x10de670 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10de628 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10de608 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10de288 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10de6f8 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10de6b0 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10de690 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10de428 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x10dedd0 <line:938:3, line:943:44> line:940:5 operator<=
| | |-TemplateTypeParmDecl 0x10de7c8 <line:938:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10de848 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10de8c8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10ded30 <line:939:5, line:943:44> line:940:5 operator<= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10deab8 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10dec58 <line:941:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10defd8 <line:943:5, col:44>
| |     `-ReturnStmt 0x10defc8 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10def90 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10def48 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x10dedd0
| |         |-CallExpr 0x10deea0 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dee58 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dee38 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10deab8 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10def28 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10deee0 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10deec0 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10dec58 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10df560 <line:945:3, line:950:44> line:947:5 operator<=
| | |-TemplateTypeParmDecl 0x10deff0 <line:945:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10df068 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10df4c0 <line:946:5, line:950:44> line:947:5 operator<= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10df248 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10df3e8 <line:948:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10df770 <line:950:5, col:44>
| |     `-ReturnStmt 0x10df760 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10df728 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10df6d8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x10df560 0x10dedd0
| |         |-CallExpr 0x10df630 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10df5e8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10df5c8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10df248 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10df6b8 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10df670 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10df650 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10df3e8 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x10dfd90 <line:952:3, line:957:44> line:954:5 operator>=
| | |-TemplateTypeParmDecl 0x10df788 <line:952:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10df808 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10df888 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x10dfcf0 <line:953:5, line:957:44> line:954:5 operator>= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10dfa78 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x10dfc18 <line:955:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x10dff98 <line:957:5, col:44>
| |     `-ReturnStmt 0x10dff88 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10dff50 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10dff08 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x10dfd90
| |         |-CallExpr 0x10dfe60 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10dfe18 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10dfdf8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x10dfa78 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x10dfee8 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10dfea0 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10dfe80 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x10dfc18 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x10e0520 <line:959:3, line:964:44> line:961:5 operator>=
| | |-TemplateTypeParmDecl 0x10dffb0 <line:959:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x10e0028 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x10e0480 <line:960:5, line:964:44> line:961:5 operator>= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x10e0208 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x10e03a8 <line:962:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x10e0730 <line:964:5, col:44>
| |     `-ReturnStmt 0x10e0720 <col:7, col:41>
| |       `-CXXOperatorCallExpr 0x10e06e8 <col:14, col:41> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x10e0698 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x10e0520 0x10dfd90
| |         |-CallExpr 0x10e05f0 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x10e05a8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x10e0588 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10e0208 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x10e0678 <col:30, col:41> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x10e0630 <col:30, col:36> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x10e0610 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x10e03a8 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x134fe50 <line:970:3, line:982:43> line:974:5 operator-
| | |-TemplateTypeParmDecl 0x10e0748 <line:970:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x10e07c8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | |-TemplateTypeParmDecl 0x10e0848 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| | `-FunctionDecl 0x134fdb0 <line:973:5, line:982:43> line:974:5 operator- 'auto (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept -> decltype(__lhs.base() - __rhs.base())' inline
| |   |-ParmVarDecl 0x134f948 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| |   |-ParmVarDecl 0x134fae8 <line:975:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| |   `-CompoundStmt 0x1350058 <line:982:5, col:43>
| |     `-ReturnStmt 0x1350048 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x1350010 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x134ffc8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x134fe50
| |         |-CallExpr 0x134ff20 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x134fed8 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x134feb8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x134f948 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| |         `-CallExpr 0x134ffa8 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x134ff60 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x134ff40 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x134fae8 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x13507b0 <line:984:3, line:989:43> line:986:5 operator-
| | |-TemplateTypeParmDecl 0x1350070 <line:984:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x13500e8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x1350710 <line:985:5, line:989:43> line:986:5 operator- 'typename __normal_iterator<_Iterator, _Container>::difference_type (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
| |   |-ParmVarDecl 0x1350448 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
| |   |-ParmVarDecl 0x13505e8 <line:987:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
| |   `-CompoundStmt 0x13509c0 <line:989:5, col:43>
| |     `-ReturnStmt 0x13509b0 <col:7, col:40>
| |       `-CXXOperatorCallExpr 0x1350978 <col:14, col:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1350928 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x13507b0 0x134fe50
| |         |-CallExpr 0x1350880 <col:14, col:25> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x1350838 <col:14, col:20> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x1350818 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x1350448 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| |         `-CallExpr 0x1350908 <col:29, col:40> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x13508c0 <col:29, col:35> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x13508a0 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x13505e8 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| `-FunctionTemplateDecl 0x13510a8 <line:991:3, line:996:74> line:993:5 operator+
|   |-TemplateTypeParmDecl 0x13509d8 <line:991:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
|   |-TemplateTypeParmDecl 0x1350a58 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
|   `-FunctionDecl 0x1351008 <line:992:5, line:996:74> line:993:5 operator+ '__normal_iterator<_Iterator, _Container> (typename __normal_iterator<_Iterator, _Container>::difference_type, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|     |-ParmVarDecl 0x1350d10 <col:15, line:994:8> col:8 referenced __n 'typename __normal_iterator<_Iterator, _Container>::difference_type'
|     |-ParmVarDecl 0x1350eb8 <col:13, col:61> col:61 referenced __i 'const __normal_iterator<_Iterator, _Container> &'
|     `-CompoundStmt 0x1351378 <line:996:5, col:74>
|       `-ReturnStmt 0x1351368 <col:7, col:71>
|         `-CXXUnresolvedConstructExpr 0x1351340 <col:14, col:71> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
|           `-CXXOperatorCallExpr 0x1351308 <col:55, col:68> '<dependent type>'
|             |-UnresolvedLookupExpr 0x13512c0 <col:66> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x13510a8
|             |-CallExpr 0x1351280 <col:55, col:64> '<dependent type>'
|             | `-CXXDependentScopeMemberExpr 0x1351238 <col:55, col:59> '<dependent type>' lvalue .base
|             |   `-DeclRefExpr 0x1351218 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x1350eb8 '__i' 'const __normal_iterator<_Iterator, _Container> &'
|             `-DeclRefExpr 0x13512a0 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x1350d10 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type'
|-NamespaceDecl 0x13513b0 prev 0x1323fc8 <line:1001:1, line:1293:1> line:1001:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1351420 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-FunctionTemplateDecl 0x1351a28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:1005:3, line:1009:27> line:1007:5 __niter_base
| | |-TemplateTypeParmDecl 0x1351478 <line:1005:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x13514f8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| | `-FunctionDecl 0x1351988 <line:1006:5, line:1009:27> line:1007:5 __niter_base '_Iterator (__gnu_cxx::__normal_iterator<_Iterator, _Container>) noexcept(std::is_nothrow_copy_constructible<_Iterator>::value)'
| |   |-ParmVarDecl 0x1351738 <col:18, col:70> col:70 referenced __it '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>'
| |   `-CompoundStmt 0x1351b20 <line:1009:5, col:27>
| |     `-ReturnStmt 0x1351b10 <col:7, col:24>
| |       `-CallExpr 0x1351af0 <col:14, col:24> '<dependent type>'
| |         `-CXXDependentScopeMemberExpr 0x1351aa8 <col:14, col:19> '<dependent type>' lvalue .base
| |           `-DeclRefExpr 0x1351a88 <col:14> '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x1351738 '__it' '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>'
| |-ClassTemplateDecl 0x1351c68 <line:1027:3, line:1129:5> line:1028:11 move_iterator
| | |-TemplateTypeParmDecl 0x1351b38 <line:1027:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-CXXRecordDecl 0x1351bd8 <line:1028:5, line:1129:5> line:1028:11 class move_iterator definition
| |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |   | |-DefaultConstructor exists non_trivial user_provided
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x1351ec0 <col:5, col:11> col:11 implicit referenced class move_iterator
| |   |-AccessSpecDecl 0x1351f50 <line:1030:5, col:14> col:5 protected
| |   |-FieldDecl 0x1351f88 <line:1031:7, col:17> col:17 referenced _M_current '_Iterator'
| |   |-TypedefDecl 0x1352090 <line:1033:7, col:43> col:43 referenced __traits_type 'iterator_traits<_Iterator>'
| |   | `-TemplateSpecializationType 0x1351ff0 'iterator_traits<_Iterator>' dependent iterator_traits
| |   |   `-TemplateArgument type '_Iterator'
| |   |-TypedefDecl 0x13521b0 <line:1034:7, col:50> col:50 referenced __base_ref 'typename __traits_type::reference'
| |   | `-DependentNameType 0x1352140 'typename __traits_type::reference' dependent
| |   |-AccessSpecDecl 0x1352208 <line:1036:5, col:11> col:5 public
| |   |-TypedefDecl 0x1352240 <line:1037:7, col:29> col:29 referenced iterator_type '_Iterator'
| |   | `-TemplateTypeParmType 0x1351b90 '_Iterator' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x1351b38 '_Iterator'
| |   |-TypedefDecl 0x1352320 <line:1038:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category'
| |   | `-DependentNameType 0x13522b0 'typename __traits_type::iterator_category' dependent
| |   |-TypedefDecl 0x1352400 <line:1039:7, col:52> col:52 value_type 'typename __traits_type::value_type'
| |   | `-DependentNameType 0x1352390 'typename __traits_type::value_type' dependent
| |   |-TypedefDecl 0x13524e0 <line:1040:7, col:55> col:55 referenced difference_type 'typename __traits_type::difference_type'
| |   | `-DependentNameType 0x1352470 'typename __traits_type::difference_type' dependent
| |   |-TypedefDecl 0x1352548 <line:1042:7, col:29> col:29 referenced pointer '_Iterator'
| |   | `-TemplateTypeParmType 0x1351b90 '_Iterator' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x1351b38 '_Iterator'
| |   |-TypedefDecl 0x1352b70 <line:1045:7, line:1047:24> col:24 referenced reference 'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'
| |   | `-DependentNameType 0x1352b00 'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type' dependent
| |   |-CXXConstructorDecl 0x1352c30 <line:1050:7, line:1051:24> line:1050:7 move_iterator<_Iterator> 'void ()'
| |   | |-CXXCtorInitializer Field 0x1351f88 '_M_current' '_Iterator'
| |   | | `-ParenListExpr 0x13542a8 <line:1051:19, col:20> 'NULL TYPE'
| |   | `-CompoundStmt 0x13542f0 <col:22, col:24>
| |   |-CXXConstructorDecl 0x1352dd8 <line:1053:7, line:1055:27> line:1054:7 move_iterator<_Iterator> 'void (std::move_iterator::iterator_type)'
| |   | |-ParmVarDecl 0x1352d10 <col:21, col:35> col:35 referenced __i 'std::move_iterator::iterator_type':'_Iterator'
| |   | |-CXXCtorInitializer Field 0x1351f88 '_M_current' '_Iterator'
| |   | | `-ParenListExpr 0x1354320 <line:1055:19, col:23> 'NULL TYPE'
| |   | |   `-DeclRefExpr 0x1354300 <col:20> 'std::move_iterator::iterator_type':'_Iterator' lvalue ParmVar 0x1352d10 '__i' 'std::move_iterator::iterator_type':'_Iterator'
| |   | `-CompoundStmt 0x1354370 <col:25, col:27>
| |   |-FunctionTemplateDecl 0x1353220 <line:1057:7, line:1060:29> line:1059:2 move_iterator<_Iterator>
| |   | |-TemplateTypeParmDecl 0x1352e88 <line:1057:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
| |   | `-CXXConstructorDecl 0x1353178 <line:1059:2, line:1060:29> line:1059:2 move_iterator<_Iterator> 'void (const move_iterator<_Iter> &)'
| |   |   |-ParmVarDecl 0x1353080 <col:16, col:44> col:44 referenced __i 'const move_iterator<_Iter> &'
| |   |   |-CXXCtorInitializer Field 0x1351f88 '_M_current' '_Iterator'
| |   |   | `-ParenListExpr 0x1354408 <line:1060:14, col:25> 'NULL TYPE'
| |   |   |   `-CallExpr 0x13543e8 <col:15, col:24> '<dependent type>'
| |   |   |     `-CXXDependentScopeMemberExpr 0x13543a0 <col:15, col:19> '<dependent type>' lvalue .base
| |   |   |       `-DeclRefExpr 0x1354380 <col:15> 'const move_iterator<_Iter>' lvalue ParmVar 0x1353080 '__i' 'const move_iterator<_Iter> &'
| |   |   `-CompoundStmt 0x1354458 <col:27, col:29>
| |   |-CXXMethodDecl 0x13532f8 <line:1062:28, line:1064:28> line:1063:7 base 'std::move_iterator::iterator_type () const'
| |   | `-CompoundStmt 0x13544b8 <line:1064:7, col:28>
| |   |   `-ReturnStmt 0x13544a8 <col:9, col:16>
| |   |     `-MemberExpr 0x1354478 <col:16> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |   |       `-CXXThisExpr 0x1354468 <col:16> 'const move_iterator<_Iterator> *' implicit this
| |   |-CXXMethodDecl 0x1353438 <line:1066:28, line:1068:53> line:1067:7 operator* 'std::move_iterator::reference () const'
| |   | `-CompoundStmt 0x1354578 <line:1068:7, col:53>
| |   |   `-ReturnStmt 0x1354568 <col:9, col:50>
| |   |     `-CXXStaticCastExpr 0x1354538 <col:16, col:50> 'std::move_iterator::reference':'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type' static_cast<std::move_iterator::reference> <Dependent>
| |   |       `-UnaryOperator 0x1354510 <col:39, col:40> '<dependent type>' prefix '*' cannot overflow
| |   |         `-MemberExpr 0x13544e0 <col:40> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |   |           `-CXXThisExpr 0x13544d0 <col:40> 'const move_iterator<_Iterator> *' implicit this
| |   |-CXXMethodDecl 0x1353548 <line:1070:28, line:1072:28> line:1071:7 operator-> 'std::move_iterator::pointer () const'
| |   | `-CompoundStmt 0x13545e0 <line:1072:7, col:28>
| |   |   `-ReturnStmt 0x13545d0 <col:9, col:16>
| |   |     `-MemberExpr 0x13545a0 <col:16> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |   |       `-CXXThisExpr 0x1354590 <col:16> 'const move_iterator<_Iterator> *' implicit this
| |   |-CXXMethodDecl 0x1353668 <line:1074:28, line:1079:7> line:1075:7 operator++ 'move_iterator<_Iterator> &()'
| |   | `-CompoundStmt 0x1354688 <line:1076:7, line:1079:7>
| |   |   |-UnaryOperator 0x1354638 <line:1077:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |   |   | `-MemberExpr 0x1354608 <col:4> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   |   `-CXXThisExpr 0x13545f8 <col:4> 'move_iterator<_Iterator> *' implicit this
| |   |   `-ReturnStmt 0x1354678 <line:1078:2, col:10>
| |   |     `-UnaryOperator 0x1354660 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1354650 <col:10> 'move_iterator<_Iterator> *' this
| |   |-CXXMethodDecl 0x1353818 <line:1081:28, line:1087:7> line:1082:7 operator++ 'move_iterator<_Iterator> (int)'
| |   | |-ParmVarDecl 0x1353720 <col:18> col:21 'int'
| |   | `-CompoundStmt 0x13547f0 <line:1083:7, line:1087:7>
| |   |   |-DeclStmt 0x1354748 <line:1084:2, col:29>
| |   |   | `-VarDecl 0x13546b8 <col:2, col:25> col:16 referenced __tmp 'move_iterator<_Iterator>' nrvo cinit
| |   |   |   `-UnaryOperator 0x1354730 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
| |   |   |     `-CXXThisExpr 0x1354720 <col:25> 'move_iterator<_Iterator> *' this
| |   |   |-UnaryOperator 0x13547a0 <line:1085:2, col:4> '<dependent type>' prefix '++' cannot overflow
| |   |   | `-MemberExpr 0x1354770 <col:4> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   |   `-CXXThisExpr 0x1354760 <col:4> 'move_iterator<_Iterator> *' implicit this
| |   |   `-ReturnStmt 0x13547d8 <line:1086:2, col:9>
| |   |     `-DeclRefExpr 0x13547b8 <col:9> 'move_iterator<_Iterator>' lvalue Var 0x13546b8 '__tmp' 'move_iterator<_Iterator>'
| |   |-CXXMethodDecl 0x13538e0 <line:1089:28, line:1094:7> line:1090:7 operator-- 'move_iterator<_Iterator> &()'
| |   | `-CompoundStmt 0x13548a8 <line:1091:7, line:1094:7>
| |   |   |-UnaryOperator 0x1354858 <line:1092:2, col:4> '<dependent type>' prefix '--' cannot overflow
| |   |   | `-MemberExpr 0x1354828 <col:4> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   |   `-CXXThisExpr 0x1354818 <col:4> 'move_iterator<_Iterator> *' implicit this
| |   |   `-ReturnStmt 0x1354898 <line:1093:2, col:10>
| |   |     `-UnaryOperator 0x1354880 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1354870 <col:10> 'move_iterator<_Iterator> *' this
| |   |-CXXMethodDecl 0x1353a28 <line:1096:28, line:1102:7> line:1097:7 operator-- 'move_iterator<_Iterator> (int)'
| |   | |-ParmVarDecl 0x1353998 <col:18> col:21 'int'
| |   | `-CompoundStmt 0x1354a10 <line:1098:7, line:1102:7>
| |   |   |-DeclStmt 0x1354968 <line:1099:2, col:29>
| |   |   | `-VarDecl 0x13548d8 <col:2, col:25> col:16 referenced __tmp 'move_iterator<_Iterator>' nrvo cinit
| |   |   |   `-UnaryOperator 0x1354950 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
| |   |   |     `-CXXThisExpr 0x1354940 <col:25> 'move_iterator<_Iterator> *' this
| |   |   |-UnaryOperator 0x13549c0 <line:1100:2, col:4> '<dependent type>' prefix '--' cannot overflow
| |   |   | `-MemberExpr 0x1354990 <col:4> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   |   `-CXXThisExpr 0x1354980 <col:4> 'move_iterator<_Iterator> *' implicit this
| |   |   `-ReturnStmt 0x13549f8 <line:1101:2, col:9>
| |   |     `-DeclRefExpr 0x13549d8 <col:9> 'move_iterator<_Iterator>' lvalue Var 0x13548d8 '__tmp' 'move_iterator<_Iterator>'
| |   |-CXXMethodDecl 0x1353bf8 <line:1104:28, line:1106:49> line:1105:7 operator+ 'move_iterator<_Iterator> (std::move_iterator::difference_type) const'
| |   | |-ParmVarDecl 0x1353b00 <col:17, col:33> col:33 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   | `-CompoundStmt 0x1354b60 <line:1106:7, col:49>
| |   |   `-ReturnStmt 0x1354b50 <col:9, col:46>
| |   |     `-CXXUnresolvedConstructExpr 0x1354b28 <col:16, col:46> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
| |   |       `-CXXOperatorCallExpr 0x1354af0 <col:30, col:43> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x1354aa8 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8
| |   |         |-MemberExpr 0x1354a58 <col:30> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |   |         | `-CXXThisExpr 0x1354a48 <col:30> 'const move_iterator<_Iterator> *' implicit this
| |   |         `-DeclRefExpr 0x1354a88 <col:43> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1353b00 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   |-CXXMethodDecl 0x1353da8 <line:1108:28, line:1113:7> line:1109:7 operator+= 'move_iterator<_Iterator> &(std::move_iterator::difference_type)'
| |   | |-ParmVarDecl 0x1353cb0 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   | `-CompoundStmt 0x1354c40 <line:1110:7, line:1113:7>
| |   |   |-CompoundAssignOperator 0x1354bd8 <line:1111:2, col:16> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |   |   | |-MemberExpr 0x1354b88 <col:2> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   | | `-CXXThisExpr 0x1354b78 <col:2> 'move_iterator<_Iterator> *' implicit this
| |   |   | `-DeclRefExpr 0x1354bb8 <col:16> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1353cb0 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   |   `-ReturnStmt 0x1354c30 <line:1112:2, col:10>
| |   |     `-UnaryOperator 0x1354c18 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1354c08 <col:10> 'move_iterator<_Iterator> *' this
| |   |-CXXMethodDecl 0x1353ef0 <line:1115:28, line:1117:49> line:1116:7 operator- 'move_iterator<_Iterator> (std::move_iterator::difference_type) const'
| |   | |-ParmVarDecl 0x1353e60 <col:17, col:33> col:33 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   | `-CompoundStmt 0x1354d88 <line:1117:7, col:49>
| |   |   `-ReturnStmt 0x1354d78 <col:9, col:46>
| |   |     `-CXXUnresolvedConstructExpr 0x1354d50 <col:16, col:46> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
| |   |       `-CXXOperatorCallExpr 0x1354d18 <col:30, col:43> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x1354cd0 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8
| |   |         |-MemberExpr 0x1354c80 <col:30> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |   |         | `-CXXThisExpr 0x1354c70 <col:30> 'const move_iterator<_Iterator> *' implicit this
| |   |         `-DeclRefExpr 0x1354cb0 <col:43> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1353e60 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   |-CXXMethodDecl 0x1354038 <line:1119:28, line:1124:7> line:1120:7 operator-= 'move_iterator<_Iterator> &(std::move_iterator::difference_type)'
| |   | |-ParmVarDecl 0x1353fa8 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   | `-CompoundStmt 0x1354e68 <line:1121:7, line:1124:7>
| |   |   |-CompoundAssignOperator 0x1354e00 <line:1122:2, col:16> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |   |   | |-MemberExpr 0x1354db0 <col:2> '_Iterator' lvalue ->_M_current 0x1351f88
| |   |   | | `-CXXThisExpr 0x1354da0 <col:2> 'move_iterator<_Iterator> *' implicit this
| |   |   | `-DeclRefExpr 0x1354de0 <col:16> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x1353fa8 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |   |   `-ReturnStmt 0x1354e58 <line:1123:2, col:10>
| |   |     `-UnaryOperator 0x1354e40 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| |   |       `-CXXThisExpr 0x1354e30 <col:10> 'move_iterator<_Iterator> *' this
| |   `-CXXMethodDecl 0x13541e8 <line:1126:28, line:1128:44> line:1127:7 operator[] 'std::move_iterator::reference (std::move_iterator::difference_type) const'
| |     |-ParmVarDecl 0x13540f0 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |     `-CompoundStmt 0x1354fa8 <line:1128:7, col:44>
| |       `-ReturnStmt 0x1354f98 <col:9, col:41>
| |         `-CallExpr 0x1354f70 <col:16, col:41> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1354ea8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |           `-ArraySubscriptExpr 0x1354f50 <col:26, col:40> '<dependent type>' lvalue
| |             |-MemberExpr 0x1354f00 <col:26> 'const _Iterator' lvalue ->_M_current 0x1351f88
| |             | `-CXXThisExpr 0x1354ef0 <col:26> 'const move_iterator<_Iterator> *' implicit this
| |             `-DeclRefExpr 0x1354f30 <col:37> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x13540f0 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
| |-FunctionTemplateDecl 0x1355568 <line:1134:3, line:1138:40> line:1136:5 operator==
| | |-TemplateTypeParmDecl 0x1354fc0 <line:1134:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x1355038 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x13554c8 <line:1135:5, line:1138:40> line:1136:5 operator== 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x13551f0 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x13553b0 <line:1137:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x1355790 <line:1138:5, col:40>
| |     `-ReturnStmt 0x1355780 <col:7, col:37>
| |       `-CXXOperatorCallExpr 0x1355748 <col:14, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13556e0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1355568 0x10f8598 0x1300660 0x1328678 0x132b028
| |         |-CallExpr 0x1355638 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x13555f0 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x13555d0 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x13551f0 '__x' 'const move_iterator<_IteratorL> &'
| |         `-CallExpr 0x13556c0 <col:28, col:37> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x1355678 <col:28, col:32> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x1355658 <col:28> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x13553b0 '__y' 'const move_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x1355c38 <line:1140:3, line:1144:40> line:1142:5 operator==
| | |-TemplateTypeParmDecl 0x13557a8 <line:1140:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1355b98 <line:1141:5, line:1144:40> line:1142:5 operator== 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1355930 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1355a80 <line:1143:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1355e68 <line:1144:5, col:40>
| |     `-ReturnStmt 0x1355e58 <col:7, col:37>
| |       `-CXXOperatorCallExpr 0x1355e20 <col:14, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1355db0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1355c38 0x1355568 0x10f8598 0x1300660 0x1328678 0x132b028
| |         |-CallExpr 0x1355d08 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x1355cc0 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x1355ca0 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1355930 '__x' 'const move_iterator<_Iterator> &'
| |         `-CallExpr 0x1355d90 <col:28, col:37> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x1355d48 <col:28, col:32> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x1355d28 <col:28> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1355a80 '__y' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x1356348 <line:1146:3, line:1150:29> line:1148:5 operator!=
| | |-TemplateTypeParmDecl 0x1355e80 <line:1146:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x1355ef8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x13562a8 <line:1147:5, line:1150:29> line:1148:5 operator!= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x1356080 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x13561d0 <line:1149:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x13564e0 <line:1150:5, col:29>
| |     `-ReturnStmt 0x13564d0 <col:7, col:26>
| |       `-UnaryOperator 0x13564b8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1356498 <col:15, col:26> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1356460 <col:16, col:23> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x13563f0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1355c38 0x1355568 0x10f8598 0x1300660 0x1328678 0x132b028
| |             |-DeclRefExpr 0x13563b0 <col:16> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1356080 '__x' 'const move_iterator<_IteratorL> &'
| |             `-DeclRefExpr 0x13563d0 <col:23> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x13561d0 '__y' 'const move_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x1356948 <line:1152:3, line:1156:29> line:1154:5 operator!=
| | |-TemplateTypeParmDecl 0x13564f8 <line:1152:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x13568a8 <line:1153:5, line:1156:29> line:1154:5 operator!= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1356680 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x13567d0 <line:1155:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1356ae0 <line:1156:5, col:29>
| |     `-ReturnStmt 0x1356ad0 <col:7, col:26>
| |       `-UnaryOperator 0x1356ab8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1356a98 <col:15, col:26> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1356a60 <col:16, col:23> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x13569f0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x1355c38 0x1355568 0x10f8598 0x1300660 0x1328678 0x132b028
| |             |-DeclRefExpr 0x13569b0 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1356680 '__x' 'const move_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x13569d0 <col:23> 'const move_iterator<_Iterator>' lvalue ParmVar 0x13567d0 '__y' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x1356fc8 <line:1158:3, line:1162:39> line:1160:5 operator<
| | |-TemplateTypeParmDecl 0x1356af8 <line:1158:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x1356b78 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x1356f28 <line:1159:5, line:1162:39> line:1160:5 operator< 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x1356d00 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x1356e50 <line:1161:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x13571e8 <line:1162:5, col:39>
| |     `-ReturnStmt 0x13571d8 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x13571a0 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1357140 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |         |-CallExpr 0x1357098 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x1357050 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x1357030 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1356d00 '__x' 'const move_iterator<_IteratorL> &'
| |         `-CallExpr 0x1357120 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x13570d8 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x13570b8 <col:27> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x1356e50 '__y' 'const move_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x1357648 <line:1164:3, line:1168:39> line:1166:5 operator<
| | |-TemplateTypeParmDecl 0x1357200 <line:1164:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x13575a8 <line:1165:5, line:1168:39> line:1166:5 operator< 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1357380 <col:15, col:47> col:47 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x13574d0 <line:1167:8, col:40> col:40 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x13578b0 <line:1168:5, col:39>
| |     `-ReturnStmt 0x13578a0 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x1357868 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1357800 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |         |-CallExpr 0x1357718 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x13576d0 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x13576b0 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1357380 '__x' 'const move_iterator<_Iterator> &'
| |         `-CallExpr 0x13577a0 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x1357758 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x1357738 <col:27> 'const move_iterator<_Iterator>' lvalue ParmVar 0x13574d0 '__y' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x1357d98 <line:1170:3, line:1174:28> line:1172:5 operator<=
| | |-TemplateTypeParmDecl 0x13578c8 <line:1170:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x1357948 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x1357cf8 <line:1171:5, line:1174:28> line:1172:5 operator<= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x1357ad0 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x1357c20 <line:1173:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x1357f28 <line:1174:5, col:28>
| |     `-ReturnStmt 0x1357f18 <col:7, col:25>
| |       `-UnaryOperator 0x1357f00 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1357ee0 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1357ea8 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1357e40 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |             |-DeclRefExpr 0x1357e00 <col:16> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x1357c20 '__y' 'const move_iterator<_IteratorR> &'
| |             `-DeclRefExpr 0x1357e20 <col:22> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1357ad0 '__x' 'const move_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x1358388 <line:1176:3, line:1180:28> line:1178:5 operator<=
| | |-TemplateTypeParmDecl 0x1357f40 <line:1176:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x13582e8 <line:1177:5, line:1180:28> line:1178:5 operator<= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x13580c0 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1358210 <line:1179:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1358518 <line:1180:5, col:28>
| |     `-ReturnStmt 0x1358508 <col:7, col:25>
| |       `-UnaryOperator 0x13584f0 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x13584d0 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1358498 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1358430 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |             |-DeclRefExpr 0x13583f0 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1358210 '__y' 'const move_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x1358410 <col:22> 'const move_iterator<_Iterator>' lvalue ParmVar 0x13580c0 '__x' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x13589f8 <line:1182:3, line:1186:25> line:1184:5 operator>
| | |-TemplateTypeParmDecl 0x1358530 <line:1182:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x13585a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x1358958 <line:1183:5, line:1186:25> line:1184:5 operator> 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x1358730 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x1358880 <line:1185:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x1358b50 <line:1186:5, col:25>
| |     `-ReturnStmt 0x1358b40 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x1358b08 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1358aa0 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |         |-DeclRefExpr 0x1358a60 <col:14> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x1358880 '__y' 'const move_iterator<_IteratorR> &'
| |         `-DeclRefExpr 0x1358a80 <col:20> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1358730 '__x' 'const move_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x1358fb8 <line:1188:3, line:1192:25> line:1190:5 operator>
| | |-TemplateTypeParmDecl 0x1358b68 <line:1188:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1358f18 <line:1189:5, line:1192:25> line:1190:5 operator> 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1358cf0 <col:15, col:47> col:47 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1358e40 <line:1191:8, col:40> col:40 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1359110 <line:1192:5, col:25>
| |     `-ReturnStmt 0x1359100 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x13590c8 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1359060 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |         |-DeclRefExpr 0x1359020 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1358e40 '__y' 'const move_iterator<_Iterator> &'
| |         `-DeclRefExpr 0x1359040 <col:20> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1358cf0 '__x' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x13595f8 <line:1194:3, line:1198:28> line:1196:5 operator>=
| | |-TemplateTypeParmDecl 0x1359128 <line:1194:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x13591a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x1359558 <line:1195:5, line:1198:28> line:1196:5 operator>= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
| |   |-ParmVarDecl 0x1359330 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x1359480 <line:1197:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x1359788 <line:1198:5, col:28>
| |     `-ReturnStmt 0x1359778 <col:7, col:25>
| |       `-UnaryOperator 0x1359760 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1359740 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1359708 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x13596a0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |             |-DeclRefExpr 0x1359660 <col:16> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1359330 '__x' 'const move_iterator<_IteratorL> &'
| |             `-DeclRefExpr 0x1359680 <col:22> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x1359480 '__y' 'const move_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x1359be8 <line:1200:3, line:1204:28> line:1202:5 operator>=
| | |-TemplateTypeParmDecl 0x13597a0 <line:1200:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x1359b48 <line:1201:5, line:1204:28> line:1202:5 operator>= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x1359920 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
| |   |-ParmVarDecl 0x1359a70 <line:1203:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x1359d78 <line:1204:5, col:28>
| |     `-ReturnStmt 0x1359d68 <col:7, col:25>
| |       `-UnaryOperator 0x1359d50 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
| |         `-ParenExpr 0x1359d30 <col:15, col:25> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x1359cf8 <col:16, col:22> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x1359c90 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1357648 0x1356fc8 0x1300f28 0x1328cf8 0x132b758
| |             |-DeclRefExpr 0x1359c50 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1359920 '__x' 'const move_iterator<_Iterator> &'
| |             `-DeclRefExpr 0x1359c70 <col:22> 'const move_iterator<_Iterator>' lvalue ParmVar 0x1359a70 '__y' 'const move_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x135a4a8 <line:1207:3, line:1212:39> line:1209:5 operator-
| | |-TemplateTypeParmDecl 0x1359d90 <line:1207:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| | |-TemplateTypeParmDecl 0x1359e08 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| | `-FunctionDecl 0x135a408 <line:1208:5, line:1212:39> line:1209:5 operator- 'auto (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &) -> decltype(__x.base() - __y.base())' inline
| |   |-ParmVarDecl 0x1359f90 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
| |   |-ParmVarDecl 0x135a0e0 <line:1210:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
| |   `-CompoundStmt 0x135a6b8 <line:1212:5, col:39>
| |     `-ReturnStmt 0x135a6a8 <col:7, col:36>
| |       `-CXXOperatorCallExpr 0x135a670 <col:14, col:36> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x135a620 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x135a4a8 0x132e9d8
| |         |-CallExpr 0x135a578 <col:14, col:23> '<dependent type>'
| |         | `-CXXDependentScopeMemberExpr 0x135a530 <col:14, col:18> '<dependent type>' lvalue .base
| |         |   `-DeclRefExpr 0x135a510 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x1359f90 '__x' 'const move_iterator<_IteratorL> &'
| |         `-CallExpr 0x135a600 <col:27, col:36> '<dependent type>'
| |           `-CXXDependentScopeMemberExpr 0x135a5b8 <col:27, col:31> '<dependent type>' lvalue .base
| |             `-DeclRefExpr 0x135a598 <col:27> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x135a0e0 '__y' 'const move_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x135ac78 <line:1214:3, line:1218:25> line:1216:5 operator+
| | |-TemplateTypeParmDecl 0x135a6d0 <line:1214:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x135abd8 <line:1215:5, line:1218:25> line:1216:5 operator+ 'move_iterator<_Iterator> (typename move_iterator<_Iterator>::difference_type, const move_iterator<_Iterator> &)' inline
| |   |-ParmVarDecl 0x135a950 <col:15, col:66> col:66 referenced __n 'typename move_iterator<_Iterator>::difference_type'
| |   |-ParmVarDecl 0x135aaa0 <line:1217:8, col:40> col:40 referenced __x 'const move_iterator<_Iterator> &'
| |   `-CompoundStmt 0x135adb8 <line:1218:5, col:25>
| |     `-ReturnStmt 0x135ada8 <col:7, col:20>
| |       `-CXXOperatorCallExpr 0x135ad70 <col:14, col:20> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x135ad20 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x135ac78 0x132f1a8
| |         |-DeclRefExpr 0x135ace0 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x135aaa0 '__x' 'const move_iterator<_Iterator> &'
| |         `-DeclRefExpr 0x135ad00 <col:20> 'typename move_iterator<_Iterator>::difference_type' lvalue ParmVar 0x135a950 '__n' 'typename move_iterator<_Iterator>::difference_type'
| |-FunctionTemplateDecl 0x135b0b8 <line:1220:3, line:1223:45> line:1222:5 make_move_iterator
| | |-TemplateTypeParmDecl 0x135add0 <line:1220:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x135b018 <line:1221:5, line:1223:45> line:1222:5 make_move_iterator 'move_iterator<_Iterator> (_Iterator)' inline
| |   |-ParmVarDecl 0x135af00 <col:24, col:34> col:34 referenced __i '_Iterator'
| |   `-CompoundStmt 0x135b228 <line:1223:5, col:45>
| |     `-ReturnStmt 0x135b218 <col:7, col:42>
| |       `-CXXUnresolvedConstructExpr 0x135b1f0 <col:14, col:42> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
| |         `-DeclRefExpr 0x135b1d0 <col:39> '_Iterator' lvalue ParmVar 0x135af00 '__i' '_Iterator'
| |-FunctionTemplateDecl 0x135ba78 <line:1225:3, line:1231:32> line:1230:5 __make_move_if_noexcept_iterator
| | |-TemplateTypeParmDecl 0x135b240 <line:1225:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-TemplateTypeParmDecl 0x135b830 <col:32, line:1228:55> line:1225:41 referenced typename depth 0 index 1 _ReturnType
| | | `-TemplateArgument type 'typename conditional<__move_if_noexcept_cond<typename iterator_traits<_Iterator>::value_type>::value, _Iterator, move_iterator<_Iterator> >::type'
| | `-FunctionDecl 0x135b9d8 <line:1229:5, line:1231:32> line:1230:5 __make_move_if_noexcept_iterator '_ReturnType (_Iterator)' inline
| |   |-ParmVarDecl 0x135b8e0 <col:38, col:48> col:48 referenced __i '_Iterator'
| |   `-CompoundStmt 0x135bb40 <line:1231:5, col:32>
| |     `-ReturnStmt 0x135bb30 <col:7, col:29>
| |       `-CXXUnresolvedConstructExpr 0x135bb08 <col:14, col:29> '_ReturnType' '_ReturnType'
| |         `-DeclRefExpr 0x135bae8 <col:26> '_Iterator' lvalue ParmVar 0x135b8e0 '__i' '_Iterator'
| |-FunctionTemplateDecl 0x135c2d8 <line:1235:3, line:1240:32> line:1239:5 __make_move_if_noexcept_iterator
| | |-TemplateTypeParmDecl 0x135bb58 <line:1235:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x135c090 <col:26, line:1237:41> line:1235:35 referenced typename depth 0 index 1 _ReturnType
| | | `-TemplateArgument type 'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp *, move_iterator<_Tp *> >::type'
| | `-FunctionDecl 0x135c238 <line:1238:5, line:1240:32> line:1239:5 __make_move_if_noexcept_iterator '_ReturnType (_Tp *)' inline
| |   |-ParmVarDecl 0x135c140 <col:38, col:43> col:43 referenced __i '_Tp *'
| |   `-CompoundStmt 0x135c3a0 <line:1240:5, col:32>
| |     `-ReturnStmt 0x135c390 <col:7, col:29>
| |       `-CXXUnresolvedConstructExpr 0x135c368 <col:14, col:29> '_ReturnType' '_ReturnType'
| |         `-DeclRefExpr 0x135c348 <col:26> '_Tp *' lvalue ParmVar 0x135c140 '__i' '_Tp *'
| |-FunctionTemplateDecl 0x135c898 <line:1244:3, line:1248:61> line:1246:5 __niter_base
| | |-TemplateTypeParmDecl 0x135c3b8 <line:1244:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x135c7f8 <line:1245:5, line:1248:61> line:1246:5 __niter_base 'auto (move_iterator<_Iterator>) -> decltype(make_move_iterator(__niter_base(__it.base())))'
| |   |-ParmVarDecl 0x135c510 <col:18, col:43> col:43 referenced __it 'move_iterator<_Iterator>'
| |   `-CompoundStmt 0x135ca80 <line:1248:5, col:61>
| |     `-ReturnStmt 0x135ca70 <col:7, col:58>
| |       `-CallExpr 0x135ca48 <col:14, col:58> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x135c8f8 <col:14> '<overloaded function type>' lvalue (ADL) = 'make_move_iterator' 0x135b0b8
| |         `-CallExpr 0x135ca20 <col:33, col:57> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x135c940 <col:33> '<overloaded function type>' lvalue (ADL) = '__niter_base' 0x135c898 0x1351a28 0x13301b8
| |           `-CallExpr 0x135ca00 <col:46, col:56> '<dependent type>'
| |             `-CXXDependentScopeMemberExpr 0x135c9b8 <col:46, col:51> '<dependent type>' lvalue .base
| |               `-DeclRefExpr 0x135c998 <col:46> 'move_iterator<_Iterator>' lvalue ParmVar 0x135c510 '__it' 'move_iterator<_Iterator>'
| |-ClassTemplatePartialSpecializationDecl 0x135ccb0 parent 0x1285070 <line:1250:3, line:1255:5> line:1251:12 struct __is_move_iterator definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'move_iterator<type-parameter-0-0>'
| | |-TemplateTypeParmDecl 0x135ca98 <line:1250:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | |-CXXRecordDecl 0x135cf18 <line:1251:5, col:12> col:12 implicit struct __is_move_iterator
| | |-EnumDecl 0x135cfa8 <line:1253:7, col:26> col:7
| | | `-EnumConstantDecl 0x135d090 <col:14, col:24> col:14 __value 'std::__is_move_iterator<move_iterator<type-parameter-0-0> >::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:1253:7)'
| | |   `-IntegerLiteral 0x135d070 <col:24> 'int' 1
| | `-TypedefDecl 0x135d0f0 <line:1254:7, col:27> col:27 __type 'std::__true_type'
| |   `-RecordType 0x12851d0 'std::__true_type'
| |     `-CXXRecord 0x1285138 '__true_type'
| `-FunctionTemplateDecl 0x135d5c8 <line:1257:3, line:1261:41> line:1259:5 __miter_base
|   |-TemplateTypeParmDecl 0x135d160 <line:1257:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
|   `-FunctionDecl 0x135d528 <line:1258:5, line:1261:41> line:1259:5 __miter_base 'auto (move_iterator<_Iterator>) -> decltype(__miter_base(__it.base()))'
|     |-ParmVarDecl 0x135d2b0 <col:18, col:43> col:43 referenced __it 'move_iterator<_Iterator>'
|     `-CompoundStmt 0x135d740 <line:1261:5, col:41>
|       `-ReturnStmt 0x135d730 <col:7, col:38>
|         `-CallExpr 0x135d708 <col:14, col:38> '<dependent type>'
|           |-UnresolvedLookupExpr 0x135d628 <col:14> '<overloaded function type>' lvalue (ADL) = '__miter_base' 0x135d5c8 0x12af378 0x1330e78
|           `-CallExpr 0x135d6e8 <col:27, col:37> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x135d6a0 <col:27, col:32> '<dependent type>' lvalue .base
|               `-DeclRefExpr 0x135d680 <col:27> 'move_iterator<_Iterator>' lvalue ParmVar 0x135d2b0 '__it' 'move_iterator<_Iterator>'
|-NamespaceDecl 0x135d758 prev 0x13513b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/debug/debug.h:48:1, line:51:1> line:48:11 std
| |-original Namespace 0x103af10 'std'
| `-NamespaceDecl 0x135d7c8 <line:50:3, col:23> col:13 __debug
|-NamespaceDecl 0x135d838 <line:56:1, line:59:1> line:56:11 __gnu_debug
| `-UsingDirectiveDecl 0x135d8c8 <line:58:3, col:24> col:24 Namespace 0x135d7c8 '__debug'
|-NamespaceDecl 0x135d920 prev 0x1337e58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:33:1, line:360:1> line:33:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| `-NamespaceDecl 0x135d990 <line:35:1, line:359:1> line:35:11 __ops
|   |-CXXRecordDecl 0x135da00 <line:37:3, line:44:3> line:37:10 referenced struct _Iter_less_iter definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x135db18 <col:3, col:10> col:10 implicit struct _Iter_less_iter
|   | |-FunctionTemplateDecl 0x135df38 <line:39:5, line:43:33> line:42:7 operator()
|   | | |-TemplateTypeParmDecl 0x135dba8 <line:39:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator1
|   | | |-TemplateTypeParmDecl 0x135dc28 <col:35, col:44> col:44 referenced typename depth 0 index 1 _Iterator2
|   | | `-CXXMethodDecl 0x135de98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:43:33> line:42:7 constexpr operator() 'bool (_Iterator1, _Iterator2) const'
|   | |   |-ParmVarDecl 0x135dce0 <col:18, col:29> col:29 referenced __it1 '_Iterator1'
|   | |   |-ParmVarDecl 0x135dd58 <col:36, col:47> col:47 referenced __it2 '_Iterator2'
|   | |   `-CompoundStmt 0x135e148 <line:43:7, col:33>
|   | |     `-ReturnStmt 0x135e138 <col:9, col:26>
|   | |       `-CXXOperatorCallExpr 0x135e100 <col:16, col:26> '<dependent type>'
|   | |         |-UnresolvedLookupExpr 0x135e0b0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dce50 0x10dd5e0
|   | |         |-UnaryOperator 0x135e038 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   | |         | `-DeclRefExpr 0x135e018 <col:17> '_Iterator1' lvalue ParmVar 0x135dce0 '__it1' '_Iterator1'
|   | |         `-UnaryOperator 0x135e098 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
|   | |           `-DeclRefExpr 0x135e078 <col:26> '_Iterator2' lvalue ParmVar 0x135dd58 '__it2' '_Iterator2'
|   | |-CXXConstructorDecl 0x135e270 <line:37:10> col:10 implicit referenced constexpr _Iter_less_iter 'void () noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x135e378 <col:10> col:10 implicit constexpr _Iter_less_iter 'void (const __gnu_cxx::__ops::_Iter_less_iter &)' inline default trivial noexcept-unevaluated 0x135e378
|   | | `-ParmVarDecl 0x135e488 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_less_iter &'
|   | |-CXXConstructorDecl 0x135e528 <col:10> col:10 implicit used constexpr _Iter_less_iter 'void (__gnu_cxx::__ops::_Iter_less_iter &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x135e638 <col:10> col:10 '__gnu_cxx::__ops::_Iter_less_iter &&'
|   | | `-CompoundStmt 0x135e810 <col:10>
|   | `-CXXDestructorDecl 0x135e6d8 <col:10> col:10 implicit referenced ~_Iter_less_iter 'void () noexcept' inline default trivial
|   |-FunctionDecl 0x135e1a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:49:31> line:48:3 referenced constexpr __iter_less_iter '__gnu_cxx::__ops::_Iter_less_iter ()' inline
|   | `-CompoundStmt 0x135e878 <line:49:3, col:31>
|   |   `-ReturnStmt 0x135e868 <col:5, col:28>
|   |     `-ExprWithCleanups 0x135e850 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter'
|   |       `-CXXConstructExpr 0x135e820 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' 'void (__gnu_cxx::__ops::_Iter_less_iter &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x135e7c0 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' xvalue
|   |           `-CXXTemporaryObjectExpr 0x135e6a8 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' 'void () noexcept' zeroing
|   |-CXXRecordDecl 0x135e940 <line:51:3, line:66:3> line:51:10 referenced struct _Iter_less_val definition
|   | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x135ea58 <col:3, col:10> col:10 implicit referenced struct _Iter_less_val
|   | |-CXXConstructorDecl 0x135eb50 <line:54:5, col:40> col:15 referenced constexpr _Iter_less_val 'void () noexcept' default trivial
|   | |-CXXConstructorDecl 0x135ecc8 <line:59:5, line:60:39> col:5 _Iter_less_val 'void (__gnu_cxx::__ops::_Iter_less_iter)'
|   | | |-ParmVarDecl 0x135ec08 <col:20> col:35 '__gnu_cxx::__ops::_Iter_less_iter'
|   | | `-CompoundStmt 0x135f1f0 <col:37, col:39>
|   | |-FunctionTemplateDecl 0x135f138 <line:62:5, line:65:31> line:64:7 operator()
|   | | |-TemplateTypeParmDecl 0x135ed78 <line:62:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator
|   | | |-TemplateTypeParmDecl 0x135edf8 <col:34, col:43> col:43 referenced typename depth 0 index 1 _Value
|   | | `-CXXMethodDecl 0x135f098 <line:63:7, line:65:31> line:64:7 operator() 'bool (_Iterator, _Value &) const'
|   | |   |-ParmVarDecl 0x135eeb0 <col:18, col:28> col:28 referenced __it '_Iterator'
|   | |   |-ParmVarDecl 0x135ef58 <col:34, col:42> col:42 referenced __val '_Value &'
|   | |   `-CompoundStmt 0x135f2f0 <line:65:7, col:31>
|   | |     `-ReturnStmt 0x135f2e0 <col:9, col:24>
|   | |       `-CXXOperatorCallExpr 0x135f2a8 <col:16, col:24> '<dependent type>'
|   | |         |-UnresolvedLookupExpr 0x135f258 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dce50 0x10dd5e0
|   | |         |-UnaryOperator 0x135f220 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   | |         | `-DeclRefExpr 0x135f200 <col:17> '_Iterator' lvalue ParmVar 0x135eeb0 '__it' '_Iterator'
|   | |         `-DeclRefExpr 0x135f238 <col:24> '_Value' lvalue ParmVar 0x135ef58 '__val' '_Value &'
|   | |-CXXConstructorDecl 0x135f438 <line:51:10> col:10 implicit constexpr _Iter_less_val 'void (const __gnu_cxx::__ops::_Iter_less_val &)' inline default trivial noexcept-unevaluated 0x135f438
|   | | `-ParmVarDecl 0x135f548 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_less_val &'
|   | |-CXXConstructorDecl 0x135f5e8 <col:10> col:10 implicit used constexpr _Iter_less_val 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x135f6f8 <col:10> col:10 '__gnu_cxx::__ops::_Iter_less_val &&'
|   | | `-CompoundStmt 0x13664a0 <col:10>
|   | `-CXXDestructorDecl 0x1366370 <col:10> col:10 implicit referenced ~_Iter_less_val 'void () noexcept' inline default trivial
|   |-FunctionDecl 0x135f358 <line:68:3, line:70:30> line:69:3 referenced __iter_less_val '__gnu_cxx::__ops::_Iter_less_val ()' inline
|   | `-CompoundStmt 0x1366508 <line:70:3, col:30>
|   |   `-ReturnStmt 0x13664f8 <col:5, col:27>
|   |     `-ExprWithCleanups 0x13664e0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val'
|   |       `-CXXConstructExpr 0x13664b0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x1366450 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' xvalue
|   |           `-CXXTemporaryObjectExpr 0x135f768 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void () noexcept' zeroing
|   |-FunctionDecl 0x13665f8 <line:72:3, line:74:30> line:73:3 __iter_comp_val '__gnu_cxx::__ops::_Iter_less_val (__gnu_cxx::__ops::_Iter_less_iter)' inline
|   | |-ParmVarDecl 0x1366530 <col:19> col:34 '__gnu_cxx::__ops::_Iter_less_iter'
|   | `-CompoundStmt 0x1366750 <line:74:3, col:30>
|   |   `-ReturnStmt 0x1366740 <col:5, col:27>
|   |     `-ExprWithCleanups 0x1366728 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val'
|   |       `-CXXConstructExpr 0x13666f8 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x13666e0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' xvalue
|   |           `-CXXTemporaryObjectExpr 0x13666b0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void () noexcept' zeroing
|   |-CXXRecordDecl 0x1366768 <line:76:3, line:91:3> line:76:10 referenced struct _Val_less_iter definition
|   | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x1366888 <col:3, col:10> col:10 implicit referenced struct _Val_less_iter
|   | |-CXXConstructorDecl 0x1366980 <line:79:5, col:40> col:15 referenced constexpr _Val_less_iter 'void () noexcept' default trivial
|   | |-CXXConstructorDecl 0x1366ac8 <line:84:5, line:85:39> col:5 _Val_less_iter 'void (__gnu_cxx::__ops::_Iter_less_iter)'
|   | | |-ParmVarDecl 0x1366a38 <col:20> col:35 '__gnu_cxx::__ops::_Iter_less_iter'
|   | | `-CompoundStmt 0x1366ff0 <col:37, col:39>
|   | |-FunctionTemplateDecl 0x1366f38 <line:87:5, line:90:31> line:89:7 operator()
|   | | |-TemplateTypeParmDecl 0x1366b78 <line:87:14, col:23> col:23 referenced typename depth 0 index 0 _Value
|   | | |-TemplateTypeParmDecl 0x1366bf8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator
|   | | `-CXXMethodDecl 0x1366e98 <line:88:7, line:90:31> line:89:7 operator() 'bool (_Value &, _Iterator) const'
|   | |   |-ParmVarDecl 0x1366cd8 <col:18, col:26> col:26 referenced __val '_Value &'
|   | |   |-ParmVarDecl 0x1366d50 <col:33, col:43> col:43 referenced __it '_Iterator'
|   | |   `-CompoundStmt 0x1367118 <line:90:7, col:31>
|   | |     `-ReturnStmt 0x1367108 <col:9, col:25>
|   | |       `-CXXOperatorCallExpr 0x13670d0 <col:16, col:25> '<dependent type>'
|   | |         |-UnresolvedLookupExpr 0x1367080 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dce50 0x10dd5e0
|   | |         |-DeclRefExpr 0x1367000 <col:16> '_Value' lvalue ParmVar 0x1366cd8 '__val' '_Value &'
|   | |         `-UnaryOperator 0x1367068 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   | |           `-DeclRefExpr 0x1367048 <col:25> '_Iterator' lvalue ParmVar 0x1366d50 '__it' '_Iterator'
|   | |-CXXConstructorDecl 0x1367258 <line:76:10> col:10 implicit constexpr _Val_less_iter 'void (const __gnu_cxx::__ops::_Val_less_iter &)' inline default trivial noexcept-unevaluated 0x1367258
|   | | `-ParmVarDecl 0x1367368 <col:10> col:10 'const __gnu_cxx::__ops::_Val_less_iter &'
|   | |-CXXConstructorDecl 0x1367408 <col:10> col:10 implicit used constexpr _Val_less_iter 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x1367518 <col:10> col:10 '__gnu_cxx::__ops::_Val_less_iter &&'
|   | | `-CompoundStmt 0x13676f0 <col:10>
|   | `-CXXDestructorDecl 0x13675b8 <col:10> col:10 implicit referenced ~_Val_less_iter 'void () noexcept' inline default trivial
|   |-FunctionDecl 0x1367178 <line:93:3, line:95:30> line:94:3 __val_less_iter '__gnu_cxx::__ops::_Val_less_iter ()' inline
|   | `-CompoundStmt 0x1367758 <line:95:3, col:30>
|   |   `-ReturnStmt 0x1367748 <col:5, col:27>
|   |     `-ExprWithCleanups 0x1367730 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter'
|   |       `-CXXConstructExpr 0x1367700 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x13676a0 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' xvalue
|   |           `-CXXTemporaryObjectExpr 0x1367588 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void () noexcept' zeroing
|   |-FunctionDecl 0x1367848 <line:97:3, line:99:30> line:98:3 __val_comp_iter '__gnu_cxx::__ops::_Val_less_iter (__gnu_cxx::__ops::_Iter_less_iter)' inline
|   | |-ParmVarDecl 0x1367780 <col:19> col:34 '__gnu_cxx::__ops::_Iter_less_iter'
|   | `-CompoundStmt 0x13679a0 <line:99:3, col:30>
|   |   `-ReturnStmt 0x1367990 <col:5, col:27>
|   |     `-ExprWithCleanups 0x1367978 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter'
|   |       `-CXXConstructExpr 0x1367948 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x1367930 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' xvalue
|   |           `-CXXTemporaryObjectExpr 0x1367900 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void () noexcept' zeroing
|   |-CXXRecordDecl 0x13679b8 <line:101:3, line:107:3> line:101:10 referenced struct _Iter_equal_to_iter definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x1367ad8 <col:3, col:10> col:10 implicit struct _Iter_equal_to_iter
|   | |-FunctionTemplateDecl 0x1367eb8 <line:103:5, line:106:34> line:105:7 operator()
|   | | |-TemplateTypeParmDecl 0x1367b68 <line:103:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator1
|   | | |-TemplateTypeParmDecl 0x1367be8 <col:35, col:44> col:44 referenced typename depth 0 index 1 _Iterator2
|   | | `-CXXMethodDecl 0x1367e18 <line:104:7, line:106:34> line:105:7 operator() 'bool (_Iterator1, _Iterator2) const'
|   | |   |-ParmVarDecl 0x1367ca0 <col:18, col:29> col:29 referenced __it1 '_Iterator1'
|   | |   |-ParmVarDecl 0x1367d18 <col:36, col:47> col:47 referenced __it2 '_Iterator2'
|   | |   `-CompoundStmt 0x1368070 <line:106:7, col:34>
|   | |     `-ReturnStmt 0x1368060 <col:9, col:27>
|   | |       `-CXXOperatorCallExpr 0x1368028 <col:16, col:27> '<dependent type>'
|   | |         |-UnresolvedLookupExpr 0x1367fd8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
|   | |         |-UnaryOperator 0x1367f88 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   | |         | `-DeclRefExpr 0x1367f68 <col:17> '_Iterator1' lvalue ParmVar 0x1367ca0 '__it1' '_Iterator1'
|   | |         `-UnaryOperator 0x1367fc0 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
|   | |           `-DeclRefExpr 0x1367fa0 <col:27> '_Iterator2' lvalue ParmVar 0x1367d18 '__it2' '_Iterator2'
|   | |-CXXConstructorDecl 0x13681a0 <line:101:10> col:10 implicit referenced constexpr _Iter_equal_to_iter 'void () noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x13682a8 <col:10> col:10 implicit constexpr _Iter_equal_to_iter 'void (const __gnu_cxx::__ops::_Iter_equal_to_iter &)' inline default trivial noexcept-unevaluated 0x13682a8
|   | | `-ParmVarDecl 0x13683b8 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_equal_to_iter &'
|   | |-CXXConstructorDecl 0x1368458 <col:10> col:10 implicit used constexpr _Iter_equal_to_iter 'void (__gnu_cxx::__ops::_Iter_equal_to_iter &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x1368568 <col:10> col:10 '__gnu_cxx::__ops::_Iter_equal_to_iter &&'
|   | | `-CompoundStmt 0x1368740 <col:10>
|   | `-CXXDestructorDecl 0x1368608 <col:10> col:10 implicit referenced ~_Iter_equal_to_iter 'void () noexcept' inline default trivial
|   |-FunctionDecl 0x13680d8 <line:109:3, line:111:35> line:110:3 referenced __iter_equal_to_iter '__gnu_cxx::__ops::_Iter_equal_to_iter ()' inline
|   | `-CompoundStmt 0x13687a8 <line:111:3, col:35>
|   |   `-ReturnStmt 0x1368798 <col:5, col:32>
|   |     `-ExprWithCleanups 0x1368780 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter'
|   |       `-CXXConstructExpr 0x1368750 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' 'void (__gnu_cxx::__ops::_Iter_equal_to_iter &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x13686f0 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' xvalue
|   |           `-CXXTemporaryObjectExpr 0x13685d8 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' 'void () noexcept' zeroing
|   |-CXXRecordDecl 0x13687c0 <line:113:3, line:119:3> line:113:10 referenced struct _Iter_equal_to_val definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial
|   | |-CXXRecordDecl 0x13688d8 <col:3, col:10> col:10 implicit struct _Iter_equal_to_val
|   | |-FunctionTemplateDecl 0x1368ce8 <line:115:5, line:118:32> line:117:7 operator()
|   | | |-TemplateTypeParmDecl 0x1368968 <line:115:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator
|   | | |-TemplateTypeParmDecl 0x13689e8 <col:34, col:43> col:43 referenced typename depth 0 index 1 _Value
|   | | `-CXXMethodDecl 0x1368c48 <line:116:7, line:118:32> line:117:7 operator() 'bool (_Iterator, _Value &) const'
|   | |   |-ParmVarDecl 0x1368aa0 <col:18, col:28> col:28 referenced __it '_Iterator'
|   | |   |-ParmVarDecl 0x1368b48 <col:34, col:42> col:42 referenced __val '_Value &'
|   | |   `-CompoundStmt 0x1368e88 <line:118:7, col:32>
|   | |     `-ReturnStmt 0x1368e78 <col:9, col:25>
|   | |       `-CXXOperatorCallExpr 0x1368e40 <col:16, col:25> '<dependent type>'
|   | |         |-UnresolvedLookupExpr 0x1368df0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
|   | |         |-UnaryOperator 0x1368db8 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   | |         | `-DeclRefExpr 0x1368d98 <col:17> '_Iterator' lvalue ParmVar 0x1368aa0 '__it' '_Iterator'
|   | |         `-DeclRefExpr 0x1368dd0 <col:25> '_Value' lvalue ParmVar 0x1368b48 '__val' '_Value &'
|   | |-CXXConstructorDecl 0x1368fb0 <line:113:10> col:10 implicit referenced constexpr _Iter_equal_to_val 'void () noexcept' inline default trivial
|   | |-CXXConstructorDecl 0x13690b8 <col:10> col:10 implicit constexpr _Iter_equal_to_val 'void (const __gnu_cxx::__ops::_Iter_equal_to_val &)' inline default trivial noexcept-unevaluated 0x13690b8
|   | | `-ParmVarDecl 0x13691c8 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_equal_to_val &'
|   | |-CXXConstructorDecl 0x1369268 <col:10> col:10 implicit used constexpr _Iter_equal_to_val 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' inline default trivial
|   | | |-ParmVarDecl 0x1369378 <col:10> col:10 '__gnu_cxx::__ops::_Iter_equal_to_val &&'
|   | | `-CompoundStmt 0x1369550 <col:10>
|   | `-CXXDestructorDecl 0x1369418 <col:10> col:10 implicit referenced ~_Iter_equal_to_val 'void () noexcept' inline default trivial
|   |-FunctionDecl 0x1368ee8 <line:121:3, line:123:34> line:122:3 __iter_equal_to_val '__gnu_cxx::__ops::_Iter_equal_to_val ()' inline
|   | `-CompoundStmt 0x13695b8 <line:123:3, col:34>
|   |   `-ReturnStmt 0x13695a8 <col:5, col:31>
|   |     `-ExprWithCleanups 0x1369590 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val'
|   |       `-CXXConstructExpr 0x1369560 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x1369500 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' xvalue
|   |           `-CXXTemporaryObjectExpr 0x13693e8 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void () noexcept' zeroing
|   |-FunctionDecl 0x13696a8 <line:125:3, line:127:34> line:126:3 __iter_comp_val '__gnu_cxx::__ops::_Iter_equal_to_val (__gnu_cxx::__ops::_Iter_equal_to_iter)' inline
|   | |-ParmVarDecl 0x13695e0 <col:19> col:38 '__gnu_cxx::__ops::_Iter_equal_to_iter'
|   | `-CompoundStmt 0x1369800 <line:127:3, col:34>
|   |   `-ReturnStmt 0x13697f0 <col:5, col:31>
|   |     `-ExprWithCleanups 0x13697d8 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val'
|   |       `-CXXConstructExpr 0x13697a8 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' elidable
|   |         `-MaterializeTemporaryExpr 0x1369790 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' xvalue
|   |           `-CXXTemporaryObjectExpr 0x1369760 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void () noexcept' zeroing
|   |-ClassTemplateDecl 0x1369948 <line:129:3, line:144:5> line:130:12 _Iter_comp_iter
|   | |-TemplateTypeParmDecl 0x1369818 <line:129:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-CXXRecordDecl 0x13698b8 <line:130:5, line:144:5> line:130:12 struct _Iter_comp_iter definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x1369ba0 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_iter
|   |   |-FieldDecl 0x1369c40 <line:132:7, col:16> col:16 referenced _M_comp '_Compare'
|   |   |-CXXConstructorDecl 0x1369da8 <line:134:7, line:137:9> line:135:7 constexpr _Iter_comp_iter<_Compare> 'void (_Compare)'
|   |   | |-ParmVarDecl 0x1369ca0 <col:23, col:32> col:32 referenced __comp '_Compare'
|   |   | |-CXXCtorInitializer Field 0x1369c40 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136a2e8 <line:136:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x136a2c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x136a258 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x136a2a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:136:26> '_Compare' lvalue ParmVar 0x1369ca0 '__comp' '_Compare'
|   |   | `-CompoundStmt 0x136a338 <line:137:7, col:9>
|   |   `-FunctionTemplateDecl 0x136a1b8 <line:139:7, line:143:49> line:142:9 operator()
|   |     |-TemplateTypeParmDecl 0x1369e58 <line:139:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator1
|   |     |-TemplateTypeParmDecl 0x1369ed8 <col:37, col:46> col:46 referenced typename depth 1 index 1 _Iterator2
|   |     `-CXXMethodDecl 0x136a118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:143:49> line:142:9 constexpr operator() 'bool (_Iterator1, _Iterator2)'
|   |       |-ParmVarDecl 0x1369f90 <col:20, col:31> col:31 referenced __it1 '_Iterator1'
|   |       |-ParmVarDecl 0x136a008 <col:38, col:49> col:49 referenced __it2 '_Iterator2'
|   |       `-CompoundStmt 0x136bfd8 <line:143:9, col:49>
|   |         `-ReturnStmt 0x136bfc8 <col:11, col:46>
|   |           `-CXXUnresolvedConstructExpr 0x136bfa0 <col:18, col:46> 'bool' 'bool'
|   |             `-CallExpr 0x136bf70 <col:23, col:45> '<dependent type>'
|   |               |-MemberExpr 0x136bed0 <col:23> '_Compare' lvalue ->_M_comp 0x1369c40
|   |               | `-CXXThisExpr 0x136a358 <col:23> '_Iter_comp_iter<_Compare> *' implicit this
|   |               |-UnaryOperator 0x136bf20 <col:31, col:32> '<dependent type>' prefix '*' cannot overflow
|   |               | `-DeclRefExpr 0x136bf00 <col:32> '_Iterator1' lvalue ParmVar 0x1369f90 '__it1' '_Iterator1'
|   |               `-UnaryOperator 0x136bf58 <col:39, col:40> '<dependent type>' prefix '*' cannot overflow
|   |                 `-DeclRefExpr 0x136bf38 <col:40> '_Iterator2' lvalue ParmVar 0x136a008 '__it2' '_Iterator2'
|   |-FunctionTemplateDecl 0x136c2d8 <line:146:3, line:150:64> line:149:5 __iter_comp_iter
|   | |-TemplateTypeParmDecl 0x136bff0 <line:146:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-FunctionDecl 0x136c238 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:150:64> line:149:5 constexpr __iter_comp_iter '_Iter_comp_iter<_Compare> (_Compare)' inline
|   |   |-ParmVarDecl 0x136c120 <col:22, col:31> col:31 referenced __comp '_Compare'
|   |   `-CompoundStmt 0x136c4d8 <line:150:5, col:64>
|   |     `-ReturnStmt 0x136c4c8 <col:7, col:61>
|   |       `-CXXUnresolvedConstructExpr 0x136c4a0 <col:14, col:61> '_Iter_comp_iter<_Compare>' '_Iter_comp_iter<_Compare>'
|   |         `-CallExpr 0x136c478 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x136c410 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x136c458 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:150:54> '_Compare' lvalue ParmVar 0x136c120 '__comp' '_Compare'
|   |-ClassTemplateDecl 0x136c618 <line:152:3, line:178:5> line:153:12 _Iter_comp_val
|   | |-TemplateTypeParmDecl 0x136c4f0 <line:152:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-CXXRecordDecl 0x136c588 <line:153:5, line:178:5> line:153:12 struct _Iter_comp_val definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x136c870 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_val
|   |   |-FieldDecl 0x136c910 <line:155:7, col:16> col:16 referenced _M_comp '_Compare'
|   |   |-CXXConstructorDecl 0x136ca78 <line:157:7, line:160:9> line:158:7 _Iter_comp_val<_Compare> 'void (_Compare)'
|   |   | |-ParmVarDecl 0x136c970 <col:22, col:31> col:31 referenced __comp '_Compare'
|   |   | |-CXXCtorInitializer Field 0x136c910 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136d598 <line:159:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x136d570 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x136d508 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x136d550 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:159:26> '_Compare' lvalue ParmVar 0x136c970 '__comp' '_Compare'
|   |   | `-CompoundStmt 0x136d5e8 <line:160:7, col:9>
|   |   |-CXXConstructorDecl 0x136cd38 <line:162:7, line:165:9> line:163:7 _Iter_comp_val<_Compare> 'void (const _Iter_comp_iter<_Compare> &)'
|   |   | |-ParmVarDecl 0x136cc40 <col:22, col:55> col:55 referenced __comp 'const _Iter_comp_iter<_Compare> &'
|   |   | |-CXXCtorInitializer Field 0x136c910 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136d660 <line:164:11, col:26> 'NULL TYPE'
|   |   | |   `-CXXDependentScopeMemberExpr 0x136d618 <col:12, col:19> '<dependent type>' lvalue ._M_comp
|   |   | |     `-DeclRefExpr 0x136d5f8 <col:12> 'const _Iter_comp_iter<_Compare>' lvalue ParmVar 0x136cc40 '__comp' 'const _Iter_comp_iter<_Compare> &'
|   |   | `-CompoundStmt 0x136d6b0 <line:165:7, col:9>
|   |   |-CXXConstructorDecl 0x136cff8 <line:168:7, line:171:9> line:169:7 _Iter_comp_val<_Compare> 'void (_Iter_comp_iter<_Compare> &&)'
|   |   | |-ParmVarDecl 0x136cf00 <col:22, col:50> col:50 referenced __comp '_Iter_comp_iter<_Compare> &&'
|   |   | |-CXXCtorInitializer Field 0x136c910 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136d7b8 <line:170:11, col:37> 'NULL TYPE'
|   |   | |   `-CallExpr 0x136d790 <col:12, col:36> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x136d6e0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-CXXDependentScopeMemberExpr 0x136d748 <col:22, col:29> '<dependent type>' lvalue ._M_comp
|   |   | |       `-DeclRefExpr 0x136d728 <col:22> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x136cf00 '__comp' '_Iter_comp_iter<_Compare> &&'
|   |   | `-CompoundStmt 0x136d808 <line:171:7, col:9>
|   |   `-FunctionTemplateDecl 0x136d468 <line:174:7, line:177:40> line:176:2 operator()
|   |     |-TemplateTypeParmDecl 0x136d0a8 <line:174:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
|   |     |-TemplateTypeParmDecl 0x136d128 <col:36, col:45> col:45 referenced typename depth 1 index 1 _Value
|   |     `-CXXMethodDecl 0x136d3c8 <line:175:2, line:177:40> line:176:2 operator() 'bool (_Iterator, _Value &)'
|   |       |-ParmVarDecl 0x136d1e0 <col:13, col:23> col:23 referenced __it '_Iterator'
|   |       |-ParmVarDecl 0x136d2b8 <col:29, col:37> col:37 referenced __val '_Value &'
|   |       `-CompoundStmt 0x136d928 <line:177:2, col:40>
|   |         `-ReturnStmt 0x136d918 <col:4, col:37>
|   |           `-CXXUnresolvedConstructExpr 0x136d8f0 <col:11, col:37> 'bool' 'bool'
|   |             `-CallExpr 0x136d8c0 <col:16, col:36> '<dependent type>'
|   |               |-MemberExpr 0x136d838 <col:16> '_Compare' lvalue ->_M_comp 0x136c910
|   |               | `-CXXThisExpr 0x136d828 <col:16> '_Iter_comp_val<_Compare> *' implicit this
|   |               |-UnaryOperator 0x136d888 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |               | `-DeclRefExpr 0x136d868 <col:25> '_Iterator' lvalue ParmVar 0x136d1e0 '__it' '_Iterator'
|   |               `-DeclRefExpr 0x136d8a0 <col:31> '_Value' lvalue ParmVar 0x136d2b8 '__val' '_Value &'
|   |-FunctionTemplateDecl 0x136dc28 <line:180:3, line:183:63> line:182:5 __iter_comp_val
|   | |-TemplateTypeParmDecl 0x136d940 <line:180:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-FunctionDecl 0x136db88 <line:181:4, line:183:63> line:182:5 __iter_comp_val '_Iter_comp_val<_Compare> (_Compare)' inline
|   |   |-ParmVarDecl 0x136da70 <col:21, col:30> col:30 referenced __comp '_Compare'
|   |   `-CompoundStmt 0x136de28 <line:183:5, col:63>
|   |     `-ReturnStmt 0x136de18 <col:7, col:60>
|   |       `-CXXUnresolvedConstructExpr 0x136ddf0 <col:14, col:60> '_Iter_comp_val<_Compare>' '_Iter_comp_val<_Compare>'
|   |         `-CallExpr 0x136ddc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x136dd60 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x136dda8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:183:53> '_Compare' lvalue ParmVar 0x136da70 '__comp' '_Compare'
|   |-FunctionTemplateDecl 0x136e1c8 <line:185:3, line:188:63> line:187:5 __iter_comp_val
|   | |-TemplateTypeParmDecl 0x136de40 <line:185:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-FunctionDecl 0x136e128 <line:186:5, line:188:63> line:187:5 __iter_comp_val '_Iter_comp_val<_Compare> (_Iter_comp_iter<_Compare>)' inline
|   |   |-ParmVarDecl 0x136e010 <col:21, col:47> col:47 referenced __comp '_Iter_comp_iter<_Compare>'
|   |   `-CompoundStmt 0x136e3c8 <line:188:5, col:63>
|   |     `-ReturnStmt 0x136e3b8 <col:7, col:60>
|   |       `-CXXUnresolvedConstructExpr 0x136e390 <col:14, col:60> '_Iter_comp_val<_Compare>' '_Iter_comp_val<_Compare>'
|   |         `-CallExpr 0x136e368 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x136e300 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x136e348 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:188:53> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x136e010 '__comp' '_Iter_comp_iter<_Compare>'
|   |-ClassTemplateDecl 0x136e508 <line:190:3, line:216:5> line:191:12 _Val_comp_iter
|   | |-TemplateTypeParmDecl 0x136e3e0 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-CXXRecordDecl 0x136e478 <line:191:5, line:216:5> line:191:12 struct _Val_comp_iter definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x136e760 <col:5, col:12> col:12 implicit referenced struct _Val_comp_iter
|   |   |-FieldDecl 0x136e800 <line:193:7, col:16> col:16 referenced _M_comp '_Compare'
|   |   |-CXXConstructorDecl 0x136e968 <line:195:7, line:198:9> line:196:7 _Val_comp_iter<_Compare> 'void (_Compare)'
|   |   | |-ParmVarDecl 0x136e860 <col:22, col:31> col:31 referenced __comp '_Compare'
|   |   | |-CXXCtorInitializer Field 0x136e800 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136f3c8 <line:197:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x136f3a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x136f338 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x136f380 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:197:26> '_Compare' lvalue ParmVar 0x136e860 '__comp' '_Compare'
|   |   | `-CompoundStmt 0x136f418 <line:198:7, col:9>
|   |   |-CXXConstructorDecl 0x136ebc8 <line:200:7, line:203:9> line:201:7 _Val_comp_iter<_Compare> 'void (const _Iter_comp_iter<_Compare> &)'
|   |   | |-ParmVarDecl 0x136eb00 <col:22, col:55> col:55 referenced __comp 'const _Iter_comp_iter<_Compare> &'
|   |   | |-CXXCtorInitializer Field 0x136e800 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136f490 <line:202:11, col:26> 'NULL TYPE'
|   |   | |   `-CXXDependentScopeMemberExpr 0x136f448 <col:12, col:19> '<dependent type>' lvalue ._M_comp
|   |   | |     `-DeclRefExpr 0x136f428 <col:12> 'const _Iter_comp_iter<_Compare>' lvalue ParmVar 0x136eb00 '__comp' 'const _Iter_comp_iter<_Compare> &'
|   |   | `-CompoundStmt 0x136f4e0 <line:203:7, col:9>
|   |   |-CXXConstructorDecl 0x136ee28 <line:206:7, line:209:9> line:207:7 _Val_comp_iter<_Compare> 'void (_Iter_comp_iter<_Compare> &&)'
|   |   | |-ParmVarDecl 0x136ed60 <col:22, col:50> col:50 referenced __comp '_Iter_comp_iter<_Compare> &&'
|   |   | |-CXXCtorInitializer Field 0x136e800 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x136f5e8 <line:208:11, col:37> 'NULL TYPE'
|   |   | |   `-CallExpr 0x136f5c0 <col:12, col:36> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x136f510 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-CXXDependentScopeMemberExpr 0x136f578 <col:22, col:29> '<dependent type>' lvalue ._M_comp
|   |   | |       `-DeclRefExpr 0x136f558 <col:22> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x136ed60 '__comp' '_Iter_comp_iter<_Compare> &&'
|   |   | `-CompoundStmt 0x136f638 <line:209:7, col:9>
|   |   `-FunctionTemplateDecl 0x136f298 <line:212:7, line:215:40> line:214:2 operator()
|   |     |-TemplateTypeParmDecl 0x136eed8 <line:212:16, col:25> col:25 referenced typename depth 1 index 0 _Value
|   |     |-TemplateTypeParmDecl 0x136ef58 <col:33, col:42> col:42 referenced typename depth 1 index 1 _Iterator
|   |     `-CXXMethodDecl 0x136f1f8 <line:213:2, line:215:40> line:214:2 operator() 'bool (_Value &, _Iterator)'
|   |       |-ParmVarDecl 0x136f068 <col:13, col:21> col:21 referenced __val '_Value &'
|   |       |-ParmVarDecl 0x136f0e0 <col:28, col:38> col:38 referenced __it '_Iterator'
|   |       `-CompoundStmt 0x136f758 <line:215:2, col:40>
|   |         `-ReturnStmt 0x136f748 <col:4, col:37>
|   |           `-CXXUnresolvedConstructExpr 0x136f720 <col:11, col:37> 'bool' 'bool'
|   |             `-CallExpr 0x136f6f0 <col:16, col:36> '<dependent type>'
|   |               |-MemberExpr 0x136f668 <col:16> '_Compare' lvalue ->_M_comp 0x136e800
|   |               | `-CXXThisExpr 0x136f658 <col:16> '_Val_comp_iter<_Compare> *' implicit this
|   |               |-DeclRefExpr 0x136f698 <col:24> '_Value' lvalue ParmVar 0x136f068 '__val' '_Value &'
|   |               `-UnaryOperator 0x136f6d8 <col:31, col:32> '<dependent type>' prefix '*' cannot overflow
|   |                 `-DeclRefExpr 0x136f6b8 <col:32> '_Iterator' lvalue ParmVar 0x136f0e0 '__it' '_Iterator'
|   |-FunctionTemplateDecl 0x136fa58 <line:218:3, line:221:63> line:220:5 __val_comp_iter
|   | |-TemplateTypeParmDecl 0x136f770 <line:218:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-FunctionDecl 0x136f9b8 <line:219:5, line:221:63> line:220:5 __val_comp_iter '_Val_comp_iter<_Compare> (_Compare)' inline
|   |   |-ParmVarDecl 0x136f8a0 <col:21, col:30> col:30 referenced __comp '_Compare'
|   |   `-CompoundStmt 0x136fc58 <line:221:5, col:63>
|   |     `-ReturnStmt 0x136fc48 <col:7, col:60>
|   |       `-CXXUnresolvedConstructExpr 0x136fc20 <col:14, col:60> '_Val_comp_iter<_Compare>' '_Val_comp_iter<_Compare>'
|   |         `-CallExpr 0x136fbf8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x136fb90 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x136fbd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:221:53> '_Compare' lvalue ParmVar 0x136f8a0 '__comp' '_Compare'
|   |-FunctionTemplateDecl 0x1372058 <line:223:3, line:226:63> line:225:5 __val_comp_iter
|   | |-TemplateTypeParmDecl 0x136fc70 <line:223:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | `-FunctionDecl 0x1371fb8 <line:224:5, line:226:63> line:225:5 __val_comp_iter '_Val_comp_iter<_Compare> (_Iter_comp_iter<_Compare>)' inline
|   |   |-ParmVarDecl 0x136fe40 <col:21, col:47> col:47 referenced __comp '_Iter_comp_iter<_Compare>'
|   |   `-CompoundStmt 0x1372258 <line:226:5, col:63>
|   |     `-ReturnStmt 0x1372248 <col:7, col:60>
|   |       `-CXXUnresolvedConstructExpr 0x1372220 <col:14, col:60> '_Val_comp_iter<_Compare>' '_Val_comp_iter<_Compare>'
|   |         `-CallExpr 0x13721f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x1372190 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x13721d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:226:53> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x136fe40 '__comp' '_Iter_comp_iter<_Compare>'
|   |-ClassTemplateDecl 0x1372398 <line:228:3, line:242:5> line:229:12 _Iter_equals_val
|   | |-TemplateTypeParmDecl 0x1372270 <line:228:12, col:21> col:21 referenced typename depth 0 index 0 _Value
|   | `-CXXRecordDecl 0x1372308 <line:229:5, line:242:5> line:229:12 struct _Iter_equals_val definition
|   |   |-DefinitionData trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x13725f0 <col:5, col:12> col:12 implicit referenced struct _Iter_equals_val
|   |   |-FieldDecl 0x13726b8 <line:231:7, col:15> col:15 referenced _M_value '_Value &'
|   |   |-CXXConstructorDecl 0x1372818 <line:233:7, line:236:9> line:234:7 _Iter_equals_val<_Value> 'void (_Value &)'
|   |   | |-ParmVarDecl 0x1372718 <col:24, col:32> col:32 referenced __value '_Value &'
|   |   | |-CXXCtorInitializer Field 0x13726b8 '_M_value' '_Value &'
|   |   | | `-ParenListExpr 0x1372ba0 <line:235:12, col:20> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x1372b80 <col:13> '_Value' lvalue ParmVar 0x1372718 '__value' '_Value &'
|   |   | `-CompoundStmt 0x1372bf0 <line:236:7, col:9>
|   |   `-FunctionTemplateDecl 0x1372b08 <line:238:7, line:241:30> line:240:2 operator()
|   |     |-TemplateTypeParmDecl 0x13728c8 <line:238:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
|   |     `-CXXMethodDecl 0x1372a68 <line:239:2, line:241:30> line:240:2 operator() 'bool (_Iterator)'
|   |       |-ParmVarDecl 0x1372978 <col:13, col:23> col:23 referenced __it '_Iterator'
|   |       `-CompoundStmt 0x1372d10 <line:241:2, col:30>
|   |         `-ReturnStmt 0x1372d00 <col:4, col:20>
|   |           `-CXXOperatorCallExpr 0x1372cc8 <col:11, col:20> '<dependent type>'
|   |             |-UnresolvedLookupExpr 0x1372c78 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
|   |             |-UnaryOperator 0x1372c20 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
|   |             | `-DeclRefExpr 0x1372c00 <col:12> '_Iterator' lvalue ParmVar 0x1372978 '__it' '_Iterator'
|   |             `-MemberExpr 0x1372c48 <col:20> '_Value' lvalue ->_M_value 0x13726b8
|   |               `-CXXThisExpr 0x1372c38 <col:20> '_Iter_equals_val<_Value> *' implicit this
|   |-FunctionTemplateDecl 0x1373038 <line:244:3, line:247:47> line:246:5 __iter_equals_val
|   | |-TemplateTypeParmDecl 0x1372d28 <line:244:12, col:21> col:21 referenced typename depth 0 index 0 _Value
|   | `-FunctionDecl 0x1372f98 <line:245:5, line:247:47> line:246:5 __iter_equals_val '_Iter_equals_val<_Value> (_Value &)' inline
|   |   |-ParmVarDecl 0x1372e88 <col:23, col:31> col:31 referenced __val '_Value &'
|   |   `-CompoundStmt 0x13731a8 <line:247:5, col:47>
|   |     `-ReturnStmt 0x1373198 <col:7, col:44>
|   |       `-CXXUnresolvedConstructExpr 0x1373170 <col:14, col:44> '_Iter_equals_val<_Value>' '_Iter_equals_val<_Value>'
|   |         `-DeclRefExpr 0x1373150 <col:39> '_Value' lvalue ParmVar 0x1372e88 '__val' '_Value &'
|   |-ClassTemplateDecl 0x13732e8 <line:249:3, line:263:5> line:250:12 _Iter_equals_iter
|   | |-TemplateTypeParmDecl 0x13731c0 <line:249:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator1
|   | `-CXXRecordDecl 0x1373258 <line:250:5, line:263:5> line:250:12 struct _Iter_equals_iter definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x1373540 <col:5, col:12> col:12 implicit referenced struct _Iter_equals_iter
|   |   |-FieldDecl 0x13735e0 <line:252:7, col:18> col:18 referenced _M_it1 '_Iterator1'
|   |   |-CXXConstructorDecl 0x1373748 <line:254:7, line:257:9> line:255:7 _Iter_equals_iter<_Iterator1> 'void (_Iterator1)'
|   |   | |-ParmVarDecl 0x1373640 <col:25, col:36> col:36 referenced __it1 '_Iterator1'
|   |   | |-CXXCtorInitializer Field 0x13735e0 '_M_it1' '_Iterator1'
|   |   | | `-ParenListExpr 0x1373aa0 <line:256:10, col:16> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x1373a80 <col:11> '_Iterator1' lvalue ParmVar 0x1373640 '__it1' '_Iterator1'
|   |   | `-CompoundStmt 0x1373af0 <line:257:7, col:9>
|   |   `-FunctionTemplateDecl 0x1373a08 <line:259:7, line:262:30> line:261:2 operator()
|   |     |-TemplateTypeParmDecl 0x13737f8 <line:259:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator2
|   |     `-CXXMethodDecl 0x1373968 <line:260:2, line:262:30> line:261:2 operator() 'bool (_Iterator2)'
|   |       |-ParmVarDecl 0x13738a8 <col:13, col:24> col:24 referenced __it2 '_Iterator2'
|   |       `-CompoundStmt 0x1373c28 <line:262:2, col:30>
|   |         `-ReturnStmt 0x1373c18 <col:4, col:22>
|   |           `-CXXOperatorCallExpr 0x1373be0 <col:11, col:22> '<dependent type>'
|   |             |-UnresolvedLookupExpr 0x1373b90 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
|   |             |-UnaryOperator 0x1373b20 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
|   |             | `-DeclRefExpr 0x1373b00 <col:12> '_Iterator2' lvalue ParmVar 0x13738a8 '__it2' '_Iterator2'
|   |             `-UnaryOperator 0x1373b78 <col:21, col:22> '<dependent type>' prefix '*' cannot overflow
|   |               `-MemberExpr 0x1373b48 <col:22> '_Iterator1' lvalue ->_M_it1 0x13735e0
|   |                 `-CXXThisExpr 0x1373b38 <col:22> '_Iter_equals_iter<_Iterator1> *' implicit this
|   |-FunctionTemplateDecl 0x1373fb8 <line:265:3, line:268:50> line:267:5 __iter_comp_iter
|   | |-TemplateTypeParmDecl 0x1373c40 <line:265:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
|   | `-FunctionDecl 0x1373f18 <line:266:5, line:268:50> line:267:5 __iter_comp_iter '_Iter_equals_iter<_Iterator> (__gnu_cxx::__ops::_Iter_equal_to_iter, _Iterator)' inline
|   |   |-ParmVarDecl 0x1373d70 <col:22> col:41 '__gnu_cxx::__ops::_Iter_equal_to_iter'
|   |   |-ParmVarDecl 0x1373de8 <col:43, col:53> col:53 referenced __it '_Iterator'
|   |   `-CompoundStmt 0x1374128 <line:268:5, col:50>
|   |     `-ReturnStmt 0x1374118 <col:7, col:47>
|   |       `-CXXUnresolvedConstructExpr 0x13740f0 <col:14, col:47> '_Iter_equals_iter<_Iterator>' '_Iter_equals_iter<_Iterator>'
|   |         `-DeclRefExpr 0x13740d0 <col:43> '_Iterator' lvalue ParmVar 0x1373de8 '__it' '_Iterator'
|   |-ClassTemplateDecl 0x1374268 <line:270:3, line:284:5> line:271:12 _Iter_pred
|   | |-TemplateTypeParmDecl 0x1374140 <line:270:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
|   | `-CXXRecordDecl 0x13741d8 <line:271:5, line:284:5> line:271:12 struct _Iter_pred definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x13744c0 <col:5, col:12> col:12 implicit referenced struct _Iter_pred
|   |   |-FieldDecl 0x1374560 <line:273:7, col:18> col:18 referenced _M_pred '_Predicate'
|   |   |-CXXConstructorDecl 0x13746c8 <line:275:7, line:278:9> line:276:7 _Iter_pred<_Predicate> 'void (_Predicate)'
|   |   | |-ParmVarDecl 0x13745c0 <col:18, col:29> col:29 referenced __pred '_Predicate'
|   |   | |-CXXCtorInitializer Field 0x1374560 '_M_pred' '_Predicate'
|   |   | | `-ParenListExpr 0x1374ab0 <line:277:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x1374a88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x1374a20 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x1374a68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:277:26> '_Predicate' lvalue ParmVar 0x13745c0 '__pred' '_Predicate'
|   |   | `-CompoundStmt 0x1374b00 <line:278:7, col:9>
|   |   `-FunctionTemplateDecl 0x1374988 <line:280:7, line:283:33> line:282:2 operator()
|   |     |-TemplateTypeParmDecl 0x1374778 <line:280:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
|   |     `-CXXMethodDecl 0x13748e8 <line:281:2, line:283:33> line:282:2 operator() 'bool (_Iterator)'
|   |       |-ParmVarDecl 0x1374828 <col:13, col:23> col:23 referenced __it '_Iterator'
|   |       `-CompoundStmt 0x1374bf8 <line:283:2, col:33>
|   |         `-ReturnStmt 0x1374be8 <col:4, col:30>
|   |           `-CXXUnresolvedConstructExpr 0x1374bc0 <col:11, col:30> 'bool' 'bool'
|   |             `-CallExpr 0x1374b98 <col:16, col:29> '<dependent type>'
|   |               |-MemberExpr 0x1374b30 <col:16> '_Predicate' lvalue ->_M_pred 0x1374560
|   |               | `-CXXThisExpr 0x1374b20 <col:16> '_Iter_pred<_Predicate> *' implicit this
|   |               `-UnaryOperator 0x1374b80 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |                 `-DeclRefExpr 0x1374b60 <col:25> '_Iterator' lvalue ParmVar 0x1374828 '__it' '_Iterator'
|   |-FunctionTemplateDecl 0x1374ef8 <line:286:3, line:289:61> line:288:5 __pred_iter
|   | |-TemplateTypeParmDecl 0x1374c10 <line:286:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
|   | `-FunctionDecl 0x1374e58 <line:287:5, line:289:61> line:288:5 __pred_iter '_Iter_pred<_Predicate> (_Predicate)' inline
|   |   |-ParmVarDecl 0x1374d40 <col:17, col:28> col:28 referenced __pred '_Predicate'
|   |   `-CompoundStmt 0x13750f8 <line:289:5, col:61>
|   |     `-ReturnStmt 0x13750e8 <col:7, col:58>
|   |       `-CXXUnresolvedConstructExpr 0x13750c0 <col:14, col:58> '_Iter_pred<_Predicate>' '_Iter_pred<_Predicate>'
|   |         `-CallExpr 0x1375098 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x1375030 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |           `-DeclRefExpr 0x1375078 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:289:51> '_Predicate' lvalue ParmVar 0x1374d40 '__pred' '_Predicate'
|   |-ClassTemplateDecl 0x13752c0 <line:291:3, line:305:5> line:292:12 _Iter_comp_to_val
|   | |-TemplateTypeParmDecl 0x1375110 <line:291:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | |-TemplateTypeParmDecl 0x1375188 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Value
|   | `-CXXRecordDecl 0x1375230 <line:292:5, line:305:5> line:292:12 struct _Iter_comp_to_val definition
|   |   |-DefinitionData trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x1375550 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_to_val
|   |   |-FieldDecl 0x13755f0 <line:294:7, col:16> col:16 referenced _M_comp '_Compare'
|   |   |-FieldDecl 0x1375678 <line:295:7, col:15> col:15 referenced _M_value '_Value &'
|   |   |-CXXConstructorDecl 0x13758a8 <line:297:7, line:299:9> line:297:7 _Iter_comp_to_val<_Compare, _Value> 'void (_Compare, _Value &)'
|   |   | |-ParmVarDecl 0x13756d8 <col:25, col:34> col:34 referenced __comp '_Compare'
|   |   | |-ParmVarDecl 0x1375750 <col:42, col:50> col:50 referenced __value '_Value &'
|   |   | |-CXXCtorInitializer Field 0x13755f0 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x1375c90 <line:298:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x1375c68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x1375c00 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x1375c48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:298:26> '_Compare' lvalue ParmVar 0x13756d8 '__comp' '_Compare'
|   |   | |-CXXCtorInitializer Field 0x1375678 '_M_value' '_Value &'
|   |   | | `-ParenListExpr 0x1375cf8 <col:44, col:52> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x1375cd8 <col:45> '_Value' lvalue ParmVar 0x1375750 '__value' '_Value &'
|   |   | `-CompoundStmt 0x1375d50 <line:299:7, col:9>
|   |   `-FunctionTemplateDecl 0x1375b68 <line:301:7, line:304:43> line:303:2 operator()
|   |     |-TemplateTypeParmDecl 0x1375960 <line:301:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
|   |     `-CXXMethodDecl 0x1375ac8 <line:302:2, line:304:43> line:303:2 operator() 'bool (_Iterator)'
|   |       |-ParmVarDecl 0x1375a08 <col:13, col:23> col:23 referenced __it '_Iterator'
|   |       `-CompoundStmt 0x1375e90 <line:304:2, col:43>
|   |         `-ReturnStmt 0x1375e80 <col:4, col:40>
|   |           `-CXXUnresolvedConstructExpr 0x1375e58 <col:11, col:40> 'bool' 'bool'
|   |             `-CallExpr 0x1375e28 <col:16, col:39> '<dependent type>'
|   |               |-MemberExpr 0x1375d80 <col:16> '_Compare' lvalue ->_M_comp 0x13755f0
|   |               | `-CXXThisExpr 0x1375d70 <col:16> '_Iter_comp_to_val<_Compare, _Value> *' implicit this
|   |               |-UnaryOperator 0x1375dd0 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |               | `-DeclRefExpr 0x1375db0 <col:25> '_Iterator' lvalue ParmVar 0x1375a08 '__it' '_Iterator'
|   |               `-MemberExpr 0x1375df8 <col:31> '_Value' lvalue ->_M_value 0x1375678
|   |                 `-CXXThisExpr 0x1375de8 <col:31> '_Iter_comp_to_val<_Compare, _Value> *' implicit this
|   |-FunctionTemplateDecl 0x1378a40 <line:307:3, line:312:5> line:309:5 __iter_comp_val
|   | |-TemplateTypeParmDecl 0x1375ea8 <line:307:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | |-TemplateTypeParmDecl 0x1378638 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Value
|   | `-FunctionDecl 0x13789a0 <line:308:5, line:312:5> line:309:5 __iter_comp_val '_Iter_comp_to_val<_Compare, _Value> (_Compare, _Value &)'
|   |   |-ParmVarDecl 0x13787b0 <col:21, col:30> col:30 referenced __comp '_Compare'
|   |   |-ParmVarDecl 0x1378858 <col:38, col:46> col:46 referenced __val '_Value &'
|   |   `-CompoundStmt 0x1378cc8 <line:310:5, line:312:5>
|   |     `-ReturnStmt 0x1378cb8 <line:311:7, col:78>
|   |       `-CXXUnresolvedConstructExpr 0x1378c88 <col:14, col:78> '_Iter_comp_to_val<_Compare, _Value>' '_Iter_comp_to_val<_Compare, _Value>'
|   |         |-CallExpr 0x1378c40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |         | |-UnresolvedLookupExpr 0x1378bd8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |         | `-DeclRefExpr 0x1378c20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:311:64> '_Compare' lvalue ParmVar 0x13787b0 '__comp' '_Compare'
|   |         `-DeclRefExpr 0x1378c68 <col:73> '_Value' lvalue ParmVar 0x1378858 '__val' '_Value &'
|   |-ClassTemplateDecl 0x1378e90 <line:314:3, line:328:5> line:315:12 _Iter_comp_to_iter
|   | |-TemplateTypeParmDecl 0x1378ce0 <line:314:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | |-TemplateTypeParmDecl 0x1378d58 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator1
|   | `-CXXRecordDecl 0x1378e00 <line:315:5, line:328:5> line:315:12 struct _Iter_comp_to_iter definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x1379120 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_to_iter
|   |   |-FieldDecl 0x13791c0 <line:317:7, col:16> col:16 referenced _M_comp '_Compare'
|   |   |-FieldDecl 0x1379220 <line:318:7, col:18> col:18 referenced _M_it1 '_Iterator1'
|   |   |-CXXConstructorDecl 0x1379448 <line:320:7, line:322:9> line:320:7 _Iter_comp_to_iter<_Compare, _Iterator1> 'void (_Compare, _Iterator1)'
|   |   | |-ParmVarDecl 0x1379280 <col:26, col:35> col:35 referenced __comp '_Compare'
|   |   | |-ParmVarDecl 0x13792f8 <col:43, col:54> col:54 referenced __it1 '_Iterator1'
|   |   | |-CXXCtorInitializer Field 0x13791c0 '_M_comp' '_Compare'
|   |   | | `-ParenListExpr 0x1379830 <line:321:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x1379808 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x13797a0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x13797e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:321:26> '_Compare' lvalue ParmVar 0x1379280 '__comp' '_Compare'
|   |   | |-CXXCtorInitializer Field 0x1379220 '_M_it1' '_Iterator1'
|   |   | | `-ParenListExpr 0x1379898 <col:42, col:48> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x1379878 <col:43> '_Iterator1' lvalue ParmVar 0x13792f8 '__it1' '_Iterator1'
|   |   | `-CompoundStmt 0x13798f0 <line:322:7, col:9>
|   |   `-FunctionTemplateDecl 0x1379708 <line:324:7, line:327:43> line:326:2 operator()
|   |     |-TemplateTypeParmDecl 0x1379500 <line:324:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator2
|   |     `-CXXMethodDecl 0x1379668 <line:325:2, line:327:43> line:326:2 operator() 'bool (_Iterator2)'
|   |       |-ParmVarDecl 0x13795a8 <col:13, col:24> col:24 referenced __it2 '_Iterator2'
|   |       `-CompoundStmt 0x1379a48 <line:327:2, col:43>
|   |         `-ReturnStmt 0x1379a38 <col:4, col:40>
|   |           `-CXXUnresolvedConstructExpr 0x1379a10 <col:11, col:40> 'bool' 'bool'
|   |             `-CallExpr 0x13799e0 <col:16, col:39> '<dependent type>'
|   |               |-MemberExpr 0x1379920 <col:16> '_Compare' lvalue ->_M_comp 0x13791c0
|   |               | `-CXXThisExpr 0x1379910 <col:16> '_Iter_comp_to_iter<_Compare, _Iterator1> *' implicit this
|   |               |-UnaryOperator 0x1379970 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |               | `-DeclRefExpr 0x1379950 <col:25> '_Iterator2' lvalue ParmVar 0x13795a8 '__it2' '_Iterator2'
|   |               `-UnaryOperator 0x13799c8 <col:32, col:33> '<dependent type>' prefix '*' cannot overflow
|   |                 `-MemberExpr 0x1379998 <col:33> '_Iterator1' lvalue ->_M_it1 0x1379220
|   |                   `-CXXThisExpr 0x1379988 <col:33> '_Iter_comp_to_iter<_Compare, _Iterator1> *' implicit this
|   |-FunctionTemplateDecl 0x1379f50 <line:330:3, line:336:5> line:332:5 __iter_comp_iter
|   | |-TemplateTypeParmDecl 0x1379a60 <line:330:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
|   | |-TemplateTypeParmDecl 0x1379ad8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator
|   | `-FunctionDecl 0x1379eb0 <line:331:5, line:336:5> line:332:5 __iter_comp_iter '_Iter_comp_to_iter<_Compare, _Iterator> (_Iter_comp_iter<_Compare>, _Iterator)' inline
|   |   |-ParmVarDecl 0x1379cf0 <col:22, col:48> col:48 referenced __comp '_Iter_comp_iter<_Compare>'
|   |   |-ParmVarDecl 0x1379d68 <col:56, col:66> col:66 referenced __it '_Iterator'
|   |   `-CompoundStmt 0x137a220 <line:333:5, line:336:5>
|   |     `-ReturnStmt 0x137a210 <line:334:7, line:335:39>
|   |       `-CXXUnresolvedConstructExpr 0x137a1e0 <line:334:14, line:335:39> '_Iter_comp_to_iter<_Compare, _Iterator>' '_Iter_comp_to_iter<_Compare, _Iterator>'
|   |         |-CallExpr 0x137a198 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |         | |-UnresolvedLookupExpr 0x137a0e8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |         | `-CXXDependentScopeMemberExpr 0x137a150 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:335:18, col:25> '<dependent type>' lvalue ._M_comp
|   |         |   `-DeclRefExpr 0x137a130 <col:18> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x1379cf0 '__comp' '_Iter_comp_iter<_Compare>'
|   |         `-DeclRefExpr 0x137a1c0 <col:35> '_Iterator' lvalue ParmVar 0x1379d68 '__it' '_Iterator'
|   |-ClassTemplateDecl 0x137a368 <line:338:3, line:352:5> line:339:12 _Iter_negate
|   | |-TemplateTypeParmDecl 0x137a238 <line:338:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
|   | `-CXXRecordDecl 0x137a2d8 <line:339:5, line:352:5> line:339:12 struct _Iter_negate definition
|   |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x137a5c0 <col:5, col:12> col:12 implicit referenced struct _Iter_negate
|   |   |-FieldDecl 0x137a660 <line:341:7, col:18> col:18 referenced _M_pred '_Predicate'
|   |   |-CXXConstructorDecl 0x137a7c8 <line:343:7, line:346:9> line:344:7 _Iter_negate<_Predicate> 'void (_Predicate)'
|   |   | |-ParmVarDecl 0x137a6c0 <col:20, col:31> col:31 referenced __pred '_Predicate'
|   |   | |-CXXCtorInitializer Field 0x137a660 '_M_pred' '_Predicate'
|   |   | | `-ParenListExpr 0x137abb0 <line:345:11, col:33> 'NULL TYPE'
|   |   | |   `-CallExpr 0x137ab88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|   |   | |     |-UnresolvedLookupExpr 0x137ab20 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|   |   | |     `-DeclRefExpr 0x137ab68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:345:26> '_Predicate' lvalue ParmVar 0x137a6c0 '__pred' '_Predicate'
|   |   | `-CompoundStmt 0x137ac00 <line:346:7, col:9>
|   |   `-FunctionTemplateDecl 0x137aa88 <line:348:7, line:351:34> line:350:2 operator()
|   |     |-TemplateTypeParmDecl 0x137a878 <line:348:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
|   |     `-CXXMethodDecl 0x137a9e8 <line:349:2, line:351:34> line:350:2 operator() 'bool (_Iterator)'
|   |       |-ParmVarDecl 0x137a928 <col:13, col:23> col:23 referenced __it '_Iterator'
|   |       `-CompoundStmt 0x137ad10 <line:351:2, col:34>
|   |         `-ReturnStmt 0x137ad00 <col:4, col:31>
|   |           `-UnaryOperator 0x137ace8 <col:11, col:31> 'bool' prefix '!' cannot overflow
|   |             `-CXXUnresolvedConstructExpr 0x137acc0 <col:12, col:31> 'bool' 'bool'
|   |               `-CallExpr 0x137ac98 <col:17, col:30> '<dependent type>'
|   |                 |-MemberExpr 0x137ac30 <col:17> '_Predicate' lvalue ->_M_pred 0x137a660
|   |                 | `-CXXThisExpr 0x137ac20 <col:17> '_Iter_negate<_Predicate> *' implicit this
|   |                 `-UnaryOperator 0x137ac80 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
|   |                   `-DeclRefExpr 0x137ac60 <col:26> '_Iterator' lvalue ParmVar 0x137a928 '__it' '_Iterator'
|   `-FunctionTemplateDecl 0x137b0b8 <line:354:3, line:357:71> line:356:5 __negate
|     |-TemplateTypeParmDecl 0x137ad28 <line:354:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
|     `-FunctionDecl 0x137b018 <line:355:5, line:357:71> line:356:5 __negate '_Iter_negate<_Predicate> (_Iter_pred<_Predicate>)' inline
|       |-ParmVarDecl 0x137af00 <col:14, col:37> col:37 referenced __pred '_Iter_pred<_Predicate>'
|       `-CompoundStmt 0x137b300 <line:357:5, col:71>
|         `-ReturnStmt 0x137b2f0 <col:7, col:68>
|           `-CXXUnresolvedConstructExpr 0x137b2c8 <col:14, col:68> '_Iter_negate<_Predicate>' '_Iter_negate<_Predicate>'
|             `-CallExpr 0x137b2a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/move.h:158:30, col:45> '<dependent type>'
|               |-UnresolvedLookupExpr 0x137b1f0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
|               `-CXXDependentScopeMemberExpr 0x137b258 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/predefined_ops.h:357:53, col:60> '<dependent type>' lvalue ._M_pred
|                 `-DeclRefExpr 0x137b238 <col:53> '_Iter_pred<_Predicate>' lvalue ParmVar 0x137af00 '__pred' '_Iter_pred<_Predicate>'
|-NamespaceDecl 0x137b338 prev 0x135d758 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:76:1, line:1453:1> line:76:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x137b3a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-FunctionTemplateDecl 0x137b718 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:121:3, line:153:5> line:123:5 iter_swap
| | |-TemplateTypeParmDecl 0x137b400 <line:121:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator1
| | |-TemplateTypeParmDecl 0x137b478 <col:40, col:49> col:49 referenced typename depth 0 index 1 _ForwardIterator2
| | `-FunctionDecl 0x137b678 <line:122:5, line:153:5> line:123:5 iter_swap 'void (_ForwardIterator1, _ForwardIterator2)' inline
| |   |-ParmVarDecl 0x137b530 <col:15, col:33> col:33 referenced __a '_ForwardIterator1'
| |   |-ParmVarDecl 0x137b5a8 <col:38, col:56> col:56 referenced __b '_ForwardIterator2'
| |   `-CompoundStmt 0x137b880 <line:124:5, line:153:5>
| |     `-CallExpr 0x137b850 <line:151:7, col:22> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x137b780 <col:7> '<overloaded function type>' lvalue (ADL) = 'swap' 0x1279668 0x127a228 0x1303be8 0x13057a8
| |       |-UnaryOperator 0x137b800 <col:12, col:13> '<dependent type>' prefix '*' cannot overflow
| |       | `-DeclRefExpr 0x137b7e0 <col:13> '_ForwardIterator1' lvalue ParmVar 0x137b530 '__a' '_ForwardIterator1'
| |       `-UnaryOperator 0x137b838 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
| |         `-DeclRefExpr 0x137b818 <col:19> '_ForwardIterator2' lvalue ParmVar 0x137b5a8 '__b' '_ForwardIterator2'
| |-FunctionTemplateDecl 0x137bc88 <line:167:3, line:182:5> line:169:5 swap_ranges
| | |-TemplateTypeParmDecl 0x137b898 <line:167:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator1
| | |-TemplateTypeParmDecl 0x137b918 <col:40, col:49> col:49 referenced typename depth 0 index 1 _ForwardIterator2
| | `-FunctionDecl 0x137bbe8 <line:168:5, line:182:5> line:169:5 swap_ranges '_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)'
| |   |-ParmVarDecl 0x137b9d0 <col:17, col:35> col:35 referenced __first1 '_ForwardIterator1'
| |   |-ParmVarDecl 0x137ba48 <col:45, col:63> col:63 referenced __last1 '_ForwardIterator1'
| |   |-ParmVarDecl 0x137bac0 <line:170:3, col:21> col:21 referenced __first2 '_ForwardIterator2'
| |   `-CompoundStmt 0x137c008 <line:171:5, line:182:5>
| |     |-NullStmt 0x137bcf8 <line:177:56>
| |     |-ForStmt 0x137bfa0 <line:179:7, line:180:35>
| |     | |-<<<NULL>>>
| |     | |-<<<NULL>>>
| |     | |-CXXOperatorCallExpr 0x137bdb0 <line:179:14, col:26> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x137bd40 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | |-DeclRefExpr 0x137bd00 <col:14> '_ForwardIterator1' lvalue ParmVar 0x137b9d0 '__first1' '_ForwardIterator1'
| |     | | `-DeclRefExpr 0x137bd20 <col:26> '_ForwardIterator1' lvalue ParmVar 0x137ba48 '__last1' '_ForwardIterator1'
| |     | |-BinaryOperator 0x137be90 <col:35, col:55> '<dependent type>' ','
| |     | | |-UnaryOperator 0x137be08 <col:35, col:37> '<dependent type>' prefix '++' cannot overflow
| |     | | | `-DeclRefExpr 0x137bde8 <col:37> '_ForwardIterator1' lvalue ParmVar 0x137b9d0 '__first1' '_ForwardIterator1'
| |     | | `-CStyleCastExpr 0x137be68 <col:47, col:55> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x137be40 <col:53, col:55> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x137be20 <col:55> '_ForwardIterator2' lvalue ParmVar 0x137bac0 '__first2' '_ForwardIterator2'
| |     | `-CallExpr 0x137bf70 <line:180:2, col:35> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x137bee8 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = 'iter_swap' 0x137b718
| |     |   |-DeclRefExpr 0x137bf30 <col:17> '_ForwardIterator1' lvalue ParmVar 0x137b9d0 '__first1' '_ForwardIterator1'
| |     |   `-DeclRefExpr 0x137bf50 <col:27> '_ForwardIterator2' lvalue ParmVar 0x137bac0 '__first2' '_ForwardIterator2'
| |     `-ReturnStmt 0x137bff8 <line:181:7, col:14>
| |       `-DeclRefExpr 0x137bfd8 <col:14> '_ForwardIterator2' lvalue ParmVar 0x137bac0 '__first2' '_ForwardIterator2'
| |-FunctionTemplateDecl 0x137c338 <line:195:3, line:206:5> line:198:5 min
| | |-TemplateTypeParmDecl 0x137c030 <line:195:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x137c298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:206:5> line:198:5 constexpr min 'const _Tp &(const _Tp &, const _Tp &)' inline
| | | |-ParmVarDecl 0x137c108 <col:9, col:20> col:20 referenced __a 'const _Tp &'
| | | |-ParmVarDecl 0x137c180 <col:25, col:36> col:36 referenced __b 'const _Tp &'
| | | `-CompoundStmt 0x137c4f8 <line:199:5, line:206:5>
| | |   |-IfStmt 0x137c4b0 <line:203:7, line:204:9>
| | |   | |-CXXOperatorCallExpr 0x137c448 <line:203:11, col:17> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x137c3e0 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28 0x1328cf8 0x132b758 0x1356fc8 0x1357648
| | |   | | |-DeclRefExpr 0x137c3a0 <col:11> 'const _Tp' lvalue ParmVar 0x137c180 '__b' 'const _Tp &'
| | |   | | `-DeclRefExpr 0x137c3c0 <col:17> 'const _Tp' lvalue ParmVar 0x137c108 '__a' 'const _Tp &'
| | |   | `-ReturnStmt 0x137c4a0 <line:204:2, col:9>
| | |   |   `-DeclRefExpr 0x137c480 <col:9> 'const _Tp' lvalue ParmVar 0x137c180 '__b' 'const _Tp &'
| | |   `-ReturnStmt 0x137c4e8 <line:205:7, col:14>
| | |     `-DeclRefExpr 0x137c4c8 <col:14> 'const _Tp' lvalue ParmVar 0x137c108 '__a' 'const _Tp &'
| | |-FunctionDecl 0x13a4968 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:206:5> line:198:5 referenced constexpr min 'const unsigned long &(const unsigned long &, const unsigned long &)' inline
| | | |-TemplateArgument type 'unsigned long'
| | | |-ParmVarDecl 0x13a47d8 <col:9, col:20> col:20 used __a 'const unsigned long &'
| | | |-ParmVarDecl 0x13a4850 <col:25, col:36> col:36 used __b 'const unsigned long &'
| | | `-CompoundStmt 0x13a4c18 <line:199:5, line:206:5>
| | |   |-IfStmt 0x13a4bd0 <line:203:7, line:204:9>
| | |   | |-BinaryOperator 0x13a4b80 <line:203:11, col:17> 'bool' '<'
| | |   | | |-ImplicitCastExpr 0x13a4b50 <col:11> 'unsigned long':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13a4b10 <col:11> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x13a4850 '__b' 'const unsigned long &'
| | |   | | `-ImplicitCastExpr 0x13a4b68 <col:17> 'unsigned long':'unsigned long' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x13a4b30 <col:17> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x13a47d8 '__a' 'const unsigned long &'
| | |   | `-ReturnStmt 0x13a4bc0 <line:204:2, col:9>
| | |   |   `-DeclRefExpr 0x13a4ba0 <col:9> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x13a4850 '__b' 'const unsigned long &'
| | |   `-ReturnStmt 0x13a4c08 <line:205:7, col:14>
| | |     `-DeclRefExpr 0x13a4be8 <col:14> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x13a47d8 '__a' 'const unsigned long &'
| | `-FunctionDecl 0x1878df8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:206:5> line:198:5 referenced constexpr min 'const long &(const long &, const long &)' inline
| |   |-TemplateArgument type 'long'
| |   |-ParmVarDecl 0x1878c68 <col:9, col:20> col:20 used __a 'const long &'
| |   |-ParmVarDecl 0x1878ce0 <col:25, col:36> col:36 used __b 'const long &'
| |   `-CompoundStmt 0x18790a8 <line:199:5, line:206:5>
| |     |-IfStmt 0x1879060 <line:203:7, line:204:9>
| |     | |-BinaryOperator 0x1879010 <line:203:11, col:17> 'bool' '<'
| |     | | |-ImplicitCastExpr 0x1878fe0 <col:11> 'long':'long' <LValueToRValue>
| |     | | | `-DeclRefExpr 0x1878fa0 <col:11> 'const long':'const long' lvalue ParmVar 0x1878ce0 '__b' 'const long &'
| |     | | `-ImplicitCastExpr 0x1878ff8 <col:17> 'long':'long' <LValueToRValue>
| |     | |   `-DeclRefExpr 0x1878fc0 <col:17> 'const long':'const long' lvalue ParmVar 0x1878c68 '__a' 'const long &'
| |     | `-ReturnStmt 0x1879050 <line:204:2, col:9>
| |     |   `-DeclRefExpr 0x1879030 <col:9> 'const long':'const long' lvalue ParmVar 0x1878ce0 '__b' 'const long &'
| |     `-ReturnStmt 0x1879098 <line:205:7, col:14>
| |       `-DeclRefExpr 0x1879078 <col:14> 'const long':'const long' lvalue ParmVar 0x1878c68 '__a' 'const long &'
| |-FunctionTemplateDecl 0x137d868 <line:219:3, line:230:5> line:222:5 max
| | |-TemplateTypeParmDecl 0x137c518 <line:219:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x137d7c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:230:5> line:222:5 constexpr max 'const _Tp &(const _Tp &, const _Tp &)' inline
| |   |-ParmVarDecl 0x137d680 <col:9, col:20> col:20 referenced __a 'const _Tp &'
| |   |-ParmVarDecl 0x137d6f8 <col:25, col:36> col:36 referenced __b 'const _Tp &'
| |   `-CompoundStmt 0x137da28 <line:223:5, line:230:5>
| |     |-IfStmt 0x137d9e0 <line:227:7, line:228:9>
| |     | |-CXXOperatorCallExpr 0x137d978 <line:227:11, col:17> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x137d910 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28 0x1328cf8 0x132b758 0x1356fc8 0x1357648
| |     | | |-DeclRefExpr 0x137d8d0 <col:11> 'const _Tp' lvalue ParmVar 0x137d680 '__a' 'const _Tp &'
| |     | | `-DeclRefExpr 0x137d8f0 <col:17> 'const _Tp' lvalue ParmVar 0x137d6f8 '__b' 'const _Tp &'
| |     | `-ReturnStmt 0x137d9d0 <line:228:2, col:9>
| |     |   `-DeclRefExpr 0x137d9b0 <col:9> 'const _Tp' lvalue ParmVar 0x137d6f8 '__b' 'const _Tp &'
| |     `-ReturnStmt 0x137da18 <line:229:7, col:14>
| |       `-DeclRefExpr 0x137d9f8 <col:14> 'const _Tp' lvalue ParmVar 0x137d680 '__a' 'const _Tp &'
| |-FunctionTemplateDecl 0x137de58 <line:243:3, line:252:5> line:246:5 min
| | |-TemplateTypeParmDecl 0x137da48 <line:243:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x137dac8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Compare
| | `-FunctionDecl 0x137ddb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:252:5> line:246:5 constexpr min 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
| |   |-ParmVarDecl 0x137dba8 <col:9, col:20> col:20 referenced __a 'const _Tp &'
| |   |-ParmVarDecl 0x137dc20 <col:25, col:36> col:36 referenced __b 'const _Tp &'
| |   |-ParmVarDecl 0x137dc98 <col:41, col:50> col:50 referenced __comp '_Compare'
| |   `-CompoundStmt 0x137dfd0 <line:247:5, line:252:5>
| |     |-IfStmt 0x137df88 <line:249:7, line:250:9>
| |     | |-CallExpr 0x137df28 <line:249:11, col:26> '<dependent type>'
| |     | | |-DeclRefExpr 0x137dec8 <col:11> '_Compare' lvalue ParmVar 0x137dc98 '__comp' '_Compare'
| |     | | |-DeclRefExpr 0x137dee8 <col:18> 'const _Tp' lvalue ParmVar 0x137dc20 '__b' 'const _Tp &'
| |     | | `-DeclRefExpr 0x137df08 <col:23> 'const _Tp' lvalue ParmVar 0x137dba8 '__a' 'const _Tp &'
| |     | `-ReturnStmt 0x137df78 <line:250:2, col:9>
| |     |   `-DeclRefExpr 0x137df58 <col:9> 'const _Tp' lvalue ParmVar 0x137dc20 '__b' 'const _Tp &'
| |     `-ReturnStmt 0x137dfc0 <line:251:7, col:14>
| |       `-DeclRefExpr 0x137dfa0 <col:14> 'const _Tp' lvalue ParmVar 0x137dba8 '__a' 'const _Tp &'
| |-FunctionTemplateDecl 0x137e3b8 <line:265:3, line:274:5> line:268:5 max
| | |-TemplateTypeParmDecl 0x137dff0 <line:265:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x137e068 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Compare
| | `-FunctionDecl 0x137e318 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:130:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:274:5> line:268:5 constexpr max 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
| |   |-ParmVarDecl 0x137e148 <col:9, col:20> col:20 referenced __a 'const _Tp &'
| |   |-ParmVarDecl 0x137e1c0 <col:25, col:36> col:36 referenced __b 'const _Tp &'
| |   |-ParmVarDecl 0x137e238 <col:41, col:50> col:50 referenced __comp '_Compare'
| |   `-CompoundStmt 0x137e530 <line:269:5, line:274:5>
| |     |-IfStmt 0x137e4e8 <line:271:7, line:272:9>
| |     | |-CallExpr 0x137e488 <line:271:11, col:26> '<dependent type>'
| |     | | |-DeclRefExpr 0x137e428 <col:11> '_Compare' lvalue ParmVar 0x137e238 '__comp' '_Compare'
| |     | | |-DeclRefExpr 0x137e448 <col:18> 'const _Tp' lvalue ParmVar 0x137e148 '__a' 'const _Tp &'
| |     | | `-DeclRefExpr 0x137e468 <col:23> 'const _Tp' lvalue ParmVar 0x137e1c0 '__b' 'const _Tp &'
| |     | `-ReturnStmt 0x137e4d8 <line:272:2, col:9>
| |     |   `-DeclRefExpr 0x137e4b8 <col:9> 'const _Tp' lvalue ParmVar 0x137e1c0 '__b' 'const _Tp &'
| |     `-ReturnStmt 0x137e520 <line:273:7, col:14>
| |       `-DeclRefExpr 0x137e500 <col:14> 'const _Tp' lvalue ParmVar 0x137e148 '__a' 'const _Tp &'
| |-FunctionTemplateDecl 0x137e898 <line:278:3, line:282:20> line:280:5 __niter_base
| | |-TemplateTypeParmDecl 0x137e550 <line:278:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x137e7f8 <line:279:5, line:282:20> line:280:5 __niter_base '_Iterator (_Iterator) noexcept(std::is_nothrow_copy_constructible<_Iterator>::value)' inline
| |   |-ParmVarDecl 0x137e5f8 <col:18, col:28> col:28 referenced __it '_Iterator'
| |   `-CompoundStmt 0x137e928 <line:282:5, col:20>
| |     `-ReturnStmt 0x137e918 <col:7, col:14>
| |       `-DeclRefExpr 0x137e8f8 <col:14> '_Iterator' lvalue ParmVar 0x137e5f8 '__it' '_Iterator'
| |-FunctionTemplateDecl 0x137ec98 <line:287:3, line:290:60> line:289:5 __niter_wrap
| | |-TemplateTypeParmDecl 0x137e940 <line:287:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x137e9b8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-FunctionDecl 0x137ebf8 <line:288:5, line:290:60> line:289:5 __niter_wrap '_From (_From, _To)' inline
| |   |-ParmVarDecl 0x137ea70 <col:18, col:24> col:24 referenced __from '_From'
| |   |-ParmVarDecl 0x137eae8 <col:32, col:36> col:36 referenced __res '_To'
| |   `-CompoundStmt 0x137ef48 <line:290:5, col:60>
| |     `-ReturnStmt 0x137ef38 <col:7, col:57>
| |       `-CXXOperatorCallExpr 0x137ef00 <col:14, col:57> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x137eeb0 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8 0x135ac78
| |         |-DeclRefExpr 0x137ed00 <col:14> '_From' lvalue ParmVar 0x137ea70 '__from' '_From'
| |         `-ParenExpr 0x137ee90 <col:23, col:57> '<dependent type>'
| |           `-CXXOperatorCallExpr 0x137ee58 <col:24, col:56> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x137ee08 <col:30> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |             |-DeclRefExpr 0x137ed20 <col:24> '_To' lvalue ParmVar 0x137eae8 '__res' '_To'
| |             `-CallExpr 0x137ede0 <col:32, col:56> '<dependent type>'
| |               |-UnresolvedLookupExpr 0x137ed60 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |               `-DeclRefExpr 0x137edc0 <col:50> '_From' lvalue ParmVar 0x137ea70 '__from' '_From'
| |-FunctionTemplateDecl 0x137f268 <line:293:3, line:296:21> line:295:5 __niter_wrap
| | |-TemplateTypeParmDecl 0x137ef60 <line:293:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| | `-FunctionDecl 0x137f1c8 <line:294:5, line:296:21> line:295:5 __niter_wrap '_Iterator (const _Iterator &, _Iterator)' inline
| |   |-ParmVarDecl 0x137f038 <col:18, col:33> col:34 'const _Iterator &'
| |   |-ParmVarDecl 0x137f0b0 <col:36, col:46> col:46 referenced __res '_Iterator'
| |   `-CompoundStmt 0x137f300 <line:296:5, col:21>
| |     `-ReturnStmt 0x137f2f0 <col:7, col:14>
| |       `-DeclRefExpr 0x137f2d0 <col:14> '_Iterator' lvalue ParmVar 0x137f0b0 '__res' '_Iterator'
| |-ClassTemplateDecl 0x137f538 <line:304:3, line:315:5> line:305:12 __copy_move
| | |-NonTypeTemplateParmDecl 0x137f328 <line:304:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| | |-NonTypeTemplateParmDecl 0x137f398 <col:26, col:31> col:31 'bool' depth 0 index 1 _IsSimple
| | |-TemplateTypeParmDecl 0x137f3f8 <col:42, col:51> col:51 typename depth 0 index 2 _Category
| | |-CXXRecordDecl 0x137f4a8 <line:305:5, line:315:5> line:305:12 struct __copy_move definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x137f830 <col:5, col:12> col:12 implicit struct __copy_move
| | | `-FunctionTemplateDecl 0x137fcd8 <line:307:7, line:314:2> line:309:2 __copy_m
| | |   |-TemplateTypeParmDecl 0x137f8c0 <line:307:16, col:25> col:25 referenced typename depth 1 index 0 _II
| | |   |-TemplateTypeParmDecl 0x137f938 <col:30, col:39> col:39 referenced typename depth 1 index 1 _OI
| | |   `-CXXMethodDecl 0x137fc38 <line:308:2, line:314:2> line:309:2 __copy_m '_OI (_II, _II, _OI)' static
| | |     |-ParmVarDecl 0x137f9f0 <col:11, col:15> col:15 referenced __first '_II'
| | |     |-ParmVarDecl 0x137fa68 <col:24, col:28> col:28 referenced __last '_II'
| | |     |-ParmVarDecl 0x137fae0 <col:36, col:40> col:40 referenced __result '_OI'
| | |     `-CompoundStmt 0x1380008 <line:310:2, line:314:2>
| | |       |-ForStmt 0x137ffa0 <line:311:4, line:312:19>
| | |       | |-<<<NULL>>>
| | |       | |-<<<NULL>>>
| | |       | |-CXXOperatorCallExpr 0x137fe10 <line:311:11, col:22> '<dependent type>'
| | |       | | |-UnresolvedLookupExpr 0x137fda0 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| | |       | | |-DeclRefExpr 0x137fd60 <col:11> '_II' lvalue ParmVar 0x137f9f0 '__first' '_II'
| | |       | | `-DeclRefExpr 0x137fd80 <col:22> '_II' lvalue ParmVar 0x137fa68 '__last' '_II'
| | |       | |-BinaryOperator 0x137fef0 <col:30, col:50> '<dependent type>' ','
| | |       | | |-UnaryOperator 0x137fe68 <col:30, col:32> '<dependent type>' prefix '++' cannot overflow
| | |       | | | `-DeclRefExpr 0x137fe48 <col:32> '_OI' lvalue ParmVar 0x137fae0 '__result' '_OI'
| | |       | | `-CStyleCastExpr 0x137fec8 <col:42, col:50> 'void' <ToVoid>
| | |       | |   `-UnaryOperator 0x137fea0 <col:48, col:50> '<dependent type>' prefix '++' cannot overflow
| | |       | |     `-DeclRefExpr 0x137fe80 <col:50> '_II' lvalue ParmVar 0x137f9f0 '__first' '_II'
| | |       | `-BinaryOperator 0x137ff80 <line:312:6, col:19> '<dependent type>' '='
| | |       |   |-UnaryOperator 0x137ff30 <col:6, col:7> '<dependent type>' prefix '*' cannot overflow
| | |       |   | `-DeclRefExpr 0x137ff10 <col:7> '_OI' lvalue ParmVar 0x137fae0 '__result' '_OI'
| | |       |   `-UnaryOperator 0x137ff68 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
| | |       |     `-DeclRefExpr 0x137ff48 <col:19> '_II' lvalue ParmVar 0x137f9f0 '__first' '_II'
| | |       `-ReturnStmt 0x137fff8 <line:313:4, col:11>
| | |         `-DeclRefExpr 0x137ffd8 <col:11> '_OI' lvalue ParmVar 0x137fae0 '__result' '_OI'
| | |-ClassTemplateSpecialization 0x1380eb0 '__copy_move'
| | `-ClassTemplateSpecialization 0x1386110 '__copy_move'
| |-ClassTemplatePartialSpecializationDecl 0x13802c0 <line:318:3, line:329:5> line:319:12 struct __copy_move definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x1380028 <line:318:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| | |-CXXRecordDecl 0x13805d8 <line:319:5, col:12> col:12 implicit struct __copy_move
| | `-FunctionTemplateDecl 0x1380a48 <line:321:7, line:328:2> line:323:2 __copy_m
| |   |-TemplateTypeParmDecl 0x1380668 <line:321:16, col:25> col:25 referenced typename depth 1 index 0 _II
| |   |-TemplateTypeParmDecl 0x13806e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _OI
| |   `-CXXMethodDecl 0x13809a8 <line:322:2, line:328:2> line:323:2 __copy_m '_OI (_II, _II, _OI)' static
| |     |-ParmVarDecl 0x13807a0 <col:11, col:15> col:15 referenced __first '_II'
| |     |-ParmVarDecl 0x1380818 <col:24, col:28> col:28 referenced __last '_II'
| |     |-ParmVarDecl 0x1380890 <col:36, col:40> col:40 referenced __result '_OI'
| |     `-CompoundStmt 0x1380e08 <line:324:2, line:328:2>
| |       |-ForStmt 0x1380da0 <line:325:4, line:326:36>
| |       | |-<<<NULL>>>
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x1380b80 <line:325:11, col:22> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x1380b10 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |       | | |-DeclRefExpr 0x1380ad0 <col:11> '_II' lvalue ParmVar 0x13807a0 '__first' '_II'
| |       | | `-DeclRefExpr 0x1380af0 <col:22> '_II' lvalue ParmVar 0x1380818 '__last' '_II'
| |       | |-BinaryOperator 0x1380c60 <col:30, col:50> '<dependent type>' ','
| |       | | |-UnaryOperator 0x1380bd8 <col:30, col:32> '<dependent type>' prefix '++' cannot overflow
| |       | | | `-DeclRefExpr 0x1380bb8 <col:32> '_OI' lvalue ParmVar 0x1380890 '__result' '_OI'
| |       | | `-CStyleCastExpr 0x1380c38 <col:42, col:50> 'void' <ToVoid>
| |       | |   `-UnaryOperator 0x1380c10 <col:48, col:50> '<dependent type>' prefix '++' cannot overflow
| |       | |     `-DeclRefExpr 0x1380bf0 <col:50> '_II' lvalue ParmVar 0x13807a0 '__first' '_II'
| |       | `-BinaryOperator 0x1380d80 <line:326:6, col:36> '<dependent type>' '='
| |       |   |-UnaryOperator 0x1380ca0 <col:6, col:7> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-DeclRefExpr 0x1380c80 <col:7> '_OI' lvalue ParmVar 0x1380890 '__result' '_OI'
| |       |   `-CallExpr 0x1380d58 <col:18, col:36> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x1380cd8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |       |     `-UnaryOperator 0x1380d40 <col:28, col:29> '<dependent type>' prefix '*' cannot overflow
| |       |       `-DeclRefExpr 0x1380d20 <col:29> '_II' lvalue ParmVar 0x13807a0 '__first' '_II'
| |       `-ReturnStmt 0x1380df8 <line:327:4, col:11>
| |         `-DeclRefExpr 0x1380dd8 <col:11> '_OI' lvalue ParmVar 0x1380890 '__result' '_OI'
| |-ClassTemplateSpecializationDecl 0x1380eb0 <line:332:3, line:348:5> line:333:12 struct __copy_move definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x1381158 <col:5, col:12> col:12 implicit struct __copy_move
| | `-FunctionTemplateDecl 0x13815c8 <line:335:7, line:347:2> line:337:2 __copy_m
| |   |-TemplateTypeParmDecl 0x13811e8 <line:335:16, col:25> col:25 referenced typename depth 0 index 0 _II
| |   |-TemplateTypeParmDecl 0x1381268 <col:30, col:39> col:39 referenced typename depth 0 index 1 _OI
| |   `-CXXMethodDecl 0x1381528 <line:336:2, line:347:2> line:337:2 __copy_m '_OI (_II, _II, _OI)' static
| |     |-ParmVarDecl 0x1381320 <col:11, col:15> col:15 referenced __first '_II'
| |     |-ParmVarDecl 0x1381398 <col:24, col:28> col:28 referenced __last '_II'
| |     |-ParmVarDecl 0x1381410 <col:36, col:40> col:40 referenced __result '_OI'
| |     `-CompoundStmt 0x1386060 <line:338:2, line:347:2>
| |       |-DeclStmt 0x1385c28 <line:339:4, col:68>
| |       | `-TypedefDecl 0x1385bd0 <col:4, col:59> col:59 referenced _Distance 'typename iterator_traits<_II>::difference_type'
| |       |   `-DependentNameType 0x1385b60 'typename iterator_traits<_II>::difference_type' dependent
| |       |-ForStmt 0x1385ff8 <line:340:4, line:345:6>
| |       | |-DeclStmt 0x1385da0 <line:340:8, col:40>
| |       | | `-VarDecl 0x1385c70 <col:8, col:33> col:18 referenced __n '_Distance':'typename iterator_traits<_II>::difference_type' cinit
| |       | |   `-CXXOperatorCallExpr 0x1385d68 <col:24, col:33> '<dependent type>'
| |       | |     |-UnresolvedLookupExpr 0x1385d18 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       | |     |-DeclRefExpr 0x1385cd8 <col:24> '_II' lvalue ParmVar 0x1381398 '__last' '_II'
| |       | |     `-DeclRefExpr 0x1385cf8 <col:33> '_II' lvalue ParmVar 0x1381320 '__first' '_II'
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x1385e60 <col:42, col:48> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x1385df8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |       | | |-DeclRefExpr 0x1385db8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x1385c70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| |       | | `-IntegerLiteral 0x1385dd8 <col:48> 'int' 0
| |       | |-UnaryOperator 0x1385eb8 <col:51, col:53> '<dependent type>' prefix '--' cannot overflow
| |       | | `-DeclRefExpr 0x1385e98 <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x1385c70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| |       | `-CompoundStmt 0x1385fd0 <line:341:6, line:345:6>
| |       |   |-BinaryOperator 0x1385f40 <line:342:8, col:21> '<dependent type>' '='
| |       |   | |-UnaryOperator 0x1385ef0 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | | `-DeclRefExpr 0x1385ed0 <col:9> '_OI' lvalue ParmVar 0x1381410 '__result' '_OI'
| |       |   | `-UnaryOperator 0x1385f28 <col:20, col:21> '<dependent type>' prefix '*' cannot overflow
| |       |   |   `-DeclRefExpr 0x1385f08 <col:21> '_II' lvalue ParmVar 0x1381320 '__first' '_II'
| |       |   |-UnaryOperator 0x1385f80 <line:343:8, col:10> '<dependent type>' prefix '++' cannot overflow
| |       |   | `-DeclRefExpr 0x1385f60 <col:10> '_II' lvalue ParmVar 0x1381320 '__first' '_II'
| |       |   `-UnaryOperator 0x1385fb8 <line:344:8, col:10> '<dependent type>' prefix '++' cannot overflow
| |       |     `-DeclRefExpr 0x1385f98 <col:10> '_OI' lvalue ParmVar 0x1381410 '__result' '_OI'
| |       `-ReturnStmt 0x1386050 <line:346:4, col:11>
| |         `-DeclRefExpr 0x1386030 <col:11> '_OI' lvalue ParmVar 0x1381410 '__result' '_OI'
| |-ClassTemplateSpecializationDecl 0x1386110 <line:351:3, line:367:5> line:352:12 struct __copy_move definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x13863b8 <col:5, col:12> col:12 implicit struct __copy_move
| | `-FunctionTemplateDecl 0x1386828 <line:354:7, line:366:2> line:356:2 __copy_m
| |   |-TemplateTypeParmDecl 0x1386448 <line:354:16, col:25> col:25 referenced typename depth 0 index 0 _II
| |   |-TemplateTypeParmDecl 0x13864c8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _OI
| |   `-CXXMethodDecl 0x1386788 <line:355:2, line:366:2> line:356:2 __copy_m '_OI (_II, _II, _OI)' static
| |     |-ParmVarDecl 0x1386580 <col:11, col:15> col:15 referenced __first '_II'
| |     |-ParmVarDecl 0x13865f8 <col:24, col:28> col:28 referenced __last '_II'
| |     |-ParmVarDecl 0x1386670 <col:36, col:40> col:40 referenced __result '_OI'
| |     `-CompoundStmt 0x1386ee0 <line:357:2, line:366:2>
| |       |-DeclStmt 0x1386a18 <line:358:4, col:68>
| |       | `-TypedefDecl 0x13869c0 <col:4, col:59> col:59 referenced _Distance 'typename iterator_traits<_II>::difference_type'
| |       |   `-DependentNameType 0x1386950 'typename iterator_traits<_II>::difference_type' dependent
| |       |-ForStmt 0x1386e78 <line:359:4, line:364:6>
| |       | |-DeclStmt 0x1386b90 <line:359:8, col:40>
| |       | | `-VarDecl 0x1386a60 <col:8, col:33> col:18 referenced __n '_Distance':'typename iterator_traits<_II>::difference_type' cinit
| |       | |   `-CXXOperatorCallExpr 0x1386b58 <col:24, col:33> '<dependent type>'
| |       | |     |-UnresolvedLookupExpr 0x1386b08 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       | |     |-DeclRefExpr 0x1386ac8 <col:24> '_II' lvalue ParmVar 0x13865f8 '__last' '_II'
| |       | |     `-DeclRefExpr 0x1386ae8 <col:33> '_II' lvalue ParmVar 0x1386580 '__first' '_II'
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x1386c50 <col:42, col:48> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x1386be8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |       | | |-DeclRefExpr 0x1386ba8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x1386a60 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| |       | | `-IntegerLiteral 0x1386bc8 <col:48> 'int' 0
| |       | |-UnaryOperator 0x1386ca8 <col:51, col:53> '<dependent type>' prefix '--' cannot overflow
| |       | | `-DeclRefExpr 0x1386c88 <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x1386a60 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| |       | `-CompoundStmt 0x1386e50 <line:360:6, line:364:6>
| |       |   |-BinaryOperator 0x1386dc0 <line:361:8, col:38> '<dependent type>' '='
| |       |   | |-UnaryOperator 0x1386ce0 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | | `-DeclRefExpr 0x1386cc0 <col:9> '_OI' lvalue ParmVar 0x1386670 '__result' '_OI'
| |       |   | `-CallExpr 0x1386d98 <col:20, col:38> '<dependent type>'
| |       |   |   |-UnresolvedLookupExpr 0x1386d18 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8
| |       |   |   `-UnaryOperator 0x1386d80 <col:30, col:31> '<dependent type>' prefix '*' cannot overflow
| |       |   |     `-DeclRefExpr 0x1386d60 <col:31> '_II' lvalue ParmVar 0x1386580 '__first' '_II'
| |       |   |-UnaryOperator 0x1386e00 <line:362:8, col:10> '<dependent type>' prefix '++' cannot overflow
| |       |   | `-DeclRefExpr 0x1386de0 <col:10> '_II' lvalue ParmVar 0x1386580 '__first' '_II'
| |       |   `-UnaryOperator 0x1386e38 <line:363:8, col:10> '<dependent type>' prefix '++' cannot overflow
| |       |     `-DeclRefExpr 0x1386e18 <col:10> '_OI' lvalue ParmVar 0x1386670 '__result' '_OI'
| |       `-ReturnStmt 0x1386ed0 <line:365:4, col:11>
| |         `-DeclRefExpr 0x1386eb0 <col:11> '_OI' lvalue ParmVar 0x1386670 '__result' '_OI'
| |-ClassTemplatePartialSpecializationDecl 0x1387180 <line:370:3, line:389:5> line:371:12 struct __copy_move definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x1386f98 <col:24> 'bool' NonTypeTemplateParm 0x1386f18 '_IsMove' 'bool'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-NonTypeTemplateParmDecl 0x1386f18 <line:370:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-CXXRecordDecl 0x1387468 <line:371:5, col:12> col:12 implicit struct __copy_move
| | `-FunctionTemplateDecl 0x1387918 <line:373:7, line:388:2> line:375:2 __copy_m
| |   |-TemplateTypeParmDecl 0x13874f8 <line:373:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| |   `-CXXMethodDecl 0x1387878 <line:374:2, line:388:2> line:375:2 __copy_m '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
| |     |-ParmVarDecl 0x1387608 <col:11, col:22> col:22 referenced __first 'const _Tp *'
| |     |-ParmVarDecl 0x1387680 <col:31, col:42> col:42 referenced __last 'const _Tp *'
| |     |-ParmVarDecl 0x1387728 <col:50, col:55> col:55 referenced __result '_Tp *'
| |     `-CompoundStmt 0x1388600 <line:376:2, line:388:2>
| |       |-DeclStmt 0x1387da0 <line:378:4, line:380:33>
| |       | `-TypeAliasDecl 0x1387d40 <line:378:4, line:380:32> line:378:10 referenced __assignable 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'
| |       |   `-TemplateSpecializationType 0x1387c10 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >' dependent conditional
| |       |     |-TemplateArgument expr
| |       |     | `-DeclRefExpr 0x13879a0 <col:37> 'bool' NonTypeTemplateParm 0x1386f18 '_IsMove' 'bool'
| |       |     |-TemplateArgument type 'is_move_assignable<_Tp>'
| |       |     `-TemplateArgument type 'is_copy_assignable<_Tp>'
| |       |-DeclStmt 0x1387f00 <line:382:4, col:72>
| |       | `-StaticAssertDecl 0x1387ec0 <col:4, col:71> col:4
| |       |   |-DependentScopeDeclRefExpr 0x1387e58 <col:19, col:39> '<dependent type>' lvalue
| |       |   `-StringLiteral 0x1387e90 <col:46> 'const char [23]' lvalue "type is not assignable"
| |       |-DeclStmt 0x1388058 <line:384:4, col:43>
| |       | `-VarDecl 0x1387f28 <col:4, col:36> col:20 referenced _Num 'const std::ptrdiff_t':'const long' cinit
| |       |   `-CXXOperatorCallExpr 0x1388020 <col:27, col:36> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x1387fd0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |     |-DeclRefExpr 0x1387f90 <col:27> 'const _Tp *' lvalue ParmVar 0x1387680 '__last' 'const _Tp *'
| |       |     `-DeclRefExpr 0x1387fb0 <col:36> 'const _Tp *' lvalue ParmVar 0x1387608 '__first' 'const _Tp *'
| |       |-IfStmt 0x1388510 <line:385:4, line:386:61>
| |       | |-ImplicitCastExpr 0x13880a8 <line:385:8> 'bool' <IntegralToBoolean>
| |       | | `-ImplicitCastExpr 0x1388090 <col:8> 'std::ptrdiff_t':'long' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x1388070 <col:8> 'const std::ptrdiff_t':'const long' lvalue Var 0x1387f28 '_Num' 'const std::ptrdiff_t':'const long'
| |       | `-CallExpr 0x13884d8 <line:386:6, col:61> '<dependent type>'
| |       |   |-DeclRefExpr 0x13883d8 <col:6> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| |       |   |-DeclRefExpr 0x13883f8 <col:24> '_Tp *' lvalue ParmVar 0x1387728 '__result' '_Tp *'
| |       |   |-DeclRefExpr 0x1388418 <col:34> 'const _Tp *' lvalue ParmVar 0x1387608 '__first' 'const _Tp *'
| |       |   `-BinaryOperator 0x13884b8 <col:43, col:57> 'unsigned long' '*'
| |       |     |-UnaryExprOrTypeTraitExpr 0x1388448 <col:43, col:53> 'unsigned long' sizeof '_Tp'
| |       |     `-ImplicitCastExpr 0x13884a0 <col:57> 'unsigned long' <IntegralCast>
| |       |       `-ImplicitCastExpr 0x1388488 <col:57> 'std::ptrdiff_t':'long' <LValueToRValue>
| |       |         `-DeclRefExpr 0x1388468 <col:57> 'const std::ptrdiff_t':'const long' lvalue Var 0x1387f28 '_Num' 'const std::ptrdiff_t':'const long'
| |       `-ReturnStmt 0x13885f0 <line:387:4, col:22>
| |         `-CXXOperatorCallExpr 0x13885b8 <col:11, col:22> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1388568 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8 0x135ac78
| |           |-DeclRefExpr 0x1388528 <col:11> '_Tp *' lvalue ParmVar 0x1387728 '__result' '_Tp *'
| |           `-DeclRefExpr 0x1388548 <col:22> 'const std::ptrdiff_t':'const long' lvalue Var 0x1387f28 '_Num' 'const std::ptrdiff_t':'const long'
| |-FunctionTemplateDecl 0x1388a98 <line:391:3, line:405:5> line:393:5 __copy_move_a
| | |-NonTypeTemplateParmDecl 0x1388648 <line:391:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x13886a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _II
| | |-TemplateTypeParmDecl 0x1388728 <col:40, col:49> col:49 referenced typename depth 0 index 2 _OI
| | `-FunctionDecl 0x13889f8 <line:392:5, line:405:5> line:393:5 __copy_move_a '_OI (_II, _II, _OI)' inline
| |   |-ParmVarDecl 0x13887e8 <col:19, col:23> col:23 referenced __first '_II'
| |   |-ParmVarDecl 0x1388860 <col:32, col:36> col:36 referenced __last '_II'
| |   |-ParmVarDecl 0x13888d8 <col:44, col:48> col:48 referenced __result '_OI'
| |   `-CompoundStmt 0x13899a0 <line:394:5, line:405:5>
| |     |-DeclStmt 0x1388d08 <line:395:7, col:68>
| |     | `-TypedefDecl 0x1388cb0 <col:7, col:57> col:57 referenced _ValueTypeI 'typename iterator_traits<_II>::value_type'
| |     |   `-DependentNameType 0x1388c40 'typename iterator_traits<_II>::value_type' dependent
| |     |-DeclStmt 0x1388f18 <line:396:7, col:68>
| |     | `-TypedefDecl 0x1388ec0 <col:7, col:57> col:57 referenced _ValueTypeO 'typename iterator_traits<_OI>::value_type'
| |     |   `-DependentNameType 0x1388e50 'typename iterator_traits<_OI>::value_type' dependent
| |     |-DeclStmt 0x13890c8 <line:397:7, col:73>
| |     | `-TypedefDecl 0x1389070 <col:7, col:64> col:64 referenced _Category 'typename iterator_traits<_II>::iterator_category'
| |     |   `-DependentNameType 0x1389000 'typename iterator_traits<_II>::iterator_category' dependent
| |     |-DeclStmt 0x1389668 <line:398:7, line:401:58>
| |     | `-VarDecl 0x13890f0 <line:398:7, line:401:57> line:398:18 referenced __simple 'const bool' cinit
| |     |   `-ParenExpr 0x1389648 <col:29, line:401:57> '<dependent type>'
| |     |     `-BinaryOperator 0x1389628 <line:398:30, line:401:50> '<dependent type>' '&&'
| |     |       |-BinaryOperator 0x1389448 <line:398:30, line:400:31> '<dependent type>' '&&'
| |     |       | |-BinaryOperator 0x13892e8 <line:398:30, line:399:31> '<dependent type>' '&&'
| |     |       | | |-TypeTraitExpr 0x1389190 <line:398:30, col:65> 'bool'
| |     |       | | `-DependentScopeDeclRefExpr 0x13892b0 <line:399:12, col:31> '<dependent type>' lvalue
| |     |       | `-DependentScopeDeclRefExpr 0x1389410 <line:400:12, col:31> '<dependent type>' lvalue
| |     |       `-DependentScopeDeclRefExpr 0x13895f0 <line:401:12, col:50> '<dependent type>' lvalue
| |     `-ReturnStmt 0x1389990 <line:403:7, line:404:56>
| |       `-CallExpr 0x1389958 <line:403:14, line:404:56> '<dependent type>'
| |         |-DependentScopeDeclRefExpr 0x13898c0 <line:403:14, line:404:22> '<dependent type>' lvalue
| |         |-DeclRefExpr 0x13898f8 <col:31> '_II' lvalue ParmVar 0x13887e8 '__first' '_II'
| |         |-DeclRefExpr 0x1389918 <col:40> '_II' lvalue ParmVar 0x1388860 '__last' '_II'
| |         `-DeclRefExpr 0x1389938 <col:48> '_OI' lvalue ParmVar 0x13888d8 '__result' '_OI'
| |-ClassTemplateDecl 0x1389b70 prev 0x10a92b8 <line:409:3, line:410:12> col:12 char_traits
| | |-TemplateTypeParmDecl 0x13899d8 <line:409:12, col:21> col:21 typename depth 0 index 0 _CharT
| | |-CXXRecordDecl 0x1389ae0 prev 0x10a9228 <line:410:5, col:12> col:12 struct char_traits
| | |-ClassTemplateSpecialization 0x13be008 'char_traits'
| | |-ClassTemplateSpecialization 0x13c2f70 'char_traits'
| | |-ClassTemplateSpecialization 0x13df968 'char_traits'
| | `-ClassTemplateSpecialization 0x13eda08 'char_traits'
| |-ClassTemplateDecl 0x1389d80 prev 0x1100080 <line:412:3, line:413:11> col:11 istreambuf_iterator
| | |-TemplateTypeParmDecl 0x1389bc8 <line:412:12, col:21> col:21 typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x1389c48 <col:29, col:38> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |   `-inherited from TemplateTypeParm 0x10fff50 '_Traits'
| | |-CXXRecordDecl 0x1389cf0 prev 0x10ffff0 <line:413:5, col:11> col:11 class istreambuf_iterator
| | |-ClassTemplateSpecialization 0x187d458 'istreambuf_iterator'
| | `-ClassTemplateSpecialization 0x1886e68 'istreambuf_iterator'
| |-ClassTemplateDecl 0x1389f90 prev 0x1100510 <line:415:3, line:416:11> col:11 ostreambuf_iterator
| | |-TemplateTypeParmDecl 0x1389dd8 <line:415:12, col:21> col:21 typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x1389e58 <col:29, col:38> col:38 typename depth 0 index 1 _Traits
| | | `-TemplateArgument type 'char_traits<_CharT>'
| | |   `-inherited from TemplateTypeParm 0x11003e0 '_Traits'
| | |-CXXRecordDecl 0x1389f00 prev 0x1100480 <line:416:5, col:11> col:11 class ostreambuf_iterator
| | |-ClassTemplateSpecialization 0x187d6b8 'ostreambuf_iterator'
| | `-ClassTemplateSpecialization 0x18870c8 'ostreambuf_iterator'
| |-FunctionTemplateDecl 0x138ab58 <line:418:3, line:422:55> line:421:5 __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x1389ff8 <line:418:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x138a058 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| | `-FunctionDecl 0x138aab8 <line:419:5, line:422:55> line:421:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
| |   |-ParmVarDecl 0x138a6f8 <col:20, col:26> col:27 '_CharT *'
| |   |-ParmVarDecl 0x138a770 <col:29, col:35> col:36 '_CharT *'
| |   `-ParmVarDecl 0x138a988 <line:422:6, col:54> col:55 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
| |-FunctionTemplateDecl 0x138b598 <line:424:3, line:428:55> line:427:5 __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x138abd8 <line:424:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x138ac38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| | `-FunctionDecl 0x138b4f8 <line:425:5, line:428:55> line:427:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
| |   |-ParmVarDecl 0x138b138 <col:20, col:32> col:33 'const _CharT *'
| |   |-ParmVarDecl 0x138b1b0 <col:35, col:47> col:48 'const _CharT *'
| |   `-ParmVarDecl 0x138b3c8 <line:428:6, col:54> col:55 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
| |-FunctionTemplateDecl 0x138c0a8 <line:430:3, line:434:64> line:433:5 __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x138b618 <line:430:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x138b678 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| | `-FunctionDecl 0x138c008 <line:431:5, line:434:64> line:433:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *)'
| |   |-ParmVarDecl 0x138bc48 <col:20, col:68> col:69 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
| |   |-ParmVarDecl 0x138be58 <line:434:6, col:54> col:55 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
| |   `-ParmVarDecl 0x138bed0 <col:57, col:63> col:64 '_CharT *'
| |-FunctionTemplateDecl 0x138c538 <line:436:3, line:444:5> line:438:5 __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x138c128 <line:436:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x138c188 <col:26, col:35> col:35 referenced typename depth 0 index 1 _II
| | |-TemplateTypeParmDecl 0x138c208 <col:40, col:49> col:49 referenced typename depth 0 index 2 _OI
| | `-FunctionDecl 0x138c498 <line:437:5, line:444:5> line:438:5 __copy_move_a2 '_OI (_II, _II, _OI)' inline
| |   |-ParmVarDecl 0x138c2c8 <col:20, col:24> col:24 referenced __first '_II'
| |   |-ParmVarDecl 0x138c340 <col:33, col:37> col:37 referenced __last '_II'
| |   |-ParmVarDecl 0x138c3b8 <col:45, col:49> col:49 referenced __result '_OI'
| |   `-CompoundStmt 0x138c9e8 <line:439:5, line:444:5>
| |     `-ReturnStmt 0x138c9d8 <line:440:7, line:443:38>
| |       `-CallExpr 0x138c9a8 <line:440:14, line:443:38> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x138c5c8 <line:440:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__niter_wrap' 0x137ec98 0x137f268
| |         |-DeclRefExpr 0x138c618 <col:32> '_OI' lvalue ParmVar 0x138c3b8 '__result' '_OI'
| |         `-CallExpr 0x138c970 <line:441:3, line:443:37> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x138c690 <line:441:3, col:29> '<dependent type>' lvalue (no ADL) = '__copy_move_a' 0x1388a98
| |           |-CallExpr 0x138c7b8 <col:31, col:56> '<dependent type>'
| |           | |-UnresolvedLookupExpr 0x138c738 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           | `-DeclRefExpr 0x138c798 <col:49> '_II' lvalue ParmVar 0x138c2c8 '__first' '_II'
| |           |-CallExpr 0x138c880 <line:442:10, col:34> '<dependent type>'
| |           | |-UnresolvedLookupExpr 0x138c800 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           | `-DeclRefExpr 0x138c860 <col:28> '_II' lvalue ParmVar 0x138c340 '__last' '_II'
| |           `-CallExpr 0x138c948 <line:443:10, col:36> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x138c8c8 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |             `-DeclRefExpr 0x138c928 <col:28> '_OI' lvalue ParmVar 0x138c3b8 '__result' '_OI'
| |-FunctionTemplateDecl 0x138cda8 <line:463:3, line:475:5> line:465:5 copy
| | |-TemplateTypeParmDecl 0x138ca00 <line:463:12, col:21> col:21 referenced typename depth 0 index 0 _II
| | |-TemplateTypeParmDecl 0x138ca78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _OI
| | `-FunctionDecl 0x138cd08 <line:464:5, line:475:5> line:465:5 copy '_OI (_II, _II, _OI)' inline
| |   |-ParmVarDecl 0x138cb30 <col:10, col:14> col:14 referenced __first '_II'
| |   |-ParmVarDecl 0x138cba8 <col:23, col:27> col:27 referenced __last '_II'
| |   |-ParmVarDecl 0x138cc20 <col:35, col:39> col:39 referenced __result '_OI'
| |   `-CompoundStmt 0x138d208 <line:466:5, line:475:5>
| |     |-NullStmt 0x138ce18 <line:471:72>
| |     `-ReturnStmt 0x138d1f8 <line:473:7, line:474:71>
| |       `-CallExpr 0x138d1c0 <line:473:14, line:474:71> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x138cf80 <line:473:14, col:66> '<dependent type>' lvalue (no ADL) = '__copy_move_a2' 0x138ab58 0x138b598 0x138c0a8 0x138c538
| |         |-CallExpr 0x138d0b8 <line:474:8, col:33> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x138d040 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x138d098 <col:26> '_II' lvalue ParmVar 0x138cb30 '__first' '_II'
| |         |-CallExpr 0x138d178 <col:36, col:60> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x138d100 <col:36, col:41> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x138d158 <col:54> '_II' lvalue ParmVar 0x138cba8 '__last' '_II'
| |         `-DeclRefExpr 0x138d1a0 <col:63> '_OI' lvalue ParmVar 0x138cc20 '__result' '_OI'
| |-FunctionTemplateDecl 0x138d5d8 <line:495:3, line:507:5> line:497:5 move
| | |-TemplateTypeParmDecl 0x138d228 <line:495:12, col:21> col:21 referenced typename depth 0 index 0 _II
| | |-TemplateTypeParmDecl 0x138d2a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _OI
| | `-FunctionDecl 0x138d538 <line:496:5, line:507:5> line:497:5 move '_OI (_II, _II, _OI)' inline
| |   |-ParmVarDecl 0x138d360 <col:10, col:14> col:14 referenced __first '_II'
| |   |-ParmVarDecl 0x138d3d8 <col:23, col:27> col:27 referenced __last '_II'
| |   |-ParmVarDecl 0x138d450 <col:35, col:39> col:39 referenced __result '_OI'
| |   `-CompoundStmt 0x138d930 <line:498:5, line:507:5>
| |     |-NullStmt 0x138d648 <line:503:72>
| |     `-ReturnStmt 0x138d920 <line:505:7, line:506:47>
| |       `-CallExpr 0x138d8e8 <line:505:14, line:506:47> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x138d6a8 <line:505:14, col:38> '<overloaded function type>' lvalue (no ADL) = '__copy_move_a2' 0x138ab58 0x138b598 0x138c0a8 0x138c538
| |         |-CallExpr 0x138d7e0 <col:40, col:65> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x138d768 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x138d7c0 <col:58> '_II' lvalue ParmVar 0x138d360 '__first' '_II'
| |         |-CallExpr 0x138d8a0 <line:506:12, col:36> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x138d828 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x138d880 <col:30> '_II' lvalue ParmVar 0x138d3d8 '__last' '_II'
| |         `-DeclRefExpr 0x138d8c8 <col:39> '_OI' lvalue ParmVar 0x138d450 '__result' '_OI'
| |-ClassTemplateDecl 0x138dd20 <line:514:3, line:525:5> line:515:12 __copy_move_backward
| | |-NonTypeTemplateParmDecl 0x138d960 <line:514:12> col:16 'bool' depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x138d9d0 <col:18> col:22 'bool' depth 0 index 1
| | |-TemplateTypeParmDecl 0x138da30 <col:24> col:32 typename depth 0 index 2
| | |-CXXRecordDecl 0x138dc90 <line:515:5, line:525:5> line:515:12 struct __copy_move_backward definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x138e010 <col:5, col:12> col:12 implicit struct __copy_move_backward
| | | `-FunctionTemplateDecl 0x138e478 <line:517:7, line:524:2> line:519:2 __copy_move_b
| | |   |-TemplateTypeParmDecl 0x138e0a0 <line:517:16, col:25> col:25 referenced typename depth 1 index 0 _BI1
| | |   |-TemplateTypeParmDecl 0x138e118 <col:31, col:40> col:40 referenced typename depth 1 index 1 _BI2
| | |   `-CXXMethodDecl 0x138e3d8 <line:518:2, line:524:2> line:519:2 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| | |     |-ParmVarDecl 0x138e1d0 <col:16, col:21> col:21 referenced __first '_BI1'
| | |     |-ParmVarDecl 0x138e248 <col:30, col:35> col:35 referenced __last '_BI1'
| | |     |-ParmVarDecl 0x138e2c0 <col:43, col:48> col:48 referenced __result '_BI2'
| | |     `-CompoundStmt 0x138e6f0 <line:520:2, line:524:2>
| | |       |-WhileStmt 0x138e6a8 <line:521:4, line:522:23>
| | |       | |-CXXOperatorCallExpr 0x138e5b0 <line:521:11, col:22> '<dependent type>'
| | |       | | |-UnresolvedLookupExpr 0x138e540 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| | |       | | |-DeclRefExpr 0x138e500 <col:11> '_BI1' lvalue ParmVar 0x138e1d0 '__first' '_BI1'
| | |       | | `-DeclRefExpr 0x138e520 <col:22> '_BI1' lvalue ParmVar 0x138e248 '__last' '_BI1'
| | |       | `-BinaryOperator 0x138e688 <line:522:6, col:23> '<dependent type>' '='
| | |       |   |-UnaryOperator 0x138e620 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
| | |       |   | `-UnaryOperator 0x138e608 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
| | |       |   |   `-DeclRefExpr 0x138e5e8 <col:9> '_BI2' lvalue ParmVar 0x138e2c0 '__result' '_BI2'
| | |       |   `-UnaryOperator 0x138e670 <col:20, col:23> '<dependent type>' prefix '*' cannot overflow
| | |       |     `-UnaryOperator 0x138e658 <col:21, col:23> '<dependent type>' prefix '--' cannot overflow
| | |       |       `-DeclRefExpr 0x138e638 <col:23> '_BI1' lvalue ParmVar 0x138e248 '__last' '_BI1'
| | |       `-ReturnStmt 0x138e6e0 <line:523:4, col:11>
| | |         `-DeclRefExpr 0x138e6c0 <col:11> '_BI2' lvalue ParmVar 0x138e2c0 '__result' '_BI2'
| | |-ClassTemplateSpecialization 0x138f4e0 '__copy_move_backward'
| | `-ClassTemplateSpecialization 0x1390208 '__copy_move_backward'
| |-ClassTemplatePartialSpecializationDecl 0x138e9a0 <line:528:3, line:539:5> line:529:12 struct __copy_move_backward definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x138e710 <line:528:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| | |-CXXRecordDecl 0x138ecb8 <line:529:5, col:12> col:12 implicit struct __copy_move_backward
| | `-FunctionTemplateDecl 0x138f128 <line:531:7, line:538:2> line:533:2 __copy_move_b
| |   |-TemplateTypeParmDecl 0x138ed48 <line:531:16, col:25> col:25 referenced typename depth 1 index 0 _BI1
| |   |-TemplateTypeParmDecl 0x138edc8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _BI2
| |   `-CXXMethodDecl 0x138f088 <line:532:2, line:538:2> line:533:2 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| |     |-ParmVarDecl 0x138ee80 <col:16, col:21> col:21 referenced __first '_BI1'
| |     |-ParmVarDecl 0x138eef8 <col:30, col:35> col:35 referenced __last '_BI1'
| |     |-ParmVarDecl 0x138ef70 <col:43, col:48> col:48 referenced __result '_BI2'
| |     `-CompoundStmt 0x138f438 <line:534:2, line:538:2>
| |       |-WhileStmt 0x138f3f0 <line:535:4, line:536:39>
| |       | |-CXXOperatorCallExpr 0x138f260 <line:535:11, col:22> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x138f1f0 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |       | | |-DeclRefExpr 0x138f1b0 <col:11> '_BI1' lvalue ParmVar 0x138ee80 '__first' '_BI1'
| |       | | `-DeclRefExpr 0x138f1d0 <col:22> '_BI1' lvalue ParmVar 0x138eef8 '__last' '_BI1'
| |       | `-BinaryOperator 0x138f3d0 <line:536:6, col:39> '<dependent type>' '='
| |       |   |-UnaryOperator 0x138f2d0 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-UnaryOperator 0x138f2b8 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
| |       |   |   `-DeclRefExpr 0x138f298 <col:9> '_BI2' lvalue ParmVar 0x138ef70 '__result' '_BI2'
| |       |   `-CallExpr 0x138f3a8 <col:20, col:39> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x138f308 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8 0x138d5d8
| |       |     `-UnaryOperator 0x138f390 <col:30, col:33> '<dependent type>' prefix '*' cannot overflow
| |       |       `-UnaryOperator 0x138f378 <col:31, col:33> '<dependent type>' prefix '--' cannot overflow
| |       |         `-DeclRefExpr 0x138f358 <col:33> '_BI1' lvalue ParmVar 0x138eef8 '__last' '_BI1'
| |       `-ReturnStmt 0x138f428 <line:537:4, col:11>
| |         `-DeclRefExpr 0x138f408 <col:11> '_BI2' lvalue ParmVar 0x138ef70 '__result' '_BI2'
| |-ClassTemplateSpecializationDecl 0x138f4e0 <line:542:3, line:554:5> line:543:12 struct __copy_move_backward definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x138f788 <col:5, col:12> col:12 implicit struct __copy_move_backward
| | `-FunctionTemplateDecl 0x138fbf8 <line:545:7, line:553:2> line:547:2 __copy_move_b
| |   |-TemplateTypeParmDecl 0x138f818 <line:545:16, col:25> col:25 referenced typename depth 0 index 0 _BI1
| |   |-TemplateTypeParmDecl 0x138f898 <col:31, col:40> col:40 referenced typename depth 0 index 1 _BI2
| |   `-CXXMethodDecl 0x138fb58 <line:546:2, line:553:2> line:547:2 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| |     |-ParmVarDecl 0x138f950 <col:16, col:21> col:21 referenced __first '_BI1'
| |     |-ParmVarDecl 0x138f9c8 <col:30, col:35> col:35 referenced __last '_BI1'
| |     |-ParmVarDecl 0x138fa40 <col:43, col:48> col:48 referenced __result '_BI2'
| |     `-CompoundStmt 0x1390158 <line:548:2, line:553:2>
| |       |-DeclStmt 0x138fdf8 <line:549:4, col:55>
| |       | `-VarDecl 0x138fd90 <col:4, col:52> col:52 referenced __n 'typename iterator_traits<_BI1>::difference_type'
| |       |-ForStmt 0x13900f0 <line:550:4, line:551:23>
| |       | |-BinaryOperator 0x138fef8 <line:550:9, col:24> '<dependent type>' '='
| |       | | |-DeclRefExpr 0x138fe10 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x138fd90 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | | `-CXXOperatorCallExpr 0x138fec0 <col:15, col:24> '<dependent type>'
| |       | |   |-UnresolvedLookupExpr 0x138fe70 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       | |   |-DeclRefExpr 0x138fe30 <col:15> '_BI1' lvalue ParmVar 0x138f9c8 '__last' '_BI1'
| |       | |   `-DeclRefExpr 0x138fe50 <col:24> '_BI1' lvalue ParmVar 0x138f950 '__first' '_BI1'
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x138ffc0 <col:33, col:39> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x138ff58 <col:37> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |       | | |-DeclRefExpr 0x138ff18 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x138fd90 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | | `-IntegerLiteral 0x138ff38 <col:39> 'int' 0
| |       | |-UnaryOperator 0x1390018 <col:42, col:44> '<dependent type>' prefix '--' cannot overflow
| |       | | `-DeclRefExpr 0x138fff8 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x138fd90 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | `-BinaryOperator 0x13900d0 <line:551:6, col:23> '<dependent type>' '='
| |       |   |-UnaryOperator 0x1390068 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-UnaryOperator 0x1390050 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
| |       |   |   `-DeclRefExpr 0x1390030 <col:9> '_BI2' lvalue ParmVar 0x138fa40 '__result' '_BI2'
| |       |   `-UnaryOperator 0x13900b8 <col:20, col:23> '<dependent type>' prefix '*' cannot overflow
| |       |     `-UnaryOperator 0x13900a0 <col:21, col:23> '<dependent type>' prefix '--' cannot overflow
| |       |       `-DeclRefExpr 0x1390080 <col:23> '_BI1' lvalue ParmVar 0x138f9c8 '__last' '_BI1'
| |       `-ReturnStmt 0x1390148 <line:552:4, col:11>
| |         `-DeclRefExpr 0x1390128 <col:11> '_BI2' lvalue ParmVar 0x138fa40 '__result' '_BI2'
| |-ClassTemplateSpecializationDecl 0x1390208 <line:557:3, line:569:5> line:558:12 struct __copy_move_backward definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x13904b8 <col:5, col:12> col:12 implicit struct __copy_move_backward
| | `-FunctionTemplateDecl 0x1390928 <line:560:7, line:568:2> line:562:2 __copy_move_b
| |   |-TemplateTypeParmDecl 0x1390548 <line:560:16, col:25> col:25 referenced typename depth 0 index 0 _BI1
| |   |-TemplateTypeParmDecl 0x13905c8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _BI2
| |   `-CXXMethodDecl 0x1390888 <line:561:2, line:568:2> line:562:2 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| |     |-ParmVarDecl 0x1390680 <col:16, col:21> col:21 referenced __first '_BI1'
| |     |-ParmVarDecl 0x13906f8 <col:30, col:35> col:35 referenced __last '_BI1'
| |     |-ParmVarDecl 0x1390770 <col:43, col:48> col:48 referenced __result '_BI2'
| |     `-CompoundStmt 0x1390f20 <line:563:2, line:568:2>
| |       |-DeclStmt 0x1390b28 <line:564:4, col:55>
| |       | `-VarDecl 0x1390ac0 <col:4, col:52> col:52 referenced __n 'typename iterator_traits<_BI1>::difference_type'
| |       |-ForStmt 0x1390eb8 <line:565:4, line:566:39>
| |       | |-BinaryOperator 0x1390c28 <line:565:9, col:24> '<dependent type>' '='
| |       | | |-DeclRefExpr 0x1390b40 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x1390ac0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | | `-CXXOperatorCallExpr 0x1390bf0 <col:15, col:24> '<dependent type>'
| |       | |   |-UnresolvedLookupExpr 0x1390ba0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       | |   |-DeclRefExpr 0x1390b60 <col:15> '_BI1' lvalue ParmVar 0x13906f8 '__last' '_BI1'
| |       | |   `-DeclRefExpr 0x1390b80 <col:24> '_BI1' lvalue ParmVar 0x1390680 '__first' '_BI1'
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x1390cf0 <col:33, col:39> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x1390c88 <col:37> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |       | | |-DeclRefExpr 0x1390c48 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x1390ac0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | | `-IntegerLiteral 0x1390c68 <col:39> 'int' 0
| |       | |-UnaryOperator 0x1390d48 <col:42, col:44> '<dependent type>' prefix '--' cannot overflow
| |       | | `-DeclRefExpr 0x1390d28 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x1390ac0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| |       | `-BinaryOperator 0x1390e98 <line:566:6, col:39> '<dependent type>' '='
| |       |   |-UnaryOperator 0x1390d98 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-UnaryOperator 0x1390d80 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
| |       |   |   `-DeclRefExpr 0x1390d60 <col:9> '_BI2' lvalue ParmVar 0x1390770 '__result' '_BI2'
| |       |   `-CallExpr 0x1390e70 <col:20, col:39> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x1390dd0 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x12759e8 0x138d5d8
| |       |     `-UnaryOperator 0x1390e58 <col:30, col:33> '<dependent type>' prefix '*' cannot overflow
| |       |       `-UnaryOperator 0x1390e40 <col:31, col:33> '<dependent type>' prefix '--' cannot overflow
| |       |         `-DeclRefExpr 0x1390e20 <col:33> '_BI1' lvalue ParmVar 0x13906f8 '__last' '_BI1'
| |       `-ReturnStmt 0x1390f10 <line:567:4, col:11>
| |         `-DeclRefExpr 0x1390ef0 <col:11> '_BI2' lvalue ParmVar 0x1390770 '__result' '_BI2'
| |-ClassTemplatePartialSpecializationDecl 0x13911c0 <line:572:3, line:591:5> line:573:12 struct __copy_move_backward definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x1390fd8 <col:33> 'bool' NonTypeTemplateParm 0x1390f58 '_IsMove' 'bool'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-NonTypeTemplateParmDecl 0x1390f58 <line:572:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-CXXRecordDecl 0x13914a8 <line:573:5, col:12> col:12 implicit struct __copy_move_backward
| | `-FunctionTemplateDecl 0x13918e8 <line:575:7, line:590:2> line:577:2 __copy_move_b
| |   |-TemplateTypeParmDecl 0x1391538 <line:575:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| |   `-CXXMethodDecl 0x1391848 <line:576:2, line:590:2> line:577:2 __copy_move_b '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
| |     |-ParmVarDecl 0x1391618 <col:16, col:27> col:27 referenced __first 'const _Tp *'
| |     |-ParmVarDecl 0x1391690 <col:36, col:47> col:47 referenced __last 'const _Tp *'
| |     |-ParmVarDecl 0x1391738 <col:55, col:60> col:60 referenced __result '_Tp *'
| |     `-CompoundStmt 0x1392fa0 <line:578:2, line:590:2>
| |       |-DeclStmt 0x13929b0 <line:580:4, line:582:33>
| |       | `-TypeAliasDecl 0x1391c20 <line:580:4, line:582:32> line:580:10 referenced __assignable 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'
| |       |   `-TemplateSpecializationType 0x1391af0 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >' dependent conditional
| |       |     |-TemplateArgument expr
| |       |     | `-DeclRefExpr 0x1391970 <col:37> 'bool' NonTypeTemplateParm 0x1390f58 '_IsMove' 'bool'
| |       |     |-TemplateArgument type 'is_move_assignable<_Tp>'
| |       |     `-TemplateArgument type 'is_copy_assignable<_Tp>'
| |       |-DeclStmt 0x1392b10 <line:584:4, col:72>
| |       | `-StaticAssertDecl 0x1392ad0 <col:4, col:71> col:4
| |       |   |-DependentScopeDeclRefExpr 0x1392a68 <col:19, col:39> '<dependent type>' lvalue
| |       |   `-StringLiteral 0x1392aa0 <col:46> 'const char [23]' lvalue "type is not assignable"
| |       |-DeclStmt 0x1392c68 <line:586:4, col:43>
| |       | `-VarDecl 0x1392b38 <col:4, col:36> col:20 referenced _Num 'const std::ptrdiff_t':'const long' cinit
| |       |   `-CXXOperatorCallExpr 0x1392c30 <col:27, col:36> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x1392be0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |     |-DeclRefExpr 0x1392ba0 <col:27> 'const _Tp *' lvalue ParmVar 0x1391690 '__last' 'const _Tp *'
| |       |     `-DeclRefExpr 0x1392bc0 <col:36> 'const _Tp *' lvalue ParmVar 0x1391618 '__first' 'const _Tp *'
| |       |-IfStmt 0x1392eb0 <line:587:4, line:588:68>
| |       | |-ImplicitCastExpr 0x1392cb8 <line:587:8> 'bool' <IntegralToBoolean>
| |       | | `-ImplicitCastExpr 0x1392ca0 <col:8> 'std::ptrdiff_t':'long' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x1392c80 <col:8> 'const std::ptrdiff_t':'const long' lvalue Var 0x1392b38 '_Num' 'const std::ptrdiff_t':'const long'
| |       | `-CallExpr 0x1392e78 <line:588:6, col:68> '<dependent type>'
| |       |   |-DeclRefExpr 0x1392cd0 <col:6> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| |       |   |-CXXOperatorCallExpr 0x1392d80 <col:24, col:35> '<dependent type>'
| |       |   | |-UnresolvedLookupExpr 0x1392d30 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |   | |-DeclRefExpr 0x1392cf0 <col:24> '_Tp *' lvalue ParmVar 0x1391738 '__result' '_Tp *'
| |       |   | `-DeclRefExpr 0x1392d10 <col:35> 'const std::ptrdiff_t':'const long' lvalue Var 0x1392b38 '_Num' 'const std::ptrdiff_t':'const long'
| |       |   |-DeclRefExpr 0x1392db8 <col:41> 'const _Tp *' lvalue ParmVar 0x1391618 '__first' 'const _Tp *'
| |       |   `-BinaryOperator 0x1392e58 <col:50, col:64> 'unsigned long' '*'
| |       |     |-UnaryExprOrTypeTraitExpr 0x1392de8 <col:50, col:60> 'unsigned long' sizeof '_Tp'
| |       |     `-ImplicitCastExpr 0x1392e40 <col:64> 'unsigned long' <IntegralCast>
| |       |       `-ImplicitCastExpr 0x1392e28 <col:64> 'std::ptrdiff_t':'long' <LValueToRValue>
| |       |         `-DeclRefExpr 0x1392e08 <col:64> 'const std::ptrdiff_t':'const long' lvalue Var 0x1392b38 '_Num' 'const std::ptrdiff_t':'const long'
| |       `-ReturnStmt 0x1392f90 <line:589:4, col:22>
| |         `-CXXOperatorCallExpr 0x1392f58 <col:11, col:22> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1392f08 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |           |-DeclRefExpr 0x1392ec8 <col:11> '_Tp *' lvalue ParmVar 0x1391738 '__result' '_Tp *'
| |           `-DeclRefExpr 0x1392ee8 <col:22> 'const std::ptrdiff_t':'const long' lvalue Var 0x1392b38 '_Num' 'const std::ptrdiff_t':'const long'
| |-FunctionTemplateDecl 0x13933f8 <line:593:3, line:609:5> line:595:5 __copy_move_backward_a
| | |-NonTypeTemplateParmDecl 0x1392fe8 <line:593:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x1393048 <col:26, col:35> col:35 referenced typename depth 0 index 1 _BI1
| | |-TemplateTypeParmDecl 0x13930c8 <col:41, col:50> col:50 referenced typename depth 0 index 2 _BI2
| | `-FunctionDecl 0x1393358 <line:594:5, line:609:5> line:595:5 __copy_move_backward_a '_BI2 (_BI1, _BI1, _BI2)' inline
| |   |-ParmVarDecl 0x1393188 <col:28, col:33> col:33 referenced __first '_BI1'
| |   |-ParmVarDecl 0x1393200 <col:42, col:47> col:47 referenced __last '_BI1'
| |   |-ParmVarDecl 0x1393278 <col:55, col:60> col:60 referenced __result '_BI2'
| |   `-CompoundStmt 0x13940d0 <line:596:5, line:609:5>
| |     |-DeclStmt 0x13935d8 <line:597:7, col:69>
| |     | `-TypedefDecl 0x1393580 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_BI1>::value_type'
| |     |   `-DependentNameType 0x1393510 'typename iterator_traits<_BI1>::value_type' dependent
| |     |-DeclStmt 0x1393758 <line:598:7, col:69>
| |     | `-TypedefDecl 0x1393700 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_BI2>::value_type'
| |     |   `-DependentNameType 0x1393690 'typename iterator_traits<_BI2>::value_type' dependent
| |     |-DeclStmt 0x13938d8 <line:599:7, col:74>
| |     | `-TypedefDecl 0x1393880 <col:7, col:65> col:65 referenced _Category 'typename iterator_traits<_BI1>::iterator_category'
| |     |   `-DependentNameType 0x1393810 'typename iterator_traits<_BI1>::iterator_category' dependent
| |     |-DeclStmt 0x1393d98 <line:600:7, line:603:58>
| |     | `-VarDecl 0x1393900 <line:600:7, line:603:57> line:600:18 referenced __simple 'const bool' cinit
| |     |   `-ParenExpr 0x1393d78 <col:29, line:603:57> '<dependent type>'
| |     |     `-BinaryOperator 0x1393d58 <line:600:30, line:603:50> '<dependent type>' '&&'
| |     |       |-BinaryOperator 0x1393bd8 <line:600:30, line:602:32> '<dependent type>' '&&'
| |     |       | |-BinaryOperator 0x1393ab8 <line:600:30, line:601:32> '<dependent type>' '&&'
| |     |       | | |-TypeTraitExpr 0x13939a0 <line:600:30, col:65> 'bool'
| |     |       | | `-DependentScopeDeclRefExpr 0x1393a80 <line:601:12, col:32> '<dependent type>' lvalue
| |     |       | `-DependentScopeDeclRefExpr 0x1393ba0 <line:602:12, col:32> '<dependent type>' lvalue
| |     |       `-DependentScopeDeclRefExpr 0x1393d20 <line:603:12, col:50> '<dependent type>' lvalue
| |     `-ReturnStmt 0x13940c0 <line:605:7, line:608:18>
| |       `-CallExpr 0x1394088 <line:605:14, line:608:18> '<dependent type>'
| |         |-DependentScopeDeclRefExpr 0x1393ff0 <line:605:14, line:606:24> '<dependent type>' lvalue
| |         |-DeclRefExpr 0x1394028 <col:38> '_BI1' lvalue ParmVar 0x1393188 '__first' '_BI1'
| |         |-DeclRefExpr 0x1394048 <line:607:10> '_BI1' lvalue ParmVar 0x1393200 '__last' '_BI1'
| |         `-DeclRefExpr 0x1394068 <line:608:10> '_BI2' lvalue ParmVar 0x1393278 '__result' '_BI2'
| |-FunctionTemplateDecl 0x1394528 <line:611:3, line:619:5> line:613:5 __copy_move_backward_a2
| | |-NonTypeTemplateParmDecl 0x1394118 <line:611:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| | |-TemplateTypeParmDecl 0x1394178 <col:26, col:35> col:35 referenced typename depth 0 index 1 _BI1
| | |-TemplateTypeParmDecl 0x13941f8 <col:41, col:50> col:50 referenced typename depth 0 index 2 _BI2
| | `-FunctionDecl 0x1394488 <line:612:5, line:619:5> line:613:5 __copy_move_backward_a2 '_BI2 (_BI1, _BI1, _BI2)' inline
| |   |-ParmVarDecl 0x13942b8 <col:29, col:34> col:34 referenced __first '_BI1'
| |   |-ParmVarDecl 0x1394330 <col:43, col:48> col:48 referenced __last '_BI1'
| |   |-ParmVarDecl 0x13943a8 <col:56, col:61> col:61 referenced __result '_BI2'
| |   `-CompoundStmt 0x13949d8 <line:614:5, line:619:5>
| |     `-ReturnStmt 0x13949c8 <line:615:7, line:618:34>
| |       `-CallExpr 0x1394998 <line:615:14, line:618:34> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13945b8 <line:615:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__niter_wrap' 0x137ec98 0x137f268
| |         |-DeclRefExpr 0x1394608 <col:32> '_BI2' lvalue ParmVar 0x13943a8 '__result' '_BI2'
| |         `-CallExpr 0x1394960 <line:616:3, line:618:33> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x1394680 <line:616:3, col:38> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a' 0x13933f8
| |           |-CallExpr 0x13947a8 <line:617:6, col:31> '<dependent type>'
| |           | |-UnresolvedLookupExpr 0x1394728 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           | `-DeclRefExpr 0x1394788 <col:24> '_BI1' lvalue ParmVar 0x13942b8 '__first' '_BI1'
| |           |-CallExpr 0x1394870 <col:34, col:58> '<dependent type>'
| |           | |-UnresolvedLookupExpr 0x13947f0 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           | `-DeclRefExpr 0x1394850 <col:52> '_BI1' lvalue ParmVar 0x1394330 '__last' '_BI1'
| |           `-CallExpr 0x1394938 <line:618:6, col:32> '<dependent type>'
| |             |-UnresolvedLookupExpr 0x13948b8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |             `-DeclRefExpr 0x1394918 <col:24> '_BI2' lvalue ParmVar 0x13943a8 '__result' '_BI2'
| |-FunctionTemplateDecl 0x1394d98 <line:639:3, line:653:5> line:641:5 copy_backward
| | |-TemplateTypeParmDecl 0x13949f0 <line:639:12, col:21> col:21 referenced typename depth 0 index 0 _BI1
| | |-TemplateTypeParmDecl 0x1394a68 <col:27, col:36> col:36 referenced typename depth 0 index 1 _BI2
| | `-FunctionDecl 0x1394cf8 <line:640:5, line:653:5> line:641:5 copy_backward '_BI2 (_BI1, _BI1, _BI2)' inline
| |   |-ParmVarDecl 0x1394b20 <col:19, col:24> col:24 referenced __first '_BI1'
| |   |-ParmVarDecl 0x1394b98 <col:33, col:38> col:38 referenced __last '_BI1'
| |   |-ParmVarDecl 0x1394c10 <col:46, col:51> col:51 referenced __result '_BI2'
| |   `-CompoundStmt 0x13951d0 <line:642:5, line:653:5>
| |     |-NullStmt 0x1394e08 <line:649:72>
| |     `-ReturnStmt 0x13951c0 <line:651:7, line:652:71>
| |       `-CallExpr 0x1395188 <line:651:14, line:652:71> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1394f60 <line:651:14, col:76> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a2' 0x1394528
| |         |-CallExpr 0x1395080 <line:652:8, col:33> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x1395008 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x1395060 <col:26> '_BI1' lvalue ParmVar 0x1394b20 '__first' '_BI1'
| |         |-CallExpr 0x1395140 <col:36, col:60> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13950c8 <col:36, col:41> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x1395120 <col:54> '_BI1' lvalue ParmVar 0x1394b98 '__last' '_BI1'
| |         `-DeclRefExpr 0x1395168 <col:63> '_BI2' lvalue ParmVar 0x1394c10 '__result' '_BI2'
| |-FunctionTemplateDecl 0x1395598 <line:674:3, line:689:5> line:676:5 move_backward
| | |-TemplateTypeParmDecl 0x13951f0 <line:674:12, col:21> col:21 referenced typename depth 0 index 0 _BI1
| | |-TemplateTypeParmDecl 0x1395268 <col:27, col:36> col:36 referenced typename depth 0 index 1 _BI2
| | `-FunctionDecl 0x13954f8 <line:675:5, line:689:5> line:676:5 move_backward '_BI2 (_BI1, _BI1, _BI2)' inline
| |   |-ParmVarDecl 0x1395320 <col:19, col:24> col:24 referenced __first '_BI1'
| |   |-ParmVarDecl 0x1395398 <col:33, col:38> col:38 referenced __last '_BI1'
| |   |-ParmVarDecl 0x1395410 <col:46, col:51> col:51 referenced __result '_BI2'
| |   `-CompoundStmt 0x13958b0 <line:677:5, line:689:5>
| |     |-NullStmt 0x1395608 <line:684:72>
| |     `-ReturnStmt 0x13958a0 <line:686:7, line:688:15>
| |       `-CallExpr 0x1395868 <line:686:14, line:688:15> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x1395640 <line:686:14, col:47> '<overloaded function type>' lvalue (no ADL) = '__copy_move_backward_a2' 0x1394528
| |         |-CallExpr 0x1395760 <col:49, col:74> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13956e8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x1395740 <col:67> '_BI1' lvalue ParmVar 0x1395320 '__first' '_BI1'
| |         |-CallExpr 0x1395820 <line:687:7, col:31> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13957a8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x12af378 0x1330e78 0x135d5c8
| |         | `-DeclRefExpr 0x1395800 <col:25> '_BI1' lvalue ParmVar 0x1395398 '__last' '_BI1'
| |         `-DeclRefExpr 0x1395848 <line:688:7> '_BI2' lvalue ParmVar 0x1395410 '__result' '_BI2'
| |-FunctionTemplateDecl 0x1396038 <line:696:3, line:704:5> line:699:5 __fill_a
| | |-TemplateTypeParmDecl 0x13958d0 <line:696:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| | |-TemplateTypeParmDecl 0x1395948 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x1395f98 <line:697:5, line:704:5> line:699:5 __fill_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| |   |-ParmVarDecl 0x1395d50 <col:14, col:31> col:31 referenced __first '_ForwardIterator'
| |   |-ParmVarDecl 0x1395dc8 <col:40, col:57> col:57 referenced __last '_ForwardIterator'
| |   |-ParmVarDecl 0x1395e68 <line:700:8, col:19> col:19 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x1396278 <line:701:5, line:704:5>
| |     `-ForStmt 0x1396240 <line:702:7, line:703:13>
| |       |-<<<NULL>>>
| |       |-<<<NULL>>>
| |       |-CXXOperatorCallExpr 0x1396158 <line:702:14, col:25> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x13960e8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |       | |-DeclRefExpr 0x13960a8 <col:14> '_ForwardIterator' lvalue ParmVar 0x1395d50 '__first' '_ForwardIterator'
| |       | `-DeclRefExpr 0x13960c8 <col:25> '_ForwardIterator' lvalue ParmVar 0x1395dc8 '__last' '_ForwardIterator'
| |       |-UnaryOperator 0x13961b0 <col:33, col:35> '<dependent type>' prefix '++' cannot overflow
| |       | `-DeclRefExpr 0x1396190 <col:35> '_ForwardIterator' lvalue ParmVar 0x1395d50 '__first' '_ForwardIterator'
| |       `-BinaryOperator 0x1396220 <line:703:2, col:13> '<dependent type>' '='
| |         |-UnaryOperator 0x13961e8 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
| |         | `-DeclRefExpr 0x13961c8 <col:3> '_ForwardIterator' lvalue ParmVar 0x1395d50 '__first' '_ForwardIterator'
| |         `-DeclRefExpr 0x1396200 <col:13> 'const _Tp' lvalue ParmVar 0x1395e68 '__value' 'const _Tp &'
| |-FunctionTemplateDecl 0x13969c0 <line:706:3, line:715:5> line:709:5 __fill_a
| | |-TemplateTypeParmDecl 0x1396290 <line:706:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| | |-TemplateTypeParmDecl 0x1396308 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x1396908 <line:707:5, line:715:5> line:709:5 __fill_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| |   |-ParmVarDecl 0x13966c0 <col:14, col:31> col:31 referenced __first '_ForwardIterator'
| |   |-ParmVarDecl 0x1396738 <col:40, col:57> col:57 referenced __last '_ForwardIterator'
| |   |-ParmVarDecl 0x13967d8 <line:710:7, col:18> col:18 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x1396cb0 <line:711:5, line:715:5>
| |     |-DeclStmt 0x1396ac8 <line:712:7, col:32>
| |     | `-VarDecl 0x1396a40 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
| |     |   `-DeclRefExpr 0x1396aa8 <col:25> 'const _Tp' lvalue ParmVar 0x13967d8 '__value' 'const _Tp &'
| |     `-ForStmt 0x1396c78 <line:713:7, line:714:13>
| |       |-<<<NULL>>>
| |       |-<<<NULL>>>
| |       |-CXXOperatorCallExpr 0x1396b90 <line:713:14, col:25> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x1396b20 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |       | |-DeclRefExpr 0x1396ae0 <col:14> '_ForwardIterator' lvalue ParmVar 0x13966c0 '__first' '_ForwardIterator'
| |       | `-DeclRefExpr 0x1396b00 <col:25> '_ForwardIterator' lvalue ParmVar 0x1396738 '__last' '_ForwardIterator'
| |       |-UnaryOperator 0x1396be8 <col:33, col:35> '<dependent type>' prefix '++' cannot overflow
| |       | `-DeclRefExpr 0x1396bc8 <col:35> '_ForwardIterator' lvalue ParmVar 0x13966c0 '__first' '_ForwardIterator'
| |       `-BinaryOperator 0x1396c58 <line:714:2, col:13> '<dependent type>' '='
| |         |-UnaryOperator 0x1396c20 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
| |         | `-DeclRefExpr 0x1396c00 <col:3> '_ForwardIterator' lvalue ParmVar 0x13966c0 '__first' '_ForwardIterator'
| |         `-DeclRefExpr 0x1396c38 <col:13> 'const _Tp' lvalue Var 0x1396a40 '__tmp' 'const _Tp'
| |-FunctionTemplateDecl 0x13973a8 <line:718:3, line:726:5> line:721:5 __fill_a
| | |-TemplateTypeParmDecl 0x1396cd0 <line:718:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x1397308 <line:719:5, line:726:5> line:721:5 __fill_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type (_Tp *, _Tp *, const _Tp &)' inline
| |   |-ParmVarDecl 0x13970b8 <col:14, col:19> col:19 referenced __first '_Tp *'
| |   |-ParmVarDecl 0x1397130 <col:28, col:33> col:33 referenced __last '_Tp *'
| |   |-ParmVarDecl 0x13971d8 <col:41, col:52> col:52 referenced __c 'const _Tp &'
| |   `-CompoundStmt 0x1397ab0 <line:722:5, line:726:5>
| |     |-DeclStmt 0x13974b0 <line:723:7, col:28>
| |     | `-VarDecl 0x1397428 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
| |     |   `-DeclRefExpr 0x1397490 <col:25> 'const _Tp' lvalue ParmVar 0x13971d8 '__c' 'const _Tp &'
| |     `-IfStmt 0x1397a78 <line:724:7, line:725:68> has_var
| |       |-DeclStmt 0x1397a98 <line:724:11, col:41>
| |       | `-VarDecl 0x13974d8 <col:11, col:41> col:24 referenced __len 'const std::size_t':'const unsigned long' cinit
| |       |   `-CXXOperatorCallExpr 0x13975d0 <col:32, col:41> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x1397580 <col:39> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |     |-DeclRefExpr 0x1397540 <col:32> '_Tp *' lvalue ParmVar 0x1397130 '__last' '_Tp *'
| |       |     `-DeclRefExpr 0x1397560 <col:41> '_Tp *' lvalue ParmVar 0x13970b8 '__first' '_Tp *'
| |       |-ImplicitCastExpr 0x1397640 <col:24> 'bool' <IntegralToBoolean>
| |       | `-ImplicitCastExpr 0x1397628 <col:24> 'std::size_t':'unsigned long' <LValueToRValue>
| |       |   `-DeclRefExpr 0x1397608 <col:24> 'const std::size_t':'const unsigned long' lvalue Var 0x13974d8 '__len' 'const std::size_t':'const unsigned long'
| |       `-CallExpr 0x1397a40 <line:725:2, col:68> '<dependent type>'
| |         |-DeclRefExpr 0x1397978 <col:2> '<builtin fn type>' Function 0x1397730 '__builtin_memset' 'void *(void *, int, unsigned long) noexcept'
| |         |-DeclRefExpr 0x1397998 <col:19> '_Tp *' lvalue ParmVar 0x13970b8 '__first' '_Tp *'
| |         |-CXXStaticCastExpr 0x13979f0 <col:28, col:60> 'unsigned char' static_cast<unsigned char> <Dependent>
| |         | `-DeclRefExpr 0x13979b8 <col:55> 'const _Tp' lvalue Var 0x1397428 '__tmp' 'const _Tp'
| |         `-DeclRefExpr 0x1397a20 <col:63> 'const std::size_t':'const unsigned long' lvalue Var 0x13974d8 '__len' 'const std::size_t':'const unsigned long'
| |-FunctionTemplateDecl 0x1397ed8 <line:740:3, line:751:5> line:742:5 fill
| | |-TemplateTypeParmDecl 0x1397ad0 <line:740:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| | |-TemplateTypeParmDecl 0x1397b48 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x1397e38 <line:741:5, line:751:5> line:742:5 fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| |   |-ParmVarDecl 0x1397c00 <col:10, col:27> col:27 referenced __first '_ForwardIterator'
| |   |-ParmVarDecl 0x1397c78 <col:36, col:53> col:53 referenced __last '_ForwardIterator'
| |   |-ParmVarDecl 0x1397d18 <col:61, col:72> col:72 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x13981b0 <line:743:5, line:751:5>
| |     |-NullStmt 0x1397f48 <line:747:54>
| |     `-CallExpr 0x1398178 <line:749:7, line:750:14> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x1397f70 <line:749:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x1396038 0x13969c0 0x13973a8
| |       |-CallExpr 0x1398068 <col:21, col:46> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x1397fe8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |       | `-DeclRefExpr 0x1398048 <col:39> '_ForwardIterator' lvalue ParmVar 0x1397c00 '__first' '_ForwardIterator'
| |       |-CallExpr 0x1398130 <col:49, col:73> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x13980b0 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |       | `-DeclRefExpr 0x1398110 <col:67> '_ForwardIterator' lvalue ParmVar 0x1397c78 '__last' '_ForwardIterator'
| |       `-DeclRefExpr 0x1398158 <line:750:7> 'const _Tp' lvalue ParmVar 0x1397d18 '__value' 'const _Tp &'
| |-FunctionTemplateDecl 0x13989f8 <line:753:3, line:762:5> line:756:5 __fill_n_a
| | |-TemplateTypeParmDecl 0x13981d0 <line:753:12, col:21> col:21 referenced typename depth 0 index 0 _OutputIterator
| | |-TemplateTypeParmDecl 0x1398248 <col:38, col:47> col:47 referenced typename depth 0 index 1 _Size
| | |-TemplateTypeParmDecl 0x13982c8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Tp
| | `-FunctionDecl 0x1398958 <line:754:5, line:762:5> line:756:5 __fill_n_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
| |   |-ParmVarDecl 0x13986e0 <col:16, col:32> col:32 referenced __first '_OutputIterator'
| |   |-ParmVarDecl 0x1398758 <col:41, col:47> col:47 referenced __n '_Size'
| |   |-ParmVarDecl 0x1398828 <col:52, col:63> col:63 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x1398ed0 <line:757:5, line:762:5>
| |     |-ForStmt 0x1398e68 <line:758:7, line:760:13>
| |     | |-DeclStmt 0x1398c30 <line:758:12, col:45>
| |     | | `-VarDecl 0x1398ba8 <col:12, col:42> col:32 referenced __niter 'decltype(__n + 0)' cinit
| |     | |   `-DeclRefExpr 0x1398c10 <col:42> '_Size' lvalue ParmVar 0x1398758 '__n' '_Size'
| |     | |-<<<NULL>>>
| |     | |-CXXOperatorCallExpr 0x1398cf0 <line:759:5, col:15> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x1398c88 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |     | | |-DeclRefExpr 0x1398c48 <col:5> 'decltype(__n + 0)' lvalue Var 0x1398ba8 '__niter' 'decltype(__n + 0)'
| |     | | `-IntegerLiteral 0x1398c68 <col:15> 'int' 0
| |     | |-BinaryOperator 0x1398dd0 <col:18, col:38> '<dependent type>' ','
| |     | | |-UnaryOperator 0x1398d48 <col:18, col:20> '<dependent type>' prefix '--' cannot overflow
| |     | | | `-DeclRefExpr 0x1398d28 <col:20> 'decltype(__n + 0)' lvalue Var 0x1398ba8 '__niter' 'decltype(__n + 0)'
| |     | | `-CStyleCastExpr 0x1398da8 <col:29, col:38> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x1398d80 <col:36, col:38> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x1398d60 <col:38> '_OutputIterator' lvalue ParmVar 0x13986e0 '__first' '_OutputIterator'
| |     | `-BinaryOperator 0x1398e48 <line:760:2, col:13> '<dependent type>' '='
| |     |   |-UnaryOperator 0x1398e10 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
| |     |   | `-DeclRefExpr 0x1398df0 <col:3> '_OutputIterator' lvalue ParmVar 0x13986e0 '__first' '_OutputIterator'
| |     |   `-DeclRefExpr 0x1398e28 <col:13> 'const _Tp' lvalue ParmVar 0x1398828 '__value' 'const _Tp &'
| |     `-ReturnStmt 0x1398ec0 <line:761:7, col:14>
| |       `-DeclRefExpr 0x1398ea0 <col:14> '_OutputIterator' lvalue ParmVar 0x13986e0 '__first' '_OutputIterator'
| |-FunctionTemplateDecl 0x1399698 <line:764:3, line:774:5> line:767:5 __fill_n_a
| | |-TemplateTypeParmDecl 0x1398ef0 <line:764:12, col:21> col:21 referenced typename depth 0 index 0 _OutputIterator
| | |-TemplateTypeParmDecl 0x1398f68 <col:38, col:47> col:47 referenced typename depth 0 index 1 _Size
| | |-TemplateTypeParmDecl 0x1398fe8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Tp
| | `-FunctionDecl 0x13995f8 <line:765:5, line:774:5> line:767:5 __fill_n_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
| |   |-ParmVarDecl 0x13993b0 <col:16, col:32> col:32 referenced __first '_OutputIterator'
| |   |-ParmVarDecl 0x1399428 <col:41, col:47> col:47 referenced __n '_Size'
| |   |-ParmVarDecl 0x13994c8 <col:52, col:63> col:63 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x1399be0 <line:768:5, line:774:5>
| |     |-DeclStmt 0x13997a0 <line:769:7, col:32>
| |     | `-VarDecl 0x1399718 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
| |     |   `-DeclRefExpr 0x1399780 <col:25> 'const _Tp' lvalue ParmVar 0x13994c8 '__value' 'const _Tp &'
| |     |-ForStmt 0x1399b78 <line:770:7, line:772:13>
| |     | |-DeclStmt 0x1399940 <line:770:12, col:45>
| |     | | `-VarDecl 0x13998b8 <col:12, col:42> col:32 referenced __niter 'decltype(__n + 0)' cinit
| |     | |   `-DeclRefExpr 0x1399920 <col:42> '_Size' lvalue ParmVar 0x1399428 '__n' '_Size'
| |     | |-<<<NULL>>>
| |     | |-CXXOperatorCallExpr 0x1399a00 <line:771:5, col:15> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x1399998 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |     | | |-DeclRefExpr 0x1399958 <col:5> 'decltype(__n + 0)' lvalue Var 0x13998b8 '__niter' 'decltype(__n + 0)'
| |     | | `-IntegerLiteral 0x1399978 <col:15> 'int' 0
| |     | |-BinaryOperator 0x1399ae0 <col:18, col:38> '<dependent type>' ','
| |     | | |-UnaryOperator 0x1399a58 <col:18, col:20> '<dependent type>' prefix '--' cannot overflow
| |     | | | `-DeclRefExpr 0x1399a38 <col:20> 'decltype(__n + 0)' lvalue Var 0x13998b8 '__niter' 'decltype(__n + 0)'
| |     | | `-CStyleCastExpr 0x1399ab8 <col:29, col:38> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x1399a90 <col:36, col:38> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x1399a70 <col:38> '_OutputIterator' lvalue ParmVar 0x13993b0 '__first' '_OutputIterator'
| |     | `-BinaryOperator 0x1399b58 <line:772:2, col:13> '<dependent type>' '='
| |     |   |-UnaryOperator 0x1399b20 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
| |     |   | `-DeclRefExpr 0x1399b00 <col:3> '_OutputIterator' lvalue ParmVar 0x13993b0 '__first' '_OutputIterator'
| |     |   `-DeclRefExpr 0x1399b38 <col:13> 'const _Tp' lvalue Var 0x1399718 '__tmp' 'const _Tp'
| |     `-ReturnStmt 0x1399bd0 <line:773:7, col:14>
| |       `-DeclRefExpr 0x1399bb0 <col:14> '_OutputIterator' lvalue ParmVar 0x13993b0 '__first' '_OutputIterator'
| |-FunctionTemplateDecl 0x139a3a8 <line:776:3, line:783:5> line:779:5 __fill_n_a
| | |-TemplateTypeParmDecl 0x1399c08 <line:776:12, col:21> col:21 referenced typename depth 0 index 0 _Size
| | |-TemplateTypeParmDecl 0x1399c88 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x139a308 <line:777:5, line:783:5> line:779:5 __fill_n_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type (_Tp *, _Size, const _Tp &)' inline
| |   |-ParmVarDecl 0x139a0c0 <col:16, col:21> col:21 referenced __first '_Tp *'
| |   |-ParmVarDecl 0x139a138 <col:30, col:36> col:36 referenced __n '_Size'
| |   |-ParmVarDecl 0x139a1d8 <col:41, col:52> col:52 referenced __c 'const _Tp &'
| |   `-CompoundStmt 0x139a6a8 <line:780:5, line:783:5>
| |     |-CallExpr 0x139a598 <line:781:7, col:48> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x139a438 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x1396038 0x13969c0 0x13973a8
| |     | |-DeclRefExpr 0x139a490 <col:21> '_Tp *' lvalue ParmVar 0x139a0c0 '__first' '_Tp *'
| |     | |-CXXOperatorCallExpr 0x139a540 <col:30, col:40> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x139a4f0 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8 0x135ac78
| |     | | |-DeclRefExpr 0x139a4b0 <col:30> '_Tp *' lvalue ParmVar 0x139a0c0 '__first' '_Tp *'
| |     | | `-DeclRefExpr 0x139a4d0 <col:40> '_Size' lvalue ParmVar 0x139a138 '__n' '_Size'
| |     | `-DeclRefExpr 0x139a578 <col:45> 'const _Tp' lvalue ParmVar 0x139a1d8 '__c' 'const _Tp &'
| |     `-ReturnStmt 0x139a698 <line:782:7, col:24>
| |       `-CXXOperatorCallExpr 0x139a660 <col:14, col:24> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x139a610 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8 0x135ac78
| |         |-DeclRefExpr 0x139a5d0 <col:14> '_Tp *' lvalue ParmVar 0x139a0c0 '__first' '_Tp *'
| |         `-DeclRefExpr 0x139a5f0 <col:24> '_Size' lvalue ParmVar 0x139a138 '__n' '_Size'
| |-FunctionTemplateDecl 0x139ab98 <line:800:3, line:810:5> line:802:5 fill_n
| | |-TemplateTypeParmDecl 0x139a6c8 <line:800:12, col:21> col:21 referenced typename depth 0 index 0 _OI
| | |-TemplateTypeParmDecl 0x139a748 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Size
| | |-TemplateTypeParmDecl 0x139a7c8 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Tp
| | `-FunctionDecl 0x139aaf8 <line:801:5, line:810:5> line:802:5 fill_n '_OI (_OI, _Size, const _Tp &)' inline
| |   |-ParmVarDecl 0x139a888 <col:12, col:16> col:16 referenced __first '_OI'
| |   |-ParmVarDecl 0x139a900 <col:25, col:31> col:31 referenced __n '_Size'
| |   |-ParmVarDecl 0x139a9d0 <col:36, col:47> col:47 referenced __value 'const _Tp &'
| |   `-CompoundStmt 0x139ae98 <line:803:5, line:810:5>
| |     |-NullStmt 0x139ac08 <line:806:53>
| |     `-ReturnStmt 0x139ae88 <line:808:7, line:809:60>
| |       `-CallExpr 0x139ae58 <line:808:14, line:809:60> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x139ac30 <line:808:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__niter_wrap' 0x137ec98 0x137f268
| |         |-DeclRefExpr 0x139ac80 <col:32> '_OI' lvalue ParmVar 0x139a888 '__first' '_OI'
| |         `-CallExpr 0x139ae20 <line:809:3, col:59> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x139acc0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '__fill_n_a' 0x13989f8 0x1399698 0x139a3a8
| |           |-CallExpr 0x139adb8 <col:19, col:44> '<dependent type>'
| |           | |-UnresolvedLookupExpr 0x139ad38 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           | `-DeclRefExpr 0x139ad98 <col:37> '_OI' lvalue ParmVar 0x139a888 '__first' '_OI'
| |           |-DeclRefExpr 0x139ade0 <col:47> '_Size' lvalue ParmVar 0x139a900 '__n' '_Size'
| |           `-DeclRefExpr 0x139ae00 <col:52> 'const _Tp' lvalue ParmVar 0x139a9d0 '__value' 'const _Tp &'
| |-ClassTemplateDecl 0x139afd8 <line:812:3, line:824:5> line:813:12 __equal
| | |-NonTypeTemplateParmDecl 0x139aec8 <line:812:12, col:17> col:17 'bool' depth 0 index 0 _BoolType
| | |-CXXRecordDecl 0x139af48 <line:813:5, line:824:5> line:813:12 struct __equal definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x139b250 <col:5, col:12> col:12 implicit struct __equal
| | | `-FunctionTemplateDecl 0x139b6f8 <line:815:7, line:823:2> line:817:2 equal
| | |   |-TemplateTypeParmDecl 0x139b2e0 <line:815:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| | |   |-TemplateTypeParmDecl 0x139b358 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| | |   `-CXXMethodDecl 0x139b658 <line:816:2, line:823:2> line:817:2 equal 'bool (_II1, _II1, _II2)' static
| | |     |-ParmVarDecl 0x139b410 <col:8, col:13> col:13 referenced __first1 '_II1'
| | |     |-ParmVarDecl 0x139b488 <col:23, col:28> col:28 referenced __last1 '_II1'
| | |     |-ParmVarDecl 0x139b500 <col:37, col:42> col:42 referenced __first2 '_II2'
| | |     `-CompoundStmt 0x139bb10 <line:818:2, line:823:2>
| | |       |-ForStmt 0x139bab8 <line:819:4, line:821:15>
| | |       | |-<<<NULL>>>
| | |       | |-<<<NULL>>>
| | |       | |-CXXOperatorCallExpr 0x139b830 <line:819:11, col:23> '<dependent type>'
| | |       | | |-UnresolvedLookupExpr 0x139b7c0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| | |       | | |-DeclRefExpr 0x139b780 <col:11> '_II1' lvalue ParmVar 0x139b410 '__first1' '_II1'
| | |       | | `-DeclRefExpr 0x139b7a0 <col:23> '_II1' lvalue ParmVar 0x139b488 '__last1' '_II1'
| | |       | |-BinaryOperator 0x139b910 <col:32, col:53> '<dependent type>' ','
| | |       | | |-UnaryOperator 0x139b888 <col:32, col:34> '<dependent type>' prefix '++' cannot overflow
| | |       | | | `-DeclRefExpr 0x139b868 <col:34> '_II1' lvalue ParmVar 0x139b410 '__first1' '_II1'
| | |       | | `-CStyleCastExpr 0x139b8e8 <col:44, col:53> 'void' <ToVoid>
| | |       | |   `-UnaryOperator 0x139b8c0 <col:51, col:53> '<dependent type>' prefix '++' cannot overflow
| | |       | |     `-DeclRefExpr 0x139b8a0 <col:53> '_II2' lvalue ParmVar 0x139b500 '__first2' '_II2'
| | |       | `-IfStmt 0x139baa0 <line:820:6, line:821:15>
| | |       |   |-UnaryOperator 0x139ba68 <line:820:10, col:34> '<dependent type>' prefix '!' cannot overflow
| | |       |   | `-ParenExpr 0x139ba48 <col:11, col:34> '<dependent type>'
| | |       |   |   `-CXXOperatorCallExpr 0x139ba10 <col:12, col:26> '<dependent type>'
| | |       |   |     |-UnresolvedLookupExpr 0x139b9a0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| | |       |   |     |-UnaryOperator 0x139b950 <col:12, col:13> '<dependent type>' prefix '*' cannot overflow
| | |       |   |     | `-DeclRefExpr 0x139b930 <col:13> '_II1' lvalue ParmVar 0x139b410 '__first1' '_II1'
| | |       |   |     `-UnaryOperator 0x139b988 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
| | |       |   |       `-DeclRefExpr 0x139b968 <col:26> '_II2' lvalue ParmVar 0x139b500 '__first2' '_II2'
| | |       |   `-ReturnStmt 0x139ba90 <line:821:8, col:15>
| | |       |     `-CXXBoolLiteralExpr 0x139ba80 <col:15> 'bool' false
| | |       `-ReturnStmt 0x139bb00 <line:822:4, col:11>
| | |         `-CXXBoolLiteralExpr 0x139baf0 <col:11> 'bool' true
| | `-ClassTemplateSpecialization 0x139bb78 '__equal'
| |-ClassTemplateSpecializationDecl 0x139bb78 <line:826:3, line:837:5> line:827:12 struct __equal definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x139bd98 <col:5, col:12> col:12 implicit struct __equal
| | `-FunctionTemplateDecl 0x139c1e8 <line:829:7, line:836:2> line:831:2 equal
| |   |-TemplateTypeParmDecl 0x139be28 <line:829:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   `-CXXMethodDecl 0x139c148 <line:830:2, line:836:2> line:831:2 equal 'bool (const _Tp *, const _Tp *, const _Tp *)' static
| |     |-ParmVarDecl 0x139bf08 <col:8, col:19> col:19 referenced __first1 'const _Tp *'
| |     |-ParmVarDecl 0x139bf80 <col:29, col:40> col:40 referenced __last1 'const _Tp *'
| |     |-ParmVarDecl 0x139bff8 <col:49, col:60> col:60 referenced __first2 'const _Tp *'
| |     `-CompoundStmt 0x139c8d8 <line:832:2, line:836:2>
| |       |-IfStmt 0x139c880 <line:833:4, line:834:70> has_var
| |       | |-DeclStmt 0x139c8a0 <line:833:8, col:48>
| |       | | `-VarDecl 0x139c280 <col:8, col:48> col:21 referenced __len 'const std::size_t':'const unsigned long' cinit
| |       | |   `-ParenExpr 0x139c3b0 <col:29, col:48> '<dependent type>'
| |       | |     `-CXXOperatorCallExpr 0x139c378 <col:30, col:40> '<dependent type>'
| |       | |       |-UnresolvedLookupExpr 0x139c328 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       | |       |-DeclRefExpr 0x139c2e8 <col:30> 'const _Tp *' lvalue ParmVar 0x139bf80 '__last1' 'const _Tp *'
| |       | |       `-DeclRefExpr 0x139c308 <col:40> 'const _Tp *' lvalue ParmVar 0x139bf08 '__first1' 'const _Tp *'
| |       | |-ImplicitCastExpr 0x139c408 <col:21> 'bool' <IntegralToBoolean>
| |       | | `-ImplicitCastExpr 0x139c3f0 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x139c3d0 <col:21> 'const std::size_t':'const unsigned long' lvalue Var 0x139c280 '__len' 'const std::size_t':'const unsigned long'
| |       | `-ReturnStmt 0x139c870 <line:834:6, col:70>
| |       |   `-UnaryOperator 0x139c858 <col:13, col:70> '<dependent type>' prefix '!' cannot overflow
| |       |     `-CallExpr 0x139c820 <col:14, col:70> '<dependent type>'
| |       |       |-DeclRefExpr 0x139c738 <col:14> '<builtin fn type>' Function 0x139c4f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
| |       |       |-DeclRefExpr 0x139c758 <col:31> 'const _Tp *' lvalue ParmVar 0x139bf08 '__first1' 'const _Tp *'
| |       |       |-DeclRefExpr 0x139c778 <col:41> 'const _Tp *' lvalue ParmVar 0x139bff8 '__first2' 'const _Tp *'
| |       |       `-BinaryOperator 0x139c800 <col:51, col:65> 'unsigned long' '*'
| |       |         |-UnaryExprOrTypeTraitExpr 0x139c7a8 <col:51, col:61> 'unsigned long' sizeof '_Tp'
| |       |         `-ImplicitCastExpr 0x139c7e8 <col:65> 'std::size_t':'unsigned long' <LValueToRValue>
| |       |           `-DeclRefExpr 0x139c7c8 <col:65> 'const std::size_t':'const unsigned long' lvalue Var 0x139c280 '__len' 'const std::size_t':'const unsigned long'
| |       `-ReturnStmt 0x139c8c8 <line:835:4, col:11>
| |         `-CXXBoolLiteralExpr 0x139c8b8 <col:11> 'bool' true
| |-FunctionTemplateDecl 0x139cce8 <line:839:3, line:852:5> line:841:5 __equal_aux
| | |-TemplateTypeParmDecl 0x139c8f8 <line:839:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x139c978 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x139cc48 <line:840:5, line:852:5> line:841:5 __equal_aux 'bool (_II1, _II1, _II2)' inline
| |   |-ParmVarDecl 0x139ca30 <col:17, col:22> col:22 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x139caa8 <col:32, col:37> col:37 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x139cb20 <col:46, col:51> col:51 referenced __first2 '_II2'
| |   `-CompoundStmt 0x139da50 <line:842:5, line:852:5>
| |     |-DeclStmt 0x139cec8 <line:843:7, col:69>
| |     | `-TypedefDecl 0x139ce70 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_II1>::value_type'
| |     |   `-DependentNameType 0x139ce00 'typename iterator_traits<_II1>::value_type' dependent
| |     |-DeclStmt 0x139d048 <line:844:7, col:69>
| |     | `-TypedefDecl 0x139cff0 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_II2>::value_type'
| |     |   `-DependentNameType 0x139cf80 'typename iterator_traits<_II2>::value_type' dependent
| |     |-DeclStmt 0x139d808 <line:845:7, line:849:58>
| |     | `-VarDecl 0x139d070 <line:845:7, line:849:57> line:845:18 referenced __simple 'const bool' cinit
| |     |   `-ParenExpr 0x139d7e8 <col:29, line:849:57> '<dependent type>'
| |     |     `-BinaryOperator 0x139d7c8 <line:845:30, line:849:50> '<dependent type>' '&&'
| |     |       |-BinaryOperator 0x139d5e8 <line:845:30, line:848:32> '<dependent type>' '&&'
| |     |       | |-BinaryOperator 0x139d4c8 <line:845:30, line:847:32> '<dependent type>' '&&'
| |     |       | | |-ParenExpr 0x139d3a8 <line:845:30, line:846:47> '<dependent type>'
| |     |       | | | `-BinaryOperator 0x139d388 <line:845:31, line:846:40> '<dependent type>' '||'
| |     |       | | |   |-DependentScopeDeclRefExpr 0x139d218 <line:845:31, col:58> '<dependent type>' lvalue
| |     |       | | |   `-DependentScopeDeclRefExpr 0x139d350 <line:846:13, col:40> '<dependent type>' lvalue
| |     |       | | `-DependentScopeDeclRefExpr 0x139d490 <line:847:12, col:32> '<dependent type>' lvalue
| |     |       | `-DependentScopeDeclRefExpr 0x139d5b0 <line:848:12, col:32> '<dependent type>' lvalue
| |     |       `-DependentScopeDeclRefExpr 0x139d790 <line:849:12, col:50> '<dependent type>' lvalue
| |     `-ReturnStmt 0x139da40 <line:851:7, col:71>
| |       `-CallExpr 0x139da08 <col:14, col:71> '<dependent type>'
| |         |-DependentScopeDeclRefExpr 0x139d970 <col:14, col:38> '<dependent type>' lvalue
| |         |-DeclRefExpr 0x139d9a8 <col:44> '_II1' lvalue ParmVar 0x139ca30 '__first1' '_II1'
| |         |-DeclRefExpr 0x139d9c8 <col:54> '_II1' lvalue ParmVar 0x139caa8 '__last1' '_II1'
| |         `-DeclRefExpr 0x139d9e8 <col:63> '_II2' lvalue ParmVar 0x139cb20 '__first2' '_II2'
| |-ClassTemplateDecl 0x139dc30 <line:854:3, line:866:5> line:855:12 __lc_rai
| | |-TemplateTypeParmDecl 0x139da80 <line:854:12> col:20 typename depth 0 index 0
| | |-TemplateTypeParmDecl 0x139daf8 <col:22> col:30 typename depth 0 index 1
| | |-CXXRecordDecl 0x139dba0 <line:855:5, line:866:5> line:855:12 struct __lc_rai definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x139dec0 <col:5, col:12> col:12 implicit struct __lc_rai
| | | |-FunctionTemplateDecl 0x139e3f8 <line:857:7, line:860:20> line:859:2 __newlast1
| | | | |-TemplateTypeParmDecl 0x139df50 <line:857:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| | | | |-TemplateTypeParmDecl 0x139dfc8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| | | | `-CXXMethodDecl 0x139e358 <line:858:2, line:860:20> line:859:2 __newlast1 '_II1 (_II1, _II1, _II2, _II2)' static
| | | |   |-ParmVarDecl 0x139e080 <col:13> col:17 '_II1'
| | | |   |-ParmVarDecl 0x139e0f8 <col:19, col:24> col:24 referenced __last1 '_II1'
| | | |   |-ParmVarDecl 0x139e170 <col:33> col:37 '_II2'
| | | |   |-ParmVarDecl 0x139e1e8 <col:39> col:43 '_II2'
| | | |   `-CompoundStmt 0x139e7f8 <line:860:2, col:20>
| | | |     `-ReturnStmt 0x139e7e8 <col:4, col:11>
| | | |       `-DeclRefExpr 0x139e7c8 <col:11> '_II1' lvalue ParmVar 0x139e0f8 '__last1' '_II1'
| | | `-FunctionTemplateDecl 0x139e748 <line:862:7, line:865:30> line:864:2 __cnd2
| | |   |-TemplateTypeParmDecl 0x139e470 <line:862:16, col:25> col:25 referenced typename depth 1 index 0 _II
| | |   `-CXXMethodDecl 0x139e6a8 <line:863:2, line:865:30> line:864:2 __cnd2 'bool (_II, _II)' static
| | |     |-ParmVarDecl 0x139e518 <col:9, col:13> col:13 referenced __first '_II'
| | |     |-ParmVarDecl 0x139e590 <col:22, col:26> col:26 referenced __last '_II'
| | |     `-CompoundStmt 0x139e908 <line:865:2, col:30>
| | |       `-ReturnStmt 0x139e8f8 <col:4, col:22>
| | |         `-CXXOperatorCallExpr 0x139e8c0 <col:11, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x139e850 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| | |           |-DeclRefExpr 0x139e810 <col:11> '_II' lvalue ParmVar 0x139e518 '__first' '_II'
| | |           `-DeclRefExpr 0x139e830 <col:22> '_II' lvalue ParmVar 0x139e590 '__last' '_II'
| | `-ClassTemplateSpecialization 0x139f510 '__lc_rai'
| |-ClassTemplateSpecializationDecl 0x139f510 <line:868:3, line:887:5> line:869:12 struct __lc_rai definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-TemplateArgument type 'std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x139f778 <col:5, col:12> col:12 implicit struct __lc_rai
| | |-FunctionTemplateDecl 0x139fcb8 <line:871:7, line:881:2> line:873:2 __newlast1
| | | |-TemplateTypeParmDecl 0x139f808 <line:871:16, col:25> col:25 referenced typename depth 0 index 0 _RAI1
| | | |-TemplateTypeParmDecl 0x139f888 <col:32, col:41> col:41 referenced typename depth 0 index 1 _RAI2
| | | `-CXXMethodDecl 0x139fc18 <line:872:2, line:881:2> line:873:2 __newlast1 '_RAI1 (_RAI1, _RAI1, _RAI2, _RAI2)' static
| | |   |-ParmVarDecl 0x139f940 <col:13, col:19> col:19 referenced __first1 '_RAI1'
| | |   |-ParmVarDecl 0x139f9b8 <col:29, col:35> col:35 referenced __last1 '_RAI1'
| | |   |-ParmVarDecl 0x139fa30 <line:874:6, col:12> col:12 referenced __first2 '_RAI2'
| | |   |-ParmVarDecl 0x139faa8 <col:22, col:28> col:28 referenced __last2 '_RAI2'
| | |   `-CompoundStmt 0x13a0780 <line:875:2, line:881:2>
| | |     |-DeclStmt 0x13a02d0 <line:876:4, line:877:34>
| | |     | `-VarDecl 0x13a01a0 <line:876:4, line:877:26> col:6 referenced __diff1 'const typename iterator_traits<_RAI1>::difference_type' cinit
| | |     |   `-CXXOperatorCallExpr 0x13a0298 <col:16, col:26> '<dependent type>'
| | |     |     |-UnresolvedLookupExpr 0x13a0248 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| | |     |     |-DeclRefExpr 0x13a0208 <col:16> '_RAI1' lvalue ParmVar 0x139f9b8 '__last1' '_RAI1'
| | |     |     `-DeclRefExpr 0x13a0228 <col:26> '_RAI1' lvalue ParmVar 0x139f940 '__first1' '_RAI1'
| | |     |-DeclStmt 0x13a0560 <line:878:4, line:879:34>
| | |     | `-VarDecl 0x13a0430 <line:878:4, line:879:26> col:6 referenced __diff2 'const typename iterator_traits<_RAI2>::difference_type' cinit
| | |     |   `-CXXOperatorCallExpr 0x13a0528 <col:16, col:26> '<dependent type>'
| | |     |     |-UnresolvedLookupExpr 0x13a04d8 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| | |     |     |-DeclRefExpr 0x13a0498 <col:16> '_RAI2' lvalue ParmVar 0x139faa8 '__last2' '_RAI2'
| | |     |     `-DeclRefExpr 0x13a04b8 <col:26> '_RAI2' lvalue ParmVar 0x139fa30 '__first2' '_RAI2'
| | |     `-ReturnStmt 0x13a0770 <line:880:4, col:52>
| | |       `-ConditionalOperator 0x13a0740 <col:11, col:52> '<dependent type>'
| | |         |-CXXOperatorCallExpr 0x13a0620 <col:11, col:21> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x13a05b8 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x1300f28 0x1328cf8 0x132b758 0x1356fc8 0x1357648
| | |         | |-DeclRefExpr 0x13a0578 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x13a0430 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| | |         | `-DeclRefExpr 0x13a0598 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x13a01a0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'
| | |         |-CXXOperatorCallExpr 0x13a06e8 <col:31, col:42> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x13a0698 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x132f1a8 0x135ac78
| | |         | |-DeclRefExpr 0x13a0658 <col:31> '_RAI1' lvalue ParmVar 0x139f940 '__first1' '_RAI1'
| | |         | `-DeclRefExpr 0x13a0678 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x13a0430 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| | |         `-DeclRefExpr 0x13a0720 <col:52> '_RAI1' lvalue ParmVar 0x139f9b8 '__last1' '_RAI1'
| | `-FunctionTemplateDecl 0x13a0008 <line:883:7, line:886:17> line:885:2 __cnd2
| |   |-TemplateTypeParmDecl 0x139fd30 <line:883:16, col:25> col:25 referenced typename depth 0 index 0 _RAI
| |   `-CXXMethodDecl 0x139ff68 <line:884:2, line:886:17> line:885:2 __cnd2 'bool (_RAI, _RAI)' static
| |     |-ParmVarDecl 0x139fdd8 <col:9> col:13 '_RAI'
| |     |-ParmVarDecl 0x139fe50 <col:15> col:19 '_RAI'
| |     `-CompoundStmt 0x13a07c8 <line:886:2, col:17>
| |       `-ReturnStmt 0x13a07b8 <col:4, col:11>
| |         `-CXXBoolLiteralExpr 0x13a07a8 <col:11> 'bool' true
| |-FunctionTemplateDecl 0x13a0d68 <line:889:3, line:909:5> line:891:5 __lexicographical_compare_impl
| | |-TemplateTypeParmDecl 0x13a07e0 <line:889:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13a0858 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | |-TemplateTypeParmDecl 0x13a08d8 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Compare
| | `-FunctionDecl 0x13a0cc8 <line:890:5, line:909:5> line:891:5 __lexicographical_compare_impl 'bool (_II1, _II1, _II2, _II2, _Compare)'
| |   |-ParmVarDecl 0x13a0998 <col:36, col:41> col:41 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13a0a10 <col:51, col:56> col:56 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13a0a88 <line:892:8, col:13> col:13 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13a0b00 <col:23, col:28> col:28 referenced __last2 '_II2'
| |   |-ParmVarDecl 0x13a0b78 <line:893:8, col:17> col:17 referenced __comp '_Compare'
| |   `-CompoundStmt 0x13a1bd0 <line:894:5, line:909:5>
| |     |-DeclStmt 0x13a0f58 <line:895:7, col:75>
| |     | `-TypedefDecl 0x13a0f00 <col:7, col:65> col:65 referenced _Category1 'typename iterator_traits<_II1>::iterator_category'
| |     |   `-DependentNameType 0x13a0e90 'typename iterator_traits<_II1>::iterator_category' dependent
| |     |-DeclStmt 0x13a10d8 <line:896:7, col:75>
| |     | `-TypedefDecl 0x13a1080 <col:7, col:65> col:65 referenced _Category2 'typename iterator_traits<_II2>::iterator_category'
| |     |   `-DependentNameType 0x13a1010 'typename iterator_traits<_II2>::iterator_category' dependent
| |     |-DeclStmt 0x13a1378 <line:897:7, col:63>
| |     | `-TypedefDecl 0x13a1320 <col:7, col:53> col:53 referenced __rai_type 'std::__lc_rai<_Category1, _Category2>':'__lc_rai<_Category1, _Category2>'
| |     |   `-ElaboratedType 0x13a1240 'std::__lc_rai<_Category1, _Category2>' sugar dependent
| |     |     `-TemplateSpecializationType 0x13a11e0 '__lc_rai<_Category1, _Category2>' dependent __lc_rai
| |     |       |-TemplateArgument type '_Category1':'typename iterator_traits<_II1>::iterator_category'
| |     |       `-TemplateArgument type '_Category2':'typename iterator_traits<_II2>::iterator_category'
| |     |-BinaryOperator 0x13a1518 <line:899:7, col:76> '<dependent type>' '='
| |     | |-DeclRefExpr 0x13a1390 <col:7> '_II1' lvalue ParmVar 0x13a0a10 '__last1' '_II1'
| |     | `-CallExpr 0x13a14d8 <col:17, col:76> '<dependent type>'
| |     |   |-DependentScopeDeclRefExpr 0x13a1420 <col:17, col:29> '<dependent type>' lvalue
| |     |   |-DeclRefExpr 0x13a1458 <col:40> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |     |   |-DeclRefExpr 0x13a1478 <col:50> '_II1' lvalue ParmVar 0x13a0a10 '__last1' '_II1'
| |     |   |-DeclRefExpr 0x13a1498 <col:59> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |     |   `-DeclRefExpr 0x13a14b8 <col:69> '_II2' lvalue ParmVar 0x13a0b00 '__last2' '_II2'
| |     |-ForStmt 0x13a1998 <line:900:7, line:907:2>
| |     | |-<<<NULL>>>
| |     | |-<<<NULL>>>
| |     | |-BinaryOperator 0x13a1700 <line:900:14, col:73> '<dependent type>' '&&'
| |     | | |-CXXOperatorCallExpr 0x13a15e8 <col:14, col:26> '<dependent type>'
| |     | | | |-UnresolvedLookupExpr 0x13a1578 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | | |-DeclRefExpr 0x13a1538 <col:14> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |     | | | `-DeclRefExpr 0x13a1558 <col:26> '_II1' lvalue ParmVar 0x13a0a10 '__last1' '_II1'
| |     | | `-CallExpr 0x13a16d0 <col:37, col:73> '<dependent type>'
| |     | |   |-DependentScopeDeclRefExpr 0x13a1658 <col:37, col:49> '<dependent type>' lvalue
| |     | |   |-DeclRefExpr 0x13a1690 <col:56> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |     | |   `-DeclRefExpr 0x13a16b0 <col:66> '_II2' lvalue ParmVar 0x13a0b00 '__last2' '_II2'
| |     | |-BinaryOperator 0x13a17c8 <line:901:5, col:25> '<dependent type>' ','
| |     | | |-UnaryOperator 0x13a1740 <col:5, col:7> '<dependent type>' prefix '++' cannot overflow
| |     | | | `-DeclRefExpr 0x13a1720 <col:7> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |     | | `-CStyleCastExpr 0x13a17a0 <col:17, col:25> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x13a1778 <col:23, col:25> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x13a1758 <col:25> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |     | `-CompoundStmt 0x13a1978 <line:902:2, line:907:2>
| |     |   |-IfStmt 0x13a1898 <line:903:4, line:904:13>
| |     |   | |-CallExpr 0x13a1848 <line:903:8, col:33> '<dependent type>'
| |     |   | | |-DeclRefExpr 0x13a17e8 <col:8> '_Compare' lvalue ParmVar 0x13a0b78 '__comp' '_Compare'
| |     |   | | |-DeclRefExpr 0x13a1808 <col:15> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |     |   | | `-DeclRefExpr 0x13a1828 <col:25> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |     |   | `-ReturnStmt 0x13a1888 <line:904:6, col:13>
| |     |   |   `-CXXBoolLiteralExpr 0x13a1878 <col:13> 'bool' true
| |     |   `-IfStmt 0x13a1960 <line:905:4, line:906:13>
| |     |     |-CallExpr 0x13a1910 <line:905:8, col:33> '<dependent type>'
| |     |     | |-DeclRefExpr 0x13a18b0 <col:8> '_Compare' lvalue ParmVar 0x13a0b78 '__comp' '_Compare'
| |     |     | |-DeclRefExpr 0x13a18d0 <col:15> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |     |     | `-DeclRefExpr 0x13a18f0 <col:25> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |     |     `-ReturnStmt 0x13a1950 <line:906:6, col:13>
| |     |       `-CXXBoolLiteralExpr 0x13a1940 <col:13> 'bool' false
| |     `-ReturnStmt 0x13a1bc0 <line:908:7, col:49>
| |       `-BinaryOperator 0x13a1ba0 <col:14, col:49> '<dependent type>' '&&'
| |         |-CXXOperatorCallExpr 0x13a1a80 <col:14, col:26> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13a1a10 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |         | |-DeclRefExpr 0x13a19d0 <col:14> '_II1' lvalue ParmVar 0x13a0998 '__first1' '_II1'
| |         | `-DeclRefExpr 0x13a19f0 <col:26> '_II1' lvalue ParmVar 0x13a0a10 '__last1' '_II1'
| |         `-CXXOperatorCallExpr 0x13a1b68 <col:37, col:49> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13a1af8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |           |-DeclRefExpr 0x13a1ab8 <col:37> '_II2' lvalue ParmVar 0x13a0a88 '__first2' '_II2'
| |           `-DeclRefExpr 0x13a1ad8 <col:49> '_II2' lvalue ParmVar 0x13a0b00 '__last2' '_II2'
| |-ClassTemplateDecl 0x13a1d30 <line:911:3, line:916:5> line:912:12 __lexicographical_compare
| | |-NonTypeTemplateParmDecl 0x13a1c20 <line:911:12, col:17> col:17 'bool' depth 0 index 0 _BoolType
| | |-CXXRecordDecl 0x13a1ca0 <line:912:5, line:916:5> line:912:12 struct __lexicographical_compare definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x13a1fa0 <col:5, col:12> col:12 implicit struct __lexicographical_compare
| | | `-FunctionTemplateDecl 0x13a24d8 <line:914:7, line:915:41> col:14 __lc
| | |   |-TemplateTypeParmDecl 0x13a2030 <line:914:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| | |   |-TemplateTypeParmDecl 0x13a20a8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| | |   `-CXXMethodDecl 0x13a2438 <line:915:2, col:41> col:14 __lc 'bool (_II1, _II1, _II2, _II2)' static
| | |     |-ParmVarDecl 0x13a2160 <col:19> col:23 '_II1'
| | |     |-ParmVarDecl 0x13a21d8 <col:25> col:29 '_II1'
| | |     |-ParmVarDecl 0x13a2250 <col:31> col:35 '_II2'
| | |     `-ParmVarDecl 0x13a22c8 <col:37> col:41 '_II2'
| | `-ClassTemplateSpecialization 0x13a2ec8 '__lexicographical_compare'
| |-FunctionTemplateDecl 0x13a2bb8 parent 0x13a1ca0 prev 0x13a24d8 <line:919:5, line:927:7> line:922:7 __lc
| | |-TemplateTypeParmDecl 0x13a25f8 <line:919:14, col:23> col:23 referenced typename depth 1 index 0 _II1
| | |-TemplateTypeParmDecl 0x13a2678 <col:29, col:38> col:38 referenced typename depth 1 index 1 _II2
| | `-CXXMethodDecl 0x13a2ad8 parent 0x13a1ca0 prev 0x13a2438 <line:918:3, line:927:7> line:922:7 __lc 'bool (_II1, _II1, _II2, _II2)'
| |   |-ParmVarDecl 0x13a2878 <col:12, col:17> col:17 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13a28f0 <col:27, col:32> col:32 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13a2968 <col:41, col:46> col:46 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13a29e0 <col:56, col:61> col:61 referenced __last2 '_II2'
| |   `-CompoundStmt 0x13a2e68 <line:923:7, line:927:7>
| |     `-ReturnStmt 0x13a2e58 <line:924:2, line:926:42>
| |       `-CallExpr 0x13a2e10 <line:924:9, line:926:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13a2c68 <line:924:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_impl' 0x13a0d68
| |         |-DeclRefExpr 0x13a2cb0 <col:45> '_II1' lvalue ParmVar 0x13a2878 '__first1' '_II1'
| |         |-DeclRefExpr 0x13a2cd0 <col:55> '_II1' lvalue ParmVar 0x13a28f0 '__last1' '_II1'
| |         |-DeclRefExpr 0x13a2cf0 <line:925:10> '_II2' lvalue ParmVar 0x13a2968 '__first2' '_II2'
| |         |-DeclRefExpr 0x13a2d10 <col:20> '_II2' lvalue ParmVar 0x13a29e0 '__last2' '_II2'
| |         `-CallExpr 0x13a2df0 <line:926:6, col:41> '__gnu_cxx::__ops::_Iter_less_iter'
| |           `-ImplicitCastExpr 0x13a2dd8 <col:6, col:24> '__gnu_cxx::__ops::_Iter_less_iter (*)()' <FunctionToPointerDecay>
| |             `-DeclRefExpr 0x13a2d78 <col:6, col:24> '__gnu_cxx::__ops::_Iter_less_iter ()' lvalue Function 0x135e1a8 '__iter_less_iter' '__gnu_cxx::__ops::_Iter_less_iter ()'
| |-ClassTemplateSpecializationDecl 0x13a2ec8 <line:929:3, line:944:5> line:930:12 struct __lexicographical_compare definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x13a30e8 <col:5, col:12> col:12 implicit struct __lexicographical_compare
| | `-FunctionTemplateDecl 0x13a4218 <line:932:7, line:943:2> line:934:2 __lc
| |   |-TemplateTypeParmDecl 0x13a3178 <line:932:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x13a31f8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| |   `-CXXMethodDecl 0x13a4178 <line:933:2, line:943:2> line:934:2 __lc 'bool (const _Tp *, const _Tp *, const _Up *, const _Up *)' static
| |     |-ParmVarDecl 0x13a32d8 <col:7, col:18> col:18 referenced __first1 'const _Tp *'
| |     |-ParmVarDecl 0x13a3350 <col:28, col:39> col:39 referenced __last1 'const _Tp *'
| |     |-ParmVarDecl 0x13a33f8 <line:935:7, col:18> col:18 referenced __first2 'const _Up *'
| |     |-ParmVarDecl 0x13a3470 <col:28, col:39> col:39 referenced __last2 'const _Up *'
| |     `-CompoundStmt 0x13a5068 <line:936:2, line:943:2>
| |       |-DeclStmt 0x13a43e8 <line:937:4, col:44>
| |       | `-VarDecl 0x13a42b8 <col:4, col:36> col:17 referenced __len1 'const std::size_t':'const unsigned long' cinit
| |       |   `-CXXOperatorCallExpr 0x13a43b0 <col:26, col:36> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x13a4360 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |     |-DeclRefExpr 0x13a4320 <col:26> 'const _Tp *' lvalue ParmVar 0x13a3350 '__last1' 'const _Tp *'
| |       |     `-DeclRefExpr 0x13a4340 <col:36> 'const _Tp *' lvalue ParmVar 0x13a32d8 '__first1' 'const _Tp *'
| |       |-DeclStmt 0x13a4540 <line:938:4, col:44>
| |       | `-VarDecl 0x13a4410 <col:4, col:36> col:17 referenced __len2 'const std::size_t':'const unsigned long' cinit
| |       |   `-CXXOperatorCallExpr 0x13a4508 <col:26, col:36> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x13a44b8 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |       |     |-DeclRefExpr 0x13a4478 <col:26> 'const _Up *' lvalue ParmVar 0x13a3470 '__last2' 'const _Up *'
| |       |     `-DeclRefExpr 0x13a4498 <col:36> 'const _Up *' lvalue ParmVar 0x13a33f8 '__first2' 'const _Up *'
| |       |-IfStmt 0x13a4f90 <line:939:4, line:941:26> has_var
| |       | |-DeclStmt 0x13a4fb0 <line:939:8, col:52>
| |       | | `-VarDecl 0x13a4568 <col:8, col:52> col:21 referenced __len 'const std::size_t':'const unsigned long' cinit
| |       | |   `-ImplicitCastExpr 0x13a4ce0 <col:29, col:52> 'unsigned long':'unsigned long' <LValueToRValue>
| |       | |     `-CallExpr 0x13a4cb0 <col:29, col:52> 'const unsigned long':'const unsigned long' lvalue
| |       | |       |-ImplicitCastExpr 0x13a4c98 <col:29, col:34> 'const unsigned long &(*)(const unsigned long &, const unsigned long &)' <FunctionToPointerDecay>
| |       | |       | `-DeclRefExpr 0x13a4a70 <col:29, col:34> 'const unsigned long &(const unsigned long &, const unsigned long &)' lvalue Function 0x13a4968 'min' 'const unsigned long &(const unsigned long &, const unsigned long &)' (FunctionTemplate 0x137c338 'min')
| |       | |       |-DeclRefExpr 0x13a4640 <col:38> 'const std::size_t':'const unsigned long' lvalue Var 0x13a42b8 '__len1' 'const std::size_t':'const unsigned long'
| |       | |       `-DeclRefExpr 0x13a4660 <col:46> 'const std::size_t':'const unsigned long' lvalue Var 0x13a4410 '__len2' 'const std::size_t':'const unsigned long'
| |       | |-ImplicitCastExpr 0x13a4d30 <col:21> 'bool' <IntegralToBoolean>
| |       | | `-ImplicitCastExpr 0x13a4d18 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x13a4cf8 <col:21> 'const std::size_t':'const unsigned long' lvalue Var 0x13a4568 '__len' 'const std::size_t':'const unsigned long'
| |       | `-IfStmt 0x13a4f58 <line:940:6, line:941:26> has_var
| |       |   |-DeclStmt 0x13a4f78 <line:940:10, col:67>
| |       |   | `-VarDecl 0x13a4d60 <col:10, col:67> col:14 referenced __result 'int' cinit
| |       |   |   `-CallExpr 0x13a4e48 <col:25, col:67> '<dependent type>'
| |       |   |     |-DeclRefExpr 0x13a4dc8 <col:25> '<builtin fn type>' Function 0x139c4f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
| |       |   |     |-DeclRefExpr 0x13a4de8 <col:42> 'const _Tp *' lvalue ParmVar 0x13a32d8 '__first1' 'const _Tp *'
| |       |   |     |-DeclRefExpr 0x13a4e08 <col:52> 'const _Up *' lvalue ParmVar 0x13a33f8 '__first2' 'const _Up *'
| |       |   |     `-DeclRefExpr 0x13a4e28 <col:62> 'const std::size_t':'const unsigned long' lvalue Var 0x13a4568 '__len' 'const std::size_t':'const unsigned long'
| |       |   |-ImplicitCastExpr 0x13a4eb8 <col:14> 'bool' <IntegralToBoolean>
| |       |   | `-ImplicitCastExpr 0x13a4ea0 <col:14> 'int' <LValueToRValue>
| |       |   |   `-DeclRefExpr 0x13a4e80 <col:14> 'int' lvalue Var 0x13a4d60 '__result' 'int'
| |       |   `-ReturnStmt 0x13a4f48 <line:941:8, col:26>
| |       |     `-BinaryOperator 0x13a4f28 <col:15, col:26> 'bool' '<'
| |       |       |-ImplicitCastExpr 0x13a4f10 <col:15> 'int' <LValueToRValue>
| |       |       | `-DeclRefExpr 0x13a4ed0 <col:15> 'int' lvalue Var 0x13a4d60 '__result' 'int'
| |       |       `-IntegerLiteral 0x13a4ef0 <col:26> 'int' 0
| |       `-ReturnStmt 0x13a5058 <line:942:4, col:20>
| |         `-BinaryOperator 0x13a5038 <col:11, col:20> 'bool' '<'
| |           |-ImplicitCastExpr 0x13a5008 <col:11> 'std::size_t':'unsigned long' <LValueToRValue>
| |           | `-DeclRefExpr 0x13a4fc8 <col:11> 'const std::size_t':'const unsigned long' lvalue Var 0x13a42b8 '__len1' 'const std::size_t':'const unsigned long'
| |           `-ImplicitCastExpr 0x13a5020 <col:20> 'std::size_t':'unsigned long' <LValueToRValue>
| |             `-DeclRefExpr 0x13a4fe8 <col:20> 'const std::size_t':'const unsigned long' lvalue Var 0x13a4410 '__len2' 'const std::size_t':'const unsigned long'
| |-FunctionTemplateDecl 0x13a5518 <line:946:3, line:962:5> line:948:5 __lexicographical_compare_aux
| | |-TemplateTypeParmDecl 0x13a5098 <line:946:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13a5118 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x13a5478 <line:947:5, line:962:5> line:948:5 __lexicographical_compare_aux 'bool (_II1, _II1, _II2, _II2)' inline
| |   |-ParmVarDecl 0x13a51d0 <col:35, col:40> col:40 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13a5248 <col:50, col:55> col:55 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13a52c0 <line:949:7, col:12> col:12 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13a5338 <col:22, col:27> col:27 referenced __last2 '_II2'
| |   `-CompoundStmt 0x13a63d8 <line:950:5, line:962:5>
| |     |-DeclStmt 0x13a56f8 <line:951:7, col:69>
| |     | `-TypedefDecl 0x13a56a0 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_II1>::value_type'
| |     |   `-DependentNameType 0x13a5630 'typename iterator_traits<_II1>::value_type' dependent
| |     |-DeclStmt 0x13a5878 <line:952:7, col:69>
| |     | `-TypedefDecl 0x13a5820 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_II2>::value_type'
| |     |   `-DependentNameType 0x13a57b0 'typename iterator_traits<_II2>::value_type' dependent
| |     |-DeclStmt 0x13a6168 <line:953:7, line:958:34>
| |     | `-VarDecl 0x13a58a0 <line:953:7, line:958:33> line:953:18 referenced __simple 'const bool' cinit
| |     |   `-ParenExpr 0x13a6148 <line:954:2, line:958:33> '<dependent type>'
| |     |     `-BinaryOperator 0x13a6128 <line:954:3, line:958:26> '<dependent type>' '&&'
| |     |       |-BinaryOperator 0x13a6008 <line:954:3, line:957:26> '<dependent type>' '&&'
| |     |       | |-BinaryOperator 0x13a5ef0 <line:954:3, line:956:49> '<dependent type>' '&&'
| |     |       | | |-BinaryOperator 0x13a5d70 <line:954:3, line:955:49> '<dependent type>' '&&'
| |     |       | | | |-BinaryOperator 0x13a5bd8 <line:954:3, col:62> '<dependent type>' '&&'
| |     |       | | | | |-DependentScopeDeclRefExpr 0x13a5a48 <col:3, col:27> '<dependent type>' lvalue
| |     |       | | | | `-DependentScopeDeclRefExpr 0x13a5ba0 <col:38, col:62> '<dependent type>' lvalue
| |     |       | | | `-UnaryOperator 0x13a5d58 <line:955:6, col:49> '<dependent type>' prefix '!' cannot overflow
| |     |       | | |   `-DependentScopeDeclRefExpr 0x13a5d20 <col:7, col:49> '<dependent type>' lvalue
| |     |       | | `-UnaryOperator 0x13a5ed8 <line:956:6, col:49> '<dependent type>' prefix '!' cannot overflow
| |     |       | |   `-DependentScopeDeclRefExpr 0x13a5ea0 <col:7, col:49> '<dependent type>' lvalue
| |     |       | `-DependentScopeDeclRefExpr 0x13a5fd0 <line:957:6, col:26> '<dependent type>' lvalue
| |     |       `-DependentScopeDeclRefExpr 0x13a60f0 <line:958:6, col:26> '<dependent type>' lvalue
| |     `-ReturnStmt 0x13a63c8 <line:960:7, line:961:29>
| |       `-CallExpr 0x13a6388 <line:960:14, line:961:29> '<dependent type>'
| |         |-DependentScopeDeclRefExpr 0x13a62d0 <line:960:14, col:56> '<dependent type>' lvalue
| |         |-DeclRefExpr 0x13a6308 <col:61> '_II1' lvalue ParmVar 0x13a51d0 '__first1' '_II1'
| |         |-DeclRefExpr 0x13a6328 <col:71> '_II1' lvalue ParmVar 0x13a5248 '__last1' '_II1'
| |         |-DeclRefExpr 0x13a6348 <line:961:12> '_II2' lvalue ParmVar 0x13a52c0 '__first2' '_II2'
| |         `-DeclRefExpr 0x13a6368 <col:22> '_II2' lvalue ParmVar 0x13a5338 '__last2' '_II2'
| |-FunctionTemplateDecl 0x13a6948 <line:964:3, line:989:5> line:966:5 __lower_bound
| | |-TemplateTypeParmDecl 0x13a6408 <line:964:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| | |-TemplateTypeParmDecl 0x13a6488 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x13a6508 <col:53, col:62> col:62 referenced typename depth 0 index 2 _Compare
| | `-FunctionDecl 0x13a68a8 <line:965:5, line:989:5> line:966:5 __lower_bound '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)'
| |   |-ParmVarDecl 0x13a65c8 <col:19, col:36> col:36 referenced __first '_ForwardIterator'
| |   |-ParmVarDecl 0x13a6640 <col:45, col:62> col:62 referenced __last '_ForwardIterator'
| |   |-ParmVarDecl 0x13a66e8 <line:967:5, col:16> col:16 referenced __val 'const _Tp &'
| |   |-ParmVarDecl 0x13a6760 <col:23, col:32> col:32 referenced __comp '_Compare'
| |   `-CompoundStmt 0x13a7420 <line:968:5, line:989:5>
| |     |-DeclStmt 0x13a6b28 <line:969:7, line:970:15>
| |     | `-TypedefDecl 0x13a6ad0 <line:969:7, line:970:2> col:2 referenced _DistanceType 'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |   `-DependentNameType 0x13a6a60 'typename iterator_traits<_ForwardIterator>::difference_type' dependent
| |     |-DeclStmt 0x13a6cb0 <line:972:7, col:59>
| |     | `-VarDecl 0x13a6b70 <col:7, col:58> col:21 referenced __len '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' cinit
| |     |   `-CallExpr 0x13a6c80 <col:29, col:58> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x13a6bf8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x1314008
| |     |     |-DeclRefExpr 0x13a6c40 <col:43> '_ForwardIterator' lvalue ParmVar 0x13a65c8 '__first' '_ForwardIterator'
| |     |     `-DeclRefExpr 0x13a6c60 <col:52> '_ForwardIterator' lvalue ParmVar 0x13a6640 '__last' '_ForwardIterator'
| |     |-WhileStmt 0x13a73d8 <line:974:7, line:987:2>
| |     | |-CXXOperatorCallExpr 0x13a6d70 <line:974:14, col:22> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x13a6d08 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x13020a8 0x1329d98 0x132c4c8 0x13589f8 0x1358fb8
| |     | | |-DeclRefExpr 0x13a6cc8 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6b70 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     | | `-IntegerLiteral 0x13a6ce8 <col:22> 'int' 0
| |     | `-CompoundStmt 0x13a73a8 <line:975:2, line:987:2>
| |     |   |-DeclStmt 0x13a6e80 <line:976:4, col:37>
| |     |   | `-VarDecl 0x13a6db8 <col:4, col:36> col:18 referenced __half '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' cinit
| |     |   |   `-BinaryOperator 0x13a6e60 <col:27, col:36> '<dependent type>' '>>'
| |     |   |     |-DeclRefExpr 0x13a6e20 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6b70 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |   |     `-IntegerLiteral 0x13a6e40 <col:36> 'int' 1
| |     |   |-DeclStmt 0x13a6f30 <line:977:4, col:39>
| |     |   | `-VarDecl 0x13a6ea8 <col:4, col:32> col:21 referenced __middle '_ForwardIterator' cinit
| |     |   |   `-DeclRefExpr 0x13a6f10 <col:32> '_ForwardIterator' lvalue ParmVar 0x13a65c8 '__first' '_ForwardIterator'
| |     |   |-CallExpr 0x13a6ff0 <line:978:4, col:33> '<dependent type>'
| |     |   | |-UnresolvedLookupExpr 0x13a6f68 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x1315c88
| |     |   | |-DeclRefExpr 0x13a6fb0 <col:17> '_ForwardIterator' lvalue Var 0x13a6ea8 '__middle' '_ForwardIterator'
| |     |   | `-DeclRefExpr 0x13a6fd0 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6db8 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |   `-IfStmt 0x13a7380 <line:979:4, line:986:14> has_else
| |     |     |-CallExpr 0x13a7080 <line:979:8, col:30> '<dependent type>'
| |     |     | |-DeclRefExpr 0x13a7020 <col:8> '_Compare' lvalue ParmVar 0x13a6760 '__comp' '_Compare'
| |     |     | |-DeclRefExpr 0x13a7040 <col:15> '_ForwardIterator' lvalue Var 0x13a6ea8 '__middle' '_ForwardIterator'
| |     |     | `-DeclRefExpr 0x13a7060 <col:25> 'const _Tp' lvalue ParmVar 0x13a66e8 '__val' 'const _Tp &'
| |     |     |-CompoundStmt 0x13a72f8 <line:980:6, line:984:6>
| |     |     | |-BinaryOperator 0x13a70f0 <line:981:8, col:18> '<dependent type>' '='
| |     |     | | |-DeclRefExpr 0x13a70b0 <col:8> '_ForwardIterator' lvalue ParmVar 0x13a65c8 '__first' '_ForwardIterator'
| |     |     | | `-DeclRefExpr 0x13a70d0 <col:18> '_ForwardIterator' lvalue Var 0x13a6ea8 '__middle' '_ForwardIterator'
| |     |     | |-UnaryOperator 0x13a7130 <line:982:8, col:10> '<dependent type>' prefix '++' cannot overflow
| |     |     | | `-DeclRefExpr 0x13a7110 <col:10> '_ForwardIterator' lvalue ParmVar 0x13a65c8 '__first' '_ForwardIterator'
| |     |     | `-BinaryOperator 0x13a72d8 <line:983:8, col:33> '<dependent type>' '='
| |     |     |   |-DeclRefExpr 0x13a7148 <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6b70 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |     |   `-CXXOperatorCallExpr 0x13a72a0 <col:16, col:33> '<dependent type>'
| |     |     |     |-UnresolvedLookupExpr 0x13a7250 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |     |     |     |-CXXOperatorCallExpr 0x13a71f8 <col:16, col:24> '<dependent type>'
| |     |     |     | |-UnresolvedLookupExpr 0x13a71a8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x132e9d8 0x135a4a8
| |     |     |     | |-DeclRefExpr 0x13a7168 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6b70 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |     |     | `-DeclRefExpr 0x13a7188 <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6db8 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |     |     `-IntegerLiteral 0x13a7230 <col:33> 'int' 1
| |     |     `-BinaryOperator 0x13a7360 <line:986:6, col:14> '<dependent type>' '='
| |     |       |-DeclRefExpr 0x13a7320 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6b70 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     |       `-DeclRefExpr 0x13a7340 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x13a6db8 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| |     `-ReturnStmt 0x13a7410 <line:988:7, col:14>
| |       `-DeclRefExpr 0x13a73f0 <col:14> '_ForwardIterator' lvalue ParmVar 0x13a65c8 '__first' '_ForwardIterator'
| |-FunctionTemplateDecl 0x13a7858 <line:1002:3, line:1015:5> line:1004:5 lower_bound
| | |-TemplateTypeParmDecl 0x13a7450 <line:1002:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| | |-TemplateTypeParmDecl 0x13a74c8 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x13a77b8 <line:1003:5, line:1015:5> line:1004:5 lower_bound '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| |   |-ParmVarDecl 0x13a7580 <col:17, col:34> col:34 referenced __first '_ForwardIterator'
| |   |-ParmVarDecl 0x13a75f8 <col:43, col:60> col:60 referenced __last '_ForwardIterator'
| |   |-ParmVarDecl 0x13a7698 <line:1005:3, col:14> col:14 referenced __val 'const _Tp &'
| |   `-CompoundStmt 0x13a7ab0 <line:1006:5, line:1015:5>
| |     |-NullStmt 0x13a78c8 <line:1011:67>
| |     `-ReturnStmt 0x13a7aa0 <line:1013:7, line:1014:40>
| |       `-CallExpr 0x13a7a60 <line:1013:14, line:1014:40> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13a78f0 <line:1013:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lower_bound' 0x13a6948
| |         |-DeclRefExpr 0x13a7938 <col:33> '_ForwardIterator' lvalue ParmVar 0x13a7580 '__first' '_ForwardIterator'
| |         |-DeclRefExpr 0x13a7958 <col:42> '_ForwardIterator' lvalue ParmVar 0x13a75f8 '__last' '_ForwardIterator'
| |         |-DeclRefExpr 0x13a7978 <col:50> 'const _Tp' lvalue ParmVar 0x13a7698 '__val' 'const _Tp &'
| |         `-CallExpr 0x13a7a40 <line:1014:5, col:39> '__gnu_cxx::__ops::_Iter_less_val'
| |           `-ImplicitCastExpr 0x13a7a28 <col:5, col:23> '__gnu_cxx::__ops::_Iter_less_val (*)()' <FunctionToPointerDecay>
| |             `-DeclRefExpr 0x13a79c8 <col:5, col:23> '__gnu_cxx::__ops::_Iter_less_val ()' lvalue Function 0x135f358 '__iter_less_val' '__gnu_cxx::__ops::_Iter_less_val ()'
| |-FunctionDecl 0x13a7bb0 <line:1019:3, line:1021:71> line:1020:3 constexpr __lg 'int (int)' inline
| | |-ParmVarDecl 0x13a7ae8 <col:8, col:12> col:12 used __n 'int'
| | `-CompoundStmt 0x13a8d20 <line:1021:3, col:71>
| |   `-ReturnStmt 0x13a8d10 <col:5, col:68>
| |     `-BinaryOperator 0x13a8cf0 <col:12, col:68> 'int' '-'
| |       |-BinaryOperator 0x13a7d48 <col:12, col:47> 'int' '-'
| |       | |-BinaryOperator 0x13a7d08 <col:12, <built-in>:71:22> 'int' '*'
| |       | | |-CStyleCastExpr 0x13a7cc0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1021:12, col:27> 'int' <NoOp>
| |       | | | `-ImplicitCastExpr 0x13a7ca8 <col:17, col:27> 'int' <IntegralCast> part_of_explicit_cast
| |       | | |   `-UnaryExprOrTypeTraitExpr 0x13a7c70 <col:17, col:27> 'unsigned long' sizeof 'int'
| |       | | `-IntegerLiteral 0x13a7ce8 <<built-in>:71:22> 'int' 8
| |       | `-IntegerLiteral 0x13a7d28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1021:47> 'int' 1
| |       `-CallExpr 0x13a8030 <col:51, col:68> 'int'
| |         |-ImplicitCastExpr 0x13a8018 <col:51> 'int (*)(unsigned int) noexcept' <BuiltinFnToFnPtr>
| |         | `-DeclRefExpr 0x13a7f80 <col:51> '<builtin fn type>' Function 0x13a7df0 '__builtin_clz' 'int (unsigned int) noexcept'
| |         `-ImplicitCastExpr 0x13a8070 <col:65> 'unsigned int' <IntegralCast>
| |           `-ImplicitCastExpr 0x13a8058 <col:65> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x13a7fa0 <col:65> 'int' lvalue ParmVar 0x13a7ae8 '__n' 'int'
| |-FunctionDecl 0x13a8e20 <line:1023:3, line:1025:71> line:1024:3 constexpr __lg 'unsigned int (unsigned int)' inline
| | |-ParmVarDecl 0x13a8d50 <col:8, col:17> col:17 used __n 'unsigned int'
| | `-CompoundStmt 0x13a90b8 <line:1025:3, col:71>
| |   `-ReturnStmt 0x13a90a8 <col:5, col:68>
| |     `-ImplicitCastExpr 0x13a9090 <col:12, col:68> 'unsigned int' <IntegralCast>
| |       `-BinaryOperator 0x13a9070 <col:12, col:68> 'int' '-'
| |         |-BinaryOperator 0x13a8fb8 <col:12, col:47> 'int' '-'
| |         | |-BinaryOperator 0x13a8f78 <col:12, <built-in>:71:22> 'int' '*'
| |         | | |-CStyleCastExpr 0x13a8f30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1025:12, col:27> 'int' <NoOp>
| |         | | | `-ImplicitCastExpr 0x13a8f18 <col:17, col:27> 'int' <IntegralCast> part_of_explicit_cast
| |         | | |   `-UnaryExprOrTypeTraitExpr 0x13a8ee0 <col:17, col:27> 'unsigned long' sizeof 'int'
| |         | | `-IntegerLiteral 0x13a8f58 <<built-in>:71:22> 'int' 8
| |         | `-IntegerLiteral 0x13a8f98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1025:47> 'int' 1
| |         `-CallExpr 0x13a9030 <col:51, col:68> 'int'
| |           |-ImplicitCastExpr 0x13a9018 <col:51> 'int (*)(unsigned int) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x13a8fd8 <col:51> '<builtin fn type>' Function 0x13a7df0 '__builtin_clz' 'int (unsigned int) noexcept'
| |           `-ImplicitCastExpr 0x13a9058 <col:65> 'unsigned int' <LValueToRValue>
| |             `-DeclRefExpr 0x13a8ff8 <col:65> 'unsigned int' lvalue ParmVar 0x13a8d50 '__n' 'unsigned int'
| |-FunctionDecl 0x13a91b0 <line:1027:3, line:1029:72> line:1028:3 constexpr __lg 'long (long)' inline
| | |-ParmVarDecl 0x13a90e8 <col:8, col:13> col:13 used __n 'long'
| | `-CompoundStmt 0x13a9700 <line:1029:3, col:72>
| |   `-ReturnStmt 0x13a96f0 <col:5, col:69>
| |     `-ImplicitCastExpr 0x13a96d8 <col:12, col:69> 'long' <IntegralCast>
| |       `-BinaryOperator 0x13a96b8 <col:12, col:69> 'int' '-'
| |         |-BinaryOperator 0x13a9348 <col:12, col:47> 'int' '-'
| |         | |-BinaryOperator 0x13a9308 <col:12, <built-in>:71:22> 'int' '*'
| |         | | |-CStyleCastExpr 0x13a92c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1029:12, col:28> 'int' <NoOp>
| |         | | | `-ImplicitCastExpr 0x13a92a8 <col:17, col:28> 'int' <IntegralCast> part_of_explicit_cast
| |         | | |   `-UnaryExprOrTypeTraitExpr 0x13a9270 <col:17, col:28> 'unsigned long' sizeof 'long'
| |         | | `-IntegerLiteral 0x13a92e8 <<built-in>:71:22> 'int' 8
| |         | `-IntegerLiteral 0x13a9328 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1029:47> 'int' 1
| |         `-CallExpr 0x13a9660 <col:51, col:69> 'int'
| |           |-ImplicitCastExpr 0x13a9648 <col:51> 'int (*)(unsigned long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x13a95b0 <col:51> '<builtin fn type>' Function 0x13a9420 '__builtin_clzl' 'int (unsigned long) noexcept'
| |           `-ImplicitCastExpr 0x13a96a0 <col:66> 'unsigned long' <IntegralCast>
| |             `-ImplicitCastExpr 0x13a9688 <col:66> 'long' <LValueToRValue>
| |               `-DeclRefExpr 0x13a95d0 <col:66> 'long' lvalue ParmVar 0x13a90e8 '__n' 'long'
| |-FunctionDecl 0x13a9800 <line:1031:3, line:1033:72> line:1032:3 constexpr __lg 'unsigned long (unsigned long)' inline
| | |-ParmVarDecl 0x13a9730 <col:8, col:22> col:22 used __n 'unsigned long'
| | `-CompoundStmt 0x13a9a98 <line:1033:3, col:72>
| |   `-ReturnStmt 0x13a9a88 <col:5, col:69>
| |     `-ImplicitCastExpr 0x13a9a70 <col:12, col:69> 'unsigned long' <IntegralCast>
| |       `-BinaryOperator 0x13a9a50 <col:12, col:69> 'int' '-'
| |         |-BinaryOperator 0x13a9998 <col:12, col:47> 'int' '-'
| |         | |-BinaryOperator 0x13a9958 <col:12, <built-in>:71:22> 'int' '*'
| |         | | |-CStyleCastExpr 0x13a9910 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1033:12, col:28> 'int' <NoOp>
| |         | | | `-ImplicitCastExpr 0x13a98f8 <col:17, col:28> 'int' <IntegralCast> part_of_explicit_cast
| |         | | |   `-UnaryExprOrTypeTraitExpr 0x13a98c0 <col:17, col:28> 'unsigned long' sizeof 'long'
| |         | | `-IntegerLiteral 0x13a9938 <<built-in>:71:22> 'int' 8
| |         | `-IntegerLiteral 0x13a9978 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1033:47> 'int' 1
| |         `-CallExpr 0x13a9a10 <col:51, col:69> 'int'
| |           |-ImplicitCastExpr 0x13a99f8 <col:51> 'int (*)(unsigned long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x13a99b8 <col:51> '<builtin fn type>' Function 0x13a9420 '__builtin_clzl' 'int (unsigned long) noexcept'
| |           `-ImplicitCastExpr 0x13a9a38 <col:66> 'unsigned long' <LValueToRValue>
| |             `-DeclRefExpr 0x13a99d8 <col:66> 'unsigned long' lvalue ParmVar 0x13a9730 '__n' 'unsigned long'
| |-FunctionDecl 0x13a9b90 <line:1035:3, line:1037:78> line:1036:3 constexpr __lg 'long long (long long)' inline
| | |-ParmVarDecl 0x13a9ac8 <col:8, col:18> col:18 used __n 'long long'
| | `-CompoundStmt 0x13aa0e0 <line:1037:3, col:78>
| |   `-ReturnStmt 0x13aa0d0 <col:5, col:75>
| |     `-ImplicitCastExpr 0x13aa0b8 <col:12, col:75> 'long long' <IntegralCast>
| |       `-BinaryOperator 0x13aa098 <col:12, col:75> 'int' '-'
| |         |-BinaryOperator 0x13a9d28 <col:12, col:52> 'int' '-'
| |         | |-BinaryOperator 0x13a9ce8 <col:12, <built-in>:71:22> 'int' '*'
| |         | | |-CStyleCastExpr 0x13a9ca0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1037:12, col:33> 'int' <NoOp>
| |         | | | `-ImplicitCastExpr 0x13a9c88 <col:17, col:33> 'int' <IntegralCast> part_of_explicit_cast
| |         | | |   `-UnaryExprOrTypeTraitExpr 0x13a9c50 <col:17, col:33> 'unsigned long' sizeof 'long long'
| |         | | `-IntegerLiteral 0x13a9cc8 <<built-in>:71:22> 'int' 8
| |         | `-IntegerLiteral 0x13a9d08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1037:52> 'int' 1
| |         `-CallExpr 0x13aa040 <col:56, col:75> 'int'
| |           |-ImplicitCastExpr 0x13aa028 <col:56> 'int (*)(unsigned long long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x13a9f90 <col:56> '<builtin fn type>' Function 0x13a9e00 '__builtin_clzll' 'int (unsigned long long) noexcept'
| |           `-ImplicitCastExpr 0x13aa080 <col:72> 'unsigned long long' <IntegralCast>
| |             `-ImplicitCastExpr 0x13aa068 <col:72> 'long long' <LValueToRValue>
| |               `-DeclRefExpr 0x13a9fb0 <col:72> 'long long' lvalue ParmVar 0x13a9ac8 '__n' 'long long'
| |-FunctionDecl 0x13aa1e0 <line:1039:3, line:1041:78> line:1040:3 constexpr __lg 'unsigned long long (unsigned long long)' inline
| | |-ParmVarDecl 0x13aa110 <col:8, col:27> col:27 used __n 'unsigned long long'
| | `-CompoundStmt 0x13aa478 <line:1041:3, col:78>
| |   `-ReturnStmt 0x13aa468 <col:5, col:75>
| |     `-ImplicitCastExpr 0x13aa450 <col:12, col:75> 'unsigned long long' <IntegralCast>
| |       `-BinaryOperator 0x13aa430 <col:12, col:75> 'int' '-'
| |         |-BinaryOperator 0x13aa378 <col:12, col:52> 'int' '-'
| |         | |-BinaryOperator 0x13aa338 <col:12, <built-in>:71:22> 'int' '*'
| |         | | |-CStyleCastExpr 0x13aa2f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1041:12, col:33> 'int' <NoOp>
| |         | | | `-ImplicitCastExpr 0x13aa2d8 <col:17, col:33> 'int' <IntegralCast> part_of_explicit_cast
| |         | | |   `-UnaryExprOrTypeTraitExpr 0x13aa2a0 <col:17, col:33> 'unsigned long' sizeof 'long long'
| |         | | `-IntegerLiteral 0x13aa318 <<built-in>:71:22> 'int' 8
| |         | `-IntegerLiteral 0x13aa358 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1041:52> 'int' 1
| |         `-CallExpr 0x13aa3f0 <col:56, col:75> 'int'
| |           |-ImplicitCastExpr 0x13aa3d8 <col:56> 'int (*)(unsigned long long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x13aa398 <col:56> '<builtin fn type>' Function 0x13a9e00 '__builtin_clzll' 'int (unsigned long long) noexcept'
| |           `-ImplicitCastExpr 0x13aa418 <col:72> 'unsigned long long' <LValueToRValue>
| |             `-DeclRefExpr 0x13aa3b8 <col:72> 'unsigned long long' lvalue ParmVar 0x13aa110 '__n' 'unsigned long long'
| |-FunctionTemplateDecl 0x13aa838 <line:1057:3, line:1072:5> line:1059:5 equal
| | |-TemplateTypeParmDecl 0x13aa490 <line:1057:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13aa508 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x13aa798 <line:1058:5, line:1072:5> line:1059:5 equal 'bool (_II1, _II1, _II2)' inline
| |   |-ParmVarDecl 0x13aa5c0 <col:11, col:16> col:16 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13aa638 <col:26, col:31> col:31 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13aa6b0 <col:40, col:45> col:45 referenced __first2 '_II2'
| |   `-CompoundStmt 0x13aabb8 <line:1060:5, line:1072:5>
| |     |-NullStmt 0x13aa8a8 <line:1067:74>
| |     `-ReturnStmt 0x13aaba8 <line:1069:7, line:1071:37>
| |       `-CallExpr 0x13aab70 <line:1069:14, line:1071:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13aa8d0 <line:1069:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__equal_aux' 0x139cce8
| |         |-CallExpr 0x13aa9b8 <col:31, col:57> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13aa938 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |         | `-DeclRefExpr 0x13aa998 <col:49> '_II1' lvalue ParmVar 0x13aa5c0 '__first1' '_II1'
| |         |-CallExpr 0x13aaa80 <line:1070:10, col:35> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13aaa00 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |         | `-DeclRefExpr 0x13aaa60 <col:28> '_II1' lvalue ParmVar 0x13aa638 '__last1' '_II1'
| |         `-CallExpr 0x13aab48 <line:1071:10, col:36> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13aaac8 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           `-DeclRefExpr 0x13aab28 <col:28> '_II2' lvalue ParmVar 0x13aa6b0 '__first2' '_II2'
| |-FunctionTemplateDecl 0x13ab0e8 <line:1089:3, line:1103:5> line:1091:5 equal
| | |-TemplateTypeParmDecl 0x13aabd8 <line:1089:12, col:21> col:21 referenced typename depth 0 index 0 _IIter1
| | |-TemplateTypeParmDecl 0x13aac58 <col:30, col:39> col:39 referenced typename depth 0 index 1 _IIter2
| | |-TemplateTypeParmDecl 0x13aacd8 <col:48, col:57> col:57 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13ab048 <line:1090:5, line:1103:5> line:1091:5 equal 'bool (_IIter1, _IIter1, _IIter2, _BinaryPredicate)' inline
| |   |-ParmVarDecl 0x13aad98 <col:11, col:19> col:19 referenced __first1 '_IIter1'
| |   |-ParmVarDecl 0x13aae10 <col:29, col:37> col:37 referenced __last1 '_IIter1'
| |   |-ParmVarDecl 0x13aae88 <line:1092:4, col:12> col:12 referenced __first2 '_IIter2'
| |   |-ParmVarDecl 0x13aaf00 <col:22, col:39> col:39 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13ab4b8 <line:1093:5, line:1103:5>
| |     |-NullStmt 0x13ab160 <line:1097:56>
| |     |-ForStmt 0x13ab460 <line:1099:7, line:1101:11>
| |     | |-<<<NULL>>>
| |     | |-<<<NULL>>>
| |     | |-CXXOperatorCallExpr 0x13ab218 <line:1099:14, col:26> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x13ab1a8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | |-DeclRefExpr 0x13ab168 <col:14> '_IIter1' lvalue ParmVar 0x13aad98 '__first1' '_IIter1'
| |     | | `-DeclRefExpr 0x13ab188 <col:26> '_IIter1' lvalue ParmVar 0x13aae10 '__last1' '_IIter1'
| |     | |-BinaryOperator 0x13ab2f8 <col:35, col:55> '<dependent type>' ','
| |     | | |-UnaryOperator 0x13ab270 <col:35, col:37> '<dependent type>' prefix '++' cannot overflow
| |     | | | `-DeclRefExpr 0x13ab250 <col:37> '_IIter1' lvalue ParmVar 0x13aad98 '__first1' '_IIter1'
| |     | | `-CStyleCastExpr 0x13ab2d0 <col:47, col:55> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x13ab2a8 <col:53, col:55> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x13ab288 <col:55> '_IIter2' lvalue ParmVar 0x13aae88 '__first2' '_IIter2'
| |     | `-IfStmt 0x13ab448 <line:1100:2, line:1101:11>
| |     |   |-UnaryOperator 0x13ab410 <line:1100:6, col:47> 'bool' prefix '!' cannot overflow
| |     |   | `-CXXUnresolvedConstructExpr 0x13ab3e8 <col:7, col:47> 'bool' 'bool'
| |     |   |   `-CallExpr 0x13ab3b8 <col:12, col:46> '<dependent type>'
| |     |   |     |-DeclRefExpr 0x13ab328 <col:12> '_BinaryPredicate' lvalue ParmVar 0x13aaf00 '__binary_pred' '_BinaryPredicate'
| |     |   |     |-UnaryOperator 0x13ab368 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
| |     |   |     | `-DeclRefExpr 0x13ab348 <col:27> '_IIter1' lvalue ParmVar 0x13aad98 '__first1' '_IIter1'
| |     |   |     `-UnaryOperator 0x13ab3a0 <col:37, col:38> '<dependent type>' prefix '*' cannot overflow
| |     |   |       `-DeclRefExpr 0x13ab380 <col:38> '_IIter2' lvalue ParmVar 0x13aae88 '__first2' '_IIter2'
| |     |   `-ReturnStmt 0x13ab438 <line:1101:4, col:11>
| |     |     `-CXXBoolLiteralExpr 0x13ab428 <col:11> 'bool' false
| |     `-ReturnStmt 0x13ab4a8 <line:1102:7, col:14>
| |       `-CXXBoolLiteralExpr 0x13ab498 <col:14> 'bool' true
| |-FunctionTemplateDecl 0x13ab908 <line:1107:3, line:1129:5> line:1109:5 __equal4
| | |-TemplateTypeParmDecl 0x13ab4e0 <line:1107:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13ab558 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x13ab868 <line:1108:5, line:1129:5> line:1109:5 __equal4 'bool (_II1, _II1, _II2, _II2)' inline
| |   |-ParmVarDecl 0x13ab610 <col:14, col:19> col:19 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13ab688 <col:29, col:34> col:34 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13ab700 <col:43, col:48> col:48 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13ab778 <col:58, col:63> col:63 referenced __last2 '_II2'
| |   `-CompoundStmt 0x13adf48 <line:1110:5, line:1129:5>
| |     |-DeclStmt 0x13ab9f0 <line:1111:7, col:48>
| |     | `-TypeAliasDecl 0x13ab990 <col:7, col:22> col:13 referenced _RATag 'std::random_access_iterator_tag'
| |     |   `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |     |     `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |     |-DeclStmt 0x13abb80 <line:1112:7, col:70>
| |     | `-TypeAliasDecl 0x13abb20 <col:7, col:53> col:13 referenced _Cat1 'typename iterator_traits<_II1>::iterator_category'
| |     |   `-DependentNameType 0x13abab0 'typename iterator_traits<_II1>::iterator_category' dependent
| |     |-DeclStmt 0x13abd10 <line:1113:7, col:70>
| |     | `-TypeAliasDecl 0x13abcb0 <col:7, col:53> col:13 referenced _Cat2 'typename iterator_traits<_II2>::iterator_category'
| |     |   `-DependentNameType 0x13abc40 'typename iterator_traits<_II2>::iterator_category' dependent
| |     |-DeclStmt 0x13ac258 <line:1114:7, col:78>
| |     | `-TypeAliasDecl 0x13ac1f8 <col:7, col:77> col:13 referenced _RAIters '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
| |     |   `-TemplateSpecializationType 0x13ac110 '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' dependent __and_
| |     |     |-TemplateArgument type 'is_same<_Cat1, _RATag>'
| |     |     `-TemplateArgument type 'is_same<_Cat2, _RATag>'
| |     |-IfStmt 0x13ac878 <line:1115:7, line:1122:2>
| |     | |-CXXUnresolvedConstructExpr 0x13ac2a0 <line:1115:11, col:20> '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
| |     | `-CompoundStmt 0x13ac848 <line:1116:2, line:1122:2>
| |     |   |-DeclStmt 0x13ac468 <line:1117:4, col:48>
| |     |   | `-VarDecl 0x13ac2f8 <col:4, col:47> col:9 referenced __d1 'auto' cinit
| |     |   |   `-CallExpr 0x13ac408 <col:16, col:47> '<dependent type>'
| |     |   |     |-UnresolvedLookupExpr 0x13ac380 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x1314008
| |     |   |     |-DeclRefExpr 0x13ac3c8 <col:30> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |     |   |     `-DeclRefExpr 0x13ac3e8 <col:40> '_II1' lvalue ParmVar 0x13ab688 '__last1' '_II1'
| |     |   |-DeclStmt 0x13ac5f8 <line:1118:4, col:48>
| |     |   | `-VarDecl 0x13ac4b8 <col:4, col:47> col:9 referenced __d2 'auto' cinit
| |     |   |   `-CallExpr 0x13ac5c8 <col:16, col:47> '<dependent type>'
| |     |   |     |-UnresolvedLookupExpr 0x13ac540 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x1314008
| |     |   |     |-DeclRefExpr 0x13ac588 <col:30> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |     |   |     `-DeclRefExpr 0x13ac5a8 <col:40> '_II2' lvalue ParmVar 0x13ab778 '__last2' '_II2'
| |     |   |-IfStmt 0x13ac718 <line:1119:4, line:1120:13>
| |     |   | |-CXXOperatorCallExpr 0x13ac6c0 <line:1119:8, col:16> '<dependent type>'
| |     |   | | |-UnresolvedLookupExpr 0x13ac650 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     |   | | |-DeclRefExpr 0x13ac610 <col:8> 'auto' lvalue Var 0x13ac2f8 '__d1' 'auto'
| |     |   | | `-DeclRefExpr 0x13ac630 <col:16> 'auto' lvalue Var 0x13ac4b8 '__d2' 'auto'
| |     |   | `-ReturnStmt 0x13ac708 <line:1120:6, col:13>
| |     |   |   `-CXXBoolLiteralExpr 0x13ac6f8 <col:13> 'bool' false
| |     |   `-ReturnStmt 0x13ac838 <line:1121:4, col:60>
| |     |     `-CallExpr 0x13ac800 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1121:60> '<dependent type>'
| |     |       |-UnresolvedLookupExpr 0x13ac750 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1121:27> '<overloaded function type>' lvalue (no ADL) = 'equal' 0x13aa838 0x13ab0e8
| |     |       |-DeclRefExpr 0x13ac7a0 <col:33> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |     |       |-DeclRefExpr 0x13ac7c0 <col:43> '_II1' lvalue ParmVar 0x13ab688 '__last1' '_II1'
| |     |       `-DeclRefExpr 0x13ac7e0 <col:52> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |     |-ForStmt 0x13add10 <line:1124:7, line:1127:11>
| |     | |-<<<NULL>>>
| |     | |-<<<NULL>>>
| |     | |-BinaryOperator 0x13aca60 <line:1124:14, col:49> '<dependent type>' '&&'
| |     | | |-CXXOperatorCallExpr 0x13ac940 <col:14, col:26> '<dependent type>'
| |     | | | |-UnresolvedLookupExpr 0x13ac8d0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | | |-DeclRefExpr 0x13ac890 <col:14> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |     | | | `-DeclRefExpr 0x13ac8b0 <col:26> '_II1' lvalue ParmVar 0x13ab688 '__last1' '_II1'
| |     | | `-CXXOperatorCallExpr 0x13aca28 <col:37, col:49> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x13ac9b8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | |   |-DeclRefExpr 0x13ac978 <col:37> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |     | |   `-DeclRefExpr 0x13ac998 <col:49> '_II2' lvalue ParmVar 0x13ab778 '__last2' '_II2'
| |     | |-BinaryOperator 0x13acb28 <line:1125:4, col:24> '<dependent type>' ','
| |     | | |-UnaryOperator 0x13acaa0 <col:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     | | | `-DeclRefExpr 0x13aca80 <col:6> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |     | | `-CStyleCastExpr 0x13acb00 <col:16, col:24> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x13acad8 <col:22, col:24> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x13acab8 <col:24> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |     | `-IfStmt 0x13accb8 <line:1126:2, line:1127:11>
| |     |   |-UnaryOperator 0x13acc80 <line:1126:6, col:30> '<dependent type>' prefix '!' cannot overflow
| |     |   | `-ParenExpr 0x13acc60 <col:7, col:30> '<dependent type>'
| |     |   |   `-CXXOperatorCallExpr 0x13acc28 <col:8, col:22> '<dependent type>'
| |     |   |     |-UnresolvedLookupExpr 0x13acbb8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |     |   |     |-UnaryOperator 0x13acb68 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
| |     |   |     | `-DeclRefExpr 0x13acb48 <col:9> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |     |   |     `-UnaryOperator 0x13acba0 <col:21, col:22> '<dependent type>' prefix '*' cannot overflow
| |     |   |       `-DeclRefExpr 0x13acb80 <col:22> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |     |   `-ReturnStmt 0x13acca8 <line:1127:4, col:11>
| |     |     `-CXXBoolLiteralExpr 0x13acc98 <col:11> 'bool' false
| |     `-ReturnStmt 0x13adf38 <line:1128:7, col:49>
| |       `-BinaryOperator 0x13adf18 <col:14, col:49> '<dependent type>' '&&'
| |         |-CXXOperatorCallExpr 0x13addf8 <col:14, col:26> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13add88 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |         | |-DeclRefExpr 0x13add48 <col:14> '_II1' lvalue ParmVar 0x13ab610 '__first1' '_II1'
| |         | `-DeclRefExpr 0x13add68 <col:26> '_II1' lvalue ParmVar 0x13ab688 '__last1' '_II1'
| |         `-CXXOperatorCallExpr 0x13adee0 <col:37, col:49> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13ade70 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |           |-DeclRefExpr 0x13ade30 <col:37> '_II2' lvalue ParmVar 0x13ab700 '__first2' '_II2'
| |           `-DeclRefExpr 0x13ade50 <col:49> '_II2' lvalue ParmVar 0x13ab778 '__last2' '_II2'
| |-FunctionTemplateDecl 0x13ae4c8 <line:1132:3, line:1156:5> line:1134:5 __equal4
| | |-TemplateTypeParmDecl 0x13adf90 <line:1132:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13ae008 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | |-TemplateTypeParmDecl 0x13ae088 <col:42, col:51> col:51 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13ae428 <line:1133:5, line:1156:5> line:1134:5 __equal4 'bool (_II1, _II1, _II2, _II2, _BinaryPredicate)' inline
| |   |-ParmVarDecl 0x13ae148 <col:14, col:19> col:19 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13ae1c0 <col:29, col:34> col:34 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13ae238 <col:43, col:48> col:48 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13ae2b0 <col:58, col:63> col:63 referenced __last2 '_II2'
| |   |-ParmVarDecl 0x13ae328 <line:1135:7, col:24> col:24 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13af980 <line:1136:5, line:1156:5>
| |     |-DeclStmt 0x13ae5b8 <line:1137:7, col:48>
| |     | `-TypeAliasDecl 0x13ae558 <col:7, col:22> col:13 referenced _RATag 'std::random_access_iterator_tag'
| |     |   `-RecordType 0x1307100 'std::random_access_iterator_tag'
| |     |     `-CXXRecord 0x1307070 'random_access_iterator_tag'
| |     |-DeclStmt 0x13ae740 <line:1138:7, col:70>
| |     | `-TypeAliasDecl 0x13ae6e0 <col:7, col:53> col:13 referenced _Cat1 'typename iterator_traits<_II1>::iterator_category'
| |     |   `-DependentNameType 0x13ae670 'typename iterator_traits<_II1>::iterator_category' dependent
| |     |-DeclStmt 0x13ae8d0 <line:1139:7, col:70>
| |     | `-TypeAliasDecl 0x13ae870 <col:7, col:53> col:13 referenced _Cat2 'typename iterator_traits<_II2>::iterator_category'
| |     |   `-DependentNameType 0x13ae800 'typename iterator_traits<_II2>::iterator_category' dependent
| |     |-DeclStmt 0x13aed18 <line:1140:7, col:78>
| |     | `-TypeAliasDecl 0x13aecb8 <col:7, col:77> col:13 referenced _RAIters '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
| |     |   `-TemplateSpecializationType 0x13aebd0 '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' dependent __and_
| |     |     |-TemplateArgument type 'is_same<_Cat1, _RATag>'
| |     |     `-TemplateArgument type 'is_same<_Cat2, _RATag>'
| |     |-IfStmt 0x13af330 <line:1141:7, line:1149:2>
| |     | |-CXXUnresolvedConstructExpr 0x13aed60 <line:1141:11, col:20> '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
| |     | `-CompoundStmt 0x13af300 <line:1142:2, line:1149:2>
| |     |   |-DeclStmt 0x13aeef8 <line:1143:4, col:48>
| |     |   | `-VarDecl 0x13aedb8 <col:4, col:47> col:9 referenced __d1 'auto' cinit
| |     |   |   `-CallExpr 0x13aeec8 <col:16, col:47> '<dependent type>'
| |     |   |     |-UnresolvedLookupExpr 0x13aee40 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x1314008
| |     |   |     |-DeclRefExpr 0x13aee88 <col:30> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |     |   |     `-DeclRefExpr 0x13aeea8 <col:40> '_II1' lvalue ParmVar 0x13ae1c0 '__last1' '_II1'
| |     |   |-DeclStmt 0x13af088 <line:1144:4, col:48>
| |     |   | `-VarDecl 0x13aef48 <col:4, col:47> col:9 referenced __d2 'auto' cinit
| |     |   |   `-CallExpr 0x13af058 <col:16, col:47> '<dependent type>'
| |     |   |     |-UnresolvedLookupExpr 0x13aefd0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x1314008
| |     |   |     |-DeclRefExpr 0x13af018 <col:30> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |     |   |     `-DeclRefExpr 0x13af038 <col:40> '_II2' lvalue ParmVar 0x13ae2b0 '__last2' '_II2'
| |     |   |-IfStmt 0x13af1a8 <line:1145:4, line:1146:13>
| |     |   | |-CXXOperatorCallExpr 0x13af150 <line:1145:8, col:16> '<dependent type>'
| |     |   | | |-UnresolvedLookupExpr 0x13af0e0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     |   | | |-DeclRefExpr 0x13af0a0 <col:8> 'auto' lvalue Var 0x13aedb8 '__d1' 'auto'
| |     |   | | `-DeclRefExpr 0x13af0c0 <col:16> 'auto' lvalue Var 0x13aef48 '__d2' 'auto'
| |     |   | `-ReturnStmt 0x13af198 <line:1146:6, col:13>
| |     |   |   `-CXXBoolLiteralExpr 0x13af188 <col:13> 'bool' false
| |     |   `-ReturnStmt 0x13af2f0 <line:1147:4, line:1148:25>
| |     |     `-CallExpr 0x13af2b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1148:25> '<dependent type>'
| |     |       |-UnresolvedLookupExpr 0x13af1e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1147:27> '<overloaded function type>' lvalue (no ADL) = 'equal' 0x13aa838 0x13ab0e8
| |     |       |-DeclRefExpr 0x13af230 <col:33> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |     |       |-DeclRefExpr 0x13af250 <col:43> '_II1' lvalue ParmVar 0x13ae1c0 '__last1' '_II1'
| |     |       |-DeclRefExpr 0x13af270 <col:52> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |     |       `-DeclRefExpr 0x13af290 <line:1148:12> '_BinaryPredicate' lvalue ParmVar 0x13ae328 '__binary_pred' '_BinaryPredicate'
| |     |-ForStmt 0x13af748 <line:1151:7, line:1154:11>
| |     | |-<<<NULL>>>
| |     | |-<<<NULL>>>
| |     | |-BinaryOperator 0x13af518 <line:1151:14, col:49> '<dependent type>' '&&'
| |     | | |-CXXOperatorCallExpr 0x13af3f8 <col:14, col:26> '<dependent type>'
| |     | | | |-UnresolvedLookupExpr 0x13af388 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | | |-DeclRefExpr 0x13af348 <col:14> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |     | | | `-DeclRefExpr 0x13af368 <col:26> '_II1' lvalue ParmVar 0x13ae1c0 '__last1' '_II1'
| |     | | `-CXXOperatorCallExpr 0x13af4e0 <col:37, col:49> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x13af470 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | |   |-DeclRefExpr 0x13af430 <col:37> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |     | |   `-DeclRefExpr 0x13af450 <col:49> '_II2' lvalue ParmVar 0x13ae2b0 '__last2' '_II2'
| |     | |-BinaryOperator 0x13af5e0 <line:1152:4, col:24> '<dependent type>' ','
| |     | | |-UnaryOperator 0x13af558 <col:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     | | | `-DeclRefExpr 0x13af538 <col:6> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |     | | `-CStyleCastExpr 0x13af5b8 <col:16, col:24> 'void' <ToVoid>
| |     | |   `-UnaryOperator 0x13af590 <col:22, col:24> '<dependent type>' prefix '++' cannot overflow
| |     | |     `-DeclRefExpr 0x13af570 <col:24> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |     | `-IfStmt 0x13af730 <line:1153:2, line:1154:11>
| |     |   |-UnaryOperator 0x13af6f8 <line:1153:6, col:47> 'bool' prefix '!' cannot overflow
| |     |   | `-CXXUnresolvedConstructExpr 0x13af6d0 <col:7, col:47> 'bool' 'bool'
| |     |   |   `-CallExpr 0x13af6a0 <col:12, col:46> '<dependent type>'
| |     |   |     |-DeclRefExpr 0x13af610 <col:12> '_BinaryPredicate' lvalue ParmVar 0x13ae328 '__binary_pred' '_BinaryPredicate'
| |     |   |     |-UnaryOperator 0x13af650 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
| |     |   |     | `-DeclRefExpr 0x13af630 <col:27> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |     |   |     `-UnaryOperator 0x13af688 <col:37, col:38> '<dependent type>' prefix '*' cannot overflow
| |     |   |       `-DeclRefExpr 0x13af668 <col:38> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |     |   `-ReturnStmt 0x13af720 <line:1154:4, col:11>
| |     |     `-CXXBoolLiteralExpr 0x13af710 <col:11> 'bool' false
| |     `-ReturnStmt 0x13af970 <line:1155:7, col:49>
| |       `-BinaryOperator 0x13af950 <col:14, col:49> '<dependent type>' '&&'
| |         |-CXXOperatorCallExpr 0x13af830 <col:14, col:26> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13af7c0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |         | |-DeclRefExpr 0x13af780 <col:14> '_II1' lvalue ParmVar 0x13ae148 '__first1' '_II1'
| |         | `-DeclRefExpr 0x13af7a0 <col:26> '_II1' lvalue ParmVar 0x13ae1c0 '__last1' '_II1'
| |         `-CXXOperatorCallExpr 0x13af918 <col:37, col:49> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13af8a8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10f8598 0x1300660 0x1328678 0x132b028 0x1355568 0x1355c38
| |           |-DeclRefExpr 0x13af868 <col:37> '_II2' lvalue ParmVar 0x13ae238 '__first2' '_II2'
| |           `-DeclRefExpr 0x13af888 <col:49> '_II2' lvalue ParmVar 0x13ae2b0 '__last2' '_II2'
| |-FunctionTemplateDecl 0x13afdf8 <line:1176:3, line:1190:5> line:1178:5 equal
| | |-TemplateTypeParmDecl 0x13af9c8 <line:1176:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13afa48 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x13afd58 <line:1177:5, line:1190:5> line:1178:5 equal 'bool (_II1, _II1, _II2, _II2)' inline
| |   |-ParmVarDecl 0x13afb00 <col:11, col:16> col:16 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13afb78 <col:26, col:31> col:31 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13afbf0 <col:40, col:45> col:45 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13afc68 <col:55, col:60> col:60 referenced __last2 '_II2'
| |   `-CompoundStmt 0x13affc0 <line:1179:5, line:1190:5>
| |     |-NullStmt 0x13afe70 <line:1186:56>
| |     |-NullStmt 0x13afe78 <line:1187:56>
| |     `-ReturnStmt 0x13affb0 <line:1189:7, col:75>
| |       `-CallExpr 0x13aff70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1189:75> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13afea0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1189:30> '<overloaded function type>' lvalue (no ADL) = '__equal4' 0x13ab908 0x13ae4c8
| |         |-DeclRefExpr 0x13afef0 <col:39> '_II1' lvalue ParmVar 0x13afb00 '__first1' '_II1'
| |         |-DeclRefExpr 0x13aff10 <col:49> '_II1' lvalue ParmVar 0x13afb78 '__last1' '_II1'
| |         |-DeclRefExpr 0x13aff30 <col:58> '_II2' lvalue ParmVar 0x13afbf0 '__first2' '_II2'
| |         `-DeclRefExpr 0x13aff50 <col:68> '_II2' lvalue ParmVar 0x13afc68 '__last2' '_II2'
| |-FunctionTemplateDecl 0x13b0528 <line:1208:3, line:1221:5> line:1210:5 equal
| | |-TemplateTypeParmDecl 0x13affe8 <line:1208:12, col:21> col:21 referenced typename depth 0 index 0 _IIter1
| | |-TemplateTypeParmDecl 0x13b0068 <col:30, col:39> col:39 referenced typename depth 0 index 1 _IIter2
| | |-TemplateTypeParmDecl 0x13b00e8 <col:48, col:57> col:57 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13b0488 <line:1209:5, line:1221:5> line:1210:5 equal 'bool (_IIter1, _IIter1, _IIter2, _IIter2, _BinaryPredicate)' inline
| |   |-ParmVarDecl 0x13b01a8 <col:11, col:19> col:19 referenced __first1 '_IIter1'
| |   |-ParmVarDecl 0x13b0220 <col:29, col:37> col:37 referenced __last1 '_IIter1'
| |   |-ParmVarDecl 0x13b0298 <line:1211:4, col:12> col:12 referenced __first2 '_IIter2'
| |   |-ParmVarDecl 0x13b0310 <col:22, col:30> col:30 referenced __last2 '_IIter2'
| |   |-ParmVarDecl 0x13b0388 <col:39, col:56> col:56 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13b0720 <line:1212:5, line:1221:5>
| |     |-NullStmt 0x13b05a8 <line:1216:56>
| |     |-NullStmt 0x13b05b0 <line:1217:56>
| |     `-ReturnStmt 0x13b0710 <line:1219:7, line:1220:24>
| |       `-CallExpr 0x13b06c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1220:24> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b05d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1219:30> '<overloaded function type>' lvalue (no ADL) = '__equal4' 0x13ab908 0x13ae4c8
| |         |-DeclRefExpr 0x13b0628 <col:39> '_IIter1' lvalue ParmVar 0x13b01a8 '__first1' '_IIter1'
| |         |-DeclRefExpr 0x13b0648 <col:49> '_IIter1' lvalue ParmVar 0x13b0220 '__last1' '_IIter1'
| |         |-DeclRefExpr 0x13b0668 <col:58> '_IIter2' lvalue ParmVar 0x13b0298 '__first2' '_IIter2'
| |         |-DeclRefExpr 0x13b0688 <col:68> '_IIter2' lvalue ParmVar 0x13b0310 '__last2' '_IIter2'
| |         `-DeclRefExpr 0x13b06a8 <line:1220:11> '_BinaryPredicate' lvalue ParmVar 0x13b0388 '__binary_pred' '_BinaryPredicate'
| |-FunctionTemplateDecl 0x13b0b78 <line:1239:3, line:1260:5> line:1241:5 lexicographical_compare
| | |-TemplateTypeParmDecl 0x13b0748 <line:1239:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13b07c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | `-FunctionDecl 0x13b0ad8 <line:1240:5, line:1260:5> line:1241:5 lexicographical_compare 'bool (_II1, _II1, _II2, _II2)' inline
| |   |-ParmVarDecl 0x13b0880 <col:29, col:34> col:34 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13b08f8 <col:44, col:49> col:49 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13b0970 <line:1242:8, col:13> col:13 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13b09e8 <col:23, col:28> col:28 referenced __last2 '_II2'
| |   `-CompoundStmt 0x13b0fd8 <line:1243:5, line:1260:5>
| |     |-NullStmt 0x13b0bf0 <line:1253:56>
| |     |-NullStmt 0x13b0bf8 <line:1254:56>
| |     `-ReturnStmt 0x13b0fc8 <line:1256:7, line:1259:33>
| |       `-CallExpr 0x13b0f88 <line:1256:14, line:1259:33> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b0c20 <line:1256:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_aux' 0x13a5518
| |         |-CallExpr 0x13b0d08 <col:49, col:75> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13b0c88 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |         | `-DeclRefExpr 0x13b0ce8 <col:67> '_II1' lvalue ParmVar 0x13b0880 '__first1' '_II1'
| |         |-CallExpr 0x13b0dd0 <line:1257:7, col:32> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13b0d50 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |         | `-DeclRefExpr 0x13b0db0 <col:25> '_II1' lvalue ParmVar 0x13b08f8 '__last1' '_II1'
| |         |-CallExpr 0x13b0e98 <line:1258:7, col:33> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x13b0e18 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |         | `-DeclRefExpr 0x13b0e78 <col:25> '_II2' lvalue ParmVar 0x13b0970 '__first2' '_II2'
| |         `-CallExpr 0x13b0f60 <line:1259:7, col:32> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13b0ee0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x13301b8 0x1351a28 0x135c898 0x137e898
| |           `-DeclRefExpr 0x13b0f40 <col:25> '_II2' lvalue ParmVar 0x13b09e8 '__last2' '_II2'
| |-FunctionTemplateDecl 0x13b1538 <line:1275:3, line:1289:5> line:1277:5 lexicographical_compare
| | |-TemplateTypeParmDecl 0x13b1000 <line:1275:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| | |-TemplateTypeParmDecl 0x13b1078 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| | |-TemplateTypeParmDecl 0x13b10f8 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Compare
| | `-FunctionDecl 0x13b1498 <line:1276:5, line:1289:5> line:1277:5 lexicographical_compare 'bool (_II1, _II1, _II2, _II2, _Compare)' inline
| |   |-ParmVarDecl 0x13b11b8 <col:29, col:34> col:34 referenced __first1 '_II1'
| |   |-ParmVarDecl 0x13b1230 <col:44, col:49> col:49 referenced __last1 '_II1'
| |   |-ParmVarDecl 0x13b12a8 <line:1278:8, col:13> col:13 referenced __first2 '_II2'
| |   |-ParmVarDecl 0x13b1320 <col:23, col:28> col:28 referenced __last2 '_II2'
| |   |-ParmVarDecl 0x13b1398 <col:37, col:46> col:46 referenced __comp '_Compare'
| |   `-CompoundStmt 0x13b17d8 <line:1279:5, line:1289:5>
| |     |-NullStmt 0x13b15b8 <line:1283:56>
| |     |-NullStmt 0x13b15c0 <line:1284:56>
| |     `-ReturnStmt 0x13b17c8 <line:1286:7, line:1288:45>
| |       `-CallExpr 0x13b1780 <line:1286:14, line:1288:45> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b15e8 <line:1286:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_impl' 0x13a0d68
| |         |-DeclRefExpr 0x13b1630 <line:1287:3> '_II1' lvalue ParmVar 0x13b11b8 '__first1' '_II1'
| |         |-DeclRefExpr 0x13b1650 <col:13> '_II1' lvalue ParmVar 0x13b1230 '__last1' '_II1'
| |         |-DeclRefExpr 0x13b1670 <col:22> '_II2' lvalue ParmVar 0x13b12a8 '__first2' '_II2'
| |         |-DeclRefExpr 0x13b1690 <col:32> '_II2' lvalue ParmVar 0x13b1320 '__last2' '_II2'
| |         `-CallExpr 0x13b1758 <line:1288:3, col:44> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13b16e0 <col:3, col:21> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x136c2d8 0x1373fb8 0x1379f50
| |           `-DeclRefExpr 0x13b1738 <col:38> '_Compare' lvalue ParmVar 0x13b1398 '__comp' '_Compare'
| |-FunctionTemplateDecl 0x13b2e48 <line:1291:3, line:1303:5> line:1294:5 __mismatch
| | |-TemplateTypeParmDecl 0x13b1800 <line:1291:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| | |-TemplateTypeParmDecl 0x13b1878 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| | |-TemplateTypeParmDecl 0x13b18f8 <line:1292:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13b2da8 <line:1293:5, line:1303:5> line:1294:5 __mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)'
| |   |-ParmVarDecl 0x13b1a80 <col:16, col:32> col:32 referenced __first1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b1af8 <col:42, col:58> col:58 referenced __last1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b1b70 <line:1295:9, col:25> col:25 referenced __first2 '_InputIterator2'
| |   |-ParmVarDecl 0x13b1be8 <col:35, col:52> col:52 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13b3288 <line:1296:5, line:1303:5>
| |     |-WhileStmt 0x13b30e8 <line:1297:7, line:1301:2>
| |     | |-BinaryOperator 0x13b3038 <line:1297:14, col:69> '<dependent type>' '&&'
| |     | | |-CXXOperatorCallExpr 0x13b2f70 <col:14, col:26> '<dependent type>'
| |     | | | |-UnresolvedLookupExpr 0x13b2f00 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | | |-DeclRefExpr 0x13b2ec0 <col:14> '_InputIterator1' lvalue ParmVar 0x13b1a80 '__first1' '_InputIterator1'
| |     | | | `-DeclRefExpr 0x13b2ee0 <col:26> '_InputIterator1' lvalue ParmVar 0x13b1af8 '__last1' '_InputIterator1'
| |     | | `-CallExpr 0x13b3008 <col:37, col:69> '<dependent type>'
| |     | |   |-DeclRefExpr 0x13b2fa8 <col:37> '_BinaryPredicate' lvalue ParmVar 0x13b1be8 '__binary_pred' '_BinaryPredicate'
| |     | |   |-DeclRefExpr 0x13b2fc8 <col:51> '_InputIterator1' lvalue ParmVar 0x13b1a80 '__first1' '_InputIterator1'
| |     | |   `-DeclRefExpr 0x13b2fe8 <col:61> '_InputIterator2' lvalue ParmVar 0x13b1b70 '__first2' '_InputIterator2'
| |     | `-CompoundStmt 0x13b30c8 <line:1298:2, line:1301:2>
| |     |   |-UnaryOperator 0x13b3078 <line:1299:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     |   | `-DeclRefExpr 0x13b3058 <col:6> '_InputIterator1' lvalue ParmVar 0x13b1a80 '__first1' '_InputIterator1'
| |     |   `-UnaryOperator 0x13b30b0 <line:1300:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     |     `-DeclRefExpr 0x13b3090 <col:6> '_InputIterator2' lvalue ParmVar 0x13b1b70 '__first2' '_InputIterator2'
| |     `-ReturnStmt 0x13b3278 <line:1302:7, col:71>
| |       `-CXXUnresolvedConstructExpr 0x13b3248 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>' 'pair<_InputIterator1, _InputIterator2>'
| |         |-DeclRefExpr 0x13b3208 <col:53> '_InputIterator1' lvalue ParmVar 0x13b1a80 '__first1' '_InputIterator1'
| |         `-DeclRefExpr 0x13b3228 <col:63> '_InputIterator2' lvalue ParmVar 0x13b1b70 '__first2' '_InputIterator2'
| |-FunctionTemplateDecl 0x13b3790 <line:1318:3, line:1333:5> line:1320:5 mismatch
| | |-TemplateTypeParmDecl 0x13b32a8 <line:1318:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| | |-TemplateTypeParmDecl 0x13b3328 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| | `-FunctionDecl 0x13b36f0 <line:1319:5, line:1333:5> line:1320:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2)' inline
| |   |-ParmVarDecl 0x13b34a0 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b3518 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b3590 <line:1321:7, col:23> col:23 referenced __first2 '_InputIterator2'
| |   `-CompoundStmt 0x13b39e0 <line:1322:5, line:1333:5>
| |     |-NullStmt 0x13b3800 <line:1329:56>
| |     `-ReturnStmt 0x13b39d0 <line:1331:7, line:1332:49>
| |       `-CallExpr 0x13b3990 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1332:49> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b3828 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1331:30> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x13b2e48
| |         |-DeclRefExpr 0x13b3870 <col:41> '_InputIterator1' lvalue ParmVar 0x13b34a0 '__first1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b3890 <col:51> '_InputIterator1' lvalue ParmVar 0x13b3518 '__last1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b38b0 <col:60> '_InputIterator2' lvalue ParmVar 0x13b3590 '__first2' '_InputIterator2'
| |         `-CallExpr 0x13b3970 <line:1332:9, col:48> '__gnu_cxx::__ops::_Iter_equal_to_iter'
| |           `-ImplicitCastExpr 0x13b3958 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter (*)()' <FunctionToPointerDecay>
| |             `-DeclRefExpr 0x13b3900 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter ()' lvalue Function 0x13680d8 '__iter_equal_to_iter' '__gnu_cxx::__ops::_Iter_equal_to_iter ()'
| |-FunctionTemplateDecl 0x13b3fb0 <line:1351:3, line:1364:5> line:1354:5 mismatch
| | |-TemplateTypeParmDecl 0x13b3a00 <line:1351:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| | |-TemplateTypeParmDecl 0x13b3a78 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| | |-TemplateTypeParmDecl 0x13b3af8 <line:1352:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13b3f10 <line:1353:5, line:1364:5> line:1354:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)' inline
| |   |-ParmVarDecl 0x13b3c80 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b3cf8 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b3d70 <line:1355:7, col:23> col:23 referenced __first2 '_InputIterator2'
| |   |-ParmVarDecl 0x13b3de8 <col:33, col:50> col:50 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13b4218 <line:1356:5, line:1364:5>
| |     |-NullStmt 0x13b4028 <line:1360:56>
| |     `-ReturnStmt 0x13b4208 <line:1362:7, line:1363:51>
| |       `-CallExpr 0x13b41c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1363:51> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b4050 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1362:30> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x13b2e48
| |         |-DeclRefExpr 0x13b4098 <col:41> '_InputIterator1' lvalue ParmVar 0x13b3c80 '__first1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b40b8 <col:51> '_InputIterator1' lvalue ParmVar 0x13b3cf8 '__last1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b40d8 <col:60> '_InputIterator2' lvalue ParmVar 0x13b3d70 '__first2' '_InputIterator2'
| |         `-CallExpr 0x13b41a0 <line:1363:2, col:50> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x13b4128 <col:2, col:20> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x136c2d8 0x1373fb8 0x1379f50
| |           `-DeclRefExpr 0x13b4180 <col:37> '_BinaryPredicate' lvalue ParmVar 0x13b3de8 '__binary_pred' '_BinaryPredicate'
| |-FunctionTemplateDecl 0x13b48d0 <line:1368:3, line:1382:5> line:1371:5 __mismatch
| | |-TemplateTypeParmDecl 0x13b4238 <line:1368:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| | |-TemplateTypeParmDecl 0x13b42b8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| | |-TemplateTypeParmDecl 0x13b4338 <line:1369:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| | `-FunctionDecl 0x13b4830 <line:1370:5, line:1382:5> line:1371:5 __mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)'
| |   |-ParmVarDecl 0x13b44c0 <col:16, col:32> col:32 referenced __first1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b4538 <col:42, col:58> col:58 referenced __last1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b45b0 <line:1372:9, col:25> col:25 referenced __first2 '_InputIterator2'
| |   |-ParmVarDecl 0x13b4628 <col:35, col:51> col:51 referenced __last2 '_InputIterator2'
| |   |-ParmVarDecl 0x13b46a0 <line:1373:9, col:26> col:26 referenced __binary_pred '_BinaryPredicate'
| |   `-CompoundStmt 0x13b4e28 <line:1374:5, line:1382:5>
| |     |-WhileStmt 0x13b4c80 <line:1375:7, line:1380:2>
| |     | |-BinaryOperator 0x13b4bd0 <line:1375:14, line:1376:42> '<dependent type>' '&&'
| |     | | |-BinaryOperator 0x13b4b20 <line:1375:14, col:49> '<dependent type>' '&&'
| |     | | | |-CXXOperatorCallExpr 0x13b4a00 <col:14, col:26> '<dependent type>'
| |     | | | | |-UnresolvedLookupExpr 0x13b4990 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | | | |-DeclRefExpr 0x13b4950 <col:14> '_InputIterator1' lvalue ParmVar 0x13b44c0 '__first1' '_InputIterator1'
| |     | | | | `-DeclRefExpr 0x13b4970 <col:26> '_InputIterator1' lvalue ParmVar 0x13b4538 '__last1' '_InputIterator1'
| |     | | | `-CXXOperatorCallExpr 0x13b4ae8 <col:37, col:49> '<dependent type>'
| |     | | |   |-UnresolvedLookupExpr 0x13b4a78 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x10f8b48 0x13019a8 0x13297b8 0x132be58 0x1356348 0x1356948
| |     | | |   |-DeclRefExpr 0x13b4a38 <col:37> '_InputIterator2' lvalue ParmVar 0x13b45b0 '__first2' '_InputIterator2'
| |     | | |   `-DeclRefExpr 0x13b4a58 <col:49> '_InputIterator2' lvalue ParmVar 0x13b4628 '__last2' '_InputIterator2'
| |     | | `-CallExpr 0x13b4ba0 <line:1376:10, col:42> '<dependent type>'
| |     | |   |-DeclRefExpr 0x13b4b40 <col:10> '_BinaryPredicate' lvalue ParmVar 0x13b46a0 '__binary_pred' '_BinaryPredicate'
| |     | |   |-DeclRefExpr 0x13b4b60 <col:24> '_InputIterator1' lvalue ParmVar 0x13b44c0 '__first1' '_InputIterator1'
| |     | |   `-DeclRefExpr 0x13b4b80 <col:34> '_InputIterator2' lvalue ParmVar 0x13b45b0 '__first2' '_InputIterator2'
| |     | `-CompoundStmt 0x13b4c60 <line:1377:2, line:1380:2>
| |     |   |-UnaryOperator 0x13b4c10 <line:1378:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     |   | `-DeclRefExpr 0x13b4bf0 <col:6> '_InputIterator1' lvalue ParmVar 0x13b44c0 '__first1' '_InputIterator1'
| |     |   `-UnaryOperator 0x13b4c48 <line:1379:4, col:6> '<dependent type>' prefix '++' cannot overflow
| |     |     `-DeclRefExpr 0x13b4c28 <col:6> '_InputIterator2' lvalue ParmVar 0x13b45b0 '__first2' '_InputIterator2'
| |     `-ReturnStmt 0x13b4e18 <line:1381:7, col:71>
| |       `-CXXUnresolvedConstructExpr 0x13b4de8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>' 'pair<_InputIterator1, _InputIterator2>'
| |         |-DeclRefExpr 0x13b4da8 <col:53> '_InputIterator1' lvalue ParmVar 0x13b44c0 '__first1' '_InputIterator1'
| |         `-DeclRefExpr 0x13b4dc8 <col:63> '_InputIterator2' lvalue ParmVar 0x13b45b0 '__first2' '_InputIterator2'
| |-FunctionTemplateDecl 0x13b53c0 <line:1398:3, line:1414:5> line:1400:5 mismatch
| | |-TemplateTypeParmDecl 0x13b4e48 <line:1398:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| | |-TemplateTypeParmDecl 0x13b4ec8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| | `-FunctionDecl 0x13b5320 <line:1399:5, line:1414:5> line:1400:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)' inline
| |   |-ParmVarDecl 0x13b5040 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b50b8 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
| |   |-ParmVarDecl 0x13b5130 <line:1401:7, col:23> col:23 referenced __first2 '_InputIterator2'
| |   |-ParmVarDecl 0x13b51a8 <col:33, col:49> col:49 referenced __last2 '_InputIterator2'
| |   `-CompoundStmt 0x13b5628 <line:1402:5, line:1414:5>
| |     |-NullStmt 0x13b5438 <line:1409:56>
| |     |-NullStmt 0x13b5440 <line:1410:56>
| |     `-ReturnStmt 0x13b5618 <line:1412:7, line:1413:49>
| |       `-CallExpr 0x13b55d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1413:49> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x13b5468 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1412:30> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x13b2e48 0x13b48d0
| |         |-DeclRefExpr 0x13b54b8 <col:41> '_InputIterator1' lvalue ParmVar 0x13b5040 '__first1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b54d8 <col:51> '_InputIterator1' lvalue ParmVar 0x13b50b8 '__last1' '_InputIterator1'
| |         |-DeclRefExpr 0x13b54f8 <col:60> '_InputIterator2' lvalue ParmVar 0x13b5130 '__first2' '_InputIterator2'
| |         |-DeclRefExpr 0x13b5518 <col:70> '_InputIterator2' lvalue ParmVar 0x13b51a8 '__last2' '_InputIterator2'
| |         `-CallExpr 0x13b55b0 <line:1413:9, col:48> '__gnu_cxx::__ops::_Iter_equal_to_iter'
| |           `-ImplicitCastExpr 0x13b5598 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter (*)()' <FunctionToPointerDecay>
| |             `-DeclRefExpr 0x13b5568 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter ()' lvalue Function 0x13680d8 '__iter_equal_to_iter' '__gnu_cxx::__ops::_Iter_equal_to_iter ()'
| `-FunctionTemplateDecl 0x13b5c90 <line:1433:3, line:1448:5> line:1436:5 mismatch
|   |-TemplateTypeParmDecl 0x13b5650 <line:1433:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
|   |-TemplateTypeParmDecl 0x13b56c8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
|   |-TemplateTypeParmDecl 0x13b5748 <line:1434:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
|   `-FunctionDecl 0x13b5bf0 <line:1435:5, line:1448:5> line:1436:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)' inline
|     |-ParmVarDecl 0x13b58d0 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
|     |-ParmVarDecl 0x13b5948 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
|     |-ParmVarDecl 0x13b59c0 <line:1437:7, col:23> col:23 referenced __first2 '_InputIterator2'
|     |-ParmVarDecl 0x13b5a38 <col:33, col:49> col:49 referenced __last2 '_InputIterator2'
|     |-ParmVarDecl 0x13b5ab0 <line:1438:7, col:24> col:24 referenced __binary_pred '_BinaryPredicate'
|     `-CompoundStmt 0x13b5f38 <line:1439:5, line:1448:5>
|       |-NullStmt 0x13b5d10 <line:1443:56>
|       |-NullStmt 0x13b5d18 <line:1444:56>
|       `-ReturnStmt 0x13b5f28 <line:1446:7, line:1447:58>
|         `-CallExpr 0x13b5ee0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1447:58> '<dependent type>'
|           |-UnresolvedLookupExpr 0x13b5d40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:410:25, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_algobase.h:1446:30> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x13b2e48 0x13b48d0
|           |-DeclRefExpr 0x13b5d90 <col:41> '_InputIterator1' lvalue ParmVar 0x13b58d0 '__first1' '_InputIterator1'
|           |-DeclRefExpr 0x13b5db0 <col:51> '_InputIterator1' lvalue ParmVar 0x13b5948 '__last1' '_InputIterator1'
|           |-DeclRefExpr 0x13b5dd0 <col:60> '_InputIterator2' lvalue ParmVar 0x13b59c0 '__first2' '_InputIterator2'
|           |-DeclRefExpr 0x13b5df0 <col:70> '_InputIterator2' lvalue ParmVar 0x13b5a38 '__last2' '_InputIterator2'
|           `-CallExpr 0x13b5eb8 <line:1447:9, col:57> '<dependent type>'
|             |-UnresolvedLookupExpr 0x13b5e40 <col:9, col:27> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x136c2d8 0x1373fb8 0x1379f50
|             `-DeclRefExpr 0x13b5e98 <col:44> '_BinaryPredicate' lvalue ParmVar 0x13b5ab0 '__binary_pred' '_BinaryPredicate'
|-LinkageSpecDecl 0x1388140 <line:386:6> col:6 implicit C
| `-FunctionDecl 0x1388190 <col:6> col:6 implicit used __builtin_memmove 'void *(void *, const void *, unsigned long) noexcept' extern
|   |-ParmVarDecl 0x1388230 <<invalid sloc>> <invalid sloc> 'void *'
|   |-ParmVarDecl 0x1388298 <<invalid sloc>> <invalid sloc> 'const void *'
|   |-ParmVarDecl 0x1388300 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   `-NoThrowAttr 0x1388380 <col:6> Implicit
|-LinkageSpecDecl 0x13976e0 <line:725:2> col:2 implicit C
| `-FunctionDecl 0x1397730 <col:2> col:2 implicit used __builtin_memset 'void *(void *, int, unsigned long) noexcept' extern
|   |-ParmVarDecl 0x13977d0 <<invalid sloc>> <invalid sloc> 'void *'
|   |-ParmVarDecl 0x1397838 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0x13978a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   `-NoThrowAttr 0x1397920 <col:2> Implicit
|-LinkageSpecDecl 0x139c4a0 <line:834:14> col:14 implicit C
| `-FunctionDecl 0x139c4f0 <col:14> col:14 implicit used __builtin_memcmp 'int (const void *, const void *, unsigned long) noexcept' extern
|   |-ParmVarDecl 0x139c590 <<invalid sloc>> <invalid sloc> 'const void *'
|   |-ParmVarDecl 0x139c5f8 <<invalid sloc>> <invalid sloc> 'const void *'
|   |-ParmVarDecl 0x139c660 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   `-NoThrowAttr 0x139c6e0 <col:14> Implicit
|-LinkageSpecDecl 0x13a7da0 <line:1021:51> col:51 implicit C
| `-FunctionDecl 0x13a7df0 <col:51> col:51 implicit used __builtin_clz 'int (unsigned int) noexcept' extern
|   |-ParmVarDecl 0x13a7e90 <<invalid sloc>> <invalid sloc> 'unsigned int'
|   |-NoThrowAttr 0x13a7f00 <col:51> Implicit
|   `-ConstAttr 0x13a7f58 <col:51> Implicit
|-LinkageSpecDecl 0x13a93d0 <line:1029:51> col:51 implicit C
| `-FunctionDecl 0x13a9420 <col:51> col:51 implicit used __builtin_clzl 'int (unsigned long) noexcept' extern
|   |-ParmVarDecl 0x13a94c0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   |-NoThrowAttr 0x13a9530 <col:51> Implicit
|   `-ConstAttr 0x13a9588 <col:51> Implicit
|-LinkageSpecDecl 0x13a9db0 <line:1037:56> col:56 implicit C
| `-FunctionDecl 0x13a9e00 <col:56> col:56 implicit used __builtin_clzll 'int (unsigned long long) noexcept' extern
|   |-ParmVarDecl 0x13a9ea0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|   |-NoThrowAttr 0x13a9f10 <col:56> Implicit
|   `-ConstAttr 0x13a9f68 <col:56> Implicit
|-NamespaceDecl 0x13b5f80 prev 0x135d920 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:47:1, line:213:1> line:47:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| |-VisibilityAttr 0x13b5ff0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x13b6178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:61:3, line:68:5> line:62:12 _Char_types
| | |-TemplateTypeParmDecl 0x13b6048 <line:61:12, col:21> col:21 typename depth 0 index 0 _CharT
| | `-CXXRecordDecl 0x13b60e8 <line:62:5, line:68:5> line:62:12 struct _Char_types definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x13b63d0 <col:5, col:12> col:12 implicit struct _Char_types
| |   |-TypedefDecl 0x13b6478 <line:64:7, col:31> col:31 int_type 'unsigned long'
| |   | `-BuiltinType 0xffd2d0 'unsigned long'
| |   |-TypedefDecl 0x13b6570 <line:65:7, col:31> col:31 pos_type 'std::streampos':'std::fpos<__mbstate_t>'
| |   | `-ElaboratedType 0x13b6500 'std::streampos' sugar
| |   |   `-TypedefType 0x13b64e0 'std::streampos' sugar
| |   |     |-Typedef 0x10f8e60 'streampos'
| |   |     `-TemplateSpecializationType 0x10f8dc0 'fpos<mbstate_t>' sugar fpos
| |   |       |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |   |       `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| |   |         `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| |   |-TypedefDecl 0x13b6650 <line:66:7, col:31> col:31 off_type 'std::streamoff':'long'
| |   | `-ElaboratedType 0x13b65e0 'std::streamoff' sugar
| |   |   `-TypedefType 0x10f4460 'std::streamoff' sugar
| |   |     |-Typedef 0x10f3c78 'streamoff'
| |   |     `-BuiltinType 0xffd230 'long'
| |   `-TypedefDecl 0x13b6730 <line:67:7, col:31> col:31 state_type 'std::mbstate_t':'__mbstate_t'
| |     `-ElaboratedType 0x13b66c0 'std::mbstate_t' sugar
| |       `-TypedefType 0x10d63b0 'mbstate_t' sugar
| |         |-Typedef 0x10c5e60 'mbstate_t'
| |         `-TypedefType 0x10b02c0 '__mbstate_t' sugar
| |           |-Typedef 0x10b0248 '__mbstate_t'
| |           `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
| |             `-RecordType 0x10afda0 '__mbstate_t'
| |               `-CXXRecord 0x10afd10 ''
| |-ClassTemplateDecl 0x13b68c8 <line:86:3, line:144:5> line:87:12 char_traits
| | |-TemplateTypeParmDecl 0x13b67a0 <line:86:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-CXXRecordDecl 0x13b6838 <line:87:5, line:144:5> line:87:12 struct char_traits definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0x13b6b20 <col:5, col:12> col:12 implicit struct char_traits
| |   |-TypedefDecl 0x13b6bc0 <line:89:7, col:57> col:57 referenced char_type '_CharT'
| |   | `-TemplateTypeParmType 0x13b67f0 '_CharT' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x13b67a0 '_CharT'
| |   |-TypedefDecl 0x13b71d0 <line:90:7, col:57> col:57 referenced int_type 'typename _Char_types<_CharT>::int_type'
| |   | `-DependentNameType 0x13b7160 'typename _Char_types<_CharT>::int_type' dependent
| |   |-TypedefDecl 0x13b7370 <line:91:7, col:57> col:57 pos_type 'typename _Char_types<_CharT>::pos_type'
| |   | `-DependentNameType 0x13b7300 'typename _Char_types<_CharT>::pos_type' dependent
| |   |-TypedefDecl 0x13b7510 <line:92:7, col:57> col:57 off_type 'typename _Char_types<_CharT>::off_type'
| |   | `-DependentNameType 0x13b74a0 'typename _Char_types<_CharT>::off_type' dependent
| |   |-TypedefDecl 0x13b76b0 <line:93:7, col:57> col:57 state_type 'typename _Char_types<_CharT>::state_type'
| |   | `-DependentNameType 0x13b7640 'typename _Char_types<_CharT>::state_type' dependent
| |   |-CXXMethodDecl 0x13b7948 <line:95:7, line:97:22> line:96:7 constexpr assign 'void (__gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
| |   | |-ParmVarDecl 0x13b7768 <col:14, col:25> col:25 referenced __c1 '__gnu_cxx::char_traits::char_type &'
| |   | |-ParmVarDecl 0x13b7808 <col:31, col:48> col:48 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
| |   | `-CompoundStmt 0x13b98f8 <line:97:7, col:22>
| |   |   `-BinaryOperator 0x13b98d8 <col:9, col:16> '<dependent type>' '='
| |   |     |-DeclRefExpr 0x13b9898 <col:9> '__gnu_cxx::char_traits::char_type':'_CharT' lvalue ParmVar 0x13b7768 '__c1' '__gnu_cxx::char_traits::char_type &'
| |   |     `-DeclRefExpr 0x13b98b8 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b7808 '__c2' 'const __gnu_cxx::char_traits::char_type &'
| |   |-CXXMethodDecl 0x13b7b98 <line:99:7, line:101:30> line:100:7 referenced constexpr eq 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
| |   | |-ParmVarDecl 0x13b7a08 <col:10, col:27> col:27 referenced __c1 'const __gnu_cxx::char_traits::char_type &'
| |   | |-ParmVarDecl 0x13b7a80 <col:33, col:50> col:50 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
| |   | `-CompoundStmt 0x13b99e8 <line:101:7, col:30>
| |   |   `-ReturnStmt 0x13b99d8 <col:9, col:24>
| |   |     `-CXXOperatorCallExpr 0x13b99a0 <col:16, col:24> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x13b9950 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
| |   |       |-DeclRefExpr 0x13b9910 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b7a08 '__c1' 'const __gnu_cxx::char_traits::char_type &'
| |   |       `-DeclRefExpr 0x13b9930 <col:24> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b7a80 '__c2' 'const __gnu_cxx::char_traits::char_type &'
| |   |-CXXMethodDecl 0x13b7d68 <line:103:7, line:105:29> line:104:7 referenced constexpr lt 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
| |   | |-ParmVarDecl 0x13b7c58 <col:10, col:27> col:27 referenced __c1 'const __gnu_cxx::char_traits::char_type &'
| |   | |-ParmVarDecl 0x13b7cd0 <col:33, col:50> col:50 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
| |   | `-CompoundStmt 0x13b9ad8 <line:105:7, col:29>
| |   |   `-ReturnStmt 0x13b9ac8 <col:9, col:23>
| |   |     `-CXXOperatorCallExpr 0x13b9a90 <col:16, col:23> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x13b9a40 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x10dce50 0x10dd5e0
| |   |       |-DeclRefExpr 0x13b9a00 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b7c58 '__c1' 'const __gnu_cxx::char_traits::char_type &'
| |   |       `-DeclRefExpr 0x13b9a20 <col:23> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b7cd0 '__c2' 'const __gnu_cxx::char_traits::char_type &'
| |   |-CXXMethodDecl 0x13b80f0 <line:107:7, line:108:76> col:7 constexpr compare 'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
| |   | |-ParmVarDecl 0x13b7e58 <col:15, col:32> col:32 __s1 'const __gnu_cxx::char_traits::char_type *'
| |   | |-ParmVarDecl 0x13b7ed0 <col:38, col:55> col:55 __s2 'const __gnu_cxx::char_traits::char_type *'
| |   | `-ParmVarDecl 0x13b7fc0 <col:61, col:73> col:73 __n 'std::size_t':'unsigned long'
| |   |-CXXMethodDecl 0x13b82e8 <line:110:7, line:111:34> col:7 constexpr length 'std::size_t (const __gnu_cxx::char_traits::char_type *)' static
| |   | `-ParmVarDecl 0x13b81e8 <col:14, col:31> col:31 __s 'const __gnu_cxx::char_traits::char_type *'
| |   |-CXXMethodDecl 0x13b85f8 <line:113:7, line:114:71> col:7 constexpr find 'const __gnu_cxx::char_traits::char_type *(const __gnu_cxx::char_traits::char_type *, std::size_t, const __gnu_cxx::char_traits::char_type &)' static
| |   | |-ParmVarDecl 0x13b83a0 <col:12, col:29> col:29 __s 'const __gnu_cxx::char_traits::char_type *'
| |   | |-ParmVarDecl 0x13b8458 <col:34, col:46> col:46 __n 'std::size_t':'unsigned long'
| |   | `-ParmVarDecl 0x13b84d0 <col:51, col:68> col:68 __a 'const __gnu_cxx::char_traits::char_type &'
| |   |-CXXMethodDecl 0x13b8938 <line:116:7, line:117:67> col:7 move '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
| |   | |-ParmVarDecl 0x13b86e8 <col:12, col:23> col:23 __s1 '__gnu_cxx::char_traits::char_type *'
| |   | |-ParmVarDecl 0x13b8760 <col:29, col:46> col:46 __s2 'const __gnu_cxx::char_traits::char_type *'
| |   | `-ParmVarDecl 0x13b8818 <col:52, col:64> col:64 __n 'std::size_t':'unsigned long'
| |   |-CXXMethodDecl 0x13b8bd0 <line:119:7, line:120:67> col:7 copy '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
| |   | |-ParmVarDecl 0x13b8a00 <col:12, col:23> col:23 __s1 '__gnu_cxx::char_traits::char_type *'
| |   | |-ParmVarDecl 0x13b8a78 <col:29, col:46> col:46 __s2 'const __gnu_cxx::char_traits::char_type *'
| |   | `-ParmVarDecl 0x13b8b30 <col:52, col:64> col:64 __n 'std::size_t':'unsigned long'
| |   |-CXXMethodDecl 0x13b8ee8 <line:122:7, line:123:60> col:7 assign '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, std::size_t, __gnu_cxx::char_traits::char_type)' static
| |   | |-ParmVarDecl 0x13b8c98 <col:14, col:25> col:25 __s '__gnu_cxx::char_traits::char_type *'
| |   | |-ParmVarDecl 0x13b8d50 <col:30, col:42> col:42 __n 'std::size_t':'unsigned long'
| |   | `-ParmVarDecl 0x13b8dc8 <col:47, col:57> col:57 __a '__gnu_cxx::char_traits::char_type':'_CharT'
| |   |-CXXMethodDecl 0x13b9118 <line:125:7, line:127:45> line:126:7 constexpr to_char_type '__gnu_cxx::char_traits::char_type (const __gnu_cxx::char_traits::int_type &)' static
| |   | |-ParmVarDecl 0x13b9028 <col:20, col:36> col:36 referenced __c 'const __gnu_cxx::char_traits::int_type &'
| |   | `-CompoundStmt 0x13b9b60 <line:127:7, col:45>
| |   |   `-ReturnStmt 0x13b9b50 <col:9, col:42>
| |   |     `-CXXStaticCastExpr 0x13b9b20 <col:16, col:42> '__gnu_cxx::char_traits::char_type':'_CharT' static_cast<__gnu_cxx::char_traits::char_type> <Dependent>
| |   |       `-DeclRefExpr 0x13b9af0 <col:39> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x13b9028 '__c' 'const __gnu_cxx::char_traits::int_type &'
| |   |-CXXMethodDecl 0x13b92c8 <line:129:7, line:131:44> line:130:7 referenced constexpr to_int_type '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)' static
| |   | |-ParmVarDecl 0x13b91d0 <col:19, col:36> col:36 referenced __c 'const __gnu_cxx::char_traits::char_type &'
| |   | `-CompoundStmt 0x13b9be8 <line:131:7, col:44>
| |   |   `-ReturnStmt 0x13b9bd8 <col:9, col:41>
| |   |     `-CXXStaticCastExpr 0x13b9ba8 <col:16, col:41> '__gnu_cxx::char_traits::int_type':'typename _Char_types<_CharT>::int_type' static_cast<__gnu_cxx::char_traits::int_type> <Dependent>
| |   |       `-DeclRefExpr 0x13b9b78 <col:38> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13b91d0 '__c' 'const __gnu_cxx::char_traits::char_type &'
| |   |-CXXMethodDecl 0x13b9508 <line:133:7, line:135:30> line:134:7 referenced constexpr eq_int_type 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)' static
| |   | |-ParmVarDecl 0x13b9380 <col:19, col:35> col:35 referenced __c1 'const __gnu_cxx::char_traits::int_type &'
| |   | |-ParmVarDecl 0x13b93f8 <col:41, col:57> col:57 referenced __c2 'const __gnu_cxx::char_traits::int_type &'
| |   | `-CompoundStmt 0x13b9cd8 <line:135:7, col:30>
| |   |   `-ReturnStmt 0x13b9cc8 <col:9, col:24>
| |   |     `-CXXOperatorCallExpr 0x13b9c90 <col:16, col:24> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x13b9c40 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x10dae50 0x10db650
| |   |       |-DeclRefExpr 0x13b9c00 <col:16> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x13b9380 '__c1' 'const __gnu_cxx::char_traits::int_type &'
| |   |       `-DeclRefExpr 0x13b9c20 <col:24> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x13b93f8 '__c2' 'const __gnu_cxx::char_traits::int_type &'
| |   |-CXXMethodDecl 0x13b9638 <line:137:7, line:139:59> line:138:7 referenced constexpr eof '__gnu_cxx::char_traits::int_type ()' static
| |   | `-CompoundStmt 0x13b9d78 <line:139:7, col:59>
| |   |   `-ReturnStmt 0x13b9d68 <col:9, col:56>
| |   |     `-CXXStaticCastExpr 0x13b9d38 <col:16, col:56> '__gnu_cxx::char_traits::int_type':'typename _Char_types<_CharT>::int_type' static_cast<__gnu_cxx::char_traits::int_type> <Dependent>
| |   |       `-UnaryOperator 0x13b9d10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:1589:28, col:29> 'int' prefix '-'
| |   |         `-IntegerLiteral 0x13b9cf0 <col:29> 'int' 1
| |   `-CXXMethodDecl 0x13b97d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:141:7, line:143:75> line:142:7 constexpr not_eof '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::int_type &)' static
| |     |-ParmVarDecl 0x13b96e8 <col:15, col:31> col:31 referenced __c 'const __gnu_cxx::char_traits::int_type &'
| |     `-CompoundStmt 0x13b9f30 <line:143:7, col:75>
| |       `-ReturnStmt 0x13b9f20 <col:9, col:72>
| |         `-ConditionalOperator 0x13b9ef0 <col:16, col:72> '<dependent type>'
| |           |-UnaryOperator 0x13b9e40 <col:16, col:39> '<dependent type>' prefix '!' cannot overflow
| |           | `-CallExpr 0x13b9e10 <col:17, col:39> '<dependent type>'
| |           |   |-DeclRefExpr 0x13b9d90 <col:17> 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)' lvalue CXXMethod 0x13b9508 'eq_int_type' 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)'
| |           |   |-DeclRefExpr 0x13b9db0 <col:29> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x13b96e8 '__c' 'const __gnu_cxx::char_traits::int_type &'
| |           |   `-CallExpr 0x13b9df0 <col:34, col:38> '<dependent type>'
| |           |     `-DeclRefExpr 0x13b9dd0 <col:34> '__gnu_cxx::char_traits::int_type ()' lvalue CXXMethod 0x13b9638 'eof' '__gnu_cxx::char_traits::int_type ()'
| |           |-DeclRefExpr 0x13b9e58 <col:43> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x13b96e8 '__c' 'const __gnu_cxx::char_traits::int_type &'
| |           `-CallExpr 0x13b9ec8 <col:49, col:72> '<dependent type>'
| |             |-DeclRefExpr 0x13b9e78 <col:49> '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x13b92c8 'to_int_type' '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)'
| |             `-CXXUnresolvedConstructExpr 0x13b9ea8 <col:61, col:71> '__gnu_cxx::char_traits::char_type':'_CharT' '__gnu_cxx::char_traits::char_type':'_CharT'
| |-CXXMethodDecl 0x13ba320 parent 0x13b6838 prev 0x13b80f0 <line:146:3, line:157:5> line:149:5 constexpr compare 'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| | |-ParmVarDecl 0x13ba148 <col:13, col:30> col:30 referenced __s1 'const __gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13ba1c0 <col:36, col:53> col:53 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13ba278 <col:59, col:71> col:71 referenced __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x13ba928 <line:150:5, line:157:5>
| |   |-ForStmt 0x13ba8c0 <line:151:7, line:155:11>
| |   | |-DeclStmt 0x13ba508 <line:151:12, col:31>
| |   | | `-VarDecl 0x13ba468 <col:12, col:30> col:24 referenced __i 'std::size_t':'unsigned long' cinit
| |   | |   `-ImplicitCastExpr 0x13ba4f0 <col:30> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0x13ba4d0 <col:30> 'int' 0
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x13ba590 <col:33, col:39> 'bool' '<'
| |   | | |-ImplicitCastExpr 0x13ba560 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x13ba520 <col:33> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x13ba578 <col:39> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x13ba540 <col:39> 'std::size_t':'unsigned long' lvalue ParmVar 0x13ba278 '__n' 'std::size_t':'unsigned long'
| |   | |-UnaryOperator 0x13ba5d0 <col:44, col:46> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   | | `-DeclRefExpr 0x13ba5b0 <col:46> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   | `-IfStmt 0x13ba898 <line:152:2, line:155:11> has_else
| |   |   |-CallExpr 0x13ba6c8 <line:152:6, col:29> '<dependent type>'
| |   |   | |-DeclRefExpr 0x13ba5e8 <col:6> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x13b7d68 'lt' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
| |   |   | |-ArraySubscriptExpr 0x13ba648 <col:9, col:17> '<dependent type>' lvalue
| |   |   | | |-DeclRefExpr 0x13ba608 <col:9> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13ba148 '__s1' 'const __gnu_cxx::char_traits::char_type *'
| |   |   | | `-DeclRefExpr 0x13ba628 <col:14> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   |   | `-ArraySubscriptExpr 0x13ba6a8 <col:20, col:28> '<dependent type>' lvalue
| |   |   |   |-DeclRefExpr 0x13ba668 <col:20> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13ba1c0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
| |   |   |   `-DeclRefExpr 0x13ba688 <col:25> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   |   |-ReturnStmt 0x13ba730 <line:153:4, col:12>
| |   |   | `-UnaryOperator 0x13ba718 <col:11, col:12> 'int' prefix '-'
| |   |   |   `-IntegerLiteral 0x13ba6f8 <col:12> 'int' 1
| |   |   `-IfStmt 0x13ba880 <line:154:7, line:155:11>
| |   |     |-CallExpr 0x13ba820 <line:154:11, col:34> '<dependent type>'
| |   |     | |-DeclRefExpr 0x13ba740 <col:11> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x13b7d68 'lt' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
| |   |     | |-ArraySubscriptExpr 0x13ba7a0 <col:14, col:22> '<dependent type>' lvalue
| |   |     | | |-DeclRefExpr 0x13ba760 <col:14> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13ba1c0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
| |   |     | | `-DeclRefExpr 0x13ba780 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   |     | `-ArraySubscriptExpr 0x13ba800 <col:25, col:33> '<dependent type>' lvalue
| |   |     |   |-DeclRefExpr 0x13ba7c0 <col:25> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13ba148 '__s1' 'const __gnu_cxx::char_traits::char_type *'
| |   |     |   `-DeclRefExpr 0x13ba7e0 <col:30> 'std::size_t':'unsigned long' lvalue Var 0x13ba468 '__i' 'std::size_t':'unsigned long'
| |   |     `-ReturnStmt 0x13ba870 <line:155:4, col:11>
| |   |       `-IntegerLiteral 0x13ba850 <col:11> 'int' 1
| |   `-ReturnStmt 0x13ba918 <line:156:7, col:14>
| |     `-IntegerLiteral 0x13ba8f8 <col:14> 'int' 0
| |-CXXMethodDecl 0x13bac18 parent 0x13b6838 prev 0x13b82e8 <line:159:3, line:168:5> line:162:5 constexpr length 'std::size_t (const __gnu_cxx::char_traits::char_type *)'
| | |-ParmVarDecl 0x13bab78 <col:12, col:29> col:29 referenced __p 'const __gnu_cxx::char_traits::char_type *'
| | `-CompoundStmt 0x13baf98 <line:163:5, line:168:5>
| |   |-DeclStmt 0x13badf0 <line:164:7, col:26>
| |   | `-VarDecl 0x13bad50 <col:7, col:25> col:19 referenced __i 'std::size_t':'unsigned long' cinit
| |   |   `-ImplicitCastExpr 0x13badd8 <col:25> 'std::size_t':'unsigned long' <IntegralCast>
| |   |     `-IntegerLiteral 0x13badb8 <col:25> 'int' 0
| |   |-WhileStmt 0x13baf38 <line:165:7, line:166:11>
| |   | |-UnaryOperator 0x13baee8 <line:165:14, col:39> '<dependent type>' prefix '!' cannot overflow
| |   | | `-CallExpr 0x13baeb8 <col:15, col:39> '<dependent type>'
| |   | |   |-DeclRefExpr 0x13bae08 <col:15> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x13b7b98 'eq' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
| |   | |   |-ArraySubscriptExpr 0x13bae68 <col:18, col:25> '<dependent type>' lvalue
| |   | |   | |-DeclRefExpr 0x13bae28 <col:18> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bab78 '__p' 'const __gnu_cxx::char_traits::char_type *'
| |   | |   | `-DeclRefExpr 0x13bae48 <col:22> 'std::size_t':'unsigned long' lvalue Var 0x13bad50 '__i' 'std::size_t':'unsigned long'
| |   | |   `-CXXUnresolvedConstructExpr 0x13bae98 <col:28, col:38> '__gnu_cxx::char_traits::char_type':'_CharT' '__gnu_cxx::char_traits::char_type':'_CharT'
| |   | `-UnaryOperator 0x13baf20 <line:166:9, col:11> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   |   `-DeclRefExpr 0x13baf00 <col:11> 'std::size_t':'unsigned long' lvalue Var 0x13bad50 '__i' 'std::size_t':'unsigned long'
| |   `-ReturnStmt 0x13baf88 <line:167:7, col:14>
| |     `-ImplicitCastExpr 0x13baf70 <col:14> 'std::size_t':'unsigned long' <LValueToRValue>
| |       `-DeclRefExpr 0x13baf50 <col:14> 'std::size_t':'unsigned long' lvalue Var 0x13bad50 '__i' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x13bba80 parent 0x13b6838 prev 0x13b85f8 <line:170:3, line:179:5> line:173:5 constexpr find 'const typename char_traits<_CharT>::char_type *(const __gnu_cxx::char_traits::char_type *, std::size_t, const __gnu_cxx::char_traits::char_type &)'
| | |-ParmVarDecl 0x13bb728 <col:10, col:27> col:27 referenced __s 'const __gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13bb7e0 <col:32, col:44> col:44 referenced __n 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x13bb858 <col:49, col:66> col:66 referenced __a 'const __gnu_cxx::char_traits::char_type &'
| | `-CompoundStmt 0x13bbf68 <line:174:5, line:179:5>
| |   |-ForStmt 0x13bbf00 <line:175:7, line:177:24>
| |   | |-DeclStmt 0x13bbc68 <line:175:12, col:31>
| |   | | `-VarDecl 0x13bbbc8 <col:12, col:30> col:24 referenced __i 'std::size_t':'unsigned long' cinit
| |   | |   `-ImplicitCastExpr 0x13bbc50 <col:30> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0x13bbc30 <col:30> 'int' 0
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x13bbcf0 <col:33, col:39> 'bool' '<'
| |   | | |-ImplicitCastExpr 0x13bbcc0 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x13bbc80 <col:33> 'std::size_t':'unsigned long' lvalue Var 0x13bbbc8 '__i' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x13bbcd8 <col:39> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x13bbca0 <col:39> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bb7e0 '__n' 'std::size_t':'unsigned long'
| |   | |-UnaryOperator 0x13bbd30 <col:44, col:46> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   | | `-DeclRefExpr 0x13bbd10 <col:46> 'std::size_t':'unsigned long' lvalue Var 0x13bbbc8 '__i' 'std::size_t':'unsigned long'
| |   | `-IfStmt 0x13bbee8 <line:176:9, line:177:24>
| |   |   |-CallExpr 0x13bbde8 <line:176:13, col:29> '<dependent type>'
| |   |   | |-DeclRefExpr 0x13bbd48 <col:13> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x13b7b98 'eq' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
| |   |   | |-ArraySubscriptExpr 0x13bbda8 <col:16, col:23> '<dependent type>' lvalue
| |   |   | | |-DeclRefExpr 0x13bbd68 <col:16> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bb728 '__s' 'const __gnu_cxx::char_traits::char_type *'
| |   |   | | `-DeclRefExpr 0x13bbd88 <col:20> 'std::size_t':'unsigned long' lvalue Var 0x13bbbc8 '__i' 'std::size_t':'unsigned long'
| |   |   | `-DeclRefExpr 0x13bbdc8 <col:26> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x13bb858 '__a' 'const __gnu_cxx::char_traits::char_type &'
| |   |   `-ReturnStmt 0x13bbed8 <line:177:11, col:24>
| |   |     `-CXXOperatorCallExpr 0x13bbea0 <col:18, col:24> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x13bbe58 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x13510a8
| |   |       |-DeclRefExpr 0x13bbe18 <col:18> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bb728 '__s' 'const __gnu_cxx::char_traits::char_type *'
| |   |       `-DeclRefExpr 0x13bbe38 <col:24> 'std::size_t':'unsigned long' lvalue Var 0x13bbbc8 '__i' 'std::size_t':'unsigned long'
| |   `-ReturnStmt 0x13bbf58 <line:178:7, col:14>
| |     `-IntegerLiteral 0x13bbf38 <col:14> 'int' 0
| |-CXXMethodDecl 0x13bc5d0 parent 0x13b6838 prev 0x13b8938 <line:181:3, line:190:5> line:184:5 move 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| | |-ParmVarDecl 0x13bc278 <col:10, col:21> col:21 referenced __s1 '__gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13bc2f0 <col:27, col:44> col:44 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13bc3a8 <col:50, col:62> col:62 referenced __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x13bc948 <line:185:5, line:190:5>
| |   |-IfStmt 0x13bc790 <line:186:7, line:187:9>
| |   | |-BinaryOperator 0x13bc740 <line:186:11, col:18> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x13bc710 <col:11> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x13bc6d0 <col:11> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bc3a8 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x13bc728 <col:18> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x13bc6f0 <col:18> 'int' 0
| |   | `-ReturnStmt 0x13bc780 <line:187:2, col:9>
| |   |   `-DeclRefExpr 0x13bc760 <col:9> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bc278 '__s1' '__gnu_cxx::char_traits::char_type *'
| |   `-ReturnStmt 0x13bc938 <line:188:7, line:189:35>
| |     `-CXXStaticCastExpr 0x13bc908 <line:188:14, line:189:35> '_CharT *' static_cast<_CharT *> <Dependent>
| |       `-CallExpr 0x13bc890 <line:188:35, line:189:34> '<dependent type>'
| |         |-DeclRefExpr 0x13bc7a8 <line:188:35> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| |         |-DeclRefExpr 0x13bc7c8 <col:53> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bc278 '__s1' '__gnu_cxx::char_traits::char_type *'
| |         |-DeclRefExpr 0x13bc7e8 <col:59> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bc2f0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
| |         `-BinaryOperator 0x13bc870 <line:189:11, col:33> 'unsigned long' '*'
| |           |-ImplicitCastExpr 0x13bc858 <col:11> 'std::size_t':'unsigned long' <LValueToRValue>
| |           | `-DeclRefExpr 0x13bc808 <col:11> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bc3a8 '__n' 'std::size_t':'unsigned long'
| |           `-UnaryExprOrTypeTraitExpr 0x13bc838 <col:17, col:33> 'unsigned long' sizeof '__gnu_cxx::char_traits::char_type':'_CharT'
| |-CXXMethodDecl 0x13bcfb0 parent 0x13b6838 prev 0x13b8bd0 <line:192:3, line:200:5> line:195:5 copy 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| | |-ParmVarDecl 0x13bcc58 <col:10, col:21> col:21 referenced __s1 '__gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13bccd0 <col:27, col:44> col:44 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| | |-ParmVarDecl 0x13bcd88 <col:50, col:62> col:62 referenced __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x13bd280 <line:196:5, line:200:5>
| |   |-CallExpr 0x13bd218 <line:198:7, col:39> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x13bd0d0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x138cda8
| |   | |-DeclRefExpr 0x13bd118 <col:17> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bccd0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
| |   | |-CXXOperatorCallExpr 0x13bd1c0 <col:23, col:30> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x13bd178 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x13510a8
| |   | | |-DeclRefExpr 0x13bd138 <col:23> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bccd0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
| |   | | `-DeclRefExpr 0x13bd158 <col:30> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bcd88 '__n' 'std::size_t':'unsigned long'
| |   | `-DeclRefExpr 0x13bd1f8 <col:35> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bcc58 '__s1' '__gnu_cxx::char_traits::char_type *'
| |   `-ReturnStmt 0x13bd270 <line:199:7, col:14>
| |     `-DeclRefExpr 0x13bd250 <col:14> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bcc58 '__s1' '__gnu_cxx::char_traits::char_type *'
| `-CXXMethodDecl 0x13bd8e0 parent 0x13b6838 prev 0x13b8ee8 <line:202:3, line:210:5> line:205:5 assign 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, std::size_t, __gnu_cxx::char_traits::char_type)'
|   |-ParmVarDecl 0x13bd588 <col:12, col:23> col:23 referenced __s '__gnu_cxx::char_traits::char_type *'
|   |-ParmVarDecl 0x13bd640 <col:28, col:40> col:40 referenced __n 'std::size_t':'unsigned long'
|   |-ParmVarDecl 0x13bd6b8 <col:45, col:55> col:55 referenced __a '__gnu_cxx::char_traits::char_type':'_CharT'
|   `-CompoundStmt 0x13bdb10 <line:206:5, line:210:5>
|     |-CallExpr 0x13bdaa8 <line:208:7, col:32> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x13bda00 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'fill_n' 0x139ab98
|     | |-DeclRefExpr 0x13bda48 <col:19> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bd588 '__s' '__gnu_cxx::char_traits::char_type *'
|     | |-DeclRefExpr 0x13bda68 <col:24> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bd640 '__n' 'std::size_t':'unsigned long'
|     | `-DeclRefExpr 0x13bda88 <col:29> '__gnu_cxx::char_traits::char_type':'_CharT' lvalue ParmVar 0x13bd6b8 '__a' '__gnu_cxx::char_traits::char_type':'_CharT'
|     `-ReturnStmt 0x13bdb00 <line:209:7, col:14>
|       `-DeclRefExpr 0x13bdae0 <col:14> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x13bd588 '__s' '__gnu_cxx::char_traits::char_type *'
|-NamespaceDecl 0x13bdb50 prev 0x137b338 <line:215:1, line:624:1> line:215:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x13bdbc0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0x13bdd48 prev 0x1389b70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:283:3, line:285:7> line:284:12 char_traits
| | |-TemplateTypeParmDecl 0x13bdc18 <line:283:12, col:18> col:18 referenced class depth 0 index 0 _CharT
| | |-CXXRecordDecl 0x13bdcb8 prev 0x1389ae0 <line:284:5, line:285:7> line:284:12 struct char_traits definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__gnu_cxx::char_traits<_CharT>':'char_traits<_CharT>'
| | | `-CXXRecordDecl 0x13bdf38 <col:5, col:12> col:12 implicit struct char_traits
| | |-ClassTemplateSpecialization 0x13be008 'char_traits'
| | |-ClassTemplateSpecialization 0x13c2f70 'char_traits'
| | |-ClassTemplateSpecialization 0x13df968 'char_traits'
| | `-ClassTemplateSpecialization 0x13eda08 'char_traits'
| |-ClassTemplateSpecializationDecl 0x13be008 prev 0x10a94d0 <line:289:3, line:404:3> line:290:12 struct char_traits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x13be1f8 <col:5, col:12> col:12 implicit struct char_traits
| | |-TypedefDecl 0x13be298 <line:292:7, col:33> col:33 referenced char_type 'char'
| | | `-BuiltinType 0xffd1b0 'char'
| | |-TypedefDecl 0x13be308 <line:293:7, col:33> col:33 referenced int_type 'int'
| | | `-BuiltinType 0xffd210 'int'
| | |-TypedefDecl 0x13be370 <line:294:7, col:33> col:33 referenced pos_type 'std::streampos':'std::fpos<__mbstate_t>'
| | | `-TypedefType 0x13b64e0 'std::streampos' sugar
| | |   |-Typedef 0x10f8e60 'streampos'
| | |   `-TemplateSpecializationType 0x10f8dc0 'fpos<mbstate_t>' sugar fpos
| | |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| | |     `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| | |       `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| | |-TypedefDecl 0x13be3d8 <line:295:7, col:33> col:33 referenced off_type 'std::streamoff':'long'
| | | `-TypedefType 0x10f4460 'std::streamoff' sugar
| | |   |-Typedef 0x10f3c78 'streamoff'
| | |   `-BuiltinType 0xffd230 'long'
| | |-TypedefDecl 0x13be440 <line:296:7, col:33> col:33 state_type 'mbstate_t':'__mbstate_t'
| | | `-TypedefType 0x10d63b0 'mbstate_t' sugar
| | |   |-Typedef 0x10c5e60 'mbstate_t'
| | |   `-TypedefType 0x10b02c0 '__mbstate_t' sugar
| | |     |-Typedef 0x10b0248 '__mbstate_t'
| | |     `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
| | |       `-RecordType 0x10afda0 '__mbstate_t'
| | |         `-CXXRecord 0x10afd10 ''
| | |-CXXMethodDecl 0x13be740 <line:298:7, line:300:22> line:299:7 used assign 'void (std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13be528 <col:14, col:25> col:25 used __c1 'std::char_traits<char>::char_type &'
| | | |-ParmVarDecl 0x13be5f8 <col:31, col:48> col:48 used __c2 'const std::char_traits<char>::char_type &'
| | | `-CompoundStmt 0x13c1128 <line:300:7, col:22>
| | |   `-BinaryOperator 0x13c1108 <col:9, col:16> 'std::char_traits<char>::char_type':'char' lvalue '='
| | |     |-DeclRefExpr 0x13c10b0 <col:9> 'std::char_traits<char>::char_type':'char' lvalue ParmVar 0x13be528 '__c1' 'std::char_traits<char>::char_type &'
| | |     `-ImplicitCastExpr 0x13c10f0 <col:16> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| | |       `-DeclRefExpr 0x13c10d0 <col:16> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13be5f8 '__c2' 'const std::char_traits<char>::char_type &'
| | |-CXXMethodDecl 0x13be990 <line:302:7, line:304:30> line:303:7 constexpr eq 'bool (const std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13be800 <col:10, col:27> col:27 used __c1 'const std::char_traits<char>::char_type &'
| | | |-ParmVarDecl 0x13be878 <col:33, col:50> col:50 used __c2 'const std::char_traits<char>::char_type &'
| | | `-CompoundStmt 0x13c1210 <line:304:7, col:30>
| | |   `-ReturnStmt 0x13c1200 <col:9, col:24>
| | |     `-BinaryOperator 0x13c11e0 <col:16, col:24> 'bool' '=='
| | |       |-ImplicitCastExpr 0x13c11b0 <col:16> 'int' <IntegralCast>
| | |       | `-ImplicitCastExpr 0x13c1180 <col:16> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13c1140 <col:16> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13be800 '__c1' 'const std::char_traits<char>::char_type &'
| | |       `-ImplicitCastExpr 0x13c11c8 <col:24> 'int' <IntegralCast>
| | |         `-ImplicitCastExpr 0x13c1198 <col:24> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| | |           `-DeclRefExpr 0x13c1160 <col:24> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13be878 '__c2' 'const std::char_traits<char>::char_type &'
| | |-CXXMethodDecl 0x13beb68 <line:306:7, line:312:7> line:307:7 constexpr lt 'bool (const std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13bea50 <col:10, col:27> col:27 used __c1 'const std::char_traits<char>::char_type &'
| | | |-ParmVarDecl 0x13beac8 <col:33, col:50> col:50 used __c2 'const std::char_traits<char>::char_type &'
| | | `-CompoundStmt 0x13c13d8 <line:308:7, line:312:7>
| | |   `-ReturnStmt 0x13c13c8 <line:310:2, line:311:37>
| | |     `-ParenExpr 0x13c13a8 <line:310:9, line:311:37> 'bool'
| | |       `-BinaryOperator 0x13c1388 <line:310:10, line:311:36> 'bool' '<'
| | |         |-ImplicitCastExpr 0x13c1358 <line:310:10, col:41> 'int' <IntegralCast>
| | |         | `-CXXStaticCastExpr 0x13c1290 <col:10, col:41> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |         |   `-ImplicitCastExpr 0x13c1278 <col:37> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |         |     `-ImplicitCastExpr 0x13c1260 <col:37> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| | |         |       `-DeclRefExpr 0x13c1228 <col:37> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13bea50 '__c1' 'const std::char_traits<char>::char_type &'
| | |         `-ImplicitCastExpr 0x13c1370 <line:311:5, col:36> 'int' <IntegralCast>
| | |           `-CXXStaticCastExpr 0x13c1328 <col:5, col:36> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |             `-ImplicitCastExpr 0x13c1310 <col:32> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |               `-ImplicitCastExpr 0x13c12f8 <col:32> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| | |                 `-DeclRefExpr 0x13c12c0 <col:32> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13beac8 '__c2' 'const std::char_traits<char>::char_type &'
| | |-CXXMethodDecl 0x13bee70 <line:314:7, line:333:7> line:315:7 compare 'int (const std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13bec58 <col:15, col:32> col:32 used __s1 'const std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13becd0 <col:38, col:55> col:55 used __s2 'const std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13bed48 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13c16c0 <line:316:7, line:333:7>
| | |   |-IfStmt 0x13c14b0 <line:317:2, line:318:11>
| | |   | |-BinaryOperator 0x13c1460 <line:317:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13c1430 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13c13f0 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bed48 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13c1448 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13c1410 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13c14a0 <line:318:4, col:11>
| | |   |   `-IntegerLiteral 0x13c1480 <col:11> 'int' 0
| | |   `-ReturnStmt 0x13c16b0 <line:332:2, col:41>
| | |     `-CallExpr 0x13c1600 <col:9, col:41> 'int'
| | |       |-ImplicitCastExpr 0x13c15e8 <col:9> 'int (*)(const void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0x13c14c8 <col:9> '<builtin fn type>' Function 0x139c4f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
| | |       |-ImplicitCastExpr 0x13c1650 <col:26> 'const void *' <BitCast>
| | |       | `-ImplicitCastExpr 0x13c1638 <col:26> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13c14e8 <col:26> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13bec58 '__s1' 'const std::char_traits<char>::char_type *'
| | |       |-ImplicitCastExpr 0x13c1680 <col:32> 'const void *' <BitCast>
| | |       | `-ImplicitCastExpr 0x13c1668 <col:32> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13c1508 <col:32> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13becd0 '__s2' 'const std::char_traits<char>::char_type *'
| | |       `-ImplicitCastExpr 0x13c1698 <col:38> 'std::size_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 0x13c1528 <col:38> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bed48 '__n' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13beff8 <line:335:7, line:343:7> line:336:7 used length 'std::size_t (const std::char_traits<char>::char_type *)' static
| | | |-ParmVarDecl 0x13bef38 <col:14, col:31> col:31 used __s 'const std::char_traits<char>::char_type *'
| | | `-CompoundStmt 0x13c17a0 <line:337:7, line:343:7>
| | |   `-ReturnStmt 0x13c1790 <line:342:2, col:29>
| | |     `-CallExpr 0x13c1750 <col:9, col:29> 'unsigned long'
| | |       |-ImplicitCastExpr 0x13c1738 <col:9> 'unsigned long (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0x13c16e0 <col:9> '<builtin fn type>' Function 0x111fe10 '__builtin_strlen' 'unsigned long (const char *) noexcept'
| | |       `-ImplicitCastExpr 0x13c1778 <col:26> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |         `-DeclRefExpr 0x13c1700 <col:26> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13bef38 '__s' 'const std::char_traits<char>::char_type *'
| | |-CXXMethodDecl 0x13bf2c8 <line:345:7, line:357:7> line:346:7 referenced find 'const std::char_traits<char>::char_type *(const std::char_traits<char>::char_type *, std::size_t, const std::char_traits<char>::char_type &)' static
| | | |-ParmVarDecl 0x13bf0b0 <col:12, col:29> col:29 used __s 'const std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13bf128 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
| | | |-ParmVarDecl 0x13bf1a0 <col:46, col:63> col:63 used __a 'const std::char_traits<char>::char_type &'
| | | `-CompoundStmt 0x13c1e00 <line:347:7, line:357:7>
| | |   |-IfStmt 0x13c1890 <line:348:2, line:349:11>
| | |   | |-BinaryOperator 0x13c1828 <line:348:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13c17f8 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13c17b8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bf128 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13c1810 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13c17d8 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13c1880 <line:349:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13c1868 <col:11> 'const std::char_traits<char>::char_type *' <NullToPointer>
| | |   |     `-IntegerLiteral 0x13c1848 <col:11> 'int' 0
| | |   `-ReturnStmt 0x13c1df0 <line:356:2, col:70>
| | |     `-CXXStaticCastExpr 0x13c1dc0 <col:9, col:70> 'const std::char_traits<char>::char_type *' static_cast<const std::char_traits<char>::char_type *> <BitCast>
| | |       `-CallExpr 0x13c1d00 <col:39, col:69> 'void *'
| | |         |-ImplicitCastExpr 0x13c1ce8 <col:39> 'void *(*)(const void *, int, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |         | `-DeclRefExpr 0x13c1bc8 <col:39> '<builtin fn type>' Function 0x13c1980 '__builtin_memchr' 'void *(const void *, int, unsigned long) noexcept'
| | |         |-ImplicitCastExpr 0x13c1d50 <col:56> 'const void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c1d38 <col:56> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c1be8 <col:56> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13bf0b0 '__s' 'const std::char_traits<char>::char_type *'
| | |         |-ImplicitCastExpr 0x13c1d80 <col:61> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x13c1d68 <col:61> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c1c08 <col:61> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13bf1a0 '__a' 'const std::char_traits<char>::char_type &'
| | |         `-ImplicitCastExpr 0x13c1d98 <col:66> 'std::size_t':'unsigned long' <LValueToRValue>
| | |           `-DeclRefExpr 0x13c1c28 <col:66> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bf128 '__n' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13c01d8 <line:359:7, line:365:7> line:360:7 move 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13bf3b8 <col:12, col:23> col:23 used __s1 'std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13bf430 <col:29, col:46> col:46 used __s2 'const std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13bf4a8 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13c2150 <line:361:7, line:365:7>
| | |   |-IfStmt 0x13c1ef8 <line:362:2, line:363:11>
| | |   | |-BinaryOperator 0x13c1e90 <line:362:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13c1e60 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13c1e20 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bf4a8 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13c1e78 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13c1e40 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13c1ee8 <line:363:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13c1ed0 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x13c1eb0 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13bf3b8 '__s1' 'std::char_traits<char>::char_type *'
| | |   `-ReturnStmt 0x13c2140 <line:364:2, col:67>
| | |     `-CXXStaticCastExpr 0x13c2110 <col:9, col:67> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| | |       `-CallExpr 0x13c2050 <col:33, col:66> 'void *'
| | |         |-ImplicitCastExpr 0x13c2038 <col:33> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |         | `-DeclRefExpr 0x13c1f10 <col:33> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| | |         |-ImplicitCastExpr 0x13c20a0 <col:51> 'void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c2088 <col:51> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c1f30 <col:51> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13bf3b8 '__s1' 'std::char_traits<char>::char_type *'
| | |         |-ImplicitCastExpr 0x13c20d0 <col:57> 'const void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c20b8 <col:57> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c1f50 <col:57> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13bf430 '__s2' 'const std::char_traits<char>::char_type *'
| | |         `-ImplicitCastExpr 0x13c20e8 <col:63> 'std::size_t':'unsigned long' <LValueToRValue>
| | |           `-DeclRefExpr 0x13c1f70 <col:63> 'std::size_t':'unsigned long' lvalue ParmVar 0x13bf4a8 '__n' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13c0430 <line:367:7, line:373:7> line:368:7 used copy 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13c02a0 <col:12, col:23> col:23 used __s1 'std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13c0318 <col:29, col:46> col:46 used __s2 'const std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13c0390 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13c26d8 <line:369:7, line:373:7>
| | |   |-IfStmt 0x13c2248 <line:370:2, line:371:11>
| | |   | |-BinaryOperator 0x13c21e0 <line:370:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13c21b0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13c2170 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c0390 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13c21c8 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13c2190 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13c2238 <line:371:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13c2220 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x13c2200 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13c02a0 '__s1' 'std::char_traits<char>::char_type *'
| | |   `-ReturnStmt 0x13c26c8 <line:372:2, col:66>
| | |     `-CXXStaticCastExpr 0x13c2698 <col:9, col:66> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| | |       `-CallExpr 0x13c25d8 <col:33, col:65> 'void *'
| | |         |-ImplicitCastExpr 0x13c25c0 <col:33> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |         | `-DeclRefExpr 0x13c24f8 <col:33> '<builtin fn type>' Function 0x13c22b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
| | |         |-ImplicitCastExpr 0x13c2628 <col:50> 'void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c2610 <col:50> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c2518 <col:50> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13c02a0 '__s1' 'std::char_traits<char>::char_type *'
| | |         |-ImplicitCastExpr 0x13c2658 <col:56> 'const void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c2640 <col:56> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c2538 <col:56> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x13c0318 '__s2' 'const std::char_traits<char>::char_type *'
| | |         `-ImplicitCastExpr 0x13c2670 <col:62> 'std::size_t':'unsigned long' <LValueToRValue>
| | |           `-DeclRefExpr 0x13c2558 <col:62> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c0390 '__n' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13c0708 <line:375:7, line:381:7> line:376:7 assign 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, std::size_t, std::char_traits<char>::char_type)' static
| | | |-ParmVarDecl 0x13c04f8 <col:14, col:25> col:25 used __s 'std::char_traits<char>::char_type *'
| | | |-ParmVarDecl 0x13c0570 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
| | | |-ParmVarDecl 0x13c05e8 <col:42, col:52> col:52 used __a 'std::char_traits<char>::char_type':'char'
| | | `-CompoundStmt 0x13c2a20 <line:377:7, line:381:7>
| | |   |-IfStmt 0x13c27d0 <line:378:2, line:379:11>
| | |   | |-BinaryOperator 0x13c2768 <line:378:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13c2738 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13c26f8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c0570 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13c2750 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13c2718 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13c27c0 <line:379:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13c27a8 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x13c2788 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13c04f8 '__s' 'std::char_traits<char>::char_type *'
| | |   `-ReturnStmt 0x13c2a10 <line:380:2, col:64>
| | |     `-CXXStaticCastExpr 0x13c29e0 <col:9, col:64> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| | |       `-CallExpr 0x13c2920 <col:33, col:63> 'void *'
| | |         |-ImplicitCastExpr 0x13c2908 <col:33> 'void *(*)(void *, int, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |         | `-DeclRefExpr 0x13c27e8 <col:33> '<builtin fn type>' Function 0x1397730 '__builtin_memset' 'void *(void *, int, unsigned long) noexcept'
| | |         |-ImplicitCastExpr 0x13c2970 <col:50> 'void *' <BitCast>
| | |         | `-ImplicitCastExpr 0x13c2958 <col:50> 'std::char_traits<char>::char_type *' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c2808 <col:50> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x13c04f8 '__s' 'std::char_traits<char>::char_type *'
| | |         |-ImplicitCastExpr 0x13c29a0 <col:55> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x13c2988 <col:55> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x13c2828 <col:55> 'std::char_traits<char>::char_type':'char' lvalue ParmVar 0x13c05e8 '__a' 'std::char_traits<char>::char_type':'char'
| | |         `-ImplicitCastExpr 0x13c29b8 <col:60> 'std::size_t':'unsigned long' <LValueToRValue>
| | |           `-DeclRefExpr 0x13c2848 <col:60> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c0570 '__n' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13c0940 <line:383:7, line:385:45> line:384:7 constexpr to_char_type 'std::char_traits<char>::char_type (const std::char_traits<char>::int_type &) noexcept' static
| | | |-ParmVarDecl 0x13c0848 <col:20, col:36> col:36 used __c 'const std::char_traits<char>::int_type &'
| | | `-CompoundStmt 0x13c2ae0 <line:385:7, col:45>
| | |   `-ReturnStmt 0x13c2ad0 <col:9, col:42>
| | |     `-CXXStaticCastExpr 0x13c2aa0 <col:16, col:42> 'std::char_traits<char>::char_type':'char' static_cast<std::char_traits<char>::char_type> <NoOp>
| | |       `-ImplicitCastExpr 0x13c2a88 <col:39> 'std::char_traits<char>::char_type':'char' <IntegralCast> part_of_explicit_cast
| | |         `-ImplicitCastExpr 0x13c2a70 <col:39> 'std::char_traits<char>::int_type':'int' <LValueToRValue> part_of_explicit_cast
| | |           `-DeclRefExpr 0x13c2a40 <col:39> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x13c0848 '__c' 'const std::char_traits<char>::int_type &'
| | |-CXXMethodDecl 0x13c0af0 <line:389:7, line:391:72> line:390:7 constexpr to_int_type 'std::char_traits<char>::int_type (const std::char_traits<char>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13c09f8 <col:19, col:36> col:36 used __c 'const std::char_traits<char>::char_type &'
| | | `-CompoundStmt 0x13c2bf8 <line:391:7, col:72>
| | |   `-ReturnStmt 0x13c2be8 <col:9, col:69>
| | |     `-CXXStaticCastExpr 0x13c2bb8 <col:16, col:69> 'std::char_traits<char>::int_type':'int' static_cast<std::char_traits<char>::int_type> <NoOp>
| | |       `-ImplicitCastExpr 0x13c2ba0 <col:38, col:68> 'std::char_traits<char>::int_type':'int' <IntegralCast> part_of_explicit_cast
| | |         `-CXXStaticCastExpr 0x13c2b60 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |           `-ImplicitCastExpr 0x13c2b48 <col:65> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |             `-ImplicitCastExpr 0x13c2b30 <col:65> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| | |               `-DeclRefExpr 0x13c2af8 <col:65> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x13c09f8 '__c' 'const std::char_traits<char>::char_type &'
| | |-CXXMethodDecl 0x13c0d40 <line:393:7, line:395:30> line:394:7 constexpr eq_int_type 'bool (const std::char_traits<char>::int_type &, const std::char_traits<char>::int_type &) noexcept' static
| | | |-ParmVarDecl 0x13c0ba8 <col:19, col:35> col:35 used __c1 'const std::char_traits<char>::int_type &'
| | | |-ParmVarDecl 0x13c0c20 <col:41, col:57> col:57 used __c2 'const std::char_traits<char>::int_type &'
| | | `-CompoundStmt 0x13c2cb0 <line:395:7, col:30>
| | |   `-ReturnStmt 0x13c2ca0 <col:9, col:24>
| | |     `-BinaryOperator 0x13c2c80 <col:16, col:24> 'bool' '=='
| | |       |-ImplicitCastExpr 0x13c2c50 <col:16> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x13c2c10 <col:16> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x13c0ba8 '__c1' 'const std::char_traits<char>::int_type &'
| | |       `-ImplicitCastExpr 0x13c2c68 <col:24> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| | |         `-DeclRefExpr 0x13c2c30 <col:24> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x13c0c20 '__c2' 'const std::char_traits<char>::int_type &'
| | |-CXXMethodDecl 0x13c0e40 <line:397:7, line:399:59> line:398:7 used constexpr eof 'std::char_traits<char>::int_type () noexcept' static
| | | `-CompoundStmt 0x13c2d50 <line:399:7, col:59>
| | |   `-ReturnStmt 0x13c2d40 <col:9, col:56>
| | |     `-CXXStaticCastExpr 0x13c2d10 <col:16, col:56> 'std::char_traits<char>::int_type':'int' static_cast<std::char_traits<char>::int_type> <NoOp>
| | |       `-UnaryOperator 0x13c2ce8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:1589:28, col:29> 'int' prefix '-'
| | |         `-IntegerLiteral 0x13c2cc8 <col:29> 'int' 1
| | `-CXXMethodDecl 0x13c0ff0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:401:7, line:403:42> line:402:7 constexpr not_eof 'std::char_traits<char>::int_type (const std::char_traits<char>::int_type &) noexcept' static
| |   |-ParmVarDecl 0x13c0ef0 <col:15, col:31> col:31 used __c 'const std::char_traits<char>::int_type &'
| |   `-CompoundStmt 0x13c2f30 <line:403:7, col:42>
| |     `-ReturnStmt 0x13c2f20 <col:9, col:37>
| |       `-ConditionalOperator 0x13c2ef0 <col:16, col:37> 'int'
| |         |-ParenExpr 0x13c2e78 <col:16, col:29> 'bool'
| |         | `-BinaryOperator 0x13c2e58 <col:17, col:28> 'bool' '=='
| |         |   |-ImplicitCastExpr 0x13c2e40 <col:17> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| |         |   | `-DeclRefExpr 0x13c2d68 <col:17> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x13c0ef0 '__c' 'const std::char_traits<char>::int_type &'
| |         |   `-CallExpr 0x13c2e20 <col:24, col:28> 'std::char_traits<char>::int_type':'int'
| |         |     `-ImplicitCastExpr 0x13c2e08 <col:24> 'std::char_traits<char>::int_type (*)() noexcept' <FunctionToPointerDecay>
| |         |       `-DeclRefExpr 0x13c2d88 <col:24> 'std::char_traits<char>::int_type () noexcept' lvalue CXXMethod 0x13c0e40 'eof' 'std::char_traits<char>::int_type () noexcept'
| |         |-IntegerLiteral 0x13c2e98 <col:33> 'int' 0
| |         `-ImplicitCastExpr 0x13c2ed8 <col:37> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| |           `-DeclRefExpr 0x13c2eb8 <col:37> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x13c0ef0 '__c' 'const std::char_traits<char>::int_type &'
| `-ClassTemplateSpecializationDecl 0x13c2f70 prev 0x10a96a8 <line:409:3, line:511:3> line:410:12 struct char_traits definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-TemplateArgument type 'wchar_t'
|   |-CXXRecordDecl 0x13c3168 <col:5, col:12> col:12 implicit struct char_traits
|   |-TypedefDecl 0x13c3208 <line:412:7, col:33> col:33 referenced char_type 'wchar_t'
|   | `-BuiltinType 0xffd6f0 'wchar_t'
|   |-TypedefDecl 0x13c3270 <line:413:7, col:33> col:33 referenced int_type 'wint_t':'unsigned int'
|   | `-TypedefType 0x10d6020 'wint_t' sugar
|   |   |-Typedef 0x10afcb8 'wint_t'
|   |   `-BuiltinType 0xffd2b0 'unsigned int'
|   |-TypedefDecl 0x13c32d8 <line:414:7, col:33> col:33 referenced off_type 'std::streamoff':'long'
|   | `-TypedefType 0x10f4460 'std::streamoff' sugar
|   |   |-Typedef 0x10f3c78 'streamoff'
|   |   `-BuiltinType 0xffd230 'long'
|   |-TypedefDecl 0x13c3360 <line:415:7, col:33> col:33 referenced pos_type 'std::wstreampos':'std::fpos<__mbstate_t>'
|   | `-TypedefType 0x13c3330 'std::wstreampos' sugar
|   |   |-Typedef 0x10f8f70 'wstreampos'
|   |   `-TemplateSpecializationType 0x10f8ed0 'fpos<mbstate_t>' sugar fpos
|   |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   |     `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
|   |       `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
|   |-TypedefDecl 0x13c33c8 <line:416:7, col:33> col:33 state_type 'mbstate_t':'__mbstate_t'
|   | `-TypedefType 0x10d63b0 'mbstate_t' sugar
|   |   |-Typedef 0x10c5e60 'mbstate_t'
|   |   `-TypedefType 0x10b02c0 '__mbstate_t' sugar
|   |     |-Typedef 0x10b0248 '__mbstate_t'
|   |     `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
|   |       `-RecordType 0x10afda0 '__mbstate_t'
|   |         `-CXXRecord 0x10afd10 ''
|   |-CXXMethodDecl 0x13c36c0 <line:418:7, line:420:22> line:419:7 used assign 'void (std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13c34a8 <col:14, col:25> col:25 used __c1 'std::char_traits<wchar_t>::char_type &'
|   | |-ParmVarDecl 0x13c3578 <col:31, col:48> col:48 used __c2 'const std::char_traits<wchar_t>::char_type &'
|   | `-CompoundStmt 0x13c6c48 <line:420:7, col:22>
|   |   `-BinaryOperator 0x13c6c28 <col:9, col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue '='
|   |     |-DeclRefExpr 0x13c6bd0 <col:9> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue ParmVar 0x13c34a8 '__c1' 'std::char_traits<wchar_t>::char_type &'
|   |     `-ImplicitCastExpr 0x13c6c10 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |       `-DeclRefExpr 0x13c6bf0 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c3578 '__c2' 'const std::char_traits<wchar_t>::char_type &'
|   |-CXXMethodDecl 0x13c3910 <line:422:7, line:424:30> line:423:7 constexpr eq 'bool (const std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13c3780 <col:10, col:27> col:27 used __c1 'const std::char_traits<wchar_t>::char_type &'
|   | |-ParmVarDecl 0x13c37f8 <col:33, col:50> col:50 used __c2 'const std::char_traits<wchar_t>::char_type &'
|   | `-CompoundStmt 0x13c6d30 <line:424:7, col:30>
|   |   `-ReturnStmt 0x13c6d20 <col:9, col:24>
|   |     `-BinaryOperator 0x13c6d00 <col:16, col:24> 'bool' '=='
|   |       |-ImplicitCastExpr 0x13c6cd0 <col:16> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x13c6ca0 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13c6c60 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c3780 '__c1' 'const std::char_traits<wchar_t>::char_type &'
|   |       `-ImplicitCastExpr 0x13c6ce8 <col:24> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x13c6cb8 <col:24> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c6c80 <col:24> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c37f8 '__c2' 'const std::char_traits<wchar_t>::char_type &'
|   |-CXXMethodDecl 0x13c3ae8 <line:426:7, line:428:29> line:427:7 constexpr lt 'bool (const std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13c39d0 <col:10, col:27> col:27 used __c1 'const std::char_traits<wchar_t>::char_type &'
|   | |-ParmVarDecl 0x13c3a48 <col:33, col:50> col:50 used __c2 'const std::char_traits<wchar_t>::char_type &'
|   | `-CompoundStmt 0x13c6e18 <line:428:7, col:29>
|   |   `-ReturnStmt 0x13c6e08 <col:9, col:23>
|   |     `-BinaryOperator 0x13c6de8 <col:16, col:23> 'bool' '<'
|   |       |-ImplicitCastExpr 0x13c6db8 <col:16> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x13c6d88 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13c6d48 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c39d0 '__c1' 'const std::char_traits<wchar_t>::char_type &'
|   |       `-ImplicitCastExpr 0x13c6dd0 <col:23> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x13c6da0 <col:23> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c6d68 <col:23> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c3a48 '__c2' 'const std::char_traits<wchar_t>::char_type &'
|   |-CXXMethodDecl 0x13c3db0 <line:430:7, line:442:7> line:431:7 compare 'int (const std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13c3bd8 <col:15, col:32> col:32 used __s1 'const std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c3c50 <col:38, col:55> col:55 used __s2 'const std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c3cc8 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13c70e0 <line:432:7, line:442:7>
|   |   |-IfStmt 0x13c6ef0 <line:433:2, line:434:11>
|   |   | |-BinaryOperator 0x13c6ea0 <line:433:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13c6e70 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13c6e30 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c3cc8 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13c6e88 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13c6e50 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13c6ee0 <line:434:4, col:11>
|   |   |   `-IntegerLiteral 0x13c6ec0 <col:11> 'int' 0
|   |   `-ReturnStmt 0x13c70d0 <line:441:2, col:32>
|   |     `-CallExpr 0x13c7050 <col:9, col:32> 'int'
|   |       |-ImplicitCastExpr 0x13c7038 <col:9> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c6fb0 <col:9> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x10d5448 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x10f0110 'wmemcmp')
|   |       |-ImplicitCastExpr 0x13c7088 <col:17> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c6f50 <col:17> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c3bd8 '__s1' 'const std::char_traits<wchar_t>::char_type *'
|   |       |-ImplicitCastExpr 0x13c70a0 <col:23> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c6f70 <col:23> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c3c50 '__s2' 'const std::char_traits<wchar_t>::char_type *'
|   |       `-ImplicitCastExpr 0x13c70b8 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c6f90 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c3cc8 '__n' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13c3f38 <line:444:7, line:452:7> line:445:7 length 'std::size_t (const std::char_traits<wchar_t>::char_type *)' static
|   | |-ParmVarDecl 0x13c3e78 <col:14, col:31> col:31 used __s 'const std::char_traits<wchar_t>::char_type *'
|   | `-CompoundStmt 0x13c7250 <line:446:7, line:452:7>
|   |   `-ReturnStmt 0x13c7240 <line:451:2, col:19>
|   |     `-CallExpr 0x13c7200 <col:9, col:19> 'size_t':'unsigned long'
|   |       |-ImplicitCastExpr 0x13c71e8 <col:9> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c7168 <col:9> 'size_t (const wchar_t *) throw()' lvalue Function 0x10d3070 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x10eefd0 'wcslen')
|   |       `-ImplicitCastExpr 0x13c7228 <col:16> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c7148 <col:16> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c3e78 '__s' 'const std::char_traits<wchar_t>::char_type *'
|   |-CXXMethodDecl 0x13c5a38 <line:454:7, line:466:7> line:455:7 find 'const std::char_traits<wchar_t>::char_type *(const std::char_traits<wchar_t>::char_type *, std::size_t, const std::char_traits<wchar_t>::char_type &)' static
|   | |-ParmVarDecl 0x13c3ff0 <col:12, col:29> col:29 used __s 'const std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c4068 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
|   | |-ParmVarDecl 0x13c40e0 <col:46, col:63> col:63 used __a 'const std::char_traits<wchar_t>::char_type &'
|   | `-CompoundStmt 0x13c74f0 <line:456:7, line:466:7>
|   |   |-IfStmt 0x13c7340 <line:457:2, line:458:11>
|   |   | |-BinaryOperator 0x13c72d8 <line:457:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13c72a8 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13c7268 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c4068 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13c72c0 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13c7288 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13c7330 <line:458:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13c7318 <col:11> 'const std::char_traits<wchar_t>::char_type *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x13c72f8 <col:11> 'int' 0
|   |   `-ReturnStmt 0x13c74e0 <line:465:2, col:30>
|   |     `-ImplicitCastExpr 0x13c74c8 <col:9, col:30> 'const std::char_traits<wchar_t>::char_type *' <NoOp>
|   |       `-CallExpr 0x13c7448 <col:9, col:30> 'wchar_t *'
|   |         |-ImplicitCastExpr 0x13c7430 <col:9> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13c7408 <col:9> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x10d5178 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x10f07f0 'wmemchr')
|   |         |-ImplicitCastExpr 0x13c7480 <col:17> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x13c73a8 <col:17> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c3ff0 '__s' 'const std::char_traits<wchar_t>::char_type *'
|   |         |-ImplicitCastExpr 0x13c7498 <col:22> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |         | `-DeclRefExpr 0x13c73c8 <col:22> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c40e0 '__a' 'const std::char_traits<wchar_t>::char_type &'
|   |         `-ImplicitCastExpr 0x13c74b0 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c73e8 <col:27> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c4068 '__n' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13c5cf8 <line:468:7, line:474:7> line:469:7 move 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13c5b28 <col:12, col:23> col:23 used __s1 'std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c5ba0 <col:29, col:46> col:46 used __s2 'const std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c5c18 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13c77d0 <line:470:7, line:474:7>
|   |   |-IfStmt 0x13c75e8 <line:471:2, line:472:11>
|   |   | |-BinaryOperator 0x13c7580 <line:471:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13c7550 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13c7510 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c5c18 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13c7568 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13c7530 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13c75d8 <line:472:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13c75c0 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c75a0 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5b28 '__s1' 'std::char_traits<wchar_t>::char_type *'
|   |   `-ReturnStmt 0x13c77c0 <line:473:2, col:33>
|   |     `-CallExpr 0x13c7740 <col:9, col:33> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x13c7728 <col:9> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c76a8 <col:9> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x10d59f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x10f0270 'wmemmove')
|   |       |-ImplicitCastExpr 0x13c7778 <col:18> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7648 <col:18> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5b28 '__s1' 'std::char_traits<wchar_t>::char_type *'
|   |       |-ImplicitCastExpr 0x13c7790 <col:24> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7668 <col:24> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5ba0 '__s2' 'const std::char_traits<wchar_t>::char_type *'
|   |       `-ImplicitCastExpr 0x13c77a8 <col:30> 'std::size_t':'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c7688 <col:30> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c5c18 '__n' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13c5f50 <line:476:7, line:482:7> line:477:7 used copy 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13c5dc0 <col:12, col:23> col:23 used __s1 'std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c5e38 <col:29, col:46> col:46 used __s2 'const std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c5eb0 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13c7a80 <line:478:7, line:482:7>
|   |   |-IfStmt 0x13c78c8 <line:479:2, line:480:11>
|   |   | |-BinaryOperator 0x13c7860 <line:479:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13c7830 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13c77f0 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c5eb0 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13c7848 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13c7810 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13c78b8 <line:480:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13c78a0 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c7880 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5dc0 '__s1' 'std::char_traits<wchar_t>::char_type *'
|   |   `-ReturnStmt 0x13c7a70 <line:481:2, col:32>
|   |     `-CallExpr 0x13c79f0 <col:9, col:32> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x13c79d8 <col:9> 'wchar_t *(*)(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c7988 <col:9> 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' lvalue Function 0x10d5718 'wmemcpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' (UsingShadow 0x10f01c0 'wmemcpy')
|   |       |-ImplicitCastExpr 0x13c7a28 <col:17> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7928 <col:17> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5dc0 '__s1' 'std::char_traits<wchar_t>::char_type *'
|   |       |-ImplicitCastExpr 0x13c7a40 <col:23> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7948 <col:23> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c5e38 '__s2' 'const std::char_traits<wchar_t>::char_type *'
|   |       `-ImplicitCastExpr 0x13c7a58 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c7968 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c5eb0 '__n' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13c6228 <line:484:7, line:490:7> line:485:7 assign 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, std::size_t, std::char_traits<wchar_t>::char_type)' static
|   | |-ParmVarDecl 0x13c6018 <col:14, col:25> col:25 used __s 'std::char_traits<wchar_t>::char_type *'
|   | |-ParmVarDecl 0x13c6090 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
|   | |-ParmVarDecl 0x13c6108 <col:42, col:52> col:52 used __a 'std::char_traits<wchar_t>::char_type':'wchar_t'
|   | `-CompoundStmt 0x13c7d60 <line:486:7, line:490:7>
|   |   |-IfStmt 0x13c7b78 <line:487:2, line:488:11>
|   |   | |-BinaryOperator 0x13c7b10 <line:487:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13c7ae0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13c7aa0 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c6090 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13c7af8 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13c7ac0 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13c7b68 <line:488:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13c7b50 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c7b30 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c6018 '__s' 'std::char_traits<wchar_t>::char_type *'
|   |   `-ReturnStmt 0x13c7d50 <line:489:2, col:30>
|   |     `-CallExpr 0x13c7cd0 <col:9, col:30> 'wchar_t *'
|   |       |-ImplicitCastExpr 0x13c7cb8 <col:9> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c7c38 <col:9> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x10d5ce8 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x10f0320 'wmemset')
|   |       |-ImplicitCastExpr 0x13c7d08 <col:17> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7bd8 <col:17> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x13c6018 '__s' 'std::char_traits<wchar_t>::char_type *'
|   |       |-ImplicitCastExpr 0x13c7d20 <col:22> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7bf8 <col:22> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue ParmVar 0x13c6108 '__a' 'std::char_traits<wchar_t>::char_type':'wchar_t'
|   |       `-ImplicitCastExpr 0x13c7d38 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c7c18 <col:27> 'std::size_t':'unsigned long' lvalue ParmVar 0x13c6090 '__n' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13c6460 <line:492:7, line:494:32> line:493:7 constexpr to_char_type 'std::char_traits<wchar_t>::char_type (const std::char_traits<wchar_t>::int_type &) noexcept' static
|   | |-ParmVarDecl 0x13c6368 <col:20, col:36> col:36 used __c 'const std::char_traits<wchar_t>::int_type &'
|   | `-CompoundStmt 0x13c7e18 <line:494:7, col:32>
|   |   `-ReturnStmt 0x13c7e08 <col:9, col:29>
|   |     `-CXXFunctionalCastExpr 0x13c7de0 <col:16, col:29> 'std::char_traits<wchar_t>::char_type':'wchar_t' functional cast to std::char_traits<wchar_t>::char_type <NoOp>
|   |       `-ImplicitCastExpr 0x13c7dc8 <col:26> 'std::char_traits<wchar_t>::char_type':'wchar_t' <IntegralCast> part_of_explicit_cast
|   |         `-ImplicitCastExpr 0x13c7db0 <col:26> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x13c7d90 <col:26> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x13c6368 '__c' 'const std::char_traits<wchar_t>::int_type &'
|   |-CXXMethodDecl 0x13c6610 <line:496:7, line:498:31> line:497:7 constexpr to_int_type 'std::char_traits<wchar_t>::int_type (const std::char_traits<wchar_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13c6518 <col:19, col:36> col:36 used __c 'const std::char_traits<wchar_t>::char_type &'
|   | `-CompoundStmt 0x13c7ec8 <line:498:7, col:31>
|   |   `-ReturnStmt 0x13c7eb8 <col:9, col:28>
|   |     `-CXXFunctionalCastExpr 0x13c7e90 <col:16, col:28> 'std::char_traits<wchar_t>::int_type':'unsigned int' functional cast to std::char_traits<wchar_t>::int_type <NoOp>
|   |       `-ImplicitCastExpr 0x13c7e78 <col:25> 'std::char_traits<wchar_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |         `-ImplicitCastExpr 0x13c7e60 <col:25> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x13c7e40 <col:25> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x13c6518 '__c' 'const std::char_traits<wchar_t>::char_type &'
|   |-CXXMethodDecl 0x13c6860 <line:500:7, line:502:30> line:501:7 used constexpr eq_int_type 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' static
|   | |-ParmVarDecl 0x13c66c8 <col:19, col:35> col:35 used __c1 'const std::char_traits<wchar_t>::int_type &'
|   | |-ParmVarDecl 0x13c6740 <col:41, col:57> col:57 used __c2 'const std::char_traits<wchar_t>::int_type &'
|   | `-CompoundStmt 0x13c7f80 <line:502:7, col:30>
|   |   `-ReturnStmt 0x13c7f70 <col:9, col:24>
|   |     `-BinaryOperator 0x13c7f50 <col:16, col:24> 'bool' '=='
|   |       |-ImplicitCastExpr 0x13c7f20 <col:16> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13c7ee0 <col:16> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x13c66c8 '__c1' 'const std::char_traits<wchar_t>::int_type &'
|   |       `-ImplicitCastExpr 0x13c7f38 <col:24> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x13c7f00 <col:24> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x13c6740 '__c2' 'const std::char_traits<wchar_t>::int_type &'
|   |-CXXMethodDecl 0x13c6960 <line:504:7, line:506:45> line:505:7 used constexpr eof 'std::char_traits<wchar_t>::int_type () noexcept' static
|   | `-CompoundStmt 0x13c8028 <line:506:7, col:45>
|   |   `-ReturnStmt 0x13c8018 <col:9, col:42>
|   |     `-CXXStaticCastExpr 0x13c7fe8 <col:16, col:42> 'std::char_traits<wchar_t>::int_type':'unsigned int' static_cast<std::char_traits<wchar_t>::int_type> <NoOp>
|   |       `-ParenExpr 0x13c7fb8 </usr/include/wchar.h:64:15, col:27> 'unsigned int'
|   |         `-IntegerLiteral 0x13c7f98 <col:16> 'unsigned int' 4294967295
|   `-CXXMethodDecl 0x13c6b10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:508:7, line:510:51> line:509:7 constexpr not_eof 'std::char_traits<wchar_t>::int_type (const std::char_traits<wchar_t>::int_type &) noexcept' static
|     |-ParmVarDecl 0x13c6a10 <col:15, col:31> col:31 used __c 'const std::char_traits<wchar_t>::int_type &'
|     `-CompoundStmt 0x13c82b0 <line:510:7, col:51>
|       `-ReturnStmt 0x13c82a0 <col:9, col:46>
|         `-ExprWithCleanups 0x13c8288 <col:16, col:46> 'unsigned int'
|           `-ConditionalOperator 0x13c8258 <col:16, col:46> 'unsigned int'
|             |-CallExpr 0x13c81a0 <col:16, col:38> 'bool'
|             | |-ImplicitCastExpr 0x13c8188 <col:16> 'bool (*)(const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x13c8040 <col:16> 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' lvalue CXXMethod 0x13c6860 'eq_int_type' 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept'
|             | |-DeclRefExpr 0x13c8060 <col:28> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x13c6a10 '__c' 'const std::char_traits<wchar_t>::int_type &'
|             | `-MaterializeTemporaryExpr 0x13c81d0 <col:33, col:37> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue
|             |   `-CallExpr 0x13c8110 <col:33, col:37> 'std::char_traits<wchar_t>::int_type':'unsigned int'
|             |     `-ImplicitCastExpr 0x13c80f8 <col:33> 'std::char_traits<wchar_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
|             |       `-DeclRefExpr 0x13c8080 <col:33> 'std::char_traits<wchar_t>::int_type () noexcept' lvalue CXXMethod 0x13c6960 'eof' 'std::char_traits<wchar_t>::int_type () noexcept'
|             |-ImplicitCastExpr 0x13c8240 <col:42> 'unsigned int' <IntegralCast>
|             | `-IntegerLiteral 0x13c81e8 <col:42> 'int' 0
|             `-ImplicitCastExpr 0x13c8228 <col:46> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
|               `-DeclRefExpr 0x13c8208 <col:46> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x13c6a10 '__c' 'const std::char_traits<wchar_t>::int_type &'
|-LinkageSpecDecl 0x13c1930 <line:356:39> col:39 implicit C
| `-FunctionDecl 0x13c1980 <col:39> col:39 implicit used __builtin_memchr 'void *(const void *, int, unsigned long) noexcept' extern
|   |-ParmVarDecl 0x13c1a20 <<invalid sloc>> <invalid sloc> 'const void *'
|   |-ParmVarDecl 0x13c1a88 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0x13c1af0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   `-NoThrowAttr 0x13c1b70 <col:39> Implicit
|-LinkageSpecDecl 0x13c2260 <line:372:33> col:33 implicit C
| `-FunctionDecl 0x13c22b0 <col:33> col:33 implicit used __builtin_memcpy 'void *(void *, const void *, unsigned long) noexcept' extern
|   |-ParmVarDecl 0x13c2350 <<invalid sloc>> <invalid sloc> 'void *'
|   |-ParmVarDecl 0x13c23b8 <<invalid sloc>> <invalid sloc> 'const void *'
|   |-ParmVarDecl 0x13c2420 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   `-NoThrowAttr 0x13c24a0 <col:33> Implicit
|-TypedefDecl 0x13c82e0 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 referenced __u_char 'unsigned char'
| `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13c8350 <line:32:1, col:28> col:28 referenced __u_short 'unsigned short'
| `-BuiltinType 0xffd290 'unsigned short'
|-TypedefDecl 0x13c83c0 <line:33:1, col:22> col:22 referenced __u_int 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c8430 <line:34:1, col:27> col:27 referenced __u_long 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c84a0 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0xffd1d0 'signed char'
|-TypedefDecl 0x13c8510 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13c8580 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0xffd1f0 'short'
|-TypedefDecl 0x13c85f0 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0xffd290 'unsigned short'
|-TypedefDecl 0x13c8660 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13c86d0 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c8740 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c87b0 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c8840 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x13c8810 '__int8_t' sugar
|   |-Typedef 0x13c84a0 '__int8_t'
|   `-BuiltinType 0xffd1d0 'signed char'
|-TypedefDecl 0x13c88d0 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x13c88a0 '__uint8_t' sugar
|   |-Typedef 0x13c8510 '__uint8_t'
|   `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13c8960 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-TypedefType 0x13c8930 '__int16_t' sugar
|   |-Typedef 0x13c8580 '__int16_t'
|   `-BuiltinType 0xffd1f0 'short'
|-TypedefDecl 0x13c89f0 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x13c89c0 '__uint16_t' sugar
|   |-Typedef 0x13c85f0 '__uint16_t'
|   `-BuiltinType 0xffd290 'unsigned short'
|-TypedefDecl 0x13c8a80 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-TypedefType 0x13c8a50 '__int32_t' sugar
|   |-Typedef 0x13c8660 '__int32_t'
|   `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13c8b10 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x13c8ae0 '__uint32_t' sugar
|   |-Typedef 0x13c86d0 '__uint32_t'
|   `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c8ba0 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-TypedefType 0x13c8b70 '__int64_t' sugar
|   |-Typedef 0x13c8740 '__int64_t'
|   `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c8c30 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x13c8c00 '__uint64_t' sugar
|   |-Typedef 0x13c87b0 '__uint64_t'
|   `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c8ca0 <line:63:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c8d10 <line:64:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c8d80 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c8df0 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c8e60 <line:137:22, line:145:25> col:25 referenced __dev_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c8ed0 <line:137:22, line:146:25> col:25 referenced __uid_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c8f40 <line:137:22, line:147:25> col:25 referenced __gid_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c8fb0 <line:137:22, line:148:25> col:25 referenced __ino_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c9020 <line:137:22, line:149:27> col:27 referenced __ino64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c9090 <line:137:22, line:150:26> col:26 referenced __mode_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c9100 <line:137:22, line:151:27> col:27 referenced __nlink_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c9170 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c91e0 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c9250 <line:137:22, line:154:25> col:25 referenced __pid_t 'int'
| `-BuiltinType 0xffd210 'int'
|-CXXRecordDecl 0x13c92a8 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-FieldDecl 0x13c9470 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x13c9538 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x13c94e0 'struct __fsid_t' sugar
|   `-RecordType 0x13c9340 '__fsid_t'
|     `-CXXRecord 0x13c92a8 ''
|-TypedefDecl 0x13c95c0 <line:137:22, line:156:27> col:27 referenced __clock_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c9630 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c96a0 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13c9710 <line:137:22, line:159:24> col:24 referenced __id_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c9780 <line:137:22, line:160:26> col:26 referenced __time_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c97f0 <line:137:22, line:161:30> col:30 referenced __useconds_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13c9860 <line:137:22, line:162:31> col:31 referenced __suseconds_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13c98d0 <line:137:22, line:164:27> col:27 referenced __daddr_t 'int'
| `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13dcf10 <line:137:22, line:165:25> col:25 referenced __key_t 'int'
| `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13dcf80 <line:137:22, line:168:29> col:29 referenced __clockid_t 'int'
| `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13dcff0 <line:137:22, line:171:27> col:27 referenced __timer_t 'void *'
| `-PointerType 0xffd970 'void *'
|   `-BuiltinType 0xffd170 'void'
|-TypedefDecl 0x13dd060 <line:137:22, line:174:29> col:29 referenced __blksize_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd0d0 <line:137:22, line:179:28> col:28 referenced __blkcnt_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd140 <line:137:22, line:180:30> col:30 referenced __blkcnt64_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd1b0 <line:137:22, line:183:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13dd220 <line:137:22, line:184:32> col:32 referenced __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13dd290 <line:137:22, line:187:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13dd300 <line:137:22, line:188:32> col:32 referenced __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13dd370 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd3e0 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd450 <line:137:22, line:196:33> col:33 referenced __syscall_slong_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd4c0 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13dd550 <line:202:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| `-TypedefType 0x13dd520 '__off64_t' sugar
|   |-Typedef 0x13c91e0 '__off64_t'
|   `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd5c0 <line:203:1, col:15> col:15 referenced __caddr_t 'char *'
| `-PointerType 0xffde30 'char *'
|   `-BuiltinType 0xffd1b0 'char'
|-TypedefDecl 0x13dd630 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd6a0 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13dd710 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13dd778 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x13c8810 '__int8_t' sugar
|   |-Typedef 0x13c84a0 '__int8_t'
|   `-BuiltinType 0xffd1d0 'signed char'
|-TypedefDecl 0x13dd7e0 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x13c8930 '__int16_t' sugar
|   |-Typedef 0x13c8580 '__int16_t'
|   `-BuiltinType 0xffd1f0 'short'
|-TypedefDecl 0x13dd848 <line:26:1, col:19> col:19 referenced int32_t '__int32_t':'int'
| `-TypedefType 0x13c8a50 '__int32_t' sugar
|   |-Typedef 0x13c8660 '__int32_t'
|   `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13dd8b0 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x13c8b70 '__int64_t' sugar
|   |-Typedef 0x13c8740 '__int64_t'
|   `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13dd918 </usr/include/x86_64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x13c88a0 '__uint8_t' sugar
|   |-Typedef 0x13c8510 '__uint8_t'
|   `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13dd980 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x13c89c0 '__uint16_t' sugar
|   |-Typedef 0x13c85f0 '__uint16_t'
|   `-BuiltinType 0xffd290 'unsigned short'
|-TypedefDecl 0x13dd9e8 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x13c8ae0 '__uint32_t' sugar
|   |-Typedef 0x13c86d0 '__uint32_t'
|   `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13dda50 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x13c8c00 '__uint64_t' sugar
|   |-Typedef 0x13c87b0 '__uint64_t'
|   `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13ddae0 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0x13ddab0 '__int_least8_t' sugar
|   |-Typedef 0x13c8840 '__int_least8_t'
|   `-TypedefType 0x13c8810 '__int8_t' sugar
|     |-Typedef 0x13c84a0 '__int8_t'
|     `-BuiltinType 0xffd1d0 'signed char'
|-TypedefDecl 0x13ddb70 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0x13ddb40 '__int_least16_t' sugar
|   |-Typedef 0x13c8960 '__int_least16_t'
|   `-TypedefType 0x13c8930 '__int16_t' sugar
|     |-Typedef 0x13c8580 '__int16_t'
|     `-BuiltinType 0xffd1f0 'short'
|-TypedefDecl 0x13ddc00 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0x13ddbd0 '__int_least32_t' sugar
|   |-Typedef 0x13c8a80 '__int_least32_t'
|   `-TypedefType 0x13c8a50 '__int32_t' sugar
|     |-Typedef 0x13c8660 '__int32_t'
|     `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x13ddc90 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0x13ddc60 '__int_least64_t' sugar
|   |-Typedef 0x13c8ba0 '__int_least64_t'
|   `-TypedefType 0x13c8b70 '__int64_t' sugar
|     |-Typedef 0x13c8740 '__int64_t'
|     `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13ddd20 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0x13ddcf0 '__uint_least8_t' sugar
|   |-Typedef 0x13c88d0 '__uint_least8_t'
|   `-TypedefType 0x13c88a0 '__uint8_t' sugar
|     |-Typedef 0x13c8510 '__uint8_t'
|     `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13dddb0 <line:50:1, col:26> col:26 referenced uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0x13ddd80 '__uint_least16_t' sugar
|   |-Typedef 0x13c89f0 '__uint_least16_t'
|   `-TypedefType 0x13c89c0 '__uint16_t' sugar
|     |-Typedef 0x13c85f0 '__uint16_t'
|     `-BuiltinType 0xffd290 'unsigned short'
|-TypedefDecl 0x13dde40 <line:51:1, col:26> col:26 referenced uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0x13dde10 '__uint_least32_t' sugar
|   |-Typedef 0x13c8b10 '__uint_least32_t'
|   `-TypedefType 0x13c8ae0 '__uint32_t' sugar
|     |-Typedef 0x13c86d0 '__uint32_t'
|     `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x13dded0 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0x13ddea0 '__uint_least64_t' sugar
|   |-Typedef 0x13c8c30 '__uint_least64_t'
|   `-TypedefType 0x13c8c00 '__uint64_t' sugar
|     |-Typedef 0x13c87b0 '__uint64_t'
|     `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13ddf40 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0xffd1d0 'signed char'
|-TypedefDecl 0x13ddfb0 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13de020 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13de090 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13de100 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0xffd270 'unsigned char'
|-TypedefDecl 0x13de170 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13de1e0 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13de250 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13de2c0 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13de330 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x13de3c0 <line:101:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-TypedefType 0x13de390 '__intmax_t' sugar
|   |-Typedef 0x13c8d80 '__intmax_t'
|   `-BuiltinType 0xffd230 'long'
|-TypedefDecl 0x13de450 <line:102:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x13de420 '__uintmax_t' sugar
|   |-Typedef 0x13c8df0 '__uintmax_t'
|   `-BuiltinType 0xffd2d0 'unsigned long'
|-NamespaceDecl 0x13de4a8 prev 0x13bdb50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cstdint:44:1, line:87:1> line:44:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x13de520 <line:47:3, col:11> col:11 ::int8_t
| |-UsingShadowDecl 0x13de578 <col:11> col:11 implicit Typedef 0x13dd778 'int8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de5d0 <line:48:3, col:11> col:11 ::int16_t
| |-UsingShadowDecl 0x13de628 <col:11> col:11 implicit Typedef 0x13dd7e0 'int16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de680 <line:49:3, col:11> col:11 ::int32_t
| |-UsingShadowDecl 0x13de6d8 <col:11> col:11 implicit Typedef 0x13dd848 'int32_t'
| | `-TypedefType 0x10987d0 'int32_t' sugar
| |   |-Typedef 0x13dd848 'int32_t'
| |   `-TypedefType 0x13c8a50 '__int32_t' sugar
| |     |-Typedef 0x13c8660 '__int32_t'
| |     `-BuiltinType 0xffd210 'int'
| |-UsingDecl 0x13de730 <line:50:3, col:11> col:11 ::int64_t
| |-UsingShadowDecl 0x13de788 <col:11> col:11 implicit Typedef 0x13dd8b0 'int64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de7e0 <line:52:3, col:11> col:11 ::int_fast8_t
| |-UsingShadowDecl 0x13de838 <col:11> col:11 implicit Typedef 0x13ddf40 'int_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de890 <line:53:3, col:11> col:11 ::int_fast16_t
| |-UsingShadowDecl 0x13de8e8 <col:11> col:11 implicit Typedef 0x13ddfb0 'int_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de940 <line:54:3, col:11> col:11 ::int_fast32_t
| |-UsingShadowDecl 0x13de998 <col:11> col:11 implicit Typedef 0x13de020 'int_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13de9f0 <line:55:3, col:11> col:11 ::int_fast64_t
| |-UsingShadowDecl 0x13dea48 <col:11> col:11 implicit Typedef 0x13de090 'int_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13deaa0 <line:57:3, col:11> col:11 ::int_least8_t
| |-UsingShadowDecl 0x13deaf8 <col:11> col:11 implicit Typedef 0x13ddae0 'int_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13deb50 <line:58:3, col:11> col:11 ::int_least16_t
| |-UsingShadowDecl 0x13deba8 <col:11> col:11 implicit Typedef 0x13ddb70 'int_least16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13dec00 <line:59:3, col:11> col:11 ::int_least32_t
| |-UsingShadowDecl 0x13dec58 <col:11> col:11 implicit Typedef 0x13ddc00 'int_least32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13decb0 <line:60:3, col:11> col:11 ::int_least64_t
| |-UsingShadowDecl 0x13ded08 <col:11> col:11 implicit Typedef 0x13ddc90 'int_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13ded60 <line:62:3, col:11> col:11 ::intmax_t
| |-UsingShadowDecl 0x13dedb8 <col:11> col:11 implicit Typedef 0x13de3c0 'intmax_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13dee10 <line:63:3, col:11> col:11 ::intptr_t
| |-UsingShadowDecl 0x13dee68 <col:11> col:11 implicit Typedef 0x13de2c0 'intptr_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13deec0 <line:65:3, col:11> col:11 ::uint8_t
| |-UsingShadowDecl 0x13def18 <col:11> col:11 implicit Typedef 0x13dd918 'uint8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13def70 <line:66:3, col:11> col:11 ::uint16_t
| |-UsingShadowDecl 0x13defc8 <col:11> col:11 implicit Typedef 0x13dd980 'uint16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df020 <line:67:3, col:11> col:11 ::uint32_t
| |-UsingShadowDecl 0x13df078 <col:11> col:11 implicit Typedef 0x13dd9e8 'uint32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df0d0 <line:68:3, col:11> col:11 ::uint64_t
| |-UsingShadowDecl 0x13df128 <col:11> col:11 implicit Typedef 0x13dda50 'uint64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df180 <line:70:3, col:11> col:11 ::uint_fast8_t
| |-UsingShadowDecl 0x13df1d8 <col:11> col:11 implicit Typedef 0x13de100 'uint_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df230 <line:71:3, col:11> col:11 ::uint_fast16_t
| |-UsingShadowDecl 0x13df288 <col:11> col:11 implicit Typedef 0x13de170 'uint_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df2e0 <line:72:3, col:11> col:11 ::uint_fast32_t
| |-UsingShadowDecl 0x13df338 <col:11> col:11 implicit Typedef 0x13de1e0 'uint_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df390 <line:73:3, col:11> col:11 ::uint_fast64_t
| |-UsingShadowDecl 0x13df3e8 <col:11> col:11 implicit Typedef 0x13de250 'uint_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df440 <line:75:3, col:11> col:11 ::uint_least8_t
| |-UsingShadowDecl 0x13df498 <col:11> col:11 implicit Typedef 0x13ddd20 'uint_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df4f0 <line:76:3, col:11> col:11 ::uint_least16_t
| |-UsingShadowDecl 0x13df548 <col:11> col:11 implicit Typedef 0x13dddb0 'uint_least16_t'
| | `-TypedefType 0x13dfc60 'uint_least16_t' sugar
| |   |-Typedef 0x13dddb0 'uint_least16_t'
| |   `-TypedefType 0x13ddd80 '__uint_least16_t' sugar
| |     |-Typedef 0x13c89f0 '__uint_least16_t'
| |     `-TypedefType 0x13c89c0 '__uint16_t' sugar
| |       |-Typedef 0x13c85f0 '__uint16_t'
| |       `-BuiltinType 0xffd290 'unsigned short'
| |-UsingDecl 0x13df5a0 <line:77:3, col:11> col:11 ::uint_least32_t
| |-UsingShadowDecl 0x13df5f8 <col:11> col:11 implicit Typedef 0x13dde40 'uint_least32_t'
| | `-TypedefType 0x13edd00 'uint_least32_t' sugar
| |   |-Typedef 0x13dde40 'uint_least32_t'
| |   `-TypedefType 0x13dde10 '__uint_least32_t' sugar
| |     |-Typedef 0x13c8b10 '__uint_least32_t'
| |     `-TypedefType 0x13c8ae0 '__uint32_t' sugar
| |       |-Typedef 0x13c86d0 '__uint32_t'
| |       `-BuiltinType 0xffd2b0 'unsigned int'
| |-UsingDecl 0x13df650 <line:78:3, col:11> col:11 ::uint_least64_t
| |-UsingShadowDecl 0x13df6a8 <col:11> col:11 implicit Typedef 0x13dded0 'uint_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df700 <line:80:3, col:11> col:11 ::uintmax_t
| |-UsingShadowDecl 0x13df758 <col:11> col:11 implicit Typedef 0x13de450 'uintmax_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x13df7b0 <line:81:3, col:11> col:11 ::uintptr_t
| `-UsingShadowDecl 0x13df808 <col:11> col:11 implicit Typedef 0x13de330 'uintptr_t'
|   `-<<<NULL>>>
|-NamespaceDecl 0x13df878 prev 0x13de4a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:630:1, line:841:1> line:630:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x13df8e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateSpecializationDecl 0x13df968 parent 0x13bdb50 prev 0x10a9888 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/char_traits.h:634:3, line:735:5> line:635:12 struct char_traits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0x13dfb68 <col:5, col:12> col:12 implicit struct char_traits
| | |-TypedefDecl 0x13dfc08 <line:637:7, col:33> col:33 referenced char_type 'char16_t'
| | | `-BuiltinType 0xffd730 'char16_t'
| | |-TypedefDecl 0x13dfc90 <line:639:7, col:33> col:33 referenced int_type 'uint_least16_t':'unsigned short'
| | | `-TypedefType 0x13dfc60 'uint_least16_t' sugar
| | |   |-Typedef 0x13dddb0 'uint_least16_t'
| | |   `-TypedefType 0x13ddd80 '__uint_least16_t' sugar
| | |     |-Typedef 0x13c89f0 '__uint_least16_t'
| | |     `-TypedefType 0x13c89c0 '__uint16_t' sugar
| | |       |-Typedef 0x13c85f0 '__uint16_t'
| | |       `-BuiltinType 0xffd290 'unsigned short'
| | |-TypedefDecl 0x13dfcf8 <line:645:7, col:33> col:33 off_type 'std::streamoff':'long'
| | | `-TypedefType 0x10f4460 'std::streamoff' sugar
| | |   |-Typedef 0x10f3c78 'streamoff'
| | |   `-BuiltinType 0xffd230 'long'
| | |-TypedefDecl 0x13dfd80 <line:646:7, col:33> col:33 pos_type 'std::u16streampos':'std::fpos<__mbstate_t>'
| | | `-TypedefType 0x13dfd50 'std::u16streampos' sugar
| | |   |-Typedef 0x10f90a0 'u16streampos'
| | |   `-TemplateSpecializationType 0x10f8fe0 'fpos<mbstate_t>' sugar fpos
| | |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| | |     `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
| | |       `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
| | |-TypedefDecl 0x13dfde8 <line:647:7, col:33> col:33 state_type 'mbstate_t':'__mbstate_t'
| | | `-TypedefType 0x10d63b0 'mbstate_t' sugar
| | |   |-Typedef 0x10c5e60 'mbstate_t'
| | |   `-TypedefType 0x10b02c0 '__mbstate_t' sugar
| | |     |-Typedef 0x10b0248 '__mbstate_t'
| | |     `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
| | |       `-RecordType 0x10afda0 '__mbstate_t'
| | |         `-CXXRecord 0x10afd10 ''
| | |-CXXMethodDecl 0x13e00e0 <line:649:7, line:651:22> line:650:7 used assign 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13dfec8 <col:14, col:25> col:25 used __c1 'std::char_traits<char16_t>::char_type &'
| | | |-ParmVarDecl 0x13dff98 <col:31, col:48> col:48 used __c2 'const std::char_traits<char16_t>::char_type &'
| | | `-CompoundStmt 0x13eb908 <line:651:7, col:22>
| | |   `-BinaryOperator 0x13eb8e8 <col:9, col:16> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue '='
| | |     |-DeclRefExpr 0x13eb890 <col:9> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue ParmVar 0x13dfec8 '__c1' 'std::char_traits<char16_t>::char_type &'
| | |     `-ImplicitCastExpr 0x13eb8d0 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |       `-DeclRefExpr 0x13eb8b0 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13dff98 '__c2' 'const std::char_traits<char16_t>::char_type &'
| | |-CXXMethodDecl 0x13e0330 <line:653:7, line:655:30> line:654:7 used constexpr eq 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13e01a0 <col:10, col:27> col:27 used __c1 'const std::char_traits<char16_t>::char_type &'
| | | |-ParmVarDecl 0x13e0218 <col:33, col:50> col:50 used __c2 'const std::char_traits<char16_t>::char_type &'
| | | `-CompoundStmt 0x13eb9f0 <line:655:7, col:30>
| | |   `-ReturnStmt 0x13eb9e0 <col:9, col:24>
| | |     `-BinaryOperator 0x13eb9c0 <col:16, col:24> 'bool' '=='
| | |       |-ImplicitCastExpr 0x13eb990 <col:16> 'int' <IntegralCast>
| | |       | `-ImplicitCastExpr 0x13eb960 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13eb920 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13e01a0 '__c1' 'const std::char_traits<char16_t>::char_type &'
| | |       `-ImplicitCastExpr 0x13eb9a8 <col:24> 'int' <IntegralCast>
| | |         `-ImplicitCastExpr 0x13eb978 <col:24> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |           `-DeclRefExpr 0x13eb940 <col:24> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13e0218 '__c2' 'const std::char_traits<char16_t>::char_type &'
| | |-CXXMethodDecl 0x13e0508 <line:657:7, line:659:29> line:658:7 used constexpr lt 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13e03f0 <col:10, col:27> col:27 used __c1 'const std::char_traits<char16_t>::char_type &'
| | | |-ParmVarDecl 0x13e0468 <col:33, col:50> col:50 used __c2 'const std::char_traits<char16_t>::char_type &'
| | | `-CompoundStmt 0x13ebad8 <line:659:7, col:29>
| | |   `-ReturnStmt 0x13ebac8 <col:9, col:23>
| | |     `-BinaryOperator 0x13ebaa8 <col:16, col:23> 'bool' '<'
| | |       |-ImplicitCastExpr 0x13eba78 <col:16> 'int' <IntegralCast>
| | |       | `-ImplicitCastExpr 0x13eba48 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13eba08 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13e03f0 '__c1' 'const std::char_traits<char16_t>::char_type &'
| | |       `-ImplicitCastExpr 0x13eba90 <col:23> 'int' <IntegralCast>
| | |         `-ImplicitCastExpr 0x13eba60 <col:23> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |           `-DeclRefExpr 0x13eba28 <col:23> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13e0468 '__c2' 'const std::char_traits<char16_t>::char_type &'
| | |-CXXMethodDecl 0x13e0840 <line:661:7, line:670:7> line:662:7 compare 'int (const std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13e0628 <col:15, col:32> col:32 used __s1 'const std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13e06a0 <col:38, col:55> col:55 used __s2 'const std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13e0718 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13ec108 <line:663:7, line:670:7>
| | |   |-ForStmt 0x13ec0a0 <line:664:2, line:668:13>
| | |   | |-DeclStmt 0x13ebba0 <line:664:7, col:21>
| | |   | | `-VarDecl 0x13ebb00 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| | |   | |   `-ImplicitCastExpr 0x13ebb88 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| | |   | |     `-IntegerLiteral 0x13ebb68 <col:20> 'int' 0
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x13ebc28 <col:23, col:29> 'bool' '<'
| | |   | | |-ImplicitCastExpr 0x13ebbf8 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13ebbb8 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13ebc10 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x13ebbd8 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13e0718 '__n' 'std::size_t':'unsigned long'
| | |   | |-UnaryOperator 0x13ebc68 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| | |   | | `-DeclRefExpr 0x13ebc48 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   | `-IfStmt 0x13ec078 <line:665:4, line:668:13> has_else
| | |   |   |-CallExpr 0x13ebe30 <line:665:8, col:31> 'bool'
| | |   |   | |-ImplicitCastExpr 0x13ebe18 <col:8> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| | |   |   | | `-DeclRefExpr 0x13ebc80 <col:8> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e0508 'lt' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| | |   |   | |-ArraySubscriptExpr 0x13ebd10 <col:11, col:19> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   |   | | |-ImplicitCastExpr 0x13ebce0 <col:11> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |   | | | `-DeclRefExpr 0x13ebca0 <col:11> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0628 '__s1' 'const std::char_traits<char16_t>::char_type *'
| | |   |   | | `-ImplicitCastExpr 0x13ebcf8 <col:16> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |   | |   `-DeclRefExpr 0x13ebcc0 <col:16> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   |   | `-ArraySubscriptExpr 0x13ebda0 <col:22, col:30> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   |   |   |-ImplicitCastExpr 0x13ebd70 <col:22> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |   |   | `-DeclRefExpr 0x13ebd30 <col:22> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e06a0 '__s2' 'const std::char_traits<char16_t>::char_type *'
| | |   |   |   `-ImplicitCastExpr 0x13ebd88 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |   |     `-DeclRefExpr 0x13ebd50 <col:27> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   |   |-ReturnStmt 0x13ebe98 <line:666:6, col:14>
| | |   |   | `-UnaryOperator 0x13ebe80 <col:13, col:14> 'int' prefix '-'
| | |   |   |   `-IntegerLiteral 0x13ebe60 <col:14> 'int' 1
| | |   |   `-IfStmt 0x13ec060 <line:667:9, line:668:13>
| | |   |     |-CallExpr 0x13ec000 <line:667:13, col:36> 'bool'
| | |   |     | |-ImplicitCastExpr 0x13ebfe8 <col:13> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| | |   |     | | `-DeclRefExpr 0x13ebea8 <col:13> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e0508 'lt' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| | |   |     | |-ArraySubscriptExpr 0x13ebf38 <col:16, col:24> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   |     | | |-ImplicitCastExpr 0x13ebf08 <col:16> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |     | | | `-DeclRefExpr 0x13ebec8 <col:16> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e06a0 '__s2' 'const std::char_traits<char16_t>::char_type *'
| | |   |     | | `-ImplicitCastExpr 0x13ebf20 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |     | |   `-DeclRefExpr 0x13ebee8 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   |     | `-ArraySubscriptExpr 0x13ebfc8 <col:27, col:35> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   |     |   |-ImplicitCastExpr 0x13ebf98 <col:27> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |     |   | `-DeclRefExpr 0x13ebf58 <col:27> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0628 '__s1' 'const std::char_traits<char16_t>::char_type *'
| | |   |     |   `-ImplicitCastExpr 0x13ebfb0 <col:32> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |     |     `-DeclRefExpr 0x13ebf78 <col:32> 'std::size_t':'unsigned long' lvalue Var 0x13ebb00 '__i' 'std::size_t':'unsigned long'
| | |   |     `-ReturnStmt 0x13ec050 <line:668:6, col:13>
| | |   |       `-IntegerLiteral 0x13ec030 <col:13> 'int' 1
| | |   `-ReturnStmt 0x13ec0f8 <line:669:2, col:9>
| | |     `-IntegerLiteral 0x13ec0d8 <col:9> 'int' 0
| | |-CXXMethodDecl 0x13e09f8 <line:672:7, line:679:7> line:673:7 length 'std::size_t (const std::char_traits<char16_t>::char_type *)' static
| | | |-ParmVarDecl 0x13e0908 <col:14, col:31> col:31 used __s 'const std::char_traits<char16_t>::char_type *'
| | | `-CompoundStmt 0x13ec3f0 <line:674:7, line:679:7>
| | |   |-DeclStmt 0x13ec1d8 <line:675:2, col:16>
| | |   | `-VarDecl 0x13ec138 <col:2, col:15> col:9 used __i 'std::size_t':'unsigned long' cinit
| | |   |   `-ImplicitCastExpr 0x13ec1c0 <col:15> 'std::size_t':'unsigned long' <IntegralCast>
| | |   |     `-IntegerLiteral 0x13ec1a0 <col:15> 'int' 0
| | |   |-WhileStmt 0x13ec390 <line:676:2, line:677:6>
| | |   | |-ExprWithCleanups 0x13ec340 <line:676:9, col:34> 'bool'
| | |   | | `-UnaryOperator 0x13ec328 <col:9, col:34> 'bool' prefix '!' cannot overflow
| | |   | |   `-CallExpr 0x13ec2e0 <col:10, col:34> 'bool'
| | |   | |     |-ImplicitCastExpr 0x13ec2c8 <col:10> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| | |   | |     | `-DeclRefExpr 0x13ec1f0 <col:10> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e0330 'eq' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| | |   | |     |-ArraySubscriptExpr 0x13ec280 <col:13, col:20> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   | |     | |-ImplicitCastExpr 0x13ec250 <col:13> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   | |     | | `-DeclRefExpr 0x13ec210 <col:13> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0908 '__s' 'const std::char_traits<char16_t>::char_type *'
| | |   | |     | `-ImplicitCastExpr 0x13ec268 <col:17> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | |     |   `-DeclRefExpr 0x13ec230 <col:17> 'std::size_t':'unsigned long' lvalue Var 0x13ec138 '__i' 'std::size_t':'unsigned long'
| | |   | |     `-MaterializeTemporaryExpr 0x13ec310 <col:23, col:33> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   | |       `-CXXScalarValueInitExpr 0x13ec2b0 <col:23, col:33> 'std::char_traits<char16_t>::char_type':'char16_t'
| | |   | `-UnaryOperator 0x13ec378 <line:677:4, col:6> 'std::size_t':'unsigned long' lvalue prefix '++'
| | |   |   `-DeclRefExpr 0x13ec358 <col:6> 'std::size_t':'unsigned long' lvalue Var 0x13ec138 '__i' 'std::size_t':'unsigned long'
| | |   `-ReturnStmt 0x13ec3e0 <line:678:2, col:9>
| | |     `-ImplicitCastExpr 0x13ec3c8 <col:9> 'std::size_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0x13ec3a8 <col:9> 'std::size_t':'unsigned long' lvalue Var 0x13ec138 '__i' 'std::size_t':'unsigned long'
| | |-CXXMethodDecl 0x13e0cc8 <line:681:7, line:688:7> line:682:7 find 'const std::char_traits<char16_t>::char_type *(const std::char_traits<char16_t>::char_type *, std::size_t, const std::char_traits<char16_t>::char_type &)' static
| | | |-ParmVarDecl 0x13e0ab0 <col:12, col:29> col:29 used __s 'const std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13e0b28 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
| | | |-ParmVarDecl 0x13e0ba0 <col:46, col:63> col:63 used __a 'const std::char_traits<char16_t>::char_type &'
| | | `-CompoundStmt 0x13ec7f8 <line:683:7, line:688:7>
| | |   |-ForStmt 0x13ec778 <line:684:2, line:686:19>
| | |   | |-DeclStmt 0x13ec4c8 <line:684:7, col:21>
| | |   | | `-VarDecl 0x13ec428 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| | |   | |   `-ImplicitCastExpr 0x13ec4b0 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| | |   | |     `-IntegerLiteral 0x13ec490 <col:20> 'int' 0
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x13ec550 <col:23, col:29> 'bool' '<'
| | |   | | |-ImplicitCastExpr 0x13ec520 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13ec4e0 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13ec428 '__i' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13ec538 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x13ec500 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13e0b28 '__n' 'std::size_t':'unsigned long'
| | |   | |-UnaryOperator 0x13ec590 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| | |   | | `-DeclRefExpr 0x13ec570 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13ec428 '__i' 'std::size_t':'unsigned long'
| | |   | `-IfStmt 0x13ec760 <line:685:4, line:686:19>
| | |   |   |-CallExpr 0x13ec690 <line:685:8, col:24> 'bool'
| | |   |   | |-ImplicitCastExpr 0x13ec678 <col:8> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| | |   |   | | `-DeclRefExpr 0x13ec5a8 <col:8> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e0330 'eq' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| | |   |   | |-ArraySubscriptExpr 0x13ec638 <col:11, col:18> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| | |   |   | | |-ImplicitCastExpr 0x13ec608 <col:11> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |   | | | `-DeclRefExpr 0x13ec5c8 <col:11> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0ab0 '__s' 'const std::char_traits<char16_t>::char_type *'
| | |   |   | | `-ImplicitCastExpr 0x13ec620 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |   | |   `-DeclRefExpr 0x13ec5e8 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x13ec428 '__i' 'std::size_t':'unsigned long'
| | |   |   | `-DeclRefExpr 0x13ec658 <col:21> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13e0ba0 '__a' 'const std::char_traits<char16_t>::char_type &'
| | |   |   `-ReturnStmt 0x13ec750 <line:686:6, col:19>
| | |   |     `-BinaryOperator 0x13ec730 <col:13, col:19> 'const std::char_traits<char16_t>::char_type *' '+'
| | |   |       |-ImplicitCastExpr 0x13ec700 <col:13> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |       | `-DeclRefExpr 0x13ec6c0 <col:13> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0ab0 '__s' 'const std::char_traits<char16_t>::char_type *'
| | |   |       `-ImplicitCastExpr 0x13ec718 <col:19> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |         `-DeclRefExpr 0x13ec6e0 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x13ec428 '__i' 'std::size_t':'unsigned long'
| | |   `-ReturnStmt 0x13ec7e8 <line:687:2, col:9>
| | |     `-ImplicitCastExpr 0x13ec7d0 <col:9> 'const std::char_traits<char16_t>::char_type *' <NullToPointer>
| | |       `-IntegerLiteral 0x13ec7b0 <col:9> 'int' 0
| | |-CXXMethodDecl 0x13ea988 <line:690:7, line:697:7> line:691:7 move 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13e0de8 <col:12, col:23> col:23 used __s1 'std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13e0e60 <col:29, col:46> col:46 used __s2 'const std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13ea860 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13ecb40 <line:692:7, line:697:7>
| | |   |-IfStmt 0x13ec8f0 <line:693:2, line:694:11>
| | |   | |-BinaryOperator 0x13ec888 <line:693:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13ec858 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13ec818 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13ea860 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13ec870 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13ec838 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13ec8e0 <line:694:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13ec8c8 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x13ec8a8 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0de8 '__s1' 'std::char_traits<char16_t>::char_type *'
| | |   `-ReturnStmt 0x13ecb30 <line:695:2, line:696:59>
| | |     `-ParenExpr 0x13ecb10 <line:695:9, line:696:59> 'std::char_traits<char16_t>::char_type *'
| | |       `-CXXStaticCastExpr 0x13ecae0 <line:695:10, line:696:58> 'std::char_traits<char16_t>::char_type *' static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
| | |         `-CallExpr 0x13eca38 <col:4, col:57> 'void *'
| | |           |-ImplicitCastExpr 0x13eca20 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |           | `-DeclRefExpr 0x13ec908 <col:4> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| | |           |-ImplicitCastExpr 0x13eca88 <col:22> 'void *' <BitCast>
| | |           | `-ImplicitCastExpr 0x13eca70 <col:22> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |           |   `-DeclRefExpr 0x13ec928 <col:22> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0de8 '__s1' 'std::char_traits<char16_t>::char_type *'
| | |           |-ImplicitCastExpr 0x13ecab8 <col:28> 'const void *' <BitCast>
| | |           | `-ImplicitCastExpr 0x13ecaa0 <col:28> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |           |   `-DeclRefExpr 0x13ec948 <col:28> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13e0e60 '__s2' 'const std::char_traits<char16_t>::char_type *'
| | |           `-BinaryOperator 0x13ec9d0 <col:34, col:56> 'unsigned long' '*'
| | |             |-ImplicitCastExpr 0x13ec9b8 <col:34> 'std::size_t':'unsigned long' <LValueToRValue>
| | |             | `-DeclRefExpr 0x13ec968 <col:34> 'std::size_t':'unsigned long' lvalue ParmVar 0x13ea860 '__n' 'std::size_t':'unsigned long'
| | |             `-UnaryExprOrTypeTraitExpr 0x13ec998 <col:40, col:56> 'unsigned long' sizeof 'std::char_traits<char16_t>::char_type':'char16_t'
| | |-CXXMethodDecl 0x13eabe0 <line:699:7, line:706:7> line:700:7 used copy 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | | |-ParmVarDecl 0x13eaa50 <col:12, col:23> col:23 used __s1 'std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13eaac8 <col:29, col:46> col:46 used __s2 'const std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13eab40 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | | `-CompoundStmt 0x13ece88 <line:701:7, line:706:7>
| | |   |-IfStmt 0x13ecc38 <line:702:2, line:703:11>
| | |   | |-BinaryOperator 0x13ecbd0 <line:702:6, col:13> 'bool' '=='
| | |   | | |-ImplicitCastExpr 0x13ecba0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13ecb60 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13eab40 '__n' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13ecbb8 <col:13> 'unsigned long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x13ecb80 <col:13> 'int' 0
| | |   | `-ReturnStmt 0x13ecc28 <line:703:4, col:11>
| | |   |   `-ImplicitCastExpr 0x13ecc10 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x13ecbf0 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13eaa50 '__s1' 'std::char_traits<char16_t>::char_type *'
| | |   `-ReturnStmt 0x13ece78 <line:704:2, line:705:58>
| | |     `-ParenExpr 0x13ece58 <line:704:9, line:705:58> 'std::char_traits<char16_t>::char_type *'
| | |       `-CXXStaticCastExpr 0x13ece28 <line:704:10, line:705:57> 'std::char_traits<char16_t>::char_type *' static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
| | |         `-CallExpr 0x13ecd80 <col:4, col:56> 'void *'
| | |           |-ImplicitCastExpr 0x13ecd68 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| | |           | `-DeclRefExpr 0x13ecc50 <col:4> '<builtin fn type>' Function 0x13c22b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
| | |           |-ImplicitCastExpr 0x13ecdd0 <col:21> 'void *' <BitCast>
| | |           | `-ImplicitCastExpr 0x13ecdb8 <col:21> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |           |   `-DeclRefExpr 0x13ecc70 <col:21> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13eaa50 '__s1' 'std::char_traits<char16_t>::char_type *'
| | |           |-ImplicitCastExpr 0x13ece00 <col:27> 'const void *' <BitCast>
| | |           | `-ImplicitCastExpr 0x13ecde8 <col:27> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |           |   `-DeclRefExpr 0x13ecc90 <col:27> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13eaac8 '__s2' 'const std::char_traits<char16_t>::char_type *'
| | |           `-BinaryOperator 0x13ecd18 <col:33, col:55> 'unsigned long' '*'
| | |             |-ImplicitCastExpr 0x13ecd00 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
| | |             | `-DeclRefExpr 0x13eccb0 <col:33> 'std::size_t':'unsigned long' lvalue ParmVar 0x13eab40 '__n' 'std::size_t':'unsigned long'
| | |             `-UnaryExprOrTypeTraitExpr 0x13ecce0 <col:39, col:55> 'unsigned long' sizeof 'std::char_traits<char16_t>::char_type':'char16_t'
| | |-CXXMethodDecl 0x13eaeb8 <line:708:7, line:714:7> line:709:7 assign 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, std::size_t, std::char_traits<char16_t>::char_type)' static
| | | |-ParmVarDecl 0x13eaca8 <col:14, col:25> col:25 used __s 'std::char_traits<char16_t>::char_type *'
| | | |-ParmVarDecl 0x13ead20 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
| | | |-ParmVarDecl 0x13ead98 <col:42, col:52> col:52 used __a 'std::char_traits<char16_t>::char_type':'char16_t'
| | | `-CompoundStmt 0x13ed298 <line:710:7, line:714:7>
| | |   |-ForStmt 0x13ed218 <line:711:2, line:712:24>
| | |   | |-DeclStmt 0x13ecf58 <line:711:7, col:21>
| | |   | | `-VarDecl 0x13eceb8 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| | |   | |   `-ImplicitCastExpr 0x13ecf40 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| | |   | |     `-IntegerLiteral 0x13ecf20 <col:20> 'int' 0
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x13ecfe0 <col:23, col:29> 'bool' '<'
| | |   | | |-ImplicitCastExpr 0x13ecfb0 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x13ecf70 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13eceb8 '__i' 'std::size_t':'unsigned long'
| | |   | | `-ImplicitCastExpr 0x13ecfc8 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x13ecf90 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13ead20 '__n' 'std::size_t':'unsigned long'
| | |   | |-UnaryOperator 0x13ed020 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| | |   | | `-DeclRefExpr 0x13ed000 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13eceb8 '__i' 'std::size_t':'unsigned long'
| | |   | `-CallExpr 0x13ed1d0 <line:712:4, col:24> 'void'
| | |   |   |-ImplicitCastExpr 0x13ed1b8 <col:4> 'void (*)(std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x13ed138 <col:4> 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x13e00e0 'assign' 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| | |   |   |-ArraySubscriptExpr 0x13ed0f8 <col:11, col:18> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue
| | |   |   | |-ImplicitCastExpr 0x13ed0c8 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |   |   | | `-DeclRefExpr 0x13ed088 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13eaca8 '__s' 'std::char_traits<char16_t>::char_type *'
| | |   |   | `-ImplicitCastExpr 0x13ed0e0 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
| | |   |   |   `-DeclRefExpr 0x13ed0a8 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x13eceb8 '__i' 'std::size_t':'unsigned long'
| | |   |   `-ImplicitCastExpr 0x13ed200 <col:21> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue <NoOp>
| | |   |     `-DeclRefExpr 0x13ed118 <col:21> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue ParmVar 0x13ead98 '__a' 'std::char_traits<char16_t>::char_type':'char16_t'
| | |   `-ReturnStmt 0x13ed288 <line:713:2, col:9>
| | |     `-ImplicitCastExpr 0x13ed270 <col:9> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| | |       `-DeclRefExpr 0x13ed250 <col:9> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x13eaca8 '__s' 'std::char_traits<char16_t>::char_type *'
| | |-CXXMethodDecl 0x13eb0f0 <line:716:7, line:718:32> line:717:7 constexpr to_char_type 'std::char_traits<char16_t>::char_type (const std::char_traits<char16_t>::int_type &) noexcept' static
| | | |-ParmVarDecl 0x13eaff8 <col:20, col:36> col:36 used __c 'const std::char_traits<char16_t>::int_type &'
| | | `-CompoundStmt 0x13ed350 <line:718:7, col:32>
| | |   `-ReturnStmt 0x13ed340 <col:9, col:29>
| | |     `-CXXFunctionalCastExpr 0x13ed318 <col:16, col:29> 'std::char_traits<char16_t>::char_type':'char16_t' functional cast to std::char_traits<char16_t>::char_type <NoOp>
| | |       `-ImplicitCastExpr 0x13ed300 <col:26> 'std::char_traits<char16_t>::char_type':'char16_t' <IntegralCast> part_of_explicit_cast
| | |         `-ImplicitCastExpr 0x13ed2e8 <col:26> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue> part_of_explicit_cast
| | |           `-DeclRefExpr 0x13ed2c8 <col:26> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x13eaff8 '__c' 'const std::char_traits<char16_t>::int_type &'
| | |-CXXMethodDecl 0x13eb2a0 <line:720:7, line:722:65> line:721:7 constexpr to_int_type 'std::char_traits<char16_t>::int_type (const std::char_traits<char16_t>::char_type &) noexcept' static
| | | |-ParmVarDecl 0x13eb1a8 <col:19, col:36> col:36 used __c 'const std::char_traits<char16_t>::char_type &'
| | | `-CompoundStmt 0x13ed5e0 <line:722:7, col:65>
| | |   `-ReturnStmt 0x13ed5d0 <col:9, col:62>
| | |     `-ConditionalOperator 0x13ed5a0 <col:16, col:62> 'std::char_traits<char16_t>::int_type':'unsigned short'
| | |       |-BinaryOperator 0x13ed488 <col:16, col:27> 'bool' '=='
| | |       | |-ImplicitCastExpr 0x13ed458 <col:16> 'int' <IntegralCast>
| | |       | | `-ImplicitCastExpr 0x13ed440 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| | |       | |   `-DeclRefExpr 0x13ed368 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13eb1a8 '__c' 'const std::char_traits<char16_t>::char_type &'
| | |       | `-ImplicitCastExpr 0x13ed470 <col:23, col:27> 'int' <IntegralCast>
| | |       |   `-CallExpr 0x13ed420 <col:23, col:27> 'std::char_traits<char16_t>::int_type':'unsigned short'
| | |       |     `-ImplicitCastExpr 0x13ed408 <col:23> 'std::char_traits<char16_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
| | |       |       `-DeclRefExpr 0x13ed388 <col:23> 'std::char_traits<char16_t>::int_type () noexcept' lvalue CXXMethod 0x13eb620 'eof' 'std::char_traits<char16_t>::int_type () noexcept'
| | |       |-CXXFunctionalCastExpr 0x13ed4f0 <col:31, col:46> 'std::char_traits<char16_t>::int_type':'unsigned short' functional cast to std::char_traits<char16_t>::int_type <NoOp>
| | |       | `-ImplicitCastExpr 0x13ed4d8 <col:40> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |       |   `-IntegerLiteral 0x13ed4b8 <col:40> 'int' 65533
| | |       `-CXXFunctionalCastExpr 0x13ed578 <col:50, col:62> 'std::char_traits<char16_t>::int_type':'unsigned short' functional cast to std::char_traits<char16_t>::int_type <NoOp>
| | |         `-ImplicitCastExpr 0x13ed560 <col:59> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |           `-ImplicitCastExpr 0x13ed548 <col:59> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue> part_of_explicit_cast
| | |             `-DeclRefExpr 0x13ed528 <col:59> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x13eb1a8 '__c' 'const std::char_traits<char16_t>::char_type &'
| | |-CXXMethodDecl 0x13eb4f0 <line:724:7, line:726:30> line:725:7 used constexpr eq_int_type 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' static
| | | |-ParmVarDecl 0x13eb358 <col:19, col:35> col:35 used __c1 'const std::char_traits<char16_t>::int_type &'
| | | |-ParmVarDecl 0x13eb3d0 <col:41, col:57> col:57 used __c2 'const std::char_traits<char16_t>::int_type &'
| | | `-CompoundStmt 0x13ed6c8 <line:726:7, col:30>
| | |   `-ReturnStmt 0x13ed6b8 <col:9, col:24>
| | |     `-BinaryOperator 0x13ed698 <col:16, col:24> 'bool' '=='
| | |       |-ImplicitCastExpr 0x13ed668 <col:16> 'int' <IntegralCast>
| | |       | `-ImplicitCastExpr 0x13ed638 <col:16> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x13ed5f8 <col:16> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x13eb358 '__c1' 'const std::char_traits<char16_t>::int_type &'
| | |       `-ImplicitCastExpr 0x13ed680 <col:24> 'int' <IntegralCast>
| | |         `-ImplicitCastExpr 0x13ed650 <col:24> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
| | |           `-DeclRefExpr 0x13ed618 <col:24> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x13eb3d0 '__c2' 'const std::char_traits<char16_t>::int_type &'
| | |-CXXMethodDecl 0x13eb620 <line:728:7, line:730:43> line:729:7 used constexpr eof 'std::char_traits<char16_t>::int_type () noexcept' static
| | | `-CompoundStmt 0x13ed780 <line:730:7, col:43>
| | |   `-ReturnStmt 0x13ed770 <col:9, col:40>
| | |     `-CXXStaticCastExpr 0x13ed740 <col:16, col:40> 'std::char_traits<char16_t>::int_type':'unsigned short' static_cast<std::char_traits<char16_t>::int_type> <NoOp>
| | |       `-ImplicitCastExpr 0x13ed728 <col:38, col:39> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-UnaryOperator 0x13ed700 <col:38, col:39> 'int' prefix '-'
| | |           `-IntegerLiteral 0x13ed6e0 <col:39> 'int' 1
| | `-CXXMethodDecl 0x13eb7d0 <line:732:7, line:734:51> line:733:7 constexpr not_eof 'std::char_traits<char16_t>::int_type (const std::char_traits<char16_t>::int_type &) noexcept' static
| |   |-ParmVarDecl 0x13eb6d0 <col:15, col:31> col:31 used __c 'const std::char_traits<char16_t>::int_type &'
| |   `-CompoundStmt 0x13ed9c8 <line:734:7, col:51>
| |     `-ReturnStmt 0x13ed9b8 <col:9, col:46>
| |       `-ExprWithCleanups 0x13ed9a0 <col:16, col:46> 'std::char_traits<char16_t>::int_type':'unsigned short'
| |         `-ImplicitCastExpr 0x13ed988 <col:16, col:46> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast>
| |           `-ConditionalOperator 0x13ed958 <col:16, col:46> 'int'
| |             |-CallExpr 0x13ed8a0 <col:16, col:38> 'bool'
| |             | |-ImplicitCastExpr 0x13ed888 <col:16> 'bool (*)(const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' <FunctionToPointerDecay>
| |             | | `-DeclRefExpr 0x13ed798 <col:16> 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' lvalue CXXMethod 0x13eb4f0 'eq_int_type' 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept'
| |             | |-DeclRefExpr 0x13ed7b8 <col:28> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x13eb6d0 '__c' 'const std::char_traits<char16_t>::int_type &'
| |             | `-MaterializeTemporaryExpr 0x13ed8d0 <col:33, col:37> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue
| |             |   `-CallExpr 0x13ed810 <col:33, col:37> 'std::char_traits<char16_t>::int_type':'unsigned short'
| |             |     `-ImplicitCastExpr 0x13ed7f8 <col:33> 'std::char_traits<char16_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
| |             |       `-DeclRefExpr 0x13ed7d8 <col:33> 'std::char_traits<char16_t>::int_type () noexcept' lvalue CXXMethod 0x13eb620 'eof' 'std::char_traits<char16_t>::int_type () noexcept'
| |             |-IntegerLiteral 0x13ed8e8 <col:42> 'int' 0
| |             `-ImplicitCastExpr 0x13ed940 <col:46> 'int' <IntegralCast>
| |               `-ImplicitCastExpr 0x13ed928 <col:46> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
| |                 `-DeclRefExpr 0x13ed908 <col:46> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x13eb6d0 '__c' 'const std::char_traits<char16_t>::int_type &'
| `-ClassTemplateSpecializationDecl 0x13eda08 parent 0x13bdb50 prev 0x10a9a68 <line:737:3, line:838:5> line:738:12 struct char_traits definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-TemplateArgument type 'char32_t'
|   |-CXXRecordDecl 0x13edc08 <col:5, col:12> col:12 implicit struct char_traits
|   |-TypedefDecl 0x13edca8 <line:740:7, col:33> col:33 referenced char_type 'char32_t'
|   | `-BuiltinType 0xffd750 'char32_t'
|   |-TypedefDecl 0x13edd30 <line:742:7, col:33> col:33 referenced int_type 'uint_least32_t':'unsigned int'
|   | `-TypedefType 0x13edd00 'uint_least32_t' sugar
|   |   |-Typedef 0x13dde40 'uint_least32_t'
|   |   `-TypedefType 0x13dde10 '__uint_least32_t' sugar
|   |     |-Typedef 0x13c8b10 '__uint_least32_t'
|   |     `-TypedefType 0x13c8ae0 '__uint32_t' sugar
|   |       |-Typedef 0x13c86d0 '__uint32_t'
|   |       `-BuiltinType 0xffd2b0 'unsigned int'
|   |-TypedefDecl 0x13edd98 <line:748:7, col:33> col:33 off_type 'std::streamoff':'long'
|   | `-TypedefType 0x10f4460 'std::streamoff' sugar
|   |   |-Typedef 0x10f3c78 'streamoff'
|   |   `-BuiltinType 0xffd230 'long'
|   |-TypedefDecl 0x13ede20 <line:749:7, col:33> col:33 pos_type 'std::u32streampos':'std::fpos<__mbstate_t>'
|   | `-TypedefType 0x13eddf0 'std::u32streampos' sugar
|   |   |-Typedef 0x10f91b0 'u32streampos'
|   |   `-TemplateSpecializationType 0x10f9110 'fpos<mbstate_t>' sugar fpos
|   |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   |     `-RecordType 0x10f8da0 'std::fpos<__mbstate_t>'
|   |       `-ClassTemplateSpecialization 0x10f8cb8 'fpos'
|   |-TypedefDecl 0x13ede88 <line:750:7, col:33> col:33 state_type 'mbstate_t':'__mbstate_t'
|   | `-TypedefType 0x10d63b0 'mbstate_t' sugar
|   |   |-Typedef 0x10c5e60 'mbstate_t'
|   |   `-TypedefType 0x10b02c0 '__mbstate_t' sugar
|   |     |-Typedef 0x10b0248 '__mbstate_t'
|   |     `-ElaboratedType 0x10b01f0 'struct __mbstate_t' sugar
|   |       `-RecordType 0x10afda0 '__mbstate_t'
|   |         `-CXXRecord 0x10afd10 ''
|   |-CXXMethodDecl 0x13ee180 <line:752:7, line:754:22> line:753:7 used assign 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13edf68 <col:14, col:25> col:25 used __c1 'std::char_traits<char32_t>::char_type &'
|   | |-ParmVarDecl 0x13ee038 <col:31, col:48> col:48 used __c2 'const std::char_traits<char32_t>::char_type &'
|   | `-CompoundStmt 0x13f1828 <line:754:7, col:22>
|   |   `-BinaryOperator 0x13f1808 <col:9, col:16> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue '='
|   |     |-DeclRefExpr 0x13f17b0 <col:9> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue ParmVar 0x13edf68 '__c1' 'std::char_traits<char32_t>::char_type &'
|   |     `-ImplicitCastExpr 0x13f17f0 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f17d0 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13ee038 '__c2' 'const std::char_traits<char32_t>::char_type &'
|   |-CXXMethodDecl 0x13ee3d0 <line:756:7, line:758:30> line:757:7 used constexpr eq 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13ee240 <col:10, col:27> col:27 used __c1 'const std::char_traits<char32_t>::char_type &'
|   | |-ParmVarDecl 0x13ee2b8 <col:33, col:50> col:50 used __c2 'const std::char_traits<char32_t>::char_type &'
|   | `-CompoundStmt 0x13f1910 <line:758:7, col:30>
|   |   `-ReturnStmt 0x13f1900 <col:9, col:24>
|   |     `-BinaryOperator 0x13f18e0 <col:16, col:24> 'bool' '=='
|   |       |-ImplicitCastExpr 0x13f18b0 <col:16> 'unsigned int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x13f1880 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13f1840 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13ee240 '__c1' 'const std::char_traits<char32_t>::char_type &'
|   |       `-ImplicitCastExpr 0x13f18c8 <col:24> 'unsigned int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x13f1898 <col:24> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
|   |           `-DeclRefExpr 0x13f1860 <col:24> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13ee2b8 '__c2' 'const std::char_traits<char32_t>::char_type &'
|   |-CXXMethodDecl 0x13ee5a8 <line:760:7, line:762:29> line:761:7 used constexpr lt 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13ee490 <col:10, col:27> col:27 used __c1 'const std::char_traits<char32_t>::char_type &'
|   | |-ParmVarDecl 0x13ee508 <col:33, col:50> col:50 used __c2 'const std::char_traits<char32_t>::char_type &'
|   | `-CompoundStmt 0x13f19f8 <line:762:7, col:29>
|   |   `-ReturnStmt 0x13f19e8 <col:9, col:23>
|   |     `-BinaryOperator 0x13f19c8 <col:16, col:23> 'bool' '<'
|   |       |-ImplicitCastExpr 0x13f1998 <col:16> 'unsigned int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x13f1968 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13f1928 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13ee490 '__c1' 'const std::char_traits<char32_t>::char_type &'
|   |       `-ImplicitCastExpr 0x13f19b0 <col:23> 'unsigned int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x13f1980 <col:23> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
|   |           `-DeclRefExpr 0x13f1948 <col:23> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13ee508 '__c2' 'const std::char_traits<char32_t>::char_type &'
|   |-CXXMethodDecl 0x13f01c0 <line:764:7, line:773:7> line:765:7 compare 'int (const std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13ee6c8 <col:15, col:32> col:32 used __s1 'const std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13ee740 <col:38, col:55> col:55 used __s2 'const std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13ee7b8 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13f2028 <line:766:7, line:773:7>
|   |   |-ForStmt 0x13f1fc0 <line:767:2, line:771:13>
|   |   | |-DeclStmt 0x13f1ac0 <line:767:7, col:21>
|   |   | | `-VarDecl 0x13f1a20 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
|   |   | |   `-ImplicitCastExpr 0x13f1aa8 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13f1a88 <col:20> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13f1b48 <col:23, col:29> 'bool' '<'
|   |   | | |-ImplicitCastExpr 0x13f1b18 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13f1ad8 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13f1b30 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13f1af8 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13ee7b8 '__n' 'std::size_t':'unsigned long'
|   |   | |-UnaryOperator 0x13f1b88 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
|   |   | | `-DeclRefExpr 0x13f1b68 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   | `-IfStmt 0x13f1f98 <line:768:4, line:771:13> has_else
|   |   |   |-CallExpr 0x13f1d50 <line:768:8, col:31> 'bool'
|   |   |   | |-ImplicitCastExpr 0x13f1d38 <col:8> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13f1ba0 <col:8> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee5a8 'lt' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
|   |   |   | |-ArraySubscriptExpr 0x13f1c30 <col:11, col:19> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   |   | | |-ImplicitCastExpr 0x13f1c00 <col:11> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x13f1bc0 <col:11> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13ee6c8 '__s1' 'const std::char_traits<char32_t>::char_type *'
|   |   |   | | `-ImplicitCastExpr 0x13f1c18 <col:16> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x13f1be0 <col:16> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   |   | `-ArraySubscriptExpr 0x13f1cc0 <col:22, col:30> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   |   |   |-ImplicitCastExpr 0x13f1c90 <col:22> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x13f1c50 <col:22> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13ee740 '__s2' 'const std::char_traits<char32_t>::char_type *'
|   |   |   |   `-ImplicitCastExpr 0x13f1ca8 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x13f1c70 <col:27> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   |   |-ReturnStmt 0x13f1db8 <line:769:6, col:14>
|   |   |   | `-UnaryOperator 0x13f1da0 <col:13, col:14> 'int' prefix '-'
|   |   |   |   `-IntegerLiteral 0x13f1d80 <col:14> 'int' 1
|   |   |   `-IfStmt 0x13f1f80 <line:770:9, line:771:13>
|   |   |     |-CallExpr 0x13f1f20 <line:770:13, col:36> 'bool'
|   |   |     | |-ImplicitCastExpr 0x13f1f08 <col:13> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x13f1dc8 <col:13> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee5a8 'lt' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
|   |   |     | |-ArraySubscriptExpr 0x13f1e58 <col:16, col:24> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   |     | | |-ImplicitCastExpr 0x13f1e28 <col:16> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x13f1de8 <col:16> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13ee740 '__s2' 'const std::char_traits<char32_t>::char_type *'
|   |   |     | | `-ImplicitCastExpr 0x13f1e40 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x13f1e08 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   |     | `-ArraySubscriptExpr 0x13f1ee8 <col:27, col:35> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   |     |   |-ImplicitCastExpr 0x13f1eb8 <col:27> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x13f1e78 <col:27> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13ee6c8 '__s1' 'const std::char_traits<char32_t>::char_type *'
|   |   |     |   `-ImplicitCastExpr 0x13f1ed0 <col:32> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x13f1e98 <col:32> 'std::size_t':'unsigned long' lvalue Var 0x13f1a20 '__i' 'std::size_t':'unsigned long'
|   |   |     `-ReturnStmt 0x13f1f70 <line:771:6, col:13>
|   |   |       `-IntegerLiteral 0x13f1f50 <col:13> 'int' 1
|   |   `-ReturnStmt 0x13f2018 <line:772:2, col:9>
|   |     `-IntegerLiteral 0x13f1ff8 <col:9> 'int' 0
|   |-CXXMethodDecl 0x13f0378 <line:775:7, line:782:7> line:776:7 length 'std::size_t (const std::char_traits<char32_t>::char_type *)' static
|   | |-ParmVarDecl 0x13f0288 <col:14, col:31> col:31 used __s 'const std::char_traits<char32_t>::char_type *'
|   | `-CompoundStmt 0x13f2310 <line:777:7, line:782:7>
|   |   |-DeclStmt 0x13f20f8 <line:778:2, col:16>
|   |   | `-VarDecl 0x13f2058 <col:2, col:15> col:9 used __i 'std::size_t':'unsigned long' cinit
|   |   |   `-ImplicitCastExpr 0x13f20e0 <col:15> 'std::size_t':'unsigned long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x13f20c0 <col:15> 'int' 0
|   |   |-WhileStmt 0x13f22b0 <line:779:2, line:780:6>
|   |   | |-ExprWithCleanups 0x13f2260 <line:779:9, col:34> 'bool'
|   |   | | `-UnaryOperator 0x13f2248 <col:9, col:34> 'bool' prefix '!' cannot overflow
|   |   | |   `-CallExpr 0x13f2200 <col:10, col:34> 'bool'
|   |   | |     |-ImplicitCastExpr 0x13f21e8 <col:10> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x13f2110 <col:10> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee3d0 'eq' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
|   |   | |     |-ArraySubscriptExpr 0x13f21a0 <col:13, col:20> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   | |     | |-ImplicitCastExpr 0x13f2170 <col:13> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x13f2130 <col:13> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0288 '__s' 'const std::char_traits<char32_t>::char_type *'
|   |   | |     | `-ImplicitCastExpr 0x13f2188 <col:17> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x13f2150 <col:17> 'std::size_t':'unsigned long' lvalue Var 0x13f2058 '__i' 'std::size_t':'unsigned long'
|   |   | |     `-MaterializeTemporaryExpr 0x13f2230 <col:23, col:33> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   | |       `-CXXScalarValueInitExpr 0x13f21d0 <col:23, col:33> 'std::char_traits<char32_t>::char_type':'char32_t'
|   |   | `-UnaryOperator 0x13f2298 <line:780:4, col:6> 'std::size_t':'unsigned long' lvalue prefix '++'
|   |   |   `-DeclRefExpr 0x13f2278 <col:6> 'std::size_t':'unsigned long' lvalue Var 0x13f2058 '__i' 'std::size_t':'unsigned long'
|   |   `-ReturnStmt 0x13f2300 <line:781:2, col:9>
|   |     `-ImplicitCastExpr 0x13f22e8 <col:9> 'std::size_t':'unsigned long' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f22c8 <col:9> 'std::size_t':'unsigned long' lvalue Var 0x13f2058 '__i' 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x13f0648 <line:784:7, line:791:7> line:785:7 find 'const std::char_traits<char32_t>::char_type *(const std::char_traits<char32_t>::char_type *, std::size_t, const std::char_traits<char32_t>::char_type &)' static
|   | |-ParmVarDecl 0x13f0430 <col:12, col:29> col:29 used __s 'const std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f04a8 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
|   | |-ParmVarDecl 0x13f0520 <col:46, col:63> col:63 used __a 'const std::char_traits<char32_t>::char_type &'
|   | `-CompoundStmt 0x13f2718 <line:786:7, line:791:7>
|   |   |-ForStmt 0x13f2698 <line:787:2, line:789:19>
|   |   | |-DeclStmt 0x13f23e8 <line:787:7, col:21>
|   |   | | `-VarDecl 0x13f2348 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
|   |   | |   `-ImplicitCastExpr 0x13f23d0 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13f23b0 <col:20> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13f2470 <col:23, col:29> 'bool' '<'
|   |   | | |-ImplicitCastExpr 0x13f2440 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13f2400 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13f2348 '__i' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13f2458 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13f2420 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f04a8 '__n' 'std::size_t':'unsigned long'
|   |   | |-UnaryOperator 0x13f24b0 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
|   |   | | `-DeclRefExpr 0x13f2490 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13f2348 '__i' 'std::size_t':'unsigned long'
|   |   | `-IfStmt 0x13f2680 <line:788:4, line:789:19>
|   |   |   |-CallExpr 0x13f25b0 <line:788:8, col:24> 'bool'
|   |   |   | |-ImplicitCastExpr 0x13f2598 <col:8> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13f24c8 <col:8> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee3d0 'eq' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
|   |   |   | |-ArraySubscriptExpr 0x13f2558 <col:11, col:18> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
|   |   |   | | |-ImplicitCastExpr 0x13f2528 <col:11> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x13f24e8 <col:11> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0430 '__s' 'const std::char_traits<char32_t>::char_type *'
|   |   |   | | `-ImplicitCastExpr 0x13f2540 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x13f2508 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x13f2348 '__i' 'std::size_t':'unsigned long'
|   |   |   | `-DeclRefExpr 0x13f2578 <col:21> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13f0520 '__a' 'const std::char_traits<char32_t>::char_type &'
|   |   |   `-ReturnStmt 0x13f2670 <line:789:6, col:19>
|   |   |     `-BinaryOperator 0x13f2650 <col:13, col:19> 'const std::char_traits<char32_t>::char_type *' '+'
|   |   |       |-ImplicitCastExpr 0x13f2620 <col:13> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x13f25e0 <col:13> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0430 '__s' 'const std::char_traits<char32_t>::char_type *'
|   |   |       `-ImplicitCastExpr 0x13f2638 <col:19> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13f2600 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x13f2348 '__i' 'std::size_t':'unsigned long'
|   |   `-ReturnStmt 0x13f2708 <line:790:2, col:9>
|   |     `-ImplicitCastExpr 0x13f26f0 <col:9> 'const std::char_traits<char32_t>::char_type *' <NullToPointer>
|   |       `-IntegerLiteral 0x13f26d0 <col:9> 'int' 0
|   |-CXXMethodDecl 0x13f0978 <line:793:7, line:800:7> line:794:7 move 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13f0768 <col:12, col:23> col:23 used __s1 'std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f07e0 <col:29, col:46> col:46 used __s2 'const std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f0858 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13f2a60 <line:795:7, line:800:7>
|   |   |-IfStmt 0x13f2810 <line:796:2, line:797:11>
|   |   | |-BinaryOperator 0x13f27a8 <line:796:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13f2778 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13f2738 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f0858 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13f2790 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13f2758 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13f2800 <line:797:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13f27e8 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13f27c8 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0768 '__s1' 'std::char_traits<char32_t>::char_type *'
|   |   `-ReturnStmt 0x13f2a50 <line:798:2, line:799:59>
|   |     `-ParenExpr 0x13f2a30 <line:798:9, line:799:59> 'std::char_traits<char32_t>::char_type *'
|   |       `-CXXStaticCastExpr 0x13f2a00 <line:798:10, line:799:58> 'std::char_traits<char32_t>::char_type *' static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
|   |         `-CallExpr 0x13f2958 <col:4, col:57> 'void *'
|   |           |-ImplicitCastExpr 0x13f2940 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
|   |           | `-DeclRefExpr 0x13f2828 <col:4> '<builtin fn type>' Function 0x1388190 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
|   |           |-ImplicitCastExpr 0x13f29a8 <col:22> 'void *' <BitCast>
|   |           | `-ImplicitCastExpr 0x13f2990 <col:22> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x13f2848 <col:22> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0768 '__s1' 'std::char_traits<char32_t>::char_type *'
|   |           |-ImplicitCastExpr 0x13f29d8 <col:28> 'const void *' <BitCast>
|   |           | `-ImplicitCastExpr 0x13f29c0 <col:28> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x13f2868 <col:28> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f07e0 '__s2' 'const std::char_traits<char32_t>::char_type *'
|   |           `-BinaryOperator 0x13f28f0 <col:34, col:56> 'unsigned long' '*'
|   |             |-ImplicitCastExpr 0x13f28d8 <col:34> 'std::size_t':'unsigned long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x13f2888 <col:34> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f0858 '__n' 'std::size_t':'unsigned long'
|   |             `-UnaryExprOrTypeTraitExpr 0x13f28b8 <col:40, col:56> 'unsigned long' sizeof 'std::char_traits<char32_t>::char_type':'char32_t'
|   |-CXXMethodDecl 0x13f0bd0 <line:802:7, line:809:7> line:803:7 used copy 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x13f0a40 <col:12, col:23> col:23 used __s1 'std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f0ab8 <col:29, col:46> col:46 used __s2 'const std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f0b30 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
|   | `-CompoundStmt 0x13f2da8 <line:804:7, line:809:7>
|   |   |-IfStmt 0x13f2b58 <line:805:2, line:806:11>
|   |   | |-BinaryOperator 0x13f2af0 <line:805:6, col:13> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x13f2ac0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13f2a80 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f0b30 '__n' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13f2ad8 <col:13> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x13f2aa0 <col:13> 'int' 0
|   |   | `-ReturnStmt 0x13f2b48 <line:806:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13f2b30 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13f2b10 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0a40 '__s1' 'std::char_traits<char32_t>::char_type *'
|   |   `-ReturnStmt 0x13f2d98 <line:807:2, line:808:58>
|   |     `-ParenExpr 0x13f2d78 <line:807:9, line:808:58> 'std::char_traits<char32_t>::char_type *'
|   |       `-CXXStaticCastExpr 0x13f2d48 <line:807:10, line:808:57> 'std::char_traits<char32_t>::char_type *' static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
|   |         `-CallExpr 0x13f2ca0 <col:4, col:56> 'void *'
|   |           |-ImplicitCastExpr 0x13f2c88 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
|   |           | `-DeclRefExpr 0x13f2b70 <col:4> '<builtin fn type>' Function 0x13c22b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
|   |           |-ImplicitCastExpr 0x13f2cf0 <col:21> 'void *' <BitCast>
|   |           | `-ImplicitCastExpr 0x13f2cd8 <col:21> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x13f2b90 <col:21> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0a40 '__s1' 'std::char_traits<char32_t>::char_type *'
|   |           |-ImplicitCastExpr 0x13f2d20 <col:27> 'const void *' <BitCast>
|   |           | `-ImplicitCastExpr 0x13f2d08 <col:27> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x13f2bb0 <col:27> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0ab8 '__s2' 'const std::char_traits<char32_t>::char_type *'
|   |           `-BinaryOperator 0x13f2c38 <col:33, col:55> 'unsigned long' '*'
|   |             |-ImplicitCastExpr 0x13f2c20 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x13f2bd0 <col:33> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f0b30 '__n' 'std::size_t':'unsigned long'
|   |             `-UnaryExprOrTypeTraitExpr 0x13f2c00 <col:39, col:55> 'unsigned long' sizeof 'std::char_traits<char32_t>::char_type':'char32_t'
|   |-CXXMethodDecl 0x13f0ea8 <line:811:7, line:817:7> line:812:7 assign 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, std::size_t, std::char_traits<char32_t>::char_type)' static
|   | |-ParmVarDecl 0x13f0c98 <col:14, col:25> col:25 used __s 'std::char_traits<char32_t>::char_type *'
|   | |-ParmVarDecl 0x13f0d10 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
|   | |-ParmVarDecl 0x13f0d88 <col:42, col:52> col:52 used __a 'std::char_traits<char32_t>::char_type':'char32_t'
|   | `-CompoundStmt 0x13f31b8 <line:813:7, line:817:7>
|   |   |-ForStmt 0x13f3138 <line:814:2, line:815:24>
|   |   | |-DeclStmt 0x13f2e78 <line:814:7, col:21>
|   |   | | `-VarDecl 0x13f2dd8 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
|   |   | |   `-ImplicitCastExpr 0x13f2e60 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13f2e40 <col:20> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13f2f00 <col:23, col:29> 'bool' '<'
|   |   | | |-ImplicitCastExpr 0x13f2ed0 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13f2e90 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x13f2dd8 '__i' 'std::size_t':'unsigned long'
|   |   | | `-ImplicitCastExpr 0x13f2ee8 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13f2eb0 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x13f0d10 '__n' 'std::size_t':'unsigned long'
|   |   | |-UnaryOperator 0x13f2f40 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
|   |   | | `-DeclRefExpr 0x13f2f20 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x13f2dd8 '__i' 'std::size_t':'unsigned long'
|   |   | `-CallExpr 0x13f30f0 <line:815:4, col:24> 'void'
|   |   |   |-ImplicitCastExpr 0x13f30d8 <col:4> 'void (*)(std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13f3058 <col:4> 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x13ee180 'assign' 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
|   |   |   |-ArraySubscriptExpr 0x13f3018 <col:11, col:18> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue
|   |   |   | |-ImplicitCastExpr 0x13f2fe8 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x13f2fa8 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0c98 '__s' 'std::char_traits<char32_t>::char_type *'
|   |   |   | `-ImplicitCastExpr 0x13f3000 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13f2fc8 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x13f2dd8 '__i' 'std::size_t':'unsigned long'
|   |   |   `-ImplicitCastExpr 0x13f3120 <col:21> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue <NoOp>
|   |   |     `-DeclRefExpr 0x13f3038 <col:21> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue ParmVar 0x13f0d88 '__a' 'std::char_traits<char32_t>::char_type':'char32_t'
|   |   `-ReturnStmt 0x13f31a8 <line:816:2, col:9>
|   |     `-ImplicitCastExpr 0x13f3190 <col:9> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f3170 <col:9> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x13f0c98 '__s' 'std::char_traits<char32_t>::char_type *'
|   |-CXXMethodDecl 0x13f10b0 <line:819:7, line:821:32> line:820:7 constexpr to_char_type 'std::char_traits<char32_t>::char_type (const std::char_traits<char32_t>::int_type &) noexcept' static
|   | |-ParmVarDecl 0x13f0fb8 <col:20, col:36> col:36 used __c 'const std::char_traits<char32_t>::int_type &'
|   | `-CompoundStmt 0x13f3270 <line:821:7, col:32>
|   |   `-ReturnStmt 0x13f3260 <col:9, col:29>
|   |     `-CXXFunctionalCastExpr 0x13f3238 <col:16, col:29> 'std::char_traits<char32_t>::char_type':'char32_t' functional cast to std::char_traits<char32_t>::char_type <NoOp>
|   |       `-ImplicitCastExpr 0x13f3220 <col:26> 'std::char_traits<char32_t>::char_type':'char32_t' <IntegralCast> part_of_explicit_cast
|   |         `-ImplicitCastExpr 0x13f3208 <col:26> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x13f31e8 <col:26> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x13f0fb8 '__c' 'const std::char_traits<char32_t>::int_type &'
|   |-CXXMethodDecl 0x13f1260 <line:823:7, line:825:31> line:824:7 constexpr to_int_type 'std::char_traits<char32_t>::int_type (const std::char_traits<char32_t>::char_type &) noexcept' static
|   | |-ParmVarDecl 0x13f1168 <col:19, col:36> col:36 used __c 'const std::char_traits<char32_t>::char_type &'
|   | `-CompoundStmt 0x13f3320 <line:825:7, col:31>
|   |   `-ReturnStmt 0x13f3310 <col:9, col:28>
|   |     `-CXXFunctionalCastExpr 0x13f32e8 <col:16, col:28> 'std::char_traits<char32_t>::int_type':'unsigned int' functional cast to std::char_traits<char32_t>::int_type <NoOp>
|   |       `-ImplicitCastExpr 0x13f32d0 <col:25> 'std::char_traits<char32_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |         `-ImplicitCastExpr 0x13f32b8 <col:25> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x13f3298 <col:25> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x13f1168 '__c' 'const std::char_traits<char32_t>::char_type &'
|   |-CXXMethodDecl 0x13f1470 <line:827:7, line:829:30> line:828:7 used constexpr eq_int_type 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' static
|   | |-ParmVarDecl 0x13f1318 <col:19, col:35> col:35 used __c1 'const std::char_traits<char32_t>::int_type &'
|   | |-ParmVarDecl 0x13f1390 <col:41, col:57> col:57 used __c2 'const std::char_traits<char32_t>::int_type &'
|   | `-CompoundStmt 0x13f33d8 <line:829:7, col:30>
|   |   `-ReturnStmt 0x13f33c8 <col:9, col:24>
|   |     `-BinaryOperator 0x13f33a8 <col:16, col:24> 'bool' '=='
|   |       |-ImplicitCastExpr 0x13f3378 <col:16> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13f3338 <col:16> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x13f1318 '__c1' 'const std::char_traits<char32_t>::int_type &'
|   |       `-ImplicitCastExpr 0x13f3390 <col:24> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x13f3358 <col:24> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x13f1390 '__c2' 'const std::char_traits<char32_t>::int_type &'
|   |-CXXMethodDecl 0x13f1570 <line:831:7, line:833:43> line:832:7 used constexpr eof 'std::char_traits<char32_t>::int_type () noexcept' static
|   | `-CompoundStmt 0x13f3490 <line:833:7, col:43>
|   |   `-ReturnStmt 0x13f3480 <col:9, col:40>
|   |     `-CXXStaticCastExpr 0x13f3450 <col:16, col:40> 'std::char_traits<char32_t>::int_type':'unsigned int' static_cast<std::char_traits<char32_t>::int_type> <NoOp>
|   |       `-ImplicitCastExpr 0x13f3438 <col:38, col:39> 'std::char_traits<char32_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |         `-UnaryOperator 0x13f3410 <col:38, col:39> 'int' prefix '-'
|   |           `-IntegerLiteral 0x13f33f0 <col:39> 'int' 1
|   `-CXXMethodDecl 0x13f16f0 <line:835:7, line:837:51> line:836:7 constexpr not_eof 'std::char_traits<char32_t>::int_type (const std::char_traits<char32_t>::int_type &) noexcept' static
|     |-ParmVarDecl 0x13f1620 <col:15, col:31> col:31 used __c 'const std::char_traits<char32_t>::int_type &'
|     `-CompoundStmt 0x13f36c0 <line:837:7, col:51>
|       `-ReturnStmt 0x13f36b0 <col:9, col:46>
|         `-ExprWithCleanups 0x13f3698 <col:16, col:46> 'unsigned int'
|           `-ConditionalOperator 0x13f3668 <col:16, col:46> 'unsigned int'
|             |-CallExpr 0x13f35b0 <col:16, col:38> 'bool'
|             | |-ImplicitCastExpr 0x13f3598 <col:16> 'bool (*)(const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x13f34a8 <col:16> 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' lvalue CXXMethod 0x13f1470 'eq_int_type' 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept'
|             | |-DeclRefExpr 0x13f34c8 <col:28> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x13f1620 '__c' 'const std::char_traits<char32_t>::int_type &'
|             | `-MaterializeTemporaryExpr 0x13f35e0 <col:33, col:37> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue
|             |   `-CallExpr 0x13f3550 <col:33, col:37> 'std::char_traits<char32_t>::int_type':'unsigned int'
|             |     `-ImplicitCastExpr 0x13f3538 <col:33> 'std::char_traits<char32_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
|             |       `-DeclRefExpr 0x13f34e8 <col:33> 'std::char_traits<char32_t>::int_type () noexcept' lvalue CXXMethod 0x13f1570 'eof' 'std::char_traits<char32_t>::int_type () noexcept'
|             |-ImplicitCastExpr 0x13f3650 <col:42> 'unsigned int' <IntegralCast>
|             | `-IntegerLiteral 0x13f35f8 <col:42> 'int' 0
|             `-ImplicitCastExpr 0x13f3638 <col:46> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
|               `-DeclRefExpr 0x13f3618 <col:46> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x13f1620 '__c' 'const std::char_traits<char32_t>::int_type &'
|-LinkageSpecDecl 0x13f36f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-CXXRecordDecl 0x13f3748 </usr/include/locale.h:51:1, line:118:1> line:51:8 struct lconv definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x13f3868 <col:1, col:8> col:8 implicit struct lconv
| | |-FieldDecl 0x13f3910 <line:55:3, col:9> col:9 decimal_point 'char *'
| | |-FieldDecl 0x13f3978 <line:56:3, col:9> col:9 thousands_sep 'char *'
| | |-FieldDecl 0x13f39e0 <line:62:3, col:9> col:9 grouping 'char *'
| | |-FieldDecl 0x13f3a48 <line:68:3, col:9> col:9 int_curr_symbol 'char *'
| | |-FieldDecl 0x13f3ab0 <line:69:3, col:9> col:9 currency_symbol 'char *'
| | |-FieldDecl 0x13f3b18 <line:70:3, col:9> col:9 mon_decimal_point 'char *'
| | |-FieldDecl 0x13f3b80 <line:71:3, col:9> col:9 mon_thousands_sep 'char *'
| | |-FieldDecl 0x13f3be8 <line:72:3, col:9> col:9 mon_grouping 'char *'
| | |-FieldDecl 0x13f3c50 <line:73:3, col:9> col:9 positive_sign 'char *'
| | |-FieldDecl 0x13f3cb8 <line:74:3, col:9> col:9 negative_sign 'char *'
| | |-FieldDecl 0x13f3d18 <line:75:3, col:8> col:8 int_frac_digits 'char'
| | |-FieldDecl 0x13f3d78 <line:76:3, col:8> col:8 frac_digits 'char'
| | |-FieldDecl 0x13f3dd8 <line:78:3, col:8> col:8 p_cs_precedes 'char'
| | |-FieldDecl 0x13f3e38 <line:80:3, col:8> col:8 p_sep_by_space 'char'
| | |-FieldDecl 0x13f3e98 <line:82:3, col:8> col:8 n_cs_precedes 'char'
| | |-FieldDecl 0x13f3ef8 <line:84:3, col:8> col:8 n_sep_by_space 'char'
| | |-FieldDecl 0x13f3f58 <line:91:3, col:8> col:8 p_sign_posn 'char'
| | |-FieldDecl 0x13f3fb8 <line:92:3, col:8> col:8 n_sign_posn 'char'
| | |-FieldDecl 0x13f4018 <line:95:3, col:8> col:8 int_p_cs_precedes 'char'
| | |-FieldDecl 0x13f4078 <line:97:3, col:8> col:8 int_p_sep_by_space 'char'
| | |-FieldDecl 0x13f40d8 <line:99:3, col:8> col:8 int_n_cs_precedes 'char'
| | |-FieldDecl 0x13fdc90 <line:101:3, col:8> col:8 int_n_sep_by_space 'char'
| | |-FieldDecl 0x13fdcf0 <line:108:3, col:8> col:8 int_p_sign_posn 'char'
| | `-FieldDecl 0x13fdd50 <line:109:3, col:8> col:8 int_n_sign_posn 'char'
| |-FunctionDecl 0x13fdf78 <line:122:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:122:14 setlocale 'char *(int, const char *) throw()' extern
| | |-ParmVarDecl 0x13fddd0 <col:25, col:29> col:29 __category 'int'
| | `-ParmVarDecl 0x13fde50 <col:41, col:53> col:53 __locale 'const char *'
| |-FunctionDecl 0x13fe1c8 <line:125:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:125:22 localeconv 'struct lconv *() throw()' extern
| |-FunctionDecl 0x13fe4a0 <line:141:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:141:17 newlocale 'locale_t (int, const char *, locale_t) throw()' extern
| | |-ParmVarDecl 0x13fe280 <col:28, col:32> col:32 __category_mask 'int'
| | |-ParmVarDecl 0x13fe300 <col:49, col:61> col:61 __locale 'const char *'
| | `-ParmVarDecl 0x13fe378 <line:142:7, col:16> col:16 __base 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x13fe660 <line:176:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:176:17 duplocale 'locale_t (locale_t) throw()' extern
| | `-ParmVarDecl 0x13fe568 <col:28, col:37> col:37 __dataset 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x13fe810 <line:180:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:180:13 freelocale 'void (locale_t) throw()' extern
| | `-ParmVarDecl 0x13fe718 <col:25, col:34> col:34 __dataset 'locale_t':'struct __locale_struct *'
| `-FunctionDecl 0x13fe960 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/locale.h:187:17 referenced uselocale 'locale_t (locale_t) throw()' extern
|   `-ParmVarDecl 0x13fe8c8 <col:28, col:37> col:37 __dataset 'locale_t':'struct __locale_struct *'
|-NamespaceDecl 0x13fea08 prev 0x13df878 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/clocale:51:1, line:56:1> line:51:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x13fea80 <line:53:3, col:11> col:11 ::lconv
| |-UsingShadowDecl 0x13fead8 <col:11> col:11 implicit CXXRecord 0x13f3748 'lconv'
| | `-RecordType 0x13f37e0 'lconv'
| |   `-CXXRecord 0x13f3748 'lconv'
| |-UsingDecl 0x13feb30 <line:54:3, col:11> col:11 ::setlocale
| |-UsingShadowDecl 0x13feb88 <col:11> col:11 implicit Function 0x13fdf78 'setlocale' 'char *(int, const char *) throw()'
| |-UsingDecl 0x13febe0 <line:55:3, col:11> col:11 ::localeconv
| `-UsingShadowDecl 0x13fec38 <col:11> col:11 implicit Function 0x13fe1c8 'localeconv' 'struct lconv *() throw()'
|-NamespaceDecl 0x13feca8 prev 0x13b5f80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++locale.h:48:1, line:55:1> line:48:11 __gnu_cxx
| |-original Namespace 0x103b2f8 '__gnu_cxx'
| |-VisibilityAttr 0x13fed18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| `-LinkageSpecDecl 0x13fed90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++locale.h:52:3, col:34> col:10 C
|   `-FunctionDecl 0x13fee58 <col:14, col:34> col:34 used __uselocale 'typeof (uselocale)':'locale_t (locale_t) throw()'
|     `-ParmVarDecl 0x13fef08 <col:34> col:34 implicit 'locale_t':'struct __locale_struct *'
|-NamespaceDecl 0x13fef98 prev 0x13fea08 <line:58:1, line:112:1> line:58:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x13ff008 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-TypedefDecl 0x13ff070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++locale.h:62:3, col:23> col:23 referenced __c_locale '__locale_t':'struct __locale_struct *'
| | `-TypedefType 0x10c6910 '__locale_t' sugar
| |   |-Typedef 0x10c68b0 '__locale_t'
| |   `-PointerType 0x10c6860 'struct __locale_struct *'
| |     `-ElaboratedType 0x10c6800 'struct __locale_struct' sugar
| |       `-RecordType 0x10c61b0 '__locale_struct'
| |         `-CXXRecord 0x10c6120 '__locale_struct'
| `-FunctionDecl 0x13ff4d8 <line:68:3, line:109:3> line:69:3 referenced __convert_from_v 'int (const std::__c_locale &, char *, const int, const char *, ...)' inline
|   |-ParmVarDecl 0x13ff158 <col:20, col:38> col:38 used __cloc 'const std::__c_locale &'
|   | `-UnusedAttr 0x13ff1c0 <col:61> unused
|   |-ParmVarDecl 0x13ff230 <line:70:6, col:12> col:12 used __out 'char *'
|   |-ParmVarDecl 0x13ff2b0 <line:71:6, col:16> col:16 used __size 'const int'
|   | `-UnusedAttr 0x13ff318 <col:39> unused
|   |-ParmVarDecl 0x13ff388 <line:72:6, col:18> col:18 used __fmt 'const char *'
|   `-CompoundStmt 0x1400c20 <line:73:3, line:109:3>
|     |-DeclStmt 0x13ff750 <line:75:5, col:54>
|     | `-VarDecl 0x13ff5a8 <col:5, col:53> col:16 used __old 'std::__c_locale':'struct __locale_struct *' cinit
|     |   `-CallExpr 0x13ff710 <col:24, col:53> 'locale_t':'struct __locale_struct *'
|     |     |-ImplicitCastExpr 0x13ff6f8 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x13ff648 <col:24, col:35> 'typeof (uselocale)':'locale_t (locale_t) throw()' lvalue Function 0x13fee58 '__uselocale' 'typeof (uselocale)':'locale_t (locale_t) throw()'
|     |     `-ImplicitCastExpr 0x13ff738 <col:47> 'std::__c_locale':'struct __locale_struct *' <LValueToRValue>
|     |       `-DeclRefExpr 0x13ff678 <col:47> 'const std::__c_locale':'struct __locale_struct *const' lvalue ParmVar 0x13ff158 '__cloc' 'const std::__c_locale &'
|     |-DeclStmt 0x13ffd60 <line:88:5, col:29>
|     | `-VarDecl 0x13ff778 <col:5, col:23> col:23 used __args '__builtin_va_list':'__va_list_tag [1]' callinit
|     |   `-CXXConstructExpr 0x13ffc38 <col:23> '__builtin_va_list':'__va_list_tag [1]' 'void () noexcept'
|     |-CallExpr 0x1400080 <line:89:5, col:37> 'void'
|     | |-ImplicitCastExpr 0x1400068 <col:5> 'void (*)(__va_list_tag *, ...) noexcept' <BuiltinFnToFnPtr>
|     | | `-DeclRefExpr 0x13fffb0 <col:5> '<builtin fn type>' Function 0x13ffe48 '__builtin_va_start' 'void (__va_list_tag *, ...) noexcept'
|     | |-ImplicitCastExpr 0x14000b0 <col:24> '__va_list_tag *' <ArrayToPointerDecay>
|     | | `-DeclRefExpr 0x13fffd0 <col:24> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x13ff778 '__args' '__builtin_va_list':'__va_list_tag [1]'
|     | `-DeclRefExpr 0x13ffff0 <col:32> 'const char *' lvalue ParmVar 0x13ff388 '__fmt' 'const char *'
|     |-DeclStmt 0x14007b0 <line:92:5, col:72>
|     | `-VarDecl 0x14000e0 <col:5, col:71> col:15 used __ret 'const int' cinit
|     |   `-CallExpr 0x14006a0 <col:23, col:71> 'int'
|     |     |-ImplicitCastExpr 0x1400688 <col:23> 'int (*)(char *, unsigned long, const char *, __va_list_tag *) noexcept' <BuiltinFnToFnPtr>
|     |     | `-DeclRefExpr 0x1400528 <col:23> '<builtin fn type>' Function 0x1400238 '__builtin_vsnprintf' 'int (char *, unsigned long, const char *, __va_list_tag *) noexcept'
|     |     |-ImplicitCastExpr 0x14006e0 <col:43> 'char *' <LValueToRValue>
|     |     | `-DeclRefExpr 0x1400548 <col:43> 'char *' lvalue ParmVar 0x13ff230 '__out' 'char *'
|     |     |-ImplicitCastExpr 0x1400710 <col:50> 'unsigned long' <IntegralCast>
|     |     | `-ImplicitCastExpr 0x14006f8 <col:50> 'int' <LValueToRValue>
|     |     |   `-DeclRefExpr 0x1400568 <col:50> 'const int' lvalue ParmVar 0x13ff2b0 '__size' 'const int'
|     |     |-ImplicitCastExpr 0x1400728 <col:58> 'const char *' <LValueToRValue>
|     |     | `-DeclRefExpr 0x1400588 <col:58> 'const char *' lvalue ParmVar 0x13ff388 '__fmt' 'const char *'
|     |     `-ImplicitCastExpr 0x1400740 <col:65> '__va_list_tag *' <ArrayToPointerDecay>
|     |       `-DeclRefExpr 0x14005a8 <col:65> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x13ff778 '__args' '__builtin_va_list':'__va_list_tag [1]'
|     |-CallExpr 0x1400aa0 <line:97:5, col:28> 'void'
|     | |-ImplicitCastExpr 0x1400a88 <col:5> 'void (*)(__va_list_tag *) noexcept' <BuiltinFnToFnPtr>
|     | | `-DeclRefExpr 0x14009e8 <col:5> '<builtin fn type>' Function 0x1400880 '__builtin_va_end' 'void (__va_list_tag *) noexcept'
|     | `-ImplicitCastExpr 0x1400ac8 <col:22> '__va_list_tag *' <ArrayToPointerDecay>
|     |   `-DeclRefExpr 0x1400a08 <col:22> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x13ff778 '__args' '__builtin_va_list':'__va_list_tag [1]'
|     |-CallExpr 0x1400b98 <line:100:5, col:33> 'locale_t':'struct __locale_struct *'
|     | |-ImplicitCastExpr 0x1400b80 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x1400b30 <col:5, col:16> 'typeof (uselocale)':'locale_t (locale_t) throw()' lvalue Function 0x13fee58 '__uselocale' 'typeof (uselocale)':'locale_t (locale_t) throw()'
|     | `-ImplicitCastExpr 0x1400bc0 <col:28> 'std::__c_locale':'struct __locale_struct *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1400b60 <col:28> 'std::__c_locale':'struct __locale_struct *' lvalue Var 0x13ff5a8 '__old' 'std::__c_locale':'struct __locale_struct *'
|     `-ReturnStmt 0x1400c10 <line:108:5, col:12>
|       `-ImplicitCastExpr 0x1400bf8 <col:12> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1400bd8 <col:12> 'const int' lvalue Var 0x14000e0 '__ret' 'const int'
|-LinkageSpecDecl 0x13ffdf8 <line:89:5> col:5 implicit C
| `-FunctionDecl 0x13ffe48 <col:5> col:5 implicit used __builtin_va_start 'void (__va_list_tag *, ...) noexcept' extern
|   |-ParmVarDecl 0x13ffee8 <<invalid sloc>> <invalid sloc> '__va_list_tag *'
|   `-NoThrowAttr 0x13fff58 <col:5> Implicit
|-LinkageSpecDecl 0x14001e8 <line:92:23> col:23 implicit C
| `-FunctionDecl 0x1400238 <col:23> col:23 implicit used __builtin_vsnprintf 'int (char *, unsigned long, const char *, __va_list_tag *) noexcept' extern
|   |-ParmVarDecl 0x14002d8 <<invalid sloc>> <invalid sloc> 'char *'
|   |-ParmVarDecl 0x1400340 <<invalid sloc>> <invalid sloc> 'unsigned long'
|   |-ParmVarDecl 0x14003a8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-ParmVarDecl 0x1400410 <<invalid sloc>> <invalid sloc> '__va_list_tag *'
|   |-FormatAttr 0x1400498 <col:23> Implicit printf 3 0
|   `-NoThrowAttr 0x1400500 <col:23> Implicit
|-LinkageSpecDecl 0x1400830 <line:97:5> col:5 implicit C
| `-FunctionDecl 0x1400880 <col:5> col:5 implicit used __builtin_va_end 'void (__va_list_tag *) noexcept' extern
|   |-ParmVarDecl 0x1400920 <<invalid sloc>> <invalid sloc> '__va_list_tag *'
|   `-NoThrowAttr 0x1400990 <col:5> Implicit
|-LinkageSpecDecl 0x1400c88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-EnumDecl 0x1400cd8 </usr/include/ctype.h:46:1, line:60:1> line:46:1
| | |-EnumConstantDecl 0x1401090 <line:48:3, line:43:77> line:48:3 referenced _ISupper '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b1c0 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x1401070 <col:23, col:77> 'int' Int: 256
| | |     `-ParenExpr 0x1401050 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x1401020 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1400e00 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1400dc0 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1400da0 <line:48:22> 'int' 0
| | |         | `-IntegerLiteral 0x1400de0 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1400f00 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1400ee0 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1400ea0 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1400e80 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x1400e20 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x1400e60 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1400e40 <line:48:22> 'int' 0
| | |         |   `-IntegerLiteral 0x1400ec0 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x1401000 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x1400fe0 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x1400fa0 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x1400f80 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x1400f20 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x1400f60 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1400f40 <line:48:22> 'int' 0
| | |             `-IntegerLiteral 0x1400fc0 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x14013d0 <line:49:3, line:43:77> line:49:3 referenced _ISlower '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b1d8 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x14013b0 <col:23, col:77> 'int' Int: 512
| | |     `-ParenExpr 0x1401390 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x1401360 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1401140 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1401100 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x14010e0 <line:49:22> 'int' 1
| | |         | `-IntegerLiteral 0x1401120 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1401240 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1401220 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x14011e0 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x14011c0 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x1401160 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x14011a0 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1401180 <line:49:22> 'int' 1
| | |         |   `-IntegerLiteral 0x1401200 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x1401340 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x1401320 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x14012e0 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x14012c0 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x1401260 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x14012a0 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1401280 <line:49:22> 'int' 1
| | |             `-IntegerLiteral 0x1401300 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x1401710 <line:50:3, line:43:77> line:50:3 referenced _ISalpha '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b1f0 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x14016f0 <col:23, col:77> 'int' Int: 1024
| | |     `-ParenExpr 0x14016d0 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x14016a0 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1401480 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1401440 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1401420 <line:50:22> 'int' 2
| | |         | `-IntegerLiteral 0x1401460 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1401580 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1401560 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1401520 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1401500 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x14014a0 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x14014e0 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x14014c0 <line:50:22> 'int' 2
| | |         |   `-IntegerLiteral 0x1401540 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x1401680 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x1401660 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x1401620 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x1401600 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x14015a0 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x14015e0 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x14015c0 <line:50:22> 'int' 2
| | |             `-IntegerLiteral 0x1401640 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x1401a50 <line:51:3, line:43:77> line:51:3 referenced _ISdigit '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b208 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x1401a30 <col:23, col:77> 'int' Int: 2048
| | |     `-ParenExpr 0x1401a10 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x14019e0 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x14017c0 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1401780 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1401760 <line:51:22> 'int' 3
| | |         | `-IntegerLiteral 0x14017a0 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x14018c0 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x14018a0 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1401860 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1401840 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x14017e0 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x1401820 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1401800 <line:51:22> 'int' 3
| | |         |   `-IntegerLiteral 0x1401880 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x14019c0 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x14019a0 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x1401960 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x1401940 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x14018e0 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x1401920 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1401900 <line:51:22> 'int' 3
| | |             `-IntegerLiteral 0x1401980 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x1409ab0 <line:52:3, line:43:77> line:52:3 referenced _ISxdigit '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b220 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x1409a90 <col:23, col:77> 'int' Int: 4096
| | |     `-ParenExpr 0x1409a70 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x1409a40 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1401b00 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1401ac0 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1401aa0 <line:52:23> 'int' 4
| | |         | `-IntegerLiteral 0x1401ae0 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1401c00 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1401be0 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1401ba0 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1401b80 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x1401b20 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x1401b60 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1401b40 <line:52:23> 'int' 4
| | |         |   `-IntegerLiteral 0x1401bc0 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x1409a20 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x1409a00 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x14099c0 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x14099a0 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x1401c20 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x1401c60 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1401c40 <line:52:23> 'int' 4
| | |             `-IntegerLiteral 0x14099e0 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x1409df0 <line:53:3, line:43:77> line:53:3 referenced _ISspace '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b238 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x1409dd0 <col:23, col:77> 'int' Int: 8192
| | |     `-ParenExpr 0x1409db0 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x1409d80 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1409b60 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1409b20 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1409b00 <line:53:22> 'int' 5
| | |         | `-IntegerLiteral 0x1409b40 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1409c60 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1409c40 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1409c00 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1409be0 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x1409b80 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x1409bc0 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1409ba0 <line:53:22> 'int' 5
| | |         |   `-IntegerLiteral 0x1409c20 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x1409d60 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x1409d40 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x1409d00 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x1409ce0 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x1409c80 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x1409cc0 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1409ca0 <line:53:22> 'int' 5
| | |             `-IntegerLiteral 0x1409d20 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x140a130 <line:54:3, line:43:77> line:54:3 referenced _ISprint '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b250 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x140a110 <col:23, col:77> 'int' Int: 16384
| | |     `-ParenExpr 0x140a0f0 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x140a0c0 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x1409ea0 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x1409e60 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x1409e40 <line:54:22> 'int' 6
| | |         | `-IntegerLiteral 0x1409e80 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x1409fa0 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x1409f80 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x1409f40 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x1409f20 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x1409ec0 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x1409f00 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x1409ee0 <line:54:22> 'int' 6
| | |         |   `-IntegerLiteral 0x1409f60 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x140a0a0 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x140a080 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x140a040 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x140a020 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x1409fc0 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x140a000 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x1409fe0 <line:54:22> 'int' 6
| | |             `-IntegerLiteral 0x140a060 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x140a470 <line:55:3, line:43:77> line:55:3 _ISgraph '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b268 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x140a450 <col:23, col:77> 'int' Int: 32768
| | |     `-ParenExpr 0x140a430 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x140a400 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x140a1e0 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x140a1a0 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x140a180 <line:55:22> 'int' 7
| | |         | `-IntegerLiteral 0x140a1c0 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x140a2e0 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x140a2c0 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x140a280 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x140a260 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x140a200 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x140a240 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x140a220 <line:55:22> 'int' 7
| | |         |   `-IntegerLiteral 0x140a2a0 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x140a3e0 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x140a3c0 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x140a380 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x140a360 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x140a300 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x140a340 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x140a320 <line:55:22> 'int' 7
| | |             `-IntegerLiteral 0x140a3a0 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x140a7b0 <line:56:3, line:43:77> line:56:3 referenced _ISblank '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b280 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x140a790 <col:23, col:77> 'int' Int: 1
| | |     `-ParenExpr 0x140a770 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x140a740 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x140a520 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x140a4e0 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x140a4c0 <line:56:22> 'int' 8
| | |         | `-IntegerLiteral 0x140a500 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x140a620 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x140a600 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x140a5c0 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x140a5a0 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x140a540 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x140a580 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x140a560 <line:56:22> 'int' 8
| | |         |   `-IntegerLiteral 0x140a5e0 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x140a720 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x140a700 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x140a6c0 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x140a6a0 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x140a640 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x140a680 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x140a660 <line:56:22> 'int' 8
| | |             `-IntegerLiteral 0x140a6e0 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x140aaf0 <line:57:3, line:43:77> line:57:3 referenced _IScntrl '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b298 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x140aad0 <col:23, col:77> 'int' Int: 2
| | |     `-ParenExpr 0x140aab0 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x140aa80 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x140a860 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x140a820 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x140a800 <line:57:22> 'int' 9
| | |         | `-IntegerLiteral 0x140a840 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x140a960 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x140a940 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x140a900 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x140a8e0 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x140a880 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x140a8c0 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x140a8a0 <line:57:22> 'int' 9
| | |         |   `-IntegerLiteral 0x140a920 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x140aa60 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x140aa40 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x140aa00 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x140a9e0 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x140a980 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x140a9c0 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x140a9a0 <line:57:22> 'int' 9
| | |             `-IntegerLiteral 0x140aa20 <line:43:75> 'int' 8
| | |-EnumConstantDecl 0x140ae30 <line:58:3, line:43:77> line:58:3 referenced _ISpunct '(anonymous enum at /usr/include/ctype.h:46:1)'
| | | `-ImplicitCastExpr 0x140b2b0 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x140ae10 <col:23, col:77> 'int' Int: 4
| | |     `-ParenExpr 0x140adf0 <col:23, col:77> 'int'
| | |       `-ConditionalOperator 0x140adc0 <col:24, col:76> 'int'
| | |         |-BinaryOperator 0x140aba0 <col:24, col:32> 'bool' '<'
| | |         | |-ParenExpr 0x140ab60 <col:24, col:28> 'int'
| | |         | | `-IntegerLiteral 0x140ab40 <line:58:22> 'int' 10
| | |         | `-IntegerLiteral 0x140ab80 <line:43:32> 'int' 8
| | |         |-ParenExpr 0x140aca0 <col:36, col:54> 'int'
| | |         | `-BinaryOperator 0x140ac80 <col:37, col:53> 'int' '<<'
| | |         |   |-ParenExpr 0x140ac40 <col:37, col:48> 'int'
| | |         |   | `-BinaryOperator 0x140ac20 <col:38, col:47> 'int' '<<'
| | |         |   |   |-IntegerLiteral 0x140abc0 <col:38> 'int' 1
| | |         |   |   `-ParenExpr 0x140ac00 <col:43, col:47> 'int'
| | |         |   |     `-IntegerLiteral 0x140abe0 <line:58:22> 'int' 10
| | |         |   `-IntegerLiteral 0x140ac60 <line:43:53> 'int' 8
| | |         `-ParenExpr 0x140ada0 <col:58, col:76> 'int'
| | |           `-BinaryOperator 0x140ad80 <col:59, col:75> 'int' '>>'
| | |             |-ParenExpr 0x140ad40 <col:59, col:70> 'int'
| | |             | `-BinaryOperator 0x140ad20 <col:60, col:69> 'int' '<<'
| | |             |   |-IntegerLiteral 0x140acc0 <col:60> 'int' 1
| | |             |   `-ParenExpr 0x140ad00 <col:65, col:69> 'int'
| | |             |     `-IntegerLiteral 0x140ace0 <line:58:22> 'int' 10
| | |             `-IntegerLiteral 0x140ad60 <line:43:75> 'int' 8
| | `-EnumConstantDecl 0x140b170 <line:59:3, line:43:77> line:59:3 _ISalnum '(anonymous enum at /usr/include/ctype.h:46:1)'
| |   `-ImplicitCastExpr 0x140b2c8 <line:43:23, col:77> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x140b150 <col:23, col:77> 'int' Int: 8
| |       `-ParenExpr 0x140b130 <col:23, col:77> 'int'
| |         `-ConditionalOperator 0x140b100 <col:24, col:76> 'int'
| |           |-BinaryOperator 0x140aee0 <col:24, col:32> 'bool' '<'
| |           | |-ParenExpr 0x140aea0 <col:24, col:28> 'int'
| |           | | `-IntegerLiteral 0x140ae80 <line:59:22> 'int' 11
| |           | `-IntegerLiteral 0x140aec0 <line:43:32> 'int' 8
| |           |-ParenExpr 0x140afe0 <col:36, col:54> 'int'
| |           | `-BinaryOperator 0x140afc0 <col:37, col:53> 'int' '<<'
| |           |   |-ParenExpr 0x140af80 <col:37, col:48> 'int'
| |           |   | `-BinaryOperator 0x140af60 <col:38, col:47> 'int' '<<'
| |           |   |   |-IntegerLiteral 0x140af00 <col:38> 'int' 1
| |           |   |   `-ParenExpr 0x140af40 <col:43, col:47> 'int'
| |           |   |     `-IntegerLiteral 0x140af20 <line:59:22> 'int' 11
| |           |   `-IntegerLiteral 0x140afa0 <line:43:53> 'int' 8
| |           `-ParenExpr 0x140b0e0 <col:58, col:76> 'int'
| |             `-BinaryOperator 0x140b0c0 <col:59, col:75> 'int' '>>'
| |               |-ParenExpr 0x140b080 <col:59, col:70> 'int'
| |               | `-BinaryOperator 0x140b060 <col:60, col:69> 'int' '<<'
| |               |   |-IntegerLiteral 0x140b000 <col:60> 'int' 1
| |               |   `-ParenExpr 0x140b040 <col:65, col:69> 'int'
| |               |     `-IntegerLiteral 0x140b020 <line:59:22> 'int' 11
| |               `-IntegerLiteral 0x140b0a0 <line:43:75> 'int' 8
| |-FunctionDecl 0x140b420 <line:79:1, line:80:40> line:79:35 __ctype_b_loc 'const unsigned short **() throw()' extern
| | `-ConstAttr 0x140b4c0 <line:80:30>
| |-FunctionDecl 0x140b6a8 <line:81:1, line:82:40> line:81:26 __ctype_tolower_loc 'const __int32_t **() throw()' extern
| | `-ConstAttr 0x140b748 <line:82:30>
| |-FunctionDecl 0x140b848 <line:83:1, line:84:40> line:83:26 __ctype_toupper_loc 'const __int32_t **() throw()' extern
| | `-ConstAttr 0x140b8e8 <line:84:30>
| |-FunctionDecl 0x140ba28 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:108:12 isalnum 'int (int) throw()' extern
| | |-ParmVarDecl 0x140b958 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140bb00 <line:108:12> Implicit
| | `-PureAttr 0x140bb58 <col:12> Implicit
| |-FunctionDecl 0x140bc38 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:109:12 isalpha 'int (int) throw()' extern
| | |-ParmVarDecl 0x140bb98 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140bce0 <line:109:12> Implicit
| | `-PureAttr 0x140bd38 <col:12> Implicit
| |-FunctionDecl 0x140be18 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:110:12 iscntrl 'int (int) throw()' extern
| | |-ParmVarDecl 0x140bd78 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140bec0 <line:110:12> Implicit
| | `-PureAttr 0x140bf18 <col:12> Implicit
| |-FunctionDecl 0x140bff8 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:111:12 isdigit 'int (int) throw()' extern
| | |-ParmVarDecl 0x140bf58 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140c0a0 <line:111:12> Implicit
| | `-PureAttr 0x140c0f8 <col:12> Implicit
| |-FunctionDecl 0x140c1d8 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:112:12 islower 'int (int) throw()' extern
| | |-ParmVarDecl 0x140c138 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140c280 <line:112:12> Implicit
| | `-PureAttr 0x140c2d8 <col:12> Implicit
| |-FunctionDecl 0x140c3b8 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:113:12 isgraph 'int (int) throw()' extern
| | |-ParmVarDecl 0x140c318 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140c460 <line:113:12> Implicit
| | `-PureAttr 0x140c4b8 <col:12> Implicit
| |-FunctionDecl 0x140c598 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:114:12 isprint 'int (int) throw()' extern
| | |-ParmVarDecl 0x140c4f8 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140c640 <line:114:12> Implicit
| | `-PureAttr 0x140c698 <col:12> Implicit
| |-FunctionDecl 0x140c778 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:115:12 ispunct 'int (int) throw()' extern
| | |-ParmVarDecl 0x140c6d8 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140c820 <line:115:12> Implicit
| | `-PureAttr 0x140c878 <col:12> Implicit
| |-FunctionDecl 0x140c958 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:116:12 isspace 'int (int) throw()' extern
| | |-ParmVarDecl 0x140c8b8 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140ca00 <line:116:12> Implicit
| | `-PureAttr 0x140ca58 <col:12> Implicit
| |-FunctionDecl 0x140cb38 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:117:12 isupper 'int (int) throw()' extern
| | |-ParmVarDecl 0x140ca98 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140cbe0 <line:117:12> Implicit
| | `-PureAttr 0x140cc38 <col:12> Implicit
| |-FunctionDecl 0x140cd18 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:118:12 isxdigit 'int (int) throw()' extern
| | |-ParmVarDecl 0x140cc78 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140cdc0 <line:118:12> Implicit
| | `-PureAttr 0x140ce18 <col:12> Implicit
| |-FunctionDecl 0x140cef8 <line:122:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:122:12 tolower 'int (int) throw()' extern
| | |-ParmVarDecl 0x140ce58 <col:21, col:25> col:25 __c 'int'
| | |-NoThrowAttr 0x140cfa0 <col:12> Implicit
| | `-PureAttr 0x140cff8 <col:12> Implicit
| |-FunctionDecl 0x140d0d8 <line:125:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:125:12 toupper 'int (int) throw()' extern
| | |-ParmVarDecl 0x140d038 <col:21, col:25> col:25 __c 'int'
| | |-NoThrowAttr 0x140d180 <col:12> Implicit
| | `-PureAttr 0x140d1d8 <col:12> Implicit
| |-FunctionDecl 0x140d2b8 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:130:12 isblank 'int (int) throw()' extern
| | |-ParmVarDecl 0x140d218 <line:102:42> col:45 'int'
| | |-NoThrowAttr 0x140d360 <line:130:12> Implicit
| | `-PureAttr 0x140d3b8 <col:12> Implicit
| |-FunctionDecl 0x140d598 <line:135:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:135:12 isctype 'int (int, int) throw()' extern
| | |-ParmVarDecl 0x140d3f8 <col:21, col:25> col:25 __c 'int'
| | `-ParmVarDecl 0x140d478 <col:30, col:34> col:34 __mask 'int'
| |-FunctionDecl 0x140d700 <line:142:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:142:12 isascii 'int (int) throw()' extern
| | `-ParmVarDecl 0x140d660 <col:21, col:25> col:25 __c 'int'
| |-FunctionDecl 0x140d860 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:146:12 toascii 'int (int) throw()' extern
| | `-ParmVarDecl 0x140d7c0 <col:21, col:25> col:25 __c 'int'
| |-FunctionDecl 0x140d9e8 <line:102:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:150:12 _toupper 'int (int) throw()' extern
| | `-ParmVarDecl 0x140d920 <line:102:42> col:45 'int'
| |-FunctionDecl 0x140db48 <col:25, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:151:12 _tolower 'int (int) throw()' extern
| | `-ParmVarDecl 0x140daa8 <line:102:42> col:45 'int'
| |-FunctionDecl 0x140dda8 <line:245:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:251:14 isalnum_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140dc08 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140dc80 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140df90 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:252:14 isalpha_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140de70 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140dee8 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140e178 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:253:14 iscntrl_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e058 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140e0d0 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140e360 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:254:14 isdigit_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e240 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140e2b8 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140e548 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:255:14 islower_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e428 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140e4a0 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140e730 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:256:14 isgraph_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e610 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140e688 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140e918 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:257:14 isprint_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e7f8 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140e870 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140eb00 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:258:14 ispunct_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140e9e0 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140ea58 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140ece8 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:259:14 isspace_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140ebc8 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140ec40 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140eed0 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:260:14 isupper_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140edb0 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140ee28 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140f0b8 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:261:14 isxdigit_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140ef98 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140f010 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140f2a0 <col:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:263:14 isblank_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140f180 <line:245:20> col:23 'int'
| | `-ParmVarDecl 0x140f1f8 <col:25> col:33 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140f488 <line:267:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:267:12 __tolower_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140f368 <col:25, col:29> col:29 __c 'int'
| | `-ParmVarDecl 0x140f3e0 <col:34, col:43> col:43 __l 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140f670 <line:268:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:268:12 tolower_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140f550 <col:23, col:27> col:27 __c 'int'
| | `-ParmVarDecl 0x140f5c8 <col:32, col:41> col:41 __l 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0x140f858 <line:271:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:271:12 __toupper_l 'int (int, locale_t) throw()' extern
| | |-ParmVarDecl 0x140f738 <col:25, col:29> col:29 __c 'int'
| | `-ParmVarDecl 0x140f7b0 <col:34, col:43> col:43 __l 'locale_t':'struct __locale_struct *'
| `-FunctionDecl 0x140fa40 <line:272:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/ctype.h:272:12 toupper_l 'int (int, locale_t) throw()' extern
|   |-ParmVarDecl 0x140f920 <col:23, col:27> col:27 __c 'int'
|   `-ParmVarDecl 0x140f998 <col:32, col:41> col:41 __l 'locale_t':'struct __locale_struct *'
|-NamespaceDecl 0x140faf0 prev 0x13fef98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cctype:62:1, line:77:1> line:62:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x140fb68 <line:64:3, col:11> col:11 ::isalnum
| |-UsingShadowDecl 0x140fbc0 <col:11> col:11 implicit Function 0x140ba28 'isalnum' 'int (int) throw()'
| |-UsingDecl 0x140fc18 <line:65:3, col:11> col:11 ::isalpha
| |-UsingShadowDecl 0x140fc70 <col:11> col:11 implicit Function 0x140bc38 'isalpha' 'int (int) throw()'
| |-UsingDecl 0x140fcc8 <line:66:3, col:11> col:11 ::iscntrl
| |-UsingShadowDecl 0x140fd20 <col:11> col:11 implicit Function 0x140be18 'iscntrl' 'int (int) throw()'
| |-UsingDecl 0x140fd78 <line:67:3, col:11> col:11 ::isdigit
| |-UsingShadowDecl 0x140fdd0 <col:11> col:11 implicit Function 0x140bff8 'isdigit' 'int (int) throw()'
| |-UsingDecl 0x140fe28 <line:68:3, col:11> col:11 ::isgraph
| |-UsingShadowDecl 0x140fe80 <col:11> col:11 implicit Function 0x140c3b8 'isgraph' 'int (int) throw()'
| |-UsingDecl 0x140fed8 <line:69:3, col:11> col:11 ::islower
| |-UsingShadowDecl 0x140ff30 <col:11> col:11 implicit Function 0x140c1d8 'islower' 'int (int) throw()'
| |-UsingDecl 0x140ff88 <line:70:3, col:11> col:11 ::isprint
| |-UsingShadowDecl 0x140ffe0 <col:11> col:11 implicit Function 0x140c598 'isprint' 'int (int) throw()'
| |-UsingDecl 0x1410038 <line:71:3, col:11> col:11 ::ispunct
| |-UsingShadowDecl 0x1410090 <col:11> col:11 implicit Function 0x140c778 'ispunct' 'int (int) throw()'
| |-UsingDecl 0x14100e8 <line:72:3, col:11> col:11 ::isspace
| |-UsingShadowDecl 0x1410140 <col:11> col:11 implicit Function 0x140c958 'isspace' 'int (int) throw()'
| |-UsingDecl 0x1410198 <line:73:3, col:11> col:11 ::isupper
| |-UsingShadowDecl 0x14101f0 <col:11> col:11 implicit Function 0x140cb38 'isupper' 'int (int) throw()'
| |-UsingDecl 0x1410248 <line:74:3, col:11> col:11 ::isxdigit
| |-UsingShadowDecl 0x14102a0 <col:11> col:11 implicit Function 0x140cd18 'isxdigit' 'int (int) throw()'
| |-UsingDecl 0x14102f8 <line:75:3, col:11> col:11 ::tolower
| |-UsingShadowDecl 0x1410350 <col:11> col:11 implicit Function 0x140cef8 'tolower' 'int (int) throw()'
| |-UsingDecl 0x14103a8 <line:76:3, col:11> col:11 ::toupper
| `-UsingShadowDecl 0x1410400 <col:11> col:11 implicit Function 0x140d0d8 'toupper' 'int (int) throw()'
|-NamespaceDecl 0x1410450 prev 0x140faf0 <line:85:1, line:88:1> line:85:11 std
| |-original Namespace 0x103af10 'std'
| |-UsingDecl 0x14104c8 <line:87:3, col:11> col:11 ::isblank
| `-UsingShadowDecl 0x1410520 <col:11> col:11 implicit Function 0x140d2b8 'isblank' 'int (int) throw()'
|-NamespaceDecl 0x1410590 prev 0x1410450 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:44:1, line:212:1> line:44:11 std
| |-original Namespace 0x103af10 'std'
| |-VisibilityAttr 0x1410600 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-CXXRecordDecl 0x1410658 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:55:3, col:9> col:9 referenced class locale
| |-FunctionTemplateDecl 0x1410980 <line:57:3, line:59:36> col:5 has_facet
| | |-TemplateTypeParmDecl 0x1410710 <line:57:12, col:21> col:21 typename depth 0 index 0 _Facet
| | |-FunctionDecl 0x14108e0 <line:58:5, line:59:36> col:5 has_facet 'bool (const std::locale &) throw()'
| | | `-ParmVarDecl 0x14107e8 <col:15, col:27> col:28 'const std::locale &'
| | |-FunctionDecl 0x17f1890 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/locale_classes.tcc:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::__cxx11::collate<char>'
| | | `-ParmVarDecl 0x17f17f8 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x17f30c0 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::__cxx11::collate<wchar_t>'
| | | `-ParmVarDecl 0x17f3028 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195d060 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::ctype<char>'
| | | `-ParmVarDecl 0x195cfc8 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195d400 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::__cxx11::numpunct<char>'
| | | `-ParmVarDecl 0x195d368 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195d8a0 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::num_put<char>'
| | | `-ParmVarDecl 0x195d808 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195dd40 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::num_get<char>'
| | | `-ParmVarDecl 0x195dca8 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196e9d0 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::ctype<wchar_t>'
| | | `-ParmVarDecl 0x196e938 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196ed70 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::__cxx11::numpunct<wchar_t>'
| | | `-ParmVarDecl 0x196ecd8 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196f210 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| | | |-TemplateArgument type 'std::num_put<wchar_t>'
| | | `-ParmVarDecl 0x196f178 <col:15, col:29> col:29 __loc 'const std::locale &'
| | `-FunctionDecl 0x196f6b0 <line:103:5, line:114:5> line:104:5 has_facet 'bool (const std::locale &) throw()'
| |   |-TemplateArgument type 'std::num_get<wchar_t>'
| |   `-ParmVarDecl 0x196f618 <col:15, col:29> col:29 __loc 'const std::locale &'
| |-FunctionTemplateDecl 0x1410c48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:61:3, line:63:28> col:5 use_facet
| | |-TemplateTypeParmDecl 0x14109e0 <line:61:12, col:21> col:21 referenced typename depth 0 index 0 _Facet
| | |-FunctionDecl 0x1410ba8 <line:62:5, line:63:28> col:5 use_facet 'const _Facet &(const std::locale &)'
| | | `-ParmVarDecl 0x1410a88 <col:15, col:27> col:28 'const std::locale &'
| | |-FunctionDecl 0x17f14e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/locale_classes.tcc:131:5, line:143:5> line:132:5 use_facet 'const std::__cxx11::collate<char> &(const std::locale &)'
| | | |-TemplateArgument type 'std::__cxx11::collate<char>'
| | | `-ParmVarDecl 0x17f1458 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x17f2d18 <line:131:5, line:143:5> line:132:5 use_facet 'const std::__cxx11::collate<wchar_t> &(const std::locale &)'
| | | |-TemplateArgument type 'std::__cxx11::collate<wchar_t>'
| | | `-ParmVarDecl 0x17f2c88 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195b808 <line:131:5, line:143:5> line:132:5 use_facet 'const std::ctype<char> &(const std::locale &)'
| | | |-TemplateArgument type 'std::ctype<char>'
| | | `-ParmVarDecl 0x195b778 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195bd98 <line:131:5, line:143:5> line:132:5 use_facet 'const std::__cxx11::numpunct<char> &(const std::locale &)'
| | | |-TemplateArgument type 'std::__cxx11::numpunct<char>'
| | | `-ParmVarDecl 0x195bd08 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195c528 <line:131:5, line:143:5> line:132:5 use_facet 'const std::num_put<char> &(const std::locale &)'
| | | |-TemplateArgument type 'std::num_put<char>'
| | | `-ParmVarDecl 0x195c498 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x195ccb8 <line:131:5, line:143:5> line:132:5 use_facet 'const std::num_get<char> &(const std::locale &)'
| | | |-TemplateArgument type 'std::num_get<char>'
| | | `-ParmVarDecl 0x195cc28 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196d178 <line:131:5, line:143:5> line:132:5 use_facet 'const std::ctype<wchar_t> &(const std::locale &)'
| | | |-TemplateArgument type 'std::ctype<wchar_t>'
| | | `-ParmVarDecl 0x196d0e8 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196d708 <line:131:5, line:143:5> line:132:5 use_facet 'const std::__cxx11::numpunct<wchar_t> &(const std::locale &)'
| | | |-TemplateArgument type 'std::__cxx11::numpunct<wchar_t>'
| | | `-ParmVarDecl 0x196d678 <col:15, col:29> col:29 __loc 'const std::locale &'
| | |-FunctionDecl 0x196de98 <line:131:5, line:143:5> line:132:5 use_facet 'const std::num_put<wchar_t> &(const std::locale &)'
| | | |-TemplateArgument type 'std::num_put<wchar_t>'
| | | `-ParmVarDecl 0x196de08 <col:15, col:29> col:29 __loc 'const std::locale &'
| | `-FunctionDecl 0x196e628 <line:131:5, line:143:5> line:132:5 use_facet 'const std::num_get<wchar_t> &(const std::locale &)'
| |   |-TemplateArgument type 'std::num_get<wchar_t>'
| |   `-ParmVarDecl 0x196e598 <col:15, col:29> col:29 __loc 'const std::locale &'
| |-FunctionTemplateDecl 0x1410f88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:66:3, line:68:34> col:5 isspace
| | |-TemplateTypeParmDecl 0x1410ca8 <line:66:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1410ee8 <line:67:5, line:68:34> col:5 isspace 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1410d58 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1410dd0 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1411288 <line:70:3, line:72:34> col:5 isprint
| | |-TemplateTypeParmDecl 0x1410ff0 <line:70:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x14111e8 <line:71:5, line:72:34> col:5 isprint 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1411098 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1411110 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1411588 <line:74:3, line:76:34> col:5 iscntrl
| | |-TemplateTypeParmDecl 0x14112f0 <line:74:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x14114e8 <line:75:5, line:76:34> col:5 iscntrl 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1411398 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1411410 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1411888 <line:78:3, line:80:34> col:5 isupper
| | |-TemplateTypeParmDecl 0x14115f0 <line:78:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x14117e8 <line:79:5, line:80:34> col:5 isupper 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1411698 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1411710 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x14145e8 <line:82:3, line:84:34> col:5 islower
| | |-TemplateTypeParmDecl 0x14118f0 <line:82:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1414548 <line:83:5, line:84:34> col:5 islower 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1414400 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1414478 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x14148e8 <line:86:3, line:88:34> col:5 isalpha
| | |-TemplateTypeParmDecl 0x1414650 <line:86:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1414848 <line:87:5, line:88:34> col:5 isalpha 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x14146f8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1414770 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1414be8 <line:90:3, line:92:34> col:5 isdigit
| | |-TemplateTypeParmDecl 0x1414950 <line:90:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1414b48 <line:91:5, line:92:34> col:5 isdigit 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x14149f8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1414a70 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1414ee8 <line:94:3, line:96:34> col:5 ispunct
| | |-TemplateTypeParmDecl 0x1414c50 <line:94:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1414e48 <line:95:5, line:96:34> col:5 ispunct 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1414cf8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1414d70 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x14151e8 <line:98:3, line:100:35> col:5 isxdigit
| | |-TemplateTypeParmDecl 0x1414f50 <line:98:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1415148 <line:99:5, line:100:35> col:5 isxdigit 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1414ff8 <col:14> col:20 '_CharT'
| |   `-ParmVarDecl 0x1415070 <col:22, col:34> col:35 'const std::locale &'
| |-FunctionTemplateDecl 0x14154e8 <line:102:3, line:104:34> col:5 isalnum
| | |-TemplateTypeParmDecl 0x1415250 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1415448 <line:103:5, line:104:34> col:5 isalnum 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x14152f8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1415370 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x14157e8 <line:106:3, line:108:34> col:5 isgraph
| | |-TemplateTypeParmDecl 0x1415550 <line:106:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1415748 <line:107:5, line:108:34> col:5 isgraph 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x14155f8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1415670 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1415ae8 <line:111:3, line:113:34> col:5 isblank
| | |-TemplateTypeParmDecl 0x1415850 <line:111:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1415a48 <line:112:5, line:113:34> col:5 isblank 'bool (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x14158f8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1415970 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1415e28 <line:116:3, line:118:34> col:5 toupper
| | |-TemplateTypeParmDecl 0x1415b50 <line:116:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1415d88 <line:117:5, line:118:34> col:5 toupper '_CharT (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1415bf8 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1415c70 <col:21, col:33> col:34 'const std::locale &'
| |-FunctionTemplateDecl 0x1416128 <line:120:3, line:122:34> col:5 tolower
| | |-TemplateTypeParmDecl 0x1415e90 <line:120:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | `-FunctionDecl 0x1416088 <line:121:5, line:122:34> col:5 tolower '_CharT (_CharT, const std::locale &)'
| |   |-ParmVarDecl 0x1415f38 <col:13> col:19 '_CharT'
| |   `-ParmVarDecl 0x1415fb0 <col:21, col:33> col:34 'const std::locale &'
| |-CXXRecordDecl 0x1416190 <line:125:3, col:9> col:9 class ctype_base
| |-ClassTemplateDecl 0x1416368 <line:126:3, line:127:11> col:11 ctype
| | |-TemplateTypeParmDecl 0x1416240 <line:126:12, col:21> col:21 typename depth 0 index 0 _CharT
| | |-CXXRecordDecl 0x14162d8 <line:127:5, col:11> col:11 class ctype
| | |-ClassTemplateSpecialization 0x18ce988 'ctype'
| | `-ClassTemplateSpecialization 0x18d8c60 'ctype'
| |-ClassTemplateSpecializationDecl 0x1416580 <line:128:3, col:30> col:20 class ctype
| | `-TemplateArgument type 'char'
| |-ClassTemplateSpecializationDecl 0x1416758 <line:130:3, col:33> col:20 class ctype
| | `-TemplateArgument type 'wchar_t'
| |-ClassTemplateDecl 0x1416a38 <line:132:3, line:133:11> col:11 ctype_byname
| | |-TemplateTypeParmDecl 0x1416910 <line:132:12, col:21> col:21 typename depth 0 index 0 _CharT
| | |-CXXRecordDecl 0x14169a8 <line:133:5, col:11> col:11 class ctype_byname
| | |-ClassTemplateSpecialization 0x195b208 'ctype_byname'
| | `-ClassTemplateSpecialization 0x196cb78 'ctype_byname'
| |-CXXRecordDecl 0x1416c28 <line:136:3, col:9> col:9 class codecvt_base
| |-ClassTemplateDecl 0x1416f18 <line:137:3, line:138:11> col:11 codecvt
| | |-TemplateTypeParmDecl 0x1416ce0 <line:137:12, col:21> col:21 typename depth 0 index 0 _InternT
| | |-TemplateTypeParmDecl 0x1416d58 <col:31, col:40> col:40 typename depth 0 index 1 _ExternT
| | |-TemplateTypeParmDecl 0x1416dd8 <col:50, col:59> col:59 typename depth 0 index 2 _StateT
| | |-CXXRecordDecl 0x1416e88 <line:138:5, col:11> col:11 class codecvt
| | |-ClassTemplateSpecialization 0x14171b0 'codecvt'
| | |-ClassTemplateSpecialization 0x1417438 'codecvt'
| | |-ClassTemplateSpecialization 0x14176c8 'codecvt'
| | `-ClassTemplateSpecialization 0x1417958 'codecvt'
| |-ClassTemplateSpecializationDecl 0x14171b0 <line:139:3, col:49> col:20 class codecvt
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type '__mbstate_t'
| |-ClassTemplateSpecializationDecl 0x1417438 <line:141:3, col:52> col:20 class codecvt
| | |-TemplateArgument type 'wchar_t'
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type '__mbstate_t'
| |-ClassTemplateSpecializationDecl 0x14176c8 <line:144:3, col:53> col:20 class codecvt
| | |-TemplateArgument type 'char16_t'
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type '__mbstate_t'
| |-ClassTemplateSpecializationDecl 0x1417958 <line:145:3, col:53> col:20 class codecvt
| | |-TemplateArgument type 'char32_t'
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type '__mbstate_t'
| |-ClassTemplateDecl 0x1417dd8 <line:151:3, line:152:11> col:11 codecvt_byname
| | |-TemplateTypeParmDecl 0x1417ba0 <line:151:12, col:21> col:21 typename depth 0 index 0 _InternT
| | |-TemplateTypeParmDecl 0x1417c18 <col:31, col:40> col:40 typename depth 0 index 1 _ExternT
| | |-TemplateTypeParmDecl 0x1417c98 <col:50, col:59> col:59 typename depth 0 index 2 _StateT
| | `-CXXRecordDecl 0x1417d48 <line:152:5, col:11> col:11 class codecvt_byname
| |-ClassTemplateDecl 0x14183a0 <line:156:3, line:157:11> col:11 num_get
| | |-TemplateTypeParmDecl 0x1418028 <line:156:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x1418270 <col:29, col:74> col:38 typename depth 0 index 1 _InIter
| | | `-TemplateArgument type 'istreambuf_iterator<_CharT>'
| | |-CXXRecordDecl 0x1418310 <line:157:5, col:11> col:11 class num_get
| | |-ClassTemplateSpecialization 0x194e690 'num_get'
| | `-ClassTemplateSpecialization 0x195eef0 'num_get'
| |-ClassTemplateDecl 0x141aa20 <line:158:3, line:159:11> col:11 num_put
| | |-TemplateTypeParmDecl 0x141a6a8 <line:158:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x141a8f0 <col:29, col:75> col:38 typename depth 0 index 1 _OutIter
| | | `-TemplateArgument type 'ostreambuf_iterator<_CharT>'
| | |-CXXRecordDecl 0x141a990 <line:159:5, col:11> col:11 class num_put
| | |-ClassTemplateSpecialization 0x1955b70 'num_put'
| | `-ClassTemplateSpecialization 0x1966a70 'num_put'
| |-NamespaceDecl 0x141ac48 prev 0x10fad58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x141ade8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:162:3, col:35> col:35 numpunct
| | | |-TemplateTypeParmDecl 0x141acb8 <col:12, col:21> col:21 typename depth 0 index 0 _CharT
| | | |-CXXRecordDecl 0x141ad58 <col:29, col:35> col:35 class numpunct
| | | |-ClassTemplateSpecialization 0x18ec648 'numpunct'
| | | `-ClassTemplateSpecialization 0x18ee7c8 'numpunct'
| | `-ClassTemplateDecl 0x141b108 <line:163:3, col:35> col:35 numpunct_byname
| |   |-TemplateTypeParmDecl 0x141afd8 <col:12, col:21> col:21 typename depth 0 index 0 _CharT
| |   |-CXXRecordDecl 0x141b078 <col:29, col:35> col:35 class numpunct_byname
| |   |-ClassTemplateSpecialization 0x194d688 'numpunct_byname'
| |   `-ClassTemplateSpecialization 0x195def0 'numpunct_byname'
| |-NamespaceDecl 0x141b2f8 prev 0x141ac48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x141b498 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:168:3, line:169:11> col:11 collate
| | | |-TemplateTypeParmDecl 0x141b368 <line:168:12, col:21> col:21 typename depth 0 index 0 _CharT
| | | |-CXXRecordDecl 0x141b408 <line:169:5, col:11> col:11 class collate
| | | |-ClassTemplateSpecialization 0x17d8e08 'collate'
| | | `-ClassTemplateSpecialization 0x17db818 'collate'
| | `-ClassTemplateDecl 0x141b7b8 <line:170:3, line:171:11> col:11 collate_byname
| |   |-TemplateTypeParmDecl 0x141b688 <line:170:12, col:21> col:21 typename depth 0 index 0 _CharT
| |   |-CXXRecordDecl 0x141b728 <line:171:5, col:11> col:11 class collate_byname
| |   |-ClassTemplateSpecialization 0x17f0200 'collate_byname'
| |   `-ClassTemplateSpecialization 0x17f1a30 'collate_byname'
| |-CXXRecordDecl 0x141b9a8 <line:175:3, col:9> col:9 class time_base
| |-NamespaceDecl 0x141ba60 prev 0x141b2f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x141bdb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:177:3, line:178:11> col:11 time_get
| | | |-TemplateTypeParmDecl 0x141bad0 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | | |-TemplateTypeParmDecl 0x141bc80 <col:29, col:75> col:38 typename depth 0 index 1 _InIter
| | | | `-TemplateArgument type 'istreambuf_iterator<_CharT>'
| | | `-CXXRecordDecl 0x141bd20 <line:178:5, col:11> col:11 class time_get
| | `-ClassTemplateDecl 0x141c2c0 <line:179:3, line:180:11> col:11 time_get_byname
| |   |-TemplateTypeParmDecl 0x141bfd8 <line:179:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |   |-TemplateTypeParmDecl 0x141c190 <col:29, col:75> col:38 typename depth 0 index 1 _InIter
| |   | `-TemplateArgument type 'istreambuf_iterator<_CharT>'
| |   `-CXXRecordDecl 0x141c230 <line:180:5, col:11> col:11 class time_get_byname
| |-ClassTemplateDecl 0x141c7d0 <line:182:3, line:183:11> col:11 time_put
| | |-TemplateTypeParmDecl 0x141c4e8 <line:182:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x141c6a0 <col:29, col:75> col:38 typename depth 0 index 1 _OutIter
| | | `-TemplateArgument type 'ostreambuf_iterator<_CharT>'
| | `-CXXRecordDecl 0x141c740 <line:183:5, col:11> col:11 class time_put
| |-ClassTemplateDecl 0x141cce0 <line:184:3, line:185:11> col:11 time_put_byname
| | |-TemplateTypeParmDecl 0x141c9f8 <line:184:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | |-TemplateTypeParmDecl 0x141cbb0 <col:29, col:75> col:38 typename depth 0 index 1 _OutIter
| | | `-TemplateArgument type 'ostreambuf_iterator<_CharT>'
| | `-CXXRecordDecl 0x141cc50 <line:185:5, col:11> col:11 class time_put_byname
| |-CXXRecordDecl 0x141cf08 <line:188:3, col:9> col:9 class money_base
| |-NamespaceDecl 0x141cfc0 prev 0x141ba60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x141d310 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:190:3, line:191:11> col:11 money_get
| | | |-TemplateTypeParmDecl 0x141d030 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| | | |-TemplateTypeParmDecl 0x141d1e0 <col:29, col:75> col:38 typename depth 0 index 1 _InIter
| | | | `-TemplateArgument type 'istreambuf_iterator<_CharT>'
| | | `-CXXRecordDecl 0x141d280 <line:191:5, col:11> col:11 class money_get
| | `-ClassTemplateDecl 0x141d820 <line:192:3, line:193:11> col:11 money_put
| |   |-TemplateTypeParmDecl 0x141d538 <line:192:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |   |-TemplateTypeParmDecl 0x141d6f0 <col:29, col:75> col:38 typename depth 0 index 1 _OutIter
| |   | `-TemplateArgument type 'ostreambuf_iterator<_CharT>'
| |   `-CXXRecordDecl 0x141d790 <line:193:5, col:11> col:11 class money_put
| |-NamespaceDecl 0x141da48 prev 0x141cfc0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
| | |-original Namespace 0x103b208 '__cxx11'
| | |-ClassTemplateDecl 0x141dc90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:196:3, line:197:11> col:11 moneypunct
| | | |-TemplateTypeParmDecl 0x141dab8 <line:196:12, col:21> col:21 typename depth 0 index 0 _CharT
| | | |-NonTypeTemplateParmDecl 0x141db58 <col:29, col:42> col:34 'bool' depth 0 index 1 _Intl
| | | | `-TemplateArgument expr
| | | |   `-ConstantExpr 0x141dbb8 <col:42> 'bool' Int: 0
| | | |     `-CXXBoolLiteralExpr 0x141db38 <col:42> 'bool' false
| | | `-CXXRecordDecl 0x141dc00 <line:197:5, col:11> col:11 class moneypunct
| | `-ClassTemplateDecl 0x141e0b0 <line:198:3, line:199:11> col:11 moneypunct_byname
| |   |-TemplateTypeParmDecl 0x141ded8 <line:198:12, col:21> col:21 typename depth 0 index 0 _CharT
| |   |-NonTypeTemplateParmDecl 0x141df78 <col:29, col:42> col:34 'bool' depth 0 index 1 _Intl
| |   | `-TemplateArgument expr
| |   |   `-ConstantExpr 0x141dfd8 <col:42> 'bool' Int: 0
| |   |     `-CXXBoolLiteralExpr 0x141df58 <col:42> 'bool' false
| |   `-CXXRecordDecl 0x141e020 <line:199:5, col:11> col:11 class moneypunct_byname
| |-CXXRecordDecl 0x141e2f8 <line:203:3, col:9> col:9 class messages_base
| `-NamespaceDecl 0x141e3b0 prev 0x141da48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:287:41, line:288:39> line:287:51 __cxx11 inline
|   |-original Namespace 0x103b208 '__cxx11'
|   |-ClassTemplateDecl 0x1421f30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/localefwd.h:205:3, line:206:11> col:11 messages
|   | |-TemplateTypeParmDecl 0x141e420 <line:205:12, col:21> col:21 typename depth 0 index 0 _CharT
|   | `-CXXRecordDecl 0x1421ea0 <line:206:5, col:11> col:11 class messages
|   `-ClassTemplateDecl 0x1422248 <line:207:3, line:208:11> col:11 messages_byname
|     |-TemplateTypeParmDecl 0x1422118 <line:207:12, col:21> col:21 typename depth 0 index 0 _CharT
|     `-CXXRecordDecl 0x14221b8 <line:208:5, col:11> col:11 class messages_byname
|-TypedefDecl 0x1422470 </usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x1422440 '__time_t' sugar
|   |-Typedef 0x13c9780 '__time_t'
|   `-BuiltinType 0xffd230 'long'
|-CXXRecordDecl 0x14224c8 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, line:26:1> line:10:8 struct timespec definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x14225e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x1422640 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, col:8> col:8 implicit struct timespec
| |-FieldDecl 0x14226e0 <line:12:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x1422760 <line:16:3, col:21> col:21 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x1422800 </usr/include/sched.h:38:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x14227d0 '__pid_t' sugar
|   |-Typedef 0x13c9250 '__pid_t'
|   `-BuiltinType 0xffd210 'int'
|-CXXRecordDecl 0x1422858 </usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h:23:1, line:26:1> line:23:8 struct sched_param definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x1422978 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x14229d0 </usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h:23:1, col:8> col:8 implicit struct sched_param
| `-FieldDecl 0x1422a78 <line:25:3, col:7> col:7 sched_priority 'int'
|-LinkageSpecDecl 0x1422b00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0x1422fa0 </usr/include/x86_64-linux-gnu/bits/sched.h:82:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/sched.h:82:12 clone 'int (int (*)(void *), void *, int, void *, ...) throw()' extern
| | |-ParmVarDecl 0x1422cc8 <col:19, col:43> col:25 __fn 'int (*)(void *)'
| | |-ParmVarDecl 0x1422d48 <col:46, col:52> col:52 __child_stack 'void *'
| | |-ParmVarDecl 0x1422dc8 <line:83:5, col:9> col:9 __flags 'int'
| | |-ParmVarDecl 0x1422e48 <col:18, col:24> col:24 __arg 'void *'
| | `-VisibilityAttr 0x1423060 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1423170 </usr/include/x86_64-linux-gnu/bits/sched.h:86:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/sched.h:86:12 unshare 'int (int) throw()' extern
| | |-ParmVarDecl 0x14230d0 <col:21, col:25> col:25 __flags 'int'
| | `-VisibilityAttr 0x1423218 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1423348 </usr/include/x86_64-linux-gnu/bits/sched.h:89:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/sched.h:89:12 sched_getcpu 'int () throw()' extern
| | `-VisibilityAttr 0x14233e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1423628 </usr/include/x86_64-linux-gnu/bits/sched.h:92:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/sched.h:92:12 getcpu 'int (unsigned int *, unsigned int *) throw()' extern
| | |-ParmVarDecl 0x1423480 <col:20, col:33> col:34 'unsigned int *'
| | |-ParmVarDecl 0x1423500 <col:36, col:49> col:50 'unsigned int *'
| | `-VisibilityAttr 0x14236d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FunctionDecl 0x1423870 </usr/include/x86_64-linux-gnu/bits/sched.h:95:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/sched.h:95:12 setns 'int (int, int) throw()' extern
|   |-ParmVarDecl 0x1423748 <col:19, col:23> col:23 __fd 'int'
|   |-ParmVarDecl 0x14237c8 <col:29, col:33> col:33 __nstype 'int'
|   `-VisibilityAttr 0x1423920 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-TypedefDecl 0x1423990 </usr/include/x86_64-linux-gnu/bits/cpu-set.h:32:1, col:25> col:25 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-CXXRecordDecl 0x14239e8 <line:39:9, line:42:1> line:39:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x1423b08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FieldDecl 0x1423d38 </usr/include/x86_64-linux-gnu/bits/cpu-set.h:41:3, col:47> col:14 __bits '__cpu_mask [16]'
|-TypedefDecl 0x1423df8 <line:39:1, line:42:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x1423da0 'struct cpu_set_t' sugar
|   `-RecordType 0x1423a80 'cpu_set_t'
|     `-CXXRecord 0x14239e8 ''
|-LinkageSpecDecl 0x1423e88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0x14240f8 </usr/include/x86_64-linux-gnu/bits/cpu-set.h:117:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/cpu-set.h:117:12 __sched_cpucount 'int (size_t, const cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x1423ee8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x1423fd8 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| | `-VisibilityAttr 0x14241a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1424370 </usr/include/x86_64-linux-gnu/bits/cpu-set.h:119:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/cpu-set.h:119:19 __sched_cpualloc 'cpu_set_t *(size_t) throw()' extern
| | |-ParmVarDecl 0x1424210 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| | `-VisibilityAttr 0x1424418 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FunctionDecl 0x1424580 </usr/include/x86_64-linux-gnu/bits/cpu-set.h:120:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/cpu-set.h:120:13 __sched_cpufree 'void (cpu_set_t *) throw()' extern
|   |-ParmVarDecl 0x1424480 <col:30, col:41> col:41 __set 'cpu_set_t *'
|   `-VisibilityAttr 0x1424628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-LinkageSpecDecl 0x14246a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0x1424948 </usr/include/sched.h:54:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:54:12 sched_setparam 'int (__pid_t, const struct sched_param *) throw()' extern
| | |-ParmVarDecl 0x1424700 <col:28, col:36> col:36 __pid '__pid_t':'int'
| | |-ParmVarDecl 0x1424820 <col:43, col:69> col:69 __param 'const struct sched_param *'
| | `-VisibilityAttr 0x14249f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1424c78 </usr/include/sched.h:58:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:58:12 sched_getparam 'int (__pid_t, struct sched_param *) throw()' extern
| | |-ParmVarDecl 0x1424a60 <col:28, col:36> col:36 __pid '__pid_t':'int'
| | |-ParmVarDecl 0x1424b50 <col:43, col:63> col:63 __param 'struct sched_param *'
| | `-VisibilityAttr 0x1424d28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1424fd8 </usr/include/sched.h:61:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:61:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *) throw()' extern
| | |-ParmVarDecl 0x1424d90 <col:32, col:40> col:40 __pid '__pid_t':'int'
| | |-ParmVarDecl 0x1424e10 <col:47, col:51> col:51 __policy 'int'
| | |-ParmVarDecl 0x1424ea0 <line:62:11, col:37> col:37 __param 'const struct sched_param *'
| | `-VisibilityAttr 0x1425090 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14251c8 </usr/include/sched.h:65:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:65:12 sched_getscheduler 'int (__pid_t) throw()' extern
| | |-ParmVarDecl 0x14250f8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| | `-VisibilityAttr 0x1425270 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1425370 </usr/include/sched.h:68:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:68:12 referenced sched_yield 'int () throw()' extern
| | `-VisibilityAttr 0x1425410 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1425520 </usr/include/sched.h:71:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:71:12 sched_get_priority_max 'int (int) throw()' extern
| | |-ParmVarDecl 0x1425480 <col:36, col:40> col:40 __algorithm 'int'
| | `-VisibilityAttr 0x14255c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14256d8 </usr/include/sched.h:74:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:74:12 sched_get_priority_min 'int (int) throw()' extern
| | |-ParmVarDecl 0x1425638 <col:36, col:40> col:40 __algorithm 'int'
| | `-VisibilityAttr 0x1425780 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1425a28 </usr/include/sched.h:77:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:77:12 sched_rr_get_interval 'int (__pid_t, struct timespec *) throw()' extern
| | |-ParmVarDecl 0x14257e8 <col:35, col:43> col:43 __pid '__pid_t':'int'
| | |-ParmVarDecl 0x1425900 <col:50, col:67> col:67 __t 'struct timespec *'
| | `-VisibilityAttr 0x1425ad8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1425d68 </usr/include/sched.h:121:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:121:12 sched_setaffinity 'int (__pid_t, size_t, const cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x1425b40 <col:31, col:39> col:39 __pid '__pid_t':'int'
| | |-ParmVarDecl 0x1425bb8 <col:46, col:53> col:53 __cpusetsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x1425c30 <line:122:10, col:27> col:27 __cpuset 'const cpu_set_t *'
| | `-VisibilityAttr 0x1425e20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FunctionDecl 0x143c5a8 </usr/include/sched.h:125:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/sched.h:125:12 sched_getaffinity 'int (__pid_t, size_t, cpu_set_t *) throw()' extern
|   |-ParmVarDecl 0x143c380 <col:31, col:39> col:39 __pid '__pid_t':'int'
|   |-ParmVarDecl 0x143c3f8 <col:46, col:53> col:53 __cpusetsize 'size_t':'unsigned long'
|   |-ParmVarDecl 0x143c470 <line:126:10, col:21> col:21 __cpuset 'cpu_set_t *'
|   `-VisibilityAttr 0x143c660 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-CXXRecordDecl 0x143c6b8 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, line:12:1> line:8:8 struct timeval definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x143c7d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x143c830 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, col:8> col:8 implicit struct timeval
| |-FieldDecl 0x143c8d0 <line:10:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x143c950 <line:11:3, col:17> col:17 tv_usec '__suseconds_t':'long'
|-CXXRecordDecl 0x143c9b8 </usr/include/x86_64-linux-gnu/bits/timex.h:26:1, line:54:1> line:26:8 struct timex definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x143cad8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x143cb30 </usr/include/x86_64-linux-gnu/bits/timex.h:26:1, col:8> col:8 implicit struct timex
| |-FieldDecl 0x143cbd8 <line:28:3, col:16> col:16 modes 'unsigned int'
| |-FieldDecl 0x143cc38 <line:29:3, col:21> col:21 offset '__syscall_slong_t':'long'
| |-FieldDecl 0x143cc98 <line:30:3, col:21> col:21 freq '__syscall_slong_t':'long'
| |-FieldDecl 0x143ccf8 <line:31:3, col:21> col:21 maxerror '__syscall_slong_t':'long'
| |-FieldDecl 0x143cd58 <line:32:3, col:21> col:21 esterror '__syscall_slong_t':'long'
| |-FieldDecl 0x143cdc0 <line:33:3, col:7> col:7 status 'int'
| |-FieldDecl 0x143ce20 <line:34:3, col:21> col:21 constant '__syscall_slong_t':'long'
| |-FieldDecl 0x143ce80 <line:35:3, col:21> col:21 precision '__syscall_slong_t':'long'
| |-FieldDecl 0x143cee0 <line:36:3, col:21> col:21 tolerance '__syscall_slong_t':'long'
| |-FieldDecl 0x143cf80 <line:37:3, col:18> col:18 time 'struct timeval':'timeval'
| |-FieldDecl 0x143cfe0 <line:38:3, col:21> col:21 tick '__syscall_slong_t':'long'
| |-FieldDecl 0x143d040 <line:39:3, col:21> col:21 ppsfreq '__syscall_slong_t':'long'
| |-FieldDecl 0x143d0a0 <line:40:3, col:21> col:21 jitter '__syscall_slong_t':'long'
| |-FieldDecl 0x143d108 <line:41:3, col:7> col:7 shift 'int'
| |-FieldDecl 0x143d168 <line:42:3, col:21> col:21 stabil '__syscall_slong_t':'long'
| |-FieldDecl 0x143d1c8 <line:43:3, col:21> col:21 jitcnt '__syscall_slong_t':'long'
| |-FieldDecl 0x143d228 <line:44:3, col:21> col:21 calcnt '__syscall_slong_t':'long'
| |-FieldDecl 0x143d288 <line:45:3, col:21> col:21 errcnt '__syscall_slong_t':'long'
| |-FieldDecl 0x143d2e8 <line:46:3, col:21> col:21 stbcnt '__syscall_slong_t':'long'
| |-FieldDecl 0x143d350 <line:48:3, col:7> col:7 tai 'int'
| |-FieldDecl 0x143d3f8 <line:51:3, col:9> col:8 'int'
| | `-ConstantExpr 0x143d3d8 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0x143d3a0 <col:9> 'int' 32
| |-FieldDecl 0x143d4a0 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0x143d480 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0x143d448 <col:19> 'int' 32
| |-FieldDecl 0x143d548 <col:23, col:29> col:28 'int'
| | `-ConstantExpr 0x143d528 <col:29> 'int' Int: 32
| |   `-IntegerLiteral 0x143d4f0 <col:29> 'int' 32
| |-FieldDecl 0x143d5f0 <col:33, col:39> col:38 'int'
| | `-ConstantExpr 0x143d5d0 <col:39> 'int' Int: 32
| |   `-IntegerLiteral 0x143d598 <col:39> 'int' 32
| |-FieldDecl 0x143d698 <line:52:3, col:9> col:8 'int'
| | `-ConstantExpr 0x143d678 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0x143d640 <col:9> 'int' 32
| |-FieldDecl 0x143d740 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0x143d720 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0x143d6e8 <col:19> 'int' 32
| |-FieldDecl 0x143d7e8 <col:23, col:29> col:28 'int'
| | `-ConstantExpr 0x143d7c8 <col:29> 'int' Int: 32
| |   `-IntegerLiteral 0x143d790 <col:29> 'int' 32
| |-FieldDecl 0x143d890 <col:33, col:39> col:38 'int'
| | `-ConstantExpr 0x143d870 <col:39> 'int' Int: 32
| |   `-IntegerLiteral 0x143d838 <col:39> 'int' 32
| |-FieldDecl 0x143d938 <line:53:3, col:9> col:8 'int'
| | `-ConstantExpr 0x143d918 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0x143d8e0 <col:9> 'int' 32
| |-FieldDecl 0x143d9e0 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0x143d9c0 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0x143d988 <col:19> 'int' 32
| `-FieldDecl 0x143da88 <col:23, col:29> col:28 'int'
|   `-ConstantExpr 0x143da68 <col:29> 'int' Int: 32
|     `-IntegerLiteral 0x143da30 <col:29> 'int' 32
|-LinkageSpecDecl 0x143db10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| `-FunctionDecl 0x143ddd8 </usr/include/x86_64-linux-gnu/bits/time.h:78:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/time.h:78:12 clock_adjtime 'int (__clockid_t, struct timex *) throw()' extern
|   |-ParmVarDecl 0x143db90 <col:27, col:39> col:39 __clock_id '__clockid_t':'int'
|   |-ParmVarDecl 0x143dcb0 <col:51, col:65> col:65 __utx 'struct timex *'
|   `-VisibilityAttr 0x143de88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-TypedefDecl 0x143df10 </usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x143dee0 '__clock_t' sugar
|   |-Typedef 0x13c95c0 '__clock_t'
|   `-BuiltinType 0xffd230 'long'
|-CXXRecordDecl 0x143df68 prev 0x10c6a88 </usr/include/x86_64-linux-gnu/bits/types/struct_tm.h:7:1, line:26:1> line:7:8 struct tm definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x143e060 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x143e0b8 </usr/include/x86_64-linux-gnu/bits/types/struct_tm.h:7:1, col:8> col:8 implicit struct tm
| |-FieldDecl 0x143e160 <line:9:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x143e1c8 <line:10:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x143e230 <line:11:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x143e298 <line:12:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x143e300 <line:13:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x143e368 <line:14:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x143e3d0 <line:15:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x143e438 <line:16:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x143e4a0 <line:17:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x143e508 <line:20:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x143e570 <line:21:3, col:15> col:15 tm_zone 'const char *'
|-TypedefDecl 0x143e5e8 </usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x143db60 '__clockid_t' sugar
|   |-Typedef 0x13dcf80 '__clockid_t'
|   `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x143e670 </usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x143e640 '__timer_t' sugar
|   |-Typedef 0x13dcff0 '__timer_t'
|   `-PointerType 0xffd970 'void *'
|     `-BuiltinType 0xffd170 'void'
|-CXXRecordDecl 0x143e6c8 </usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h:8:1, line:12:3> line:8:8 struct itimerspec definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x143e7e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x143e840 </usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h:8:1, col:8> col:8 implicit struct itimerspec
| |-FieldDecl 0x143e8f0 <line:10:5, col:21> col:21 it_interval 'struct timespec':'timespec'
| `-FieldDecl 0x143e960 <line:11:5, col:21> col:21 it_value 'struct timespec':'timespec'
|-CXXRecordDecl 0x143e9c8 </usr/include/time.h:49:1, col:8> col:8 struct sigevent
| `-VisibilityAttr 0x143ea80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-LinkageSpecDecl 0x143eaf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0x143ec70 </usr/include/time.h:72:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:72:16 clock 'clock_t () throw()' extern
| | `-VisibilityAttr 0x143ed10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x143eef0 </usr/include/time.h:75:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:75:15 time 'time_t (time_t *) throw()' extern
| | |-ParmVarDecl 0x143edf8 <col:21, col:29> col:29 __timer 'time_t *'
| | `-VisibilityAttr 0x143ef98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x143f198 </usr/include/time.h:78:1, line:79:40> line:78:15 difftime 'double (time_t, time_t) throw()' extern
| | |-ParmVarDecl 0x143f000 <col:25, col:32> col:32 __time1 'time_t':'long'
| | |-ParmVarDecl 0x143f078 <col:41, col:48> col:48 __time0 'time_t':'long'
| | |-ConstAttr 0x143f248 <line:79:30>
| | `-VisibilityAttr 0x143f2a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x143f450 </usr/include/time.h:82:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:82:15 mktime 'time_t (struct tm *) throw()' extern
| | |-ParmVarDecl 0x143f350 <col:23, col:34> col:34 __tp 'struct tm *'
| | `-VisibilityAttr 0x143f4f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x143f840 </usr/include/time.h:88:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:88:15 strftime 'size_t (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0x143f568 <col:25, col:42> col:42 __s 'char *__restrict'
| | |-ParmVarDecl 0x143f5e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x143f660 <line:89:4, col:27> col:27 __format 'const char *__restrict'
| | |-ParmVarDecl 0x143f6f0 <line:90:4, col:32> col:32 __tp 'const struct tm *__restrict'
| | `-VisibilityAttr 0x143f900 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x143fbb8 </usr/include/time.h:95:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:95:14 strptime 'char *(const char *__restrict, const char *__restrict, struct tm *) throw()' extern
| | |-ParmVarDecl 0x143f970 <col:24, col:47> col:47 __s 'const char *__restrict'
| | |-ParmVarDecl 0x143f9f0 <line:96:10, col:33> col:33 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0x143fa80 <col:40, col:51> col:51 __tp 'struct tm *'
| | `-VisibilityAttr 0x143fc70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1440040 </usr/include/time.h:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:104:15 strftime_l 'size_t (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x143fce0 <col:27, col:44> col:44 __s 'char *__restrict'
| | |-ParmVarDecl 0x143fd58 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x143fdd8 <line:105:6, col:29> col:29 __format 'const char *__restrict'
| | |-ParmVarDecl 0x143fe68 <line:106:6, col:34> col:34 __tp 'const struct tm *__restrict'
| | |-ParmVarDecl 0x143fee0 <line:107:6, col:15> col:15 __loc 'locale_t':'struct __locale_struct *'
| | `-VisibilityAttr 0x1440108 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1455c58 </usr/include/time.h:111:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:111:14 strptime_l 'char *(const char *__restrict, const char *__restrict, struct tm *, locale_t) throw()' extern
| | |-ParmVarDecl 0x1440178 <col:26, col:49> col:49 __s 'const char *__restrict'
| | |-ParmVarDecl 0x14401f8 <line:112:5, col:28> col:28 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0x1440288 <col:35, col:46> col:46 __tp 'struct tm *'
| | |-ParmVarDecl 0x1440300 <line:113:5, col:14> col:14 __loc 'locale_t':'struct __locale_struct *'
| | `-VisibilityAttr 0x1455d18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1455ee8 </usr/include/time.h:119:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:119:19 gmtime 'struct tm *(const time_t *) throw()' extern
| | |-ParmVarDecl 0x1455dd8 <col:27, col:41> col:41 __timer 'const time_t *'
| | `-VisibilityAttr 0x1455f90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14560a8 </usr/include/time.h:123:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:123:19 localtime 'struct tm *(const time_t *) throw()' extern
| | |-ParmVarDecl 0x1455ff8 <col:30, col:44> col:44 __timer 'const time_t *'
| | `-VisibilityAttr 0x1456150 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1456378 </usr/include/time.h:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:128:19 gmtime_r 'struct tm *(const time_t *__restrict, struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0x14561b8 <col:29, col:54> col:54 __timer 'const time_t *__restrict'
| | |-ParmVarDecl 0x1456248 <line:129:8, col:30> col:30 __tp 'struct tm *__restrict'
| | `-VisibilityAttr 0x1456428 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14565d8 </usr/include/time.h:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:133:19 localtime_r 'struct tm *(const time_t *__restrict, struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0x1456490 <col:32, col:57> col:57 __timer 'const time_t *__restrict'
| | |-ParmVarDecl 0x1456520 <line:134:11, col:33> col:33 __tp 'struct tm *__restrict'
| | `-VisibilityAttr 0x1456688 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1456808 </usr/include/time.h:139:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:139:14 asctime 'char *(const struct tm *) throw()' extern
| | |-ParmVarDecl 0x1456708 <col:23, col:40> col:40 __tp 'const struct tm *'
| | `-VisibilityAttr 0x14568b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1456a18 </usr/include/time.h:142:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:142:14 ctime 'char *(const time_t *) throw()' extern
| | |-ParmVarDecl 0x1456918 <col:21, col:35> col:35 __timer 'const time_t *'
| | `-VisibilityAttr 0x1456ac0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1456ce8 </usr/include/time.h:149:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:149:14 asctime_r 'char *(const struct tm *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0x1456b40 <col:25, col:53> col:53 __tp 'const struct tm *__restrict'
| | |-ParmVarDecl 0x1456bc0 <line:150:4, col:21> col:21 __buf 'char *__restrict'
| | `-VisibilityAttr 0x1456d98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1456fa8 </usr/include/time.h:153:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:153:14 ctime_r 'char *(const time_t *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0x1456e00 <col:23, col:48> col:48 __timer 'const time_t *__restrict'
| | |-ParmVarDecl 0x1456e80 <line:154:9, col:26> col:26 __buf 'char *__restrict'
| | `-VisibilityAttr 0x1457058 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457150 </usr/include/time.h:159:1, col:24> col:14 __tzname 'char *[2]' extern
| | `-VisibilityAttr 0x14571b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457228 </usr/include/time.h:160:1, col:12> col:12 __daylight 'int' extern
| | `-VisibilityAttr 0x1457290 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457300 </usr/include/time.h:161:1, col:17> col:17 __timezone 'long' extern
| | `-VisibilityAttr 0x1457368 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457428 </usr/include/time.h:166:1, col:22> col:14 tzname 'char *[2]' extern
| | `-VisibilityAttr 0x1457490 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1457588 </usr/include/time.h:170:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:170:13 tzset 'void () throw()' extern
| | `-VisibilityAttr 0x1457628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457698 </usr/include/time.h:174:1, col:12> col:12 daylight 'int' extern
| | `-VisibilityAttr 0x1457700 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x1457770 </usr/include/time.h:175:1, col:17> col:17 timezone 'long' extern
| | `-VisibilityAttr 0x14577d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14578f0 </usr/include/time.h:190:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:190:15 timegm 'time_t (struct tm *) throw()' extern
| | |-ParmVarDecl 0x1457858 <col:23, col:34> col:34 __tp 'struct tm *'
| | `-VisibilityAttr 0x1457998 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1457ab0 </usr/include/time.h:193:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:193:15 timelocal 'time_t (struct tm *) throw()' extern
| | |-ParmVarDecl 0x1457a18 <col:26, col:37> col:37 __tp 'struct tm *'
| | `-VisibilityAttr 0x1457b58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1457c68 </usr/include/time.h:196:1, col:67> col:12 dysize 'int (int) throw()' extern
| | |-ParmVarDecl 0x1457bc8 <col:20, col:24> col:24 __year 'int'
| | |-ConstAttr 0x1457d10 <col:57>
| | `-VisibilityAttr 0x1457d68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1457fc0 </usr/include/time.h:205:1, line:206:37> line:205:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| | |-ParmVarDecl 0x1457e10 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| | |-ParmVarDecl 0x1457ea0 <line:206:9, col:26> col:26 __remaining 'struct timespec *'
| | `-VisibilityAttr 0x1458070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1458278 </usr/include/time.h:210:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:210:12 clock_getres 'int (clockid_t, struct timespec *) throw()' extern
| | |-ParmVarDecl 0x1458100 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0x1458190 <col:48, col:65> col:65 __res 'struct timespec *'
| | `-VisibilityAttr 0x1458328 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14584c8 </usr/include/time.h:213:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:213:12 clock_gettime 'int (clockid_t, struct timespec *) throw()' extern
| | |-ParmVarDecl 0x1458390 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0x1458420 <col:49, col:66> col:66 __tp 'struct timespec *'
| | `-VisibilityAttr 0x1458578 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1458798 </usr/include/time.h:216:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:216:12 clock_settime 'int (clockid_t, const struct timespec *) throw()' extern
| | |-ParmVarDecl 0x14585e0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0x1458670 <col:49, col:72> col:72 __tp 'const struct timespec *'
| | `-VisibilityAttr 0x1458848 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1458ba0 </usr/include/time.h:224:1, line:226:30> line:224:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| | |-ParmVarDecl 0x14588b0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0x1458930 <col:51, col:55> col:55 __flags 'int'
| | |-ParmVarDecl 0x14589c0 <line:225:8, col:31> col:31 __req 'const struct timespec *'
| | |-ParmVarDecl 0x1458a50 <line:226:8, col:25> col:25 __rem 'struct timespec *'
| | `-VisibilityAttr 0x1458c60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1458ee8 </usr/include/time.h:229:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:229:12 clock_getcpuclockid 'int (pid_t, clockid_t *) throw()' extern
| | |-ParmVarDecl 0x1458cf0 <col:33, col:39> col:39 __pid 'pid_t':'int'
| | |-ParmVarDecl 0x1458dc8 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| | `-VisibilityAttr 0x1458f98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1459318 </usr/include/time.h:234:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:234:12 timer_create 'int (clockid_t, struct sigevent *__restrict, timer_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x1459000 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0x1459120 <line:235:5, col:33> col:33 __evp 'struct sigevent *__restrict'
| | |-ParmVarDecl 0x14591e8 <line:236:5, col:25> col:25 __timerid 'timer_t *__restrict'
| | `-VisibilityAttr 0x14593d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1459508 </usr/include/time.h:239:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:239:12 timer_delete 'int (timer_t) throw()' extern
| | |-ParmVarDecl 0x1459438 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| | `-VisibilityAttr 0x14595b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14599f8 </usr/include/time.h:242:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:242:12 timer_settime 'int (timer_t, int, const struct itimerspec *__restrict, struct itimerspec *__restrict) throw()' extern
| | |-ParmVarDecl 0x1459618 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| | |-ParmVarDecl 0x1459698 <col:46, col:50> col:50 __flags 'int'
| | |-ParmVarDecl 0x14597b0 <line:243:6, col:42> col:42 __value 'const struct itimerspec *__restrict'
| | |-ParmVarDecl 0x14598a0 <line:244:6, col:36> col:36 __ovalue 'struct itimerspec *__restrict'
| | `-VisibilityAttr 0x1459ab8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1459d38 </usr/include/time.h:247:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:247:12 timer_gettime 'int (timer_t, struct itimerspec *) throw()' extern
| | |-ParmVarDecl 0x1459b80 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| | |-ParmVarDecl 0x1459c10 <col:46, col:65> col:65 __value 'struct itimerspec *'
| | `-VisibilityAttr 0x1459de8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1459ef0 </usr/include/time.h:251:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:251:12 timer_getoverrun 'int (timer_t) throw()' extern
| | |-ParmVarDecl 0x1459e50 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| | `-VisibilityAttr 0x1459f98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x145a1d8 </usr/include/time.h:257:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/time.h:257:12 timespec_get 'int (struct timespec *, int) throw()' extern
| | |-ParmVarDecl 0x145a018 <col:26, col:43> col:43 __ts 'struct timespec *'
| | |-ParmVarDecl 0x145a098 <col:49, col:53> col:53 __base 'int'
| | |-NonNullAttr 0x145a288 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/time.h:258:27> 1
| | `-VisibilityAttr 0x145a2f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-VarDecl 0x145a338 </usr/include/time.h:274:1, col:12> col:12 getdate_err 'int' extern
| | `-VisibilityAttr 0x145a3a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x145a520 </usr/include/time.h:283:1, col:48> col:19 getdate 'struct tm *(const char *)' extern
| | |-ParmVarDecl 0x145a410 <col:28, col:40> col:40 __string 'const char *'
| | `-VisibilityAttr 0x145a5c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FunctionDecl 0x145a7e0 </usr/include/time.h:297:1, line:298:40> line:297:12 getdate_r 'int (const char *__restrict, struct tm *__restrict)' extern
|   |-ParmVarDecl 0x145a638 <col:23, col:46> col:46 __string 'const char *__restrict'
|   |-ParmVarDecl 0x145a6c8 <line:298:9, col:31> col:31 __resbufp 'struct tm *__restrict'
|   `-VisibilityAttr 0x145a890 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-CXXRecordDecl 0x145a8e8 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, line:53:1> line:49:16 struct __pthread_internal_list definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145aa08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145aa60 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, col:16> col:16 implicit struct __pthread_internal_list
| |-FieldDecl 0x145aba0 <line:51:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x145ac18 <line:52:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x145acd8 <line:49:1, line:53:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'__pthread_internal_list'
| `-ElaboratedType 0x145ac80 'struct __pthread_internal_list' sugar
|   `-RecordType 0x145a980 '__pthread_internal_list'
|     `-CXXRecord 0x145a8e8 '__pthread_internal_list'
|-CXXRecordDecl 0x145ad48 <line:55:9, line:58:1> line:55:16 struct __pthread_internal_slist definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145ae68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145aec0 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:55:9, col:16> col:16 implicit struct __pthread_internal_slist
| `-FieldDecl 0x145b000 <line:57:3, col:36> col:36 __next 'struct __pthread_internal_slist *'
|-TypedefDecl 0x145b0c8 <line:55:1, line:58:3> col:3 __pthread_slist_t 'struct __pthread_internal_slist':'__pthread_internal_slist'
| `-ElaboratedType 0x145b070 'struct __pthread_internal_slist' sugar
|   `-RecordType 0x145ade0 '__pthread_internal_slist'
|     `-CXXRecord 0x145ad48 '__pthread_internal_slist'
|-CXXRecordDecl 0x145b138 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, line:53:1> line:22:8 struct __pthread_mutex_s definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145b258 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145b2b0 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, col:8> col:8 implicit struct __pthread_mutex_s
| |-FieldDecl 0x145b358 <line:24:3, col:7> col:7 __lock 'int'
| |-FieldDecl 0x145b3c0 <line:25:3, col:16> col:16 __count 'unsigned int'
| |-FieldDecl 0x145b428 <line:26:3, col:7> col:7 __owner 'int'
| |-FieldDecl 0x145b490 <line:28:3, col:16> col:16 __nusers 'unsigned int'
| |-FieldDecl 0x145b4f8 <line:32:3, col:7> col:7 __kind 'int'
| |-FieldDecl 0x145b560 <line:34:3, col:9> col:9 __spins 'short'
| |-FieldDecl 0x145b5c8 <line:35:3, col:9> col:9 __elision 'short'
| `-FieldDecl 0x145b650 <line:36:3, col:20> col:20 __list '__pthread_list_t':'__pthread_internal_list'
|-CXXRecordDecl 0x145b6b8 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, line:55:1> line:23:8 struct __pthread_rwlock_arch_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145b7d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145b830 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, col:8> col:8 implicit struct __pthread_rwlock_arch_t
| |-FieldDecl 0x145b8d8 <line:25:3, col:16> col:16 __readers 'unsigned int'
| |-FieldDecl 0x145b940 <line:26:3, col:16> col:16 __writers 'unsigned int'
| |-FieldDecl 0x145b9a8 <line:27:3, col:16> col:16 __wrphase_futex 'unsigned int'
| |-FieldDecl 0x145ba10 <line:28:3, col:16> col:16 __writers_futex 'unsigned int'
| |-FieldDecl 0x145ba78 <line:29:3, col:16> col:16 __pad3 'unsigned int'
| |-FieldDecl 0x145bae0 <line:30:3, col:16> col:16 __pad4 'unsigned int'
| |-FieldDecl 0x145bb48 <line:32:3, col:7> col:7 __cur_writer 'int'
| |-FieldDecl 0x145bbb0 <line:33:3, col:7> col:7 __shared 'int'
| |-FieldDecl 0x145bc18 <line:34:3, col:15> col:15 __rwelision 'signed char'
| |-FieldDecl 0x145bd10 <line:39:3, col:25> col:17 __pad1 'unsigned char [7]'
| |-FieldDecl 0x145bd78 <line:42:3, col:21> col:21 __pad2 'unsigned long'
| `-FieldDecl 0x145bde0 <line:45:3, col:16> col:16 __flags 'unsigned int'
|-CXXRecordDecl 0x145be48 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, line:117:1> line:92:8 struct __pthread_cond_s definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145bf68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145bfc0 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, col:8> col:8 implicit struct __pthread_cond_s
| |-CXXRecordDecl 0x145c050 <line:94:17, line:102:3> line:94:17 union definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-VisibilityAttr 0x145c168 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | |-FieldDecl 0x145c1d8 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:96:19, col:42> col:42 __wseq 'unsigned long long'
| | |-CXXRecordDecl 0x145c228 <line:97:5, line:101:5> line:97:5 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-VisibilityAttr 0x145c348 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | | |-FieldDecl 0x145c3b8 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:99:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x145c420 <line:100:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x145c4e8 <line:97:5, line:101:7> col:7 __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-FieldDecl 0x145c5c8 <line:94:17> col:17 implicit '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| |-IndirectFieldDecl 0x145c628 <line:96:42> col:42 implicit __wseq 'unsigned long long'
| | |-Field 0x145c5c8 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x145c1d8 '__wseq' 'unsigned long long'
| |-IndirectFieldDecl 0x145c680 <line:101:7> col:7 implicit __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | |-Field 0x145c5c8 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x145c4e8 '__wseq32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-CXXRecordDecl 0x145c6c8 <line:103:17, line:111:3> line:103:17 union definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-VisibilityAttr 0x145c7e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | |-FieldDecl 0x145c858 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:105:19, col:42> col:42 __g1_start 'unsigned long long'
| | |-CXXRecordDecl 0x145c8a8 <line:106:5, line:110:5> line:106:5 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-VisibilityAttr 0x145c9c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | | |-FieldDecl 0x145ca38 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:108:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x145caa0 <line:109:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x145cb68 <line:106:5, line:110:7> col:7 __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x145cc48 <line:103:17> col:17 implicit '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| |-IndirectFieldDecl 0x145cca8 <line:105:42> col:42 implicit __g1_start 'unsigned long long'
| | |-Field 0x145cc48 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x145c858 '__g1_start' 'unsigned long long'
| |-IndirectFieldDecl 0x145cd00 <line:110:7> col:7 implicit __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | |-Field 0x145cc48 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x145cb68 '__g1_start32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x145cdf0 <line:112:3, col:26> col:16 __g_refs 'unsigned int [2]'
| |-FieldDecl 0x145cea8 <line:113:3, col:26> col:16 __g_size 'unsigned int [2]'
| |-FieldDecl 0x145cf10 <line:114:3, col:16> col:16 __g1_orig_size 'unsigned int'
| |-FieldDecl 0x145cf78 <line:115:3, col:16> col:16 __wrefs 'unsigned int'
| `-FieldDecl 0x145d030 <line:116:3, col:29> col:16 __g_signals 'unsigned int [2]'
|-TypedefDecl 0x145d0b0 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0xffd2d0 'unsigned long'
|-CXXRecordDecl 0x145d108 <line:32:9, line:36:1> line:32:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145d228 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x145d2e0 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:34:3, col:43> col:8 __size 'char [4]'
| `-FieldDecl 0x145d348 <line:35:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x145d408 <line:32:1, line:36:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x145d3b0 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x145d1a0 'pthread_mutexattr_t'
|     `-CXXRecord 0x145d108 ''
|-CXXRecordDecl 0x145d478 <line:41:9, line:45:1> line:41:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145d598 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x145d650 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:43:3, col:42> col:8 __size 'char [4]'
| `-FieldDecl 0x145d6b8 <line:44:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x145d778 <line:41:1, line:45:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x145d720 'union pthread_condattr_t' sugar
|   `-RecordType 0x145d510 'pthread_condattr_t'
|     `-CXXRecord 0x145d478 ''
|-TypedefDecl 0x145d800 <line:49:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x145d870 <line:53:1, col:30> col:30 referenced pthread_once_t 'int'
| `-BuiltinType 0xffd210 'int'
|-CXXRecordDecl 0x145d8c8 <line:56:1, line:60:1> line:56:7 union pthread_attr_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x145d9e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x145da40 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:1, col:7> col:7 implicit union pthread_attr_t
| |-FieldDecl 0x146d350 <line:58:3, col:38> col:8 __size 'char [56]'
| `-FieldDecl 0x146d3b8 <line:59:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x146d470 <line:62:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'pthread_attr_t'
| `-ElaboratedType 0x146d420 'union pthread_attr_t' sugar
|   `-RecordType 0x145d960 'pthread_attr_t'
|     `-CXXRecord 0x145d8c8 'pthread_attr_t'
|-CXXRecordDecl 0x146d4c8 <line:67:9, line:72:1> line:67:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146d5e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146d690 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:3, col:28> col:28 __data 'struct __pthread_mutex_s':'__pthread_mutex_s'
| |-FieldDecl 0x146d778 <line:70:3, col:39> col:8 __size 'char [40]'
| `-FieldDecl 0x146d7e0 <line:71:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x146d8a8 <line:67:1, line:72:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x146d850 'union pthread_mutex_t' sugar
|   `-RecordType 0x146d560 'pthread_mutex_t'
|     `-CXXRecord 0x146d4c8 ''
|-CXXRecordDecl 0x146d918 <line:75:9, line:80:1> line:75:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146da38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146dae0 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:77:3, col:27> col:27 __data 'struct __pthread_cond_s':'__pthread_cond_s'
| |-FieldDecl 0x146dbc8 <line:78:3, col:38> col:8 __size 'char [48]'
| `-FieldDecl 0x146dc30 <line:79:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x146dcf8 <line:75:1, line:80:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x146dca0 'union pthread_cond_t' sugar
|   `-RecordType 0x146d9b0 'pthread_cond_t'
|     `-CXXRecord 0x146d918 ''
|-CXXRecordDecl 0x146dd68 <line:86:9, line:91:1> line:86:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146de88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146df30 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:88:3, col:34> col:34 __data 'struct __pthread_rwlock_arch_t':'__pthread_rwlock_arch_t'
| |-FieldDecl 0x146dfe0 <line:89:3, col:40> col:8 __size 'char [56]'
| `-FieldDecl 0x146e048 <line:90:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x146e108 <line:86:1, line:91:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x146e0b0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x146de00 'pthread_rwlock_t'
|     `-CXXRecord 0x146dd68 ''
|-CXXRecordDecl 0x146e178 <line:93:9, line:97:1> line:93:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146e298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146e350 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:95:3, col:44> col:8 __size 'char [8]'
| `-FieldDecl 0x146e3b8 <line:96:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x146e478 <line:93:1, line:97:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x146e420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x146e210 'pthread_rwlockattr_t'
|     `-CXXRecord 0x146e178 ''
|-TypedefDecl 0x146e500 <line:103:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0xffd214 'volatile int' volatile
|   `-BuiltinType 0xffd210 'int'
|-CXXRecordDecl 0x146e558 <line:108:9, line:112:1> line:108:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146e678 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146e768 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:110:3, col:41> col:8 __size 'char [32]'
| `-FieldDecl 0x146e7d0 <line:111:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x146e898 <line:108:1, line:112:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x146e840 'union pthread_barrier_t' sugar
|   `-RecordType 0x146e5f0 'pthread_barrier_t'
|     `-CXXRecord 0x146e558 ''
|-CXXRecordDecl 0x146e908 <line:114:9, line:118:1> line:114:9 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x146ea28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FieldDecl 0x146eae0 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:116:3, col:45> col:8 __size 'char [4]'
| `-FieldDecl 0x146eb48 <line:117:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x146ec08 <line:114:1, line:118:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x146ebb0 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x146e9a0 'pthread_barrierattr_t'
|     `-CXXRecord 0x146e908 ''
|-TypedefDecl 0x146ed20 </usr/include/x86_64-linux-gnu/bits/setjmp.h:31:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x146ecc0 'long [8]' 8 
|   `-BuiltinType 0xffd230 'long'
|-EnumDecl 0x146ed78 </usr/include/pthread.h:33:1, line:39:1> line:33:1
| |-VisibilityAttr 0x146ee40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146ee98 </usr/include/pthread.h:35:3> col:3 PTHREAD_CREATE_JOINABLE '(anonymous enum at /usr/include/pthread.h:33:1)'
| `-EnumConstantDecl 0x146eee8 <line:37:3> col:3 PTHREAD_CREATE_DETACHED '(anonymous enum at /usr/include/pthread.h:33:1)'
|-EnumDecl 0x146ef38 <line:43:1, line:60:1> line:43:1
| |-VisibilityAttr 0x146f000 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146f058 </usr/include/pthread.h:45:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f0a8 <line:46:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f0f8 <line:47:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f148 <line:48:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f1d8 <line:51:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL '(anonymous enum at /usr/include/pthread.h:43:1)'
| | `-ImplicitCastExpr 0x146f468 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x146f1b8 <col:26> 'int' Int: 0
| |     `-DeclRefExpr 0x146f198 <col:26> 'int' EnumConstant 0x146f058 'PTHREAD_MUTEX_TIMED_NP' '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f268 <line:52:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE '(anonymous enum at /usr/include/pthread.h:43:1)'
| | `-ImplicitCastExpr 0x146f480 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x146f248 <col:29> 'int' Int: 1
| |     `-DeclRefExpr 0x146f228 <col:29> 'int' EnumConstant 0x146f0a8 'PTHREAD_MUTEX_RECURSIVE_NP' '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f2f8 <line:53:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK '(anonymous enum at /usr/include/pthread.h:43:1)'
| | `-ImplicitCastExpr 0x146f498 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x146f2d8 <col:30> 'int' Int: 2
| |     `-DeclRefExpr 0x146f2b8 <col:30> 'int' EnumConstant 0x146f0f8 'PTHREAD_MUTEX_ERRORCHECK_NP' '(anonymous enum at /usr/include/pthread.h:43:1)'
| |-EnumConstantDecl 0x146f388 <line:54:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT '(anonymous enum at /usr/include/pthread.h:43:1)'
| | `-ImplicitCastExpr 0x146f4b0 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x146f368 <col:27> 'int' Int: 0
| |     `-DeclRefExpr 0x146f348 <col:27> 'int' EnumConstant 0x146f1d8 'PTHREAD_MUTEX_NORMAL' '(anonymous enum at /usr/include/pthread.h:43:1)'
| `-EnumConstantDecl 0x146f418 <line:58:5, col:29> col:5 PTHREAD_MUTEX_FAST_NP '(anonymous enum at /usr/include/pthread.h:43:1)'
|   `-ImplicitCastExpr 0x146f4c8 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x146f3f8 <col:29> 'int' Int: 0
|       `-DeclRefExpr 0x146f3d8 <col:29> 'int' EnumConstant 0x146f058 'PTHREAD_MUTEX_TIMED_NP' '(anonymous enum at /usr/include/pthread.h:43:1)'
|-EnumDecl 0x146f4e0 <line:65:1, line:71:1> line:65:1
| |-VisibilityAttr 0x146f5a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146f5f8 </usr/include/pthread.h:67:3> col:3 referenced PTHREAD_MUTEX_STALLED '(anonymous enum at /usr/include/pthread.h:65:1)'
| |-EnumConstantDecl 0x146f688 <line:68:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP '(anonymous enum at /usr/include/pthread.h:65:1)'
| | `-ImplicitCastExpr 0x146f7b8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x146f668 <col:30> 'int' Int: 0
| |     `-DeclRefExpr 0x146f648 <col:30> 'int' EnumConstant 0x146f5f8 'PTHREAD_MUTEX_STALLED' '(anonymous enum at /usr/include/pthread.h:65:1)'
| |-EnumConstantDecl 0x146f6d8 <line:69:3> col:3 referenced PTHREAD_MUTEX_ROBUST '(anonymous enum at /usr/include/pthread.h:65:1)'
| `-EnumConstantDecl 0x146f768 <line:70:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP '(anonymous enum at /usr/include/pthread.h:65:1)'
|   `-ImplicitCastExpr 0x146f7d0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x146f748 <col:29> 'int' Int: 1
|       `-DeclRefExpr 0x146f728 <col:29> 'int' EnumConstant 0x146f6d8 'PTHREAD_MUTEX_ROBUST' '(anonymous enum at /usr/include/pthread.h:65:1)'
|-EnumDecl 0x146f7e8 <line:77:1, line:82:1> line:77:1
| |-VisibilityAttr 0x146f8b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146f908 </usr/include/pthread.h:79:3> col:3 PTHREAD_PRIO_NONE '(anonymous enum at /usr/include/pthread.h:77:1)'
| |-EnumConstantDecl 0x146f958 <line:80:3> col:3 PTHREAD_PRIO_INHERIT '(anonymous enum at /usr/include/pthread.h:77:1)'
| `-EnumConstantDecl 0x146f9a8 <line:81:3> col:3 PTHREAD_PRIO_PROTECT '(anonymous enum at /usr/include/pthread.h:77:1)'
|-EnumDecl 0x146f9f8 <line:100:1, line:106:1> line:100:1
| |-VisibilityAttr 0x146fac0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146fb18 </usr/include/pthread.h:102:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP '(anonymous enum at /usr/include/pthread.h:100:1)'
| |-EnumConstantDecl 0x146fb68 <line:103:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP '(anonymous enum at /usr/include/pthread.h:100:1)'
| |-EnumConstantDecl 0x146fbb8 <line:104:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP '(anonymous enum at /usr/include/pthread.h:100:1)'
| `-EnumConstantDecl 0x146fc48 <line:105:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP '(anonymous enum at /usr/include/pthread.h:100:1)'
|   `-ImplicitCastExpr 0x146fc98 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x146fc28 <col:31> 'int' Int: 0
|       `-DeclRefExpr 0x146fc08 <col:31> 'int' EnumConstant 0x146fb18 'PTHREAD_RWLOCK_PREFER_READER_NP' '(anonymous enum at /usr/include/pthread.h:100:1)'
|-EnumDecl 0x146fcb0 <line:120:1, line:126:1> line:120:1
| |-VisibilityAttr 0x146fd70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146fdc8 </usr/include/pthread.h:122:3> col:3 PTHREAD_INHERIT_SCHED '(anonymous enum at /usr/include/pthread.h:120:1)'
| `-EnumConstantDecl 0x146fe18 <line:124:3> col:3 PTHREAD_EXPLICIT_SCHED '(anonymous enum at /usr/include/pthread.h:120:1)'
|-EnumDecl 0x146fe68 <line:130:1, line:136:1> line:130:1
| |-VisibilityAttr 0x146ff30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x146ff88 </usr/include/pthread.h:132:3> col:3 PTHREAD_SCOPE_SYSTEM '(anonymous enum at /usr/include/pthread.h:130:1)'
| `-EnumConstantDecl 0x146ffd8 <line:134:3> col:3 PTHREAD_SCOPE_PROCESS '(anonymous enum at /usr/include/pthread.h:130:1)'
|-EnumDecl 0x1470028 <line:140:1, line:146:1> line:140:1
| |-VisibilityAttr 0x14700f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x1470148 </usr/include/pthread.h:142:3> col:3 PTHREAD_PROCESS_PRIVATE '(anonymous enum at /usr/include/pthread.h:140:1)'
| `-EnumConstantDecl 0x1470198 <line:144:3> col:3 PTHREAD_PROCESS_SHARED '(anonymous enum at /usr/include/pthread.h:140:1)'
|-CXXRecordDecl 0x14701e8 <line:155:1, line:161:1> line:155:8 struct _pthread_cleanup_buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-VisibilityAttr 0x1470308 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x1470360 </usr/include/pthread.h:155:1, col:8> col:8 implicit struct _pthread_cleanup_buffer
| |-FieldDecl 0x14704d0 <line:157:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x1470538 <line:158:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x14705a0 <line:159:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x1470670 <line:160:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x14706d8 <line:164:1, line:170:1> line:164:1
| |-VisibilityAttr 0x14707a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x14707f8 </usr/include/pthread.h:166:3> col:3 PTHREAD_CANCEL_ENABLE '(anonymous enum at /usr/include/pthread.h:164:1)'
| `-EnumConstantDecl 0x1470848 <line:168:3> col:3 PTHREAD_CANCEL_DISABLE '(anonymous enum at /usr/include/pthread.h:164:1)'
|-EnumDecl 0x1470898 <line:171:1, line:177:1> line:171:1
| |-VisibilityAttr 0x1470960 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-EnumConstantDecl 0x14709b8 </usr/include/pthread.h:173:3> col:3 referenced PTHREAD_CANCEL_DEFERRED '(anonymous enum at /usr/include/pthread.h:171:1)'
| `-EnumConstantDecl 0x1470a08 <line:175:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS '(anonymous enum at /usr/include/pthread.h:171:1)'
|-LinkageSpecDecl 0x1470a78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0x1471008 </usr/include/pthread.h:198:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:198:12 referenced pthread_create 'int (pthread_t *__restrict, const pthread_attr_t *__restrict, void *(*)(void *), void *__restrict) throw()' extern
| | |-ParmVarDecl 0x1470b28 <col:28, col:50> col:50 __newthread 'pthread_t *__restrict'
| | |-ParmVarDecl 0x1470c18 <line:199:7, col:40> col:40 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x1470df8 <line:200:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| | |-ParmVarDecl 0x1470e78 <line:201:7, col:24> col:24 __arg 'void *__restrict'
| | |-NonNullAttr 0x14710c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:201:57> 1 3
| | |-CallbackAttr 0x1471138 <line:198:12> Implicit 2 3
| | `-VisibilityAttr 0x1471178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1471278 </usr/include/pthread.h:207:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| | |-ParmVarDecl 0x14711b8 <col:27, col:33> col:33 __retval 'void *'
| | `-VisibilityAttr 0x1471320 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14789e0 </usr/include/pthread.h:215:1, col:64> col:12 referenced pthread_join 'int (pthread_t, void **)' extern
| | |-ParmVarDecl 0x1478840 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x14788c0 <col:42, col:49> col:49 __thread_return 'void **'
| | `-VisibilityAttr 0x1478a90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1478c58 </usr/include/pthread.h:220:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:220:12 pthread_tryjoin_np 'int (pthread_t, void **) throw()' extern
| | |-ParmVarDecl 0x1478af8 <col:32, col:42> col:42 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1478b78 <col:48, col:55> col:55 __thread_return 'void **'
| | `-VisibilityAttr 0x1478d08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1478fb0 </usr/include/pthread.h:228:1, line:229:38> line:228:12 pthread_timedjoin_np 'int (pthread_t, void **, const struct timespec *)' extern
| | |-ParmVarDecl 0x1478d70 <col:34, col:44> col:44 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1478df0 <col:50, col:57> col:57 __thread_return 'void **'
| | |-ParmVarDecl 0x1478e80 <line:229:6, col:29> col:29 __abstime 'const struct timespec *'
| | `-VisibilityAttr 0x1479068 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14793a0 </usr/include/pthread.h:238:1, line:240:38> line:238:12 pthread_clockjoin_np 'int (pthread_t, void **, clockid_t, const struct timespec *)' extern
| | |-ParmVarDecl 0x14790d0 <col:34, col:44> col:44 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1479150 <col:50, col:57> col:57 __thread_return 'void **'
| | |-ParmVarDecl 0x14791c8 <line:239:34, col:44> col:44 __clockid 'clockid_t':'int'
| | |-ParmVarDecl 0x1479258 <line:240:6, col:29> col:29 __abstime 'const struct timespec *'
| | `-VisibilityAttr 0x1479460 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1479598 </usr/include/pthread.h:247:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:247:12 referenced pthread_detach 'int (pthread_t) throw()' extern
| | |-ParmVarDecl 0x14794c8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| | `-VisibilityAttr 0x1479640 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1479790 </usr/include/pthread.h:251:1, col:72> col:18 referenced pthread_self 'pthread_t () throw()' extern
| | |-ConstAttr 0x1479830 <col:62>
| | `-VisibilityAttr 0x1479888 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1479a58 </usr/include/pthread.h:254:1, line:255:37> line:254:12 referenced pthread_equal 'int (pthread_t, pthread_t) throw()' extern
| | |-ParmVarDecl 0x14798c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1479938 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| | |-ConstAttr 0x1479b08 <line:255:27>
| | `-VisibilityAttr 0x1479b60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1479d18 </usr/include/pthread.h:263:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:263:12 pthread_attr_init 'int (pthread_attr_t *) throw()' extern
| | |-ParmVarDecl 0x1479bf8 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| | |-NonNullAttr 0x1479dc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:263:76> 1
| | `-VisibilityAttr 0x1479e28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1479f20 </usr/include/pthread.h:266:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:266:12 pthread_attr_destroy 'int (pthread_attr_t *) throw()' extern
| | |-ParmVarDecl 0x1479e60 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| | |-NonNullAttr 0x1479fc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:267:27> 1
| | `-VisibilityAttr 0x147a038 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147a258 </usr/include/pthread.h:270:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:270:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *) throw()' extern
| | |-ParmVarDecl 0x147a070 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| | |-ParmVarDecl 0x147a0f0 <line:271:6, col:11> col:11 __detachstate 'int *'
| | |-NonNullAttr 0x147a308 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:272:30> 1 2
| | `-VisibilityAttr 0x147a378 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147a578 </usr/include/pthread.h:275:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:275:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int) throw()' extern
| | |-ParmVarDecl 0x147a3b0 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147a430 <line:276:6, col:10> col:10 __detachstate 'int'
| | |-NonNullAttr 0x147a628 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:277:27> 1
| | `-VisibilityAttr 0x147a698 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147a8a8 </usr/include/pthread.h:281:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:281:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *) throw()' extern
| | |-ParmVarDecl 0x147a6d0 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| | |-ParmVarDecl 0x147a748 <line:282:11, col:19> col:19 __guardsize 'size_t *'
| | |-NonNullAttr 0x147a958 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:283:30> 1 2
| | `-VisibilityAttr 0x147a9c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147abb8 </usr/include/pthread.h:286:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:286:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x147aa00 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147aa78 <line:287:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| | |-NonNullAttr 0x147ac68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:288:27> 1
| | `-VisibilityAttr 0x147acd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147af08 </usr/include/pthread.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:292:12 pthread_attr_getschedparam 'int (const pthread_attr_t *__restrict, struct sched_param *__restrict) throw()' extern
| | |-ParmVarDecl 0x147ad10 <col:40, col:73> col:73 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147ada0 <line:293:12, col:43> col:43 __param 'struct sched_param *__restrict'
| | |-NonNullAttr 0x147afb8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:294:30> 1 2
| | `-VisibilityAttr 0x147b028 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147b258 </usr/include/pthread.h:297:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:297:12 pthread_attr_setschedparam 'int (pthread_attr_t *__restrict, const struct sched_param *__restrict) throw()' extern
| | |-ParmVarDecl 0x147b060 <col:40, col:67> col:67 __attr 'pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147b0f0 <line:298:12, line:299:12> col:12 __param 'const struct sched_param *__restrict'
| | |-NonNullAttr 0x147b308 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:299:45> 1 2
| | `-VisibilityAttr 0x147b378 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147b558 </usr/include/pthread.h:302:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:302:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x147b3b0 <col:41, line:303:6> col:6 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147b430 <col:14, col:30> col:30 __policy 'int *__restrict'
| | |-NonNullAttr 0x147b608 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:304:30> 1 2
| | `-VisibilityAttr 0x147b678 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147b7f8 </usr/include/pthread.h:307:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:307:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int) throw()' extern
| | |-ParmVarDecl 0x147b6b0 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147b730 <col:65, col:69> col:69 __policy 'int'
| | |-NonNullAttr 0x147b8a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:308:27> 1
| | `-VisibilityAttr 0x147b918 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147bab8 </usr/include/pthread.h:311:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:311:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x147b950 <col:42, line:312:7> col:7 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147b9d0 <col:15, col:31> col:31 __inherit 'int *__restrict'
| | |-NonNullAttr 0x147bb68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:313:30> 1 2
| | `-VisibilityAttr 0x147bbd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147bd58 </usr/include/pthread.h:316:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:316:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int) throw()' extern
| | |-ParmVarDecl 0x147bc10 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147bc90 <line:317:7, col:11> col:11 __inherit 'int'
| | |-NonNullAttr 0x147be08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:318:27> 1
| | `-VisibilityAttr 0x147be78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147c018 </usr/include/pthread.h:322:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:322:12 pthread_attr_getscope 'int (const pthread_attr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x147beb0 <col:35, col:68> col:68 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147bf30 <line:323:7, col:23> col:23 __scope 'int *__restrict'
| | |-NonNullAttr 0x147c0c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:324:30> 1 2
| | `-VisibilityAttr 0x147c138 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147c2b8 </usr/include/pthread.h:327:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:327:12 pthread_attr_setscope 'int (pthread_attr_t *, int) throw()' extern
| | |-ParmVarDecl 0x147c170 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147c1f0 <col:59, col:63> col:63 __scope 'int'
| | |-NonNullAttr 0x147c368 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:328:27> 1
| | `-VisibilityAttr 0x147c3d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147c5f8 </usr/include/pthread.h:331:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:251:66> /usr/include/pthread.h:331:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *__restrict, void **__restrict) throw()' extern
| | |-ParmVarDecl 0x147c410 <col:39, line:332:11> col:11 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147c490 <col:19, col:37> col:37 __stackaddr 'void **__restrict'
| | |-NonNullAttr 0x147c6a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:333:30> 1 2
| | |-DeprecatedAttr 0x147c718 </usr/include/x86_64-linux-gnu/sys/cdefs.h:251:51> "" ""
| | `-VisibilityAttr 0x147c758 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147c968 </usr/include/pthread.h:339:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:251:66> /usr/include/pthread.h:339:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *) throw()' extern
| | |-ParmVarDecl 0x147c790 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147c828 <line:340:11, col:17> col:17 __stackaddr 'void *'
| | |-NonNullAttr 0x147ca18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:341:27> 1
| | |-DeprecatedAttr 0x147ca88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:251:51> "" ""
| | `-VisibilityAttr 0x147cac8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147cc98 </usr/include/pthread.h:344:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:344:12 pthread_attr_getstacksize 'int (const pthread_attr_t *__restrict, size_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x147cb00 <col:39, line:345:11> col:11 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147cb78 <col:19, col:38> col:38 __stacksize 'size_t *__restrict'
| | |-NonNullAttr 0x147cd48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:346:30> 1 2
| | `-VisibilityAttr 0x147cdb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147cf30 </usr/include/pthread.h:351:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:351:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t) throw()' extern
| | |-ParmVarDecl 0x147cdf0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147ce68 <line:352:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| | |-NonNullAttr 0x147cfe0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:353:27> 1
| | `-VisibilityAttr 0x147d048 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147d308 </usr/include/pthread.h:357:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:357:12 pthread_attr_getstack 'int (const pthread_attr_t *__restrict, void **__restrict, size_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x147d080 <col:35, col:68> col:68 __attr 'const pthread_attr_t *__restrict'
| | |-ParmVarDecl 0x147d100 <line:358:7, col:25> col:25 __stackaddr 'void **__restrict'
| | |-ParmVarDecl 0x147d178 <line:359:7, col:26> col:26 __stacksize 'size_t *__restrict'
| | |-NonNullAttr 0x147d3c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:360:33> 1 2 3
| | `-VisibilityAttr 0x147d430 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147d6b8 </usr/include/pthread.h:365:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:365:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t) throw()' extern
| | |-ParmVarDecl 0x147d468 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147d4e8 <col:59, col:65> col:65 __stackaddr 'void *'
| | |-ParmVarDecl 0x147d560 <line:366:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| | |-NonNullAttr 0x147d770 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:366:48> 1
| | `-VisibilityAttr 0x147d7d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147da78 </usr/include/pthread.h:372:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:372:12 pthread_attr_setaffinity_np 'int (pthread_attr_t *, size_t, const cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x147d810 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| | |-ParmVarDecl 0x147d888 <line:373:6, col:13> col:13 __cpusetsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x147d900 <line:374:6, col:23> col:23 __cpuset 'const cpu_set_t *'
| | |-NonNullAttr 0x147db30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:375:30> 1 3
| | `-VisibilityAttr 0x147db98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147de38 </usr/include/pthread.h:379:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:379:12 pthread_attr_getaffinity_np 'int (const pthread_attr_t *, size_t, cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x147dbd0 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| | |-ParmVarDecl 0x147dc48 <line:380:6, col:13> col:13 __cpusetsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x147dcc0 <line:381:6, col:17> col:17 __cpuset 'cpu_set_t *'
| | |-NonNullAttr 0x147def0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:382:30> 1 3
| | `-VisibilityAttr 0x147df58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147e050 </usr/include/pthread.h:385:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:385:12 pthread_getattr_default_np 'int (pthread_attr_t *) throw()' extern
| | |-ParmVarDecl 0x147df90 <col:40, col:56> col:56 __attr 'pthread_attr_t *'
| | |-NonNullAttr 0x147e0f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:386:27> 1
| | `-VisibilityAttr 0x147e168 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147e2c8 </usr/include/pthread.h:390:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:390:12 pthread_setattr_default_np 'int (const pthread_attr_t *) throw()' extern
| | |-ParmVarDecl 0x147e1a0 <col:40, col:62> col:62 __attr 'const pthread_attr_t *'
| | |-NonNullAttr 0x147e370 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:391:27> 1
| | `-VisibilityAttr 0x147e3d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147e5c8 </usr/include/pthread.h:396:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:396:12 pthread_getattr_np 'int (pthread_t, pthread_attr_t *) throw()' extern
| | |-ParmVarDecl 0x147e410 <col:32, col:42> col:42 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147e488 <col:48, col:64> col:64 __attr 'pthread_attr_t *'
| | |-NonNullAttr 0x147e678 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:397:27> 2
| | `-VisibilityAttr 0x147e6e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147e988 </usr/include/pthread.h:405:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:405:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *) throw()' extern
| | |-ParmVarDecl 0x147e720 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147e7a0 <col:62, col:66> col:66 __policy 'int'
| | |-ParmVarDecl 0x147e830 <line:406:7, col:33> col:33 __param 'const struct sched_param *'
| | |-NonNullAttr 0x147ea40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:407:27> 3
| | `-VisibilityAttr 0x147eaa8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147ed68 </usr/include/pthread.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:410:12 pthread_getschedparam 'int (pthread_t, int *__restrict, struct sched_param *__restrict) throw()' extern
| | |-ParmVarDecl 0x147eae0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147eb60 <line:411:7, col:23> col:23 __policy 'int *__restrict'
| | |-ParmVarDecl 0x147ebf0 <line:412:7, col:38> col:38 __param 'struct sched_param *__restrict'
| | |-NonNullAttr 0x147ee20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:413:30> 2 3
| | `-VisibilityAttr 0x147ee88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147f068 </usr/include/pthread.h:416:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:416:12 pthread_setschedprio 'int (pthread_t, int) throw()' extern
| | |-ParmVarDecl 0x147eec0 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147ef40 <col:61, col:65> col:65 __prio 'int'
| | `-VisibilityAttr 0x147f118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147f3c8 </usr/include/pthread.h:422:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:422:12 pthread_getname_np 'int (pthread_t, char *, size_t) throw()' extern
| | |-ParmVarDecl 0x147f180 <col:32, col:42> col:42 __target_thread 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147f200 <col:59, col:65> col:65 __buf 'char *'
| | |-ParmVarDecl 0x147f278 <line:423:11, col:18> col:18 __buflen 'size_t':'unsigned long'
| | |-NonNullAttr 0x147f480 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:424:27> 2
| | `-VisibilityAttr 0x147f4e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147f6e8 </usr/include/pthread.h:427:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:427:12 pthread_setname_np 'int (pthread_t, const char *) throw()' extern
| | |-ParmVarDecl 0x147f520 <col:32, col:42> col:42 __target_thread 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147f5a0 <col:59, col:71> col:71 __name 'const char *'
| | |-NonNullAttr 0x147f798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:428:27> 2
| | `-VisibilityAttr 0x147f808 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147f8d8 </usr/include/pthread.h:434:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:434:12 pthread_getconcurrency 'int () throw()' extern
| | `-VisibilityAttr 0x147f978 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147fa88 </usr/include/pthread.h:437:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:437:12 pthread_setconcurrency 'int (int) throw()' extern
| | |-ParmVarDecl 0x147f9e8 <col:36, col:40> col:40 __level 'int'
| | `-VisibilityAttr 0x147fb30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147fc30 </usr/include/pthread.h:445:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:445:12 pthread_yield 'int () throw()' extern
| | `-VisibilityAttr 0x147fcd0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x147ff78 </usr/include/pthread.h:450:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:450:12 pthread_setaffinity_np 'int (pthread_t, size_t, const cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x147fd38 <col:36, col:46> col:46 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x147fdb0 <col:52, col:59> col:59 __cpusetsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x147fe28 <line:451:8, col:25> col:25 __cpuset 'const cpu_set_t *'
| | |-NonNullAttr 0x1480030 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:452:27> 3
| | `-VisibilityAttr 0x1480098 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1480318 </usr/include/pthread.h:455:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:455:12 pthread_getaffinity_np 'int (pthread_t, size_t, cpu_set_t *) throw()' extern
| | |-ParmVarDecl 0x14800d0 <col:36, col:46> col:46 __th 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1480148 <col:52, col:59> col:59 __cpusetsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0x14801c0 <line:456:8, col:19> col:19 __cpuset 'cpu_set_t *'
| | |-NonNullAttr 0x14803d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:457:27> 3
| | `-VisibilityAttr 0x1480438 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1480720 </usr/include/pthread.h:470:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:470:12 referenced pthread_once 'int (pthread_once_t *, void (*)())' extern
| | |-ParmVarDecl 0x14804b8 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| | |-ParmVarDecl 0x14805c8 <line:471:5, col:33> col:12 __init_routine 'void (*)()'
| | |-NonNullAttr 0x14807d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:471:52> 1 2
| | `-VisibilityAttr 0x1480850 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14809b0 </usr/include/pthread.h:482:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| | |-ParmVarDecl 0x1480890 <col:36, col:40> col:40 __state 'int'
| | |-ParmVarDecl 0x1480910 <col:49, col:54> col:54 __oldstate 'int *'
| | `-VisibilityAttr 0x1480a60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1480bf0 </usr/include/pthread.h:486:1, col:61> col:12 used pthread_setcanceltype 'int (int, int *)' extern
| | |-ParmVarDecl 0x1480ad0 <col:35, col:39> col:39 __type 'int'
| | |-ParmVarDecl 0x1480b50 <col:47, col:52> col:52 __oldtype 'int *'
| | `-VisibilityAttr 0x1480ca0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1480dd0 </usr/include/pthread.h:489:1, col:42> col:12 referenced pthread_cancel 'int (pthread_t)' extern
| | |-ParmVarDecl 0x1480d08 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| | `-VisibilityAttr 0x1480e78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1480f68 </usr/include/pthread.h:494:1, col:37> col:13 pthread_testcancel 'void ()' extern
| | `-VisibilityAttr 0x1481008 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-CXXRecordDecl 0x1481060 </usr/include/pthread.h:499:9, line:507:1> line:499:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-VisibilityAttr 0x1481178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | |-CXXRecordDecl 0x14811d0 </usr/include/pthread.h:501:3, line:505:3> line:501:3 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-VisibilityAttr 0x14812e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | | |-FieldDecl 0x1481370 </usr/include/pthread.h:503:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | | `-FieldDecl 0x14813d8 <line:504:5, col:9> col:9 __mask_was_saved 'int'
| | |-FieldDecl 0x1481628 <line:501:3, line:505:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at /usr/include/pthread.h:501:3) [1]'
| | `-FieldDecl 0x1481730 <line:506:3, col:16> col:9 __pad 'void *[4]'
| |-TypedefDecl 0x14817f8 <line:499:1, line:507:3> col:3 __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| | |-ElaboratedType 0x14817a0 'struct __pthread_unwind_buf_t' sugar
| | | `-RecordType 0x14810f0 '__pthread_unwind_buf_t'
| | |   `-CXXRecord 0x1481060 ''
| | `-AlignedAttr 0x1481850 <col:42> aligned
| |   `-<<<NULL>>>
| |-CXXRecordDecl 0x14818c8 <line:516:1, line:522:1> line:516:8 struct __pthread_cleanup_frame definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-VisibilityAttr 0x14819e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | |-CXXRecordDecl 0x1481a40 </usr/include/pthread.h:516:1, col:8> col:8 implicit struct __pthread_cleanup_frame
| | |-FieldDecl 0x1481bb0 <line:518:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| | |-FieldDecl 0x1481c18 <line:519:3, col:9> col:9 __cancel_arg 'void *'
| | |-FieldDecl 0x1481c80 <line:520:3, col:7> col:7 __do_it 'int'
| | `-FieldDecl 0x1481ce8 <line:521:3, col:7> col:7 __cancel_type 'int'
| |-CXXRecordDecl 0x1481d50 <line:527:1, line:542:1> line:527:7 class __pthread_cleanup_class definition
| | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment
| | | `-Destructor non_trivial user_declared
| | |-VisibilityAttr 0x1481e68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| | |-CXXRecordDecl 0x1481ec0 </usr/include/pthread.h:527:1, col:7> col:7 implicit referenced class __pthread_cleanup_class
| | |-FieldDecl 0x1482030 <line:529:3, col:35> col:10 referenced __cancel_routine 'void (*)(void *)'
| | |-FieldDecl 0x1482098 <line:530:3, col:9> col:9 referenced __cancel_arg 'void *'
| | |-FieldDecl 0x1482100 <line:531:3, col:7> col:7 referenced __do_it 'int'
| | |-FieldDecl 0x1482168 <line:532:3, col:7> col:7 referenced __cancel_type 'int'
| | |-AccessSpecDecl 0x14821b8 <line:534:2, col:8> col:2 public
| | |-CXXConstructorDecl 0x1482448 <line:535:3, line:536:69> line:535:3 __pthread_cleanup_class 'void (void (*)(void *), void *)'
| | | |-ParmVarDecl 0x1482298 <col:28, col:49> col:35 used __fct 'void (*)(void *)'
| | | |-ParmVarDecl 0x1482318 <col:52, col:58> col:58 used __arg 'void *'
| | | |-CXXCtorInitializer Field 0x1482030 '__cancel_routine' 'void (*)(void *)'
| | | | `-ImplicitCastExpr 0x1482968 <line:536:25> 'void (*)(void *)' <LValueToRValue>
| | | |   `-DeclRefExpr 0x1482928 <col:25> 'void (*)(void *)' lvalue ParmVar 0x1482298 '__fct' 'void (*)(void *)'
| | | |-CXXCtorInitializer Field 0x1482098 '__cancel_arg' 'void *'
| | | | `-ImplicitCastExpr 0x14829e8 <col:47> 'void *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x14829a8 <col:47> 'void *' lvalue ParmVar 0x1482318 '__arg' 'void *'
| | | |-CXXCtorInitializer Field 0x1482100 '__do_it' 'int'
| | | | `-IntegerLiteral 0x1482a28 <col:64> 'int' 1
| | | `-CompoundStmt 0x1482aa8 <col:67, col:69>
| | |-CXXDestructorDecl 0x1482548 <line:537:3, col:79> col:3 ~__pthread_cleanup_class 'void () noexcept'
| | | `-CompoundStmt 0x1482c18 <col:31, col:79>
| | |   `-IfStmt 0x1482c00 <col:33, col:76>
| | |     |-ImplicitCastExpr 0x1482b10 <col:37> 'bool' <IntegralToBoolean>
| | |     | `-ImplicitCastExpr 0x1482af8 <col:37> 'int' <LValueToRValue>
| | |     |   `-MemberExpr 0x1482ac8 <col:37> 'int' lvalue ->__do_it 0x1482100
| | |     |     `-CXXThisExpr 0x1482ab8 <col:37> '__pthread_cleanup_class *' implicit this
| | |     `-CallExpr 0x1482bc0 <col:46, col:76> 'void'
| | |       |-ImplicitCastExpr 0x1482ba8 <col:46> 'void (*)(void *)' <LValueToRValue>
| | |       | `-MemberExpr 0x1482b38 <col:46> 'void (*)(void *)' lvalue ->__cancel_routine 0x1482030
| | |       |   `-CXXThisExpr 0x1482b28 <col:46> '__pthread_cleanup_class *' implicit this
| | |       `-ImplicitCastExpr 0x1482be8 <col:64> 'void *' <LValueToRValue>
| | |         `-MemberExpr 0x1482b78 <col:64> 'void *' lvalue ->__cancel_arg 0x1482098
| | |           `-CXXThisExpr 0x1482b68 <col:64> '__pthread_cleanup_class *' implicit this
| | |-CXXMethodDecl 0x14826d8 <line:538:3, col:55> col:8 __setdoit 'void (int)'
| | | |-ParmVarDecl 0x1482648 <col:19, col:23> col:23 used __newval 'int'
| | | `-CompoundStmt 0x1482cc8 <col:33, col:55>
| | |   `-BinaryOperator 0x1482ca8 <col:35, col:45> 'int' lvalue '='
| | |     |-MemberExpr 0x1482c40 <col:35> 'int' lvalue ->__do_it 0x1482100
| | |     | `-CXXThisExpr 0x1482c30 <col:35> '__pthread_cleanup_class *' implicit this
| | |     `-ImplicitCastExpr 0x1482c90 <col:45> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x1482c70 <col:45> 'int' lvalue ParmVar 0x1482648 '__newval' 'int'
| | |-CXXMethodDecl 0x14827a0 <line:539:3, line:540:26> line:539:8 __defer 'void ()'
| | | `-CompoundStmt 0x1482e48 <col:19, line:540:26>
| | |   `-CallExpr 0x1482e00 <line:539:21, line:540:23> 'int'
| | |     |-ImplicitCastExpr 0x1482de8 <line:539:21> 'int (*)(int, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x1482da0 <col:21> 'int (int, int *)' lvalue Function 0x1480bf0 'pthread_setcanceltype' 'int (int, int *)'
| | |     |-ImplicitCastExpr 0x1482e30 <line:174:33> 'int' <IntegralCast>
| | |     | `-DeclRefExpr 0x1482d28 <col:33> '(anonymous enum at /usr/include/pthread.h:171:1)' EnumConstant 0x14709b8 'PTHREAD_CANCEL_DEFERRED' '(anonymous enum at /usr/include/pthread.h:171:1)'
| | |     `-UnaryOperator 0x1482d88 <line:540:9, col:10> 'int *' prefix '&' cannot overflow
| | |       `-MemberExpr 0x1482d58 <col:10> 'int' lvalue ->__cancel_type 0x1482168
| | |         `-CXXThisExpr 0x1482d48 <col:10> '__pthread_cleanup_class *' implicit this
| | `-CXXMethodDecl 0x1482888 <line:541:3, col:71> col:8 __restore 'void () const'
| |   `-CompoundStmt 0x1482fa0 <col:27, col:71>
| |     `-CallExpr 0x1482f40 <col:29, col:68> 'int'
| |       |-ImplicitCastExpr 0x1482f28 <col:29> 'int (*)(int, int *)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x1482f08 <col:29> 'int (int, int *)' lvalue Function 0x1480bf0 'pthread_setcanceltype' 'int (int, int *)'
| |       |-ImplicitCastExpr 0x1482f70 <col:52> 'int' <LValueToRValue>
| |       | `-MemberExpr 0x1482eb8 <col:52> 'const int' lvalue ->__cancel_type 0x1482168
| |       |   `-CXXThisExpr 0x1482ea8 <col:52> 'const __pthread_cleanup_class *' implicit this
| |       `-ImplicitCastExpr 0x1482f88 <col:67> 'int *' <NullToPointer>
| |         `-IntegerLiteral 0x1482ee8 <col:67> 'int' 0
| |-CXXRecordDecl 0x1482fb8 <line:718:1, col:8> col:8 struct __jmp_buf_tag
| | `-VisibilityAttr 0x1483070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1483328 </usr/include/pthread.h:719:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:62:29> /usr/include/pthread.h:719:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int) throw()' extern
| | |-ParmVarDecl 0x1483180 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| | |-ParmVarDecl 0x1483200 <col:54, col:58> col:58 __savemask 'int'
| | |-ReturnsTwiceAttr 0x14833d8 <col:12> Implicit
| | `-VisibilityAttr 0x1483430 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1483718 </usr/include/pthread.h:725:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:725:12 referenced pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *) throw()' extern
| | |-ParmVarDecl 0x14834e8 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| | |-ParmVarDecl 0x14835d8 <line:726:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| | |-NonNullAttr 0x14837c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:727:27> 1
| | `-VisibilityAttr 0x1483838 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1483998 </usr/include/pthread.h:730:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:730:12 referenced pthread_mutex_destroy 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1483870 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1483a40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:731:27> 1
| | `-VisibilityAttr 0x1483aa8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1483ba0 </usr/include/pthread.h:734:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:734:12 referenced pthread_mutex_trylock 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1483ae0 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1483c48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:735:29> 1
| | `-VisibilityAttr 0x1483cb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1483db0 </usr/include/pthread.h:738:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:738:12 referenced pthread_mutex_lock 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1483cf0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1483e58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:739:29> 1
| | `-VisibilityAttr 0x1483ec8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14840f8 </usr/include/pthread.h:743:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:743:12 referenced pthread_mutex_timedlock 'int (pthread_mutex_t *__restrict, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x1483f00 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x1483f90 <line:744:9, line:745:9> col:9 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x14841a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:745:46> 1 2
| | `-VisibilityAttr 0x1484218 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14844c8 </usr/include/pthread.h:749:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:749:12 pthread_mutex_clocklock 'int (pthread_mutex_t *__restrict, clockid_t, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x1484250 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x14842c8 <line:750:9, col:19> col:19 __clockid 'clockid_t':'int'
| | |-ParmVarDecl 0x1484358 <line:751:9, line:752:9> col:9 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x1484580 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:752:46> 1 3
| | `-VisibilityAttr 0x14845e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14846e0 </usr/include/pthread.h:756:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:756:12 referenced pthread_mutex_unlock 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1484620 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1484788 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:757:29> 1
| | `-VisibilityAttr 0x14847f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14873d8 </usr/include/pthread.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:761:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x14871f8 <col:42, line:762:18> col:18 __mutex 'const pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x1487278 <line:763:7, col:23> col:23 __prioceiling 'int *__restrict'
| | |-NonNullAttr 0x1487488 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:764:30> 1 2
| | `-VisibilityAttr 0x14874f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14877a8 </usr/include/pthread.h:768:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:768:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *__restrict, int, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1487530 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x14875b0 <line:769:7, col:11> col:11 __prioceiling 'int'
| | |-ParmVarDecl 0x1487630 <line:770:7, col:23> col:23 __old_ceiling 'int *__restrict'
| | |-NonNullAttr 0x1487860 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:771:30> 1 3
| | `-VisibilityAttr 0x14878c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14879c0 </usr/include/pthread.h:776:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:776:12 pthread_mutex_consistent 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1487900 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1487a68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:777:27> 1
| | `-VisibilityAttr 0x1487ad8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1487bd0 </usr/include/pthread.h:779:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:779:12 pthread_mutex_consistent_np 'int (pthread_mutex_t *) throw()' extern
| | |-ParmVarDecl 0x1487b10 <col:41, col:58> col:58 __mutex 'pthread_mutex_t *'
| | |-NonNullAttr 0x1487c78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:780:27> 1
| | `-VisibilityAttr 0x1487ce8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1487e98 </usr/include/pthread.h:789:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:789:12 referenced pthread_mutexattr_init 'int (pthread_mutexattr_t *) throw()' extern
| | |-ParmVarDecl 0x1487d78 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| | |-NonNullAttr 0x1487f40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:790:27> 1
| | `-VisibilityAttr 0x1487fa8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14880a0 </usr/include/pthread.h:793:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:793:12 referenced pthread_mutexattr_destroy 'int (pthread_mutexattr_t *) throw()' extern
| | |-ParmVarDecl 0x1487fe0 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| | |-NonNullAttr 0x1488148 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:794:27> 1
| | `-VisibilityAttr 0x14881b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14883d8 </usr/include/pthread.h:797:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:797:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x14881f0 <col:42, line:798:18> col:18 __attr 'const pthread_mutexattr_t *__restrict'
| | |-ParmVarDecl 0x1488270 <line:799:7, col:23> col:23 __pshared 'int *__restrict'
| | |-NonNullAttr 0x1488488 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:800:30> 1 2
| | `-VisibilityAttr 0x14884f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14886f8 </usr/include/pthread.h:803:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:803:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1488530 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x14885b0 <line:804:7, col:11> col:11 __pshared 'int'
| | |-NonNullAttr 0x14887a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:805:27> 1
| | `-VisibilityAttr 0x1488818 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14889b8 </usr/include/pthread.h:809:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:809:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1488850 <col:39, line:810:11> col:11 __attr 'const pthread_mutexattr_t *__restrict'
| | |-ParmVarDecl 0x14888d0 <col:19, col:35> col:35 __kind 'int *__restrict'
| | |-NonNullAttr 0x1488a68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:811:30> 1 2
| | `-VisibilityAttr 0x1488ad8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1488c58 </usr/include/pthread.h:816:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:816:12 referenced pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1488b10 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x1488b90 <col:68, col:72> col:72 __kind 'int'
| | |-NonNullAttr 0x1488d08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:817:27> 1
| | `-VisibilityAttr 0x1488d78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1488f18 </usr/include/pthread.h:821:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:821:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1488db0 <col:43, line:822:19> col:19 __attr 'const pthread_mutexattr_t *__restrict'
| | |-ParmVarDecl 0x1488e30 <line:823:8, col:24> col:24 __protocol 'int *__restrict'
| | |-NonNullAttr 0x1488fc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:824:30> 1 2
| | `-VisibilityAttr 0x1489038 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x14891b8 </usr/include/pthread.h:828:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:828:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1489070 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x14890f0 <line:829:8, col:12> col:12 __protocol 'int'
| | |-NonNullAttr 0x1489268 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:830:27> 1
| | `-VisibilityAttr 0x14892d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1489478 </usr/include/pthread.h:833:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:833:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1489310 <col:46, line:834:22> col:22 __attr 'const pthread_mutexattr_t *__restrict'
| | |-ParmVarDecl 0x1489390 <line:835:11, col:27> col:27 __prioceiling 'int *__restrict'
| | |-NonNullAttr 0x1489528 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:836:30> 1 2
| | `-VisibilityAttr 0x1489598 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1489718 </usr/include/pthread.h:839:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:839:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x14895d0 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x1489650 <line:840:11, col:15> col:15 __prioceiling 'int'
| | |-NonNullAttr 0x14897c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:841:27> 1
| | `-VisibilityAttr 0x1489838 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1489a18 </usr/include/pthread.h:845:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:845:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *) throw()' extern
| | |-ParmVarDecl 0x1489870 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| | |-ParmVarDecl 0x14898f0 <line:846:6, col:11> col:11 __robustness 'int *'
| | |-NonNullAttr 0x1489ac8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:847:30> 1 2
| | `-VisibilityAttr 0x1489b38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1489cd8 </usr/include/pthread.h:849:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:849:12 pthread_mutexattr_getrobust_np 'int (const pthread_mutexattr_t *, int *) throw()' extern
| | |-ParmVarDecl 0x1489b70 <col:44, col:71> col:71 __attr 'const pthread_mutexattr_t *'
| | |-ParmVarDecl 0x1489bf0 <line:850:9, col:14> col:14 __robustness 'int *'
| | |-NonNullAttr 0x1489d88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:851:30> 1 2
| | `-VisibilityAttr 0x1489df8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1489f78 </usr/include/pthread.h:855:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:855:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1489e30 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x1489eb0 <line:856:6, col:10> col:10 __robustness 'int'
| | |-NonNullAttr 0x148a028 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:857:27> 1
| | `-VisibilityAttr 0x148a098 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148a218 </usr/include/pthread.h:859:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:859:12 pthread_mutexattr_setrobust_np 'int (pthread_mutexattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x148a0d0 <col:44, col:65> col:65 __attr 'pthread_mutexattr_t *'
| | |-ParmVarDecl 0x148a150 <line:860:9, col:13> col:13 __robustness 'int'
| | |-NonNullAttr 0x148a2c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:861:27> 1
| | `-VisibilityAttr 0x148a338 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148a618 </usr/include/pthread.h:871:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:871:12 pthread_rwlock_init 'int (pthread_rwlock_t *__restrict, const pthread_rwlockattr_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x148a3e8 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *__restrict'
| | |-ParmVarDecl 0x148a4d8 <line:872:5, line:873:5> col:5 __attr 'const pthread_rwlockattr_t *__restrict'
| | |-NonNullAttr 0x148a6c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:873:34> 1
| | `-VisibilityAttr 0x148a738 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148a898 </usr/include/pthread.h:876:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:876:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x148a770 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x148a940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:877:27> 1
| | `-VisibilityAttr 0x148a9a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148aaa0 </usr/include/pthread.h:880:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:880:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x148a9e0 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x148ab48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:881:29> 1
| | `-VisibilityAttr 0x148abb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148acb0 </usr/include/pthread.h:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:884:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x148abf0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x148ad58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:885:26> 1
| | `-VisibilityAttr 0x148adc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x148aff8 </usr/include/pthread.h:889:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:889:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *__restrict, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x148ae00 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *__restrict'
| | |-ParmVarDecl 0x148ae90 <line:890:12, line:891:12> col:12 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x148b0a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:891:49> 1 2
| | `-VisibilityAttr 0x148b118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1261a98 </usr/include/pthread.h:895:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:895:12 pthread_rwlock_clockrdlock 'int (pthread_rwlock_t *__restrict, clockid_t, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x1261820 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *__restrict'
| | |-ParmVarDecl 0x1261898 <line:896:12, col:22> col:22 __clockid 'clockid_t':'int'
| | |-ParmVarDecl 0x1261928 <line:897:12, line:898:12> col:12 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x1261b50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:898:49> 1 3
| | `-VisibilityAttr 0x1261bb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1261cb0 </usr/include/pthread.h:902:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:902:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x1261bf0 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x1261d58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:903:29> 1
| | `-VisibilityAttr 0x1261dc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1261ec0 </usr/include/pthread.h:906:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:906:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x1261e00 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x1261f68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:907:29> 1
| | `-VisibilityAttr 0x1261fd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1262188 </usr/include/pthread.h:911:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:911:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *__restrict, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x1262010 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *__restrict'
| | |-ParmVarDecl 0x12620a0 <line:912:12, line:913:12> col:12 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x1262238 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:913:49> 1 2
| | `-VisibilityAttr 0x12622a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12624d8 </usr/include/pthread.h:917:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:917:12 pthread_rwlock_clockwrlock 'int (pthread_rwlock_t *__restrict, clockid_t, const struct timespec *__restrict) throw()' extern
| | |-ParmVarDecl 0x12622e0 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *__restrict'
| | |-ParmVarDecl 0x1262358 <line:918:12, col:22> col:22 __clockid 'clockid_t':'int'
| | |-ParmVarDecl 0x12623e8 <line:919:12, line:920:12> col:12 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x1262590 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:920:49> 1 3
| | `-VisibilityAttr 0x12625f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12626f0 </usr/include/pthread.h:924:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:924:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *) throw()' extern
| | |-ParmVarDecl 0x1262630 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| | |-NonNullAttr 0x1262798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:925:29> 1
| | `-VisibilityAttr 0x1262808 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12629b8 </usr/include/pthread.h:931:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:931:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *) throw()' extern
| | |-ParmVarDecl 0x1262898 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| | |-NonNullAttr 0x1262a60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:932:27> 1
| | `-VisibilityAttr 0x1262ac8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1262bc0 </usr/include/pthread.h:935:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:935:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *) throw()' extern
| | |-ParmVarDecl 0x1262b00 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| | |-NonNullAttr 0x1262c68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:936:27> 1
| | `-VisibilityAttr 0x1262cd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1262ef8 </usr/include/pthread.h:939:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:939:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1262d10 <col:43, line:940:19> col:19 __attr 'const pthread_rwlockattr_t *__restrict'
| | |-ParmVarDecl 0x1262d90 <line:941:8, col:24> col:24 __pshared 'int *__restrict'
| | |-NonNullAttr 0x1262fa8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:942:30> 1 2
| | `-VisibilityAttr 0x1263018 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1263218 </usr/include/pthread.h:945:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:945:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1263050 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| | |-ParmVarDecl 0x12630d0 <line:946:8, col:12> col:12 __pshared 'int'
| | |-NonNullAttr 0x12632c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:947:27> 1
| | `-VisibilityAttr 0x1263338 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12634d8 </usr/include/pthread.h:950:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:950:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1263370 <col:43, line:951:19> col:19 __attr 'const pthread_rwlockattr_t *__restrict'
| | |-ParmVarDecl 0x12633f0 <line:952:8, col:24> col:24 __pref 'int *__restrict'
| | |-NonNullAttr 0x1263588 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:953:30> 1 2
| | `-VisibilityAttr 0x12635f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1263778 </usr/include/pthread.h:956:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:956:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1263630 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| | |-ParmVarDecl 0x12636b0 <line:957:8, col:12> col:12 __pref 'int'
| | |-NonNullAttr 0x1263828 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:957:41> 1
| | `-VisibilityAttr 0x1263898 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1263b78 </usr/include/pthread.h:965:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:965:12 referenced pthread_cond_init 'int (pthread_cond_t *__restrict, const pthread_condattr_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x1263948 <col:31, col:58> col:58 __cond 'pthread_cond_t *__restrict'
| | |-ParmVarDecl 0x1263a38 <line:966:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *__restrict'
| | |-NonNullAttr 0x1263c28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:967:27> 1
| | `-VisibilityAttr 0x1263c98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1263df8 </usr/include/pthread.h:970:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:970:12 referenced pthread_cond_destroy 'int (pthread_cond_t *) throw()' extern
| | |-ParmVarDecl 0x1263cd0 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| | |-NonNullAttr 0x1263ea0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:971:27> 1
| | `-VisibilityAttr 0x1263f08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1264000 </usr/include/pthread.h:974:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:974:12 referenced pthread_cond_signal 'int (pthread_cond_t *) throw()' extern
| | |-ParmVarDecl 0x1263f40 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| | |-NonNullAttr 0x12640a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:975:29> 1
| | `-VisibilityAttr 0x1264118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1264210 </usr/include/pthread.h:978:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:978:12 referenced pthread_cond_broadcast 'int (pthread_cond_t *) throw()' extern
| | |-ParmVarDecl 0x1264150 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| | |-NonNullAttr 0x12642b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:979:29> 1
| | `-VisibilityAttr 0x1264328 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1264530 </usr/include/pthread.h:986:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:986:12 referenced pthread_cond_wait 'int (pthread_cond_t *__restrict, pthread_mutex_t *__restrict)' extern
| | |-ParmVarDecl 0x1264360 <col:31, col:58> col:58 __cond 'pthread_cond_t *__restrict'
| | |-ParmVarDecl 0x12643d8 <line:987:10, col:38> col:38 __mutex 'pthread_mutex_t *__restrict'
| | |-NonNullAttr 0x12645e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:988:22> 1 2
| | `-VisibilityAttr 0x1264648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1264910 </usr/include/pthread.h:997:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:997:12 referenced pthread_cond_timedwait 'int (pthread_cond_t *__restrict, pthread_mutex_t *__restrict, const struct timespec *__restrict)' extern
| | |-ParmVarDecl 0x1264680 <col:36, col:63> col:63 __cond 'pthread_cond_t *__restrict'
| | |-ParmVarDecl 0x12646f8 <line:998:8, col:36> col:36 __mutex 'pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x1264788 <line:999:8, col:42> col:42 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x12649c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1000:25> 1 2 3
| | `-VisibilityAttr 0x1264a40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1264da0 </usr/include/pthread.h:1010:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1010:12 pthread_cond_clockwait 'int (pthread_cond_t *__restrict, pthread_mutex_t *__restrict, __clockid_t, const struct timespec *__restrict)' extern
| | |-ParmVarDecl 0x1264a78 <col:36, col:63> col:63 __cond 'pthread_cond_t *__restrict'
| | |-ParmVarDecl 0x1264af0 <line:1011:8, col:36> col:36 __mutex 'pthread_mutex_t *__restrict'
| | |-ParmVarDecl 0x1264b68 <line:1012:8, col:20> col:20 __clock_id '__clockid_t':'int'
| | |-ParmVarDecl 0x1264bf8 <line:1013:8, col:42> col:42 __abstime 'const struct timespec *__restrict'
| | |-NonNullAttr 0x1264e60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1014:25> 1 2 4
| | `-VisibilityAttr 0x1264ed0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1265088 </usr/include/pthread.h:1020:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1020:12 pthread_condattr_init 'int (pthread_condattr_t *) throw()' extern
| | |-ParmVarDecl 0x1264f68 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| | |-NonNullAttr 0x1265130 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1021:27> 1
| | `-VisibilityAttr 0x1265198 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1265290 </usr/include/pthread.h:1024:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1024:12 pthread_condattr_destroy 'int (pthread_condattr_t *) throw()' extern
| | |-ParmVarDecl 0x12651d0 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| | |-NonNullAttr 0x1265338 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1025:27> 1
| | `-VisibilityAttr 0x12653a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12655c8 </usr/include/pthread.h:1028:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1028:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x12653e0 <col:41, line:1029:17> col:17 __attr 'const pthread_condattr_t *__restrict'
| | |-ParmVarDecl 0x1265460 <line:1030:6, col:22> col:22 __pshared 'int *__restrict'
| | |-NonNullAttr 0x1265678 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1031:30> 1 2
| | `-VisibilityAttr 0x12656e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1266918 </usr/include/pthread.h:1034:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1034:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1265720 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| | |-ParmVarDecl 0x12657a0 <line:1035:6, col:10> col:10 __pshared 'int'
| | |-NonNullAttr 0x12669c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1035:42> 1
| | `-VisibilityAttr 0x1266a38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1266c38 </usr/include/pthread.h:1039:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1039:12 pthread_condattr_getclock 'int (const pthread_condattr_t *__restrict, __clockid_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x1266a70 <col:39, line:1040:22> col:22 __attr 'const pthread_condattr_t *__restrict'
| | |-ParmVarDecl 0x1266b18 <line:1041:11, col:35> col:35 __clock_id '__clockid_t *__restrict'
| | |-NonNullAttr 0x1266ce8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1042:30> 1 2
| | `-VisibilityAttr 0x1266d58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1266f08 </usr/include/pthread.h:1045:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1045:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t) throw()' extern
| | |-ParmVarDecl 0x1266d90 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| | |-ParmVarDecl 0x1266e08 <line:1046:11, col:23> col:23 __clock_id '__clockid_t':'int'
| | |-NonNullAttr 0x1266fb8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1047:27> 1
| | `-VisibilityAttr 0x1267028 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267298 </usr/include/pthread.h:1056:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1056:12 pthread_spin_init 'int (pthread_spinlock_t *, int) throw()' extern
| | |-ParmVarDecl 0x12670d8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| | |-ParmVarDecl 0x1267158 <col:59, col:63> col:63 __pshared 'int'
| | |-NonNullAttr 0x1267348 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1057:27> 1
| | `-VisibilityAttr 0x12673b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267518 </usr/include/pthread.h:1060:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1060:12 pthread_spin_destroy 'int (pthread_spinlock_t *) throw()' extern
| | |-ParmVarDecl 0x12673f0 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| | |-NonNullAttr 0x12675c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1061:27> 1
| | `-VisibilityAttr 0x1267628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267720 </usr/include/pthread.h:1064:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1064:12 pthread_spin_lock 'int (pthread_spinlock_t *) throw()' extern
| | |-ParmVarDecl 0x1267660 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| | |-NonNullAttr 0x12677c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1065:29> 1
| | `-VisibilityAttr 0x1267838 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267930 </usr/include/pthread.h:1068:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1068:12 pthread_spin_trylock 'int (pthread_spinlock_t *) throw()' extern
| | |-ParmVarDecl 0x1267870 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| | |-NonNullAttr 0x12679d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1069:29> 1
| | `-VisibilityAttr 0x1267a48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267b40 </usr/include/pthread.h:1072:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1072:12 pthread_spin_unlock 'int (pthread_spinlock_t *) throw()' extern
| | |-ParmVarDecl 0x1267a80 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| | |-NonNullAttr 0x1267be8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1073:29> 1
| | `-VisibilityAttr 0x1267c58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1267fc8 </usr/include/pthread.h:1080:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1080:12 pthread_barrier_init 'int (pthread_barrier_t *__restrict, const pthread_barrierattr_t *__restrict, unsigned int) throw()' extern
| | |-ParmVarDecl 0x1267d08 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *__restrict'
| | |-ParmVarDecl 0x1267df8 <line:1081:6, line:1082:6> col:6 __attr 'const pthread_barrierattr_t *__restrict'
| | |-ParmVarDecl 0x1267e78 <col:14, col:27> col:27 __count 'unsigned int'
| | |-NonNullAttr 0x1268080 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1083:27> 1
| | `-VisibilityAttr 0x12680e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268248 </usr/include/pthread.h:1086:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1086:12 pthread_barrier_destroy 'int (pthread_barrier_t *) throw()' extern
| | |-ParmVarDecl 0x1268120 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| | |-NonNullAttr 0x12682f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1087:27> 1
| | `-VisibilityAttr 0x1268358 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268450 </usr/include/pthread.h:1090:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1090:12 pthread_barrier_wait 'int (pthread_barrier_t *) throw()' extern
| | |-ParmVarDecl 0x1268390 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| | |-NonNullAttr 0x12684f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1091:29> 1
| | `-VisibilityAttr 0x1268568 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268718 </usr/include/pthread.h:1095:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1095:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *) throw()' extern
| | |-ParmVarDecl 0x12685f8 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| | |-NonNullAttr 0x12687c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1096:27> 1
| | `-VisibilityAttr 0x1268828 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268920 </usr/include/pthread.h:1099:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1099:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *) throw()' extern
| | |-ParmVarDecl 0x1268860 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| | |-NonNullAttr 0x12689c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1100:27> 1
| | `-VisibilityAttr 0x1268a38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268c58 </usr/include/pthread.h:1103:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1103:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x1268a70 <col:44, line:1104:20> col:20 __attr 'const pthread_barrierattr_t *__restrict'
| | |-ParmVarDecl 0x1268af0 <line:1105:9, col:25> col:25 __pshared 'int *__restrict'
| | |-NonNullAttr 0x1268d08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1106:30> 1 2
| | `-VisibilityAttr 0x1268d78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1268f78 </usr/include/pthread.h:1109:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1109:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int) throw()' extern
| | |-ParmVarDecl 0x1268db0 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| | |-ParmVarDecl 0x1268e30 <line:1110:9, col:13> col:13 __pshared 'int'
| | |-NonNullAttr 0x1269028 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1111:27> 1
| | `-VisibilityAttr 0x1269098 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1269378 </usr/include/pthread.h:1123:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1123:12 referenced pthread_key_create 'int (pthread_key_t *, void (*)(void *)) throw()' extern
| | |-ParmVarDecl 0x1269118 <col:32, col:47> col:47 __key 'pthread_key_t *'
| | |-ParmVarDecl 0x1269238 <line:1124:11, col:43> col:18 __destr_function 'void (*)(void *)'
| | |-NonNullAttr 0x1269428 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1125:27> 1
| | `-VisibilityAttr 0x1269498 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12695a8 </usr/include/pthread.h:1128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:1128:12 referenced pthread_key_delete 'int (pthread_key_t) throw()' extern
| | |-ParmVarDecl 0x12694d0 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| | `-VisibilityAttr 0x1269650 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x12697b8 </usr/include/pthread.h:1131:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:1131:14 referenced pthread_getspecific 'void *(pthread_key_t) throw()' extern
| | |-ParmVarDecl 0x12696b8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| | `-VisibilityAttr 0x1269860 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1269a68 </usr/include/pthread.h:1134:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:1134:12 referenced pthread_setspecific 'int (pthread_key_t, const void *) throw()' extern
| | |-ParmVarDecl 0x12698c8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| | |-ParmVarDecl 0x1269948 <line:1135:5, col:17> col:17 __pointer 'const void *'
| | `-VisibilityAttr 0x1269b18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| |-FunctionDecl 0x1269d38 </usr/include/pthread.h:1140:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/pthread.h:1140:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *) throw()' extern
| | |-ParmVarDecl 0x1269b80 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| | |-ParmVarDecl 0x1269bf8 <line:1141:7, col:20> col:20 __clock_id '__clockid_t *'
| | |-NonNullAttr 0x1269de8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/pthread.h:1142:27> 2
| | `-VisibilityAttr 0x1269e58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
| `-FunctionDecl 0x126a278 </usr/include/pthread.h:1157:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/pthread.h:1157:12 pthread_atfork 'int (void (*)(), void (*)(), void (*)()) throw()' extern
|   |-ParmVarDecl 0x1269f28 <col:28, col:51> col:35 __prepare 'void (*)()'
|   |-ParmVarDecl 0x126a038 <line:1158:7, col:29> col:14 __parent 'void (*)()'
|   |-ParmVarDecl 0x126a148 <line:1159:7, col:28> col:14 __child 'void (*)()'
|   `-VisibilityAttr 0x126a330 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr.h:30:13> Implicit Default
|-TypedefDecl 0x126a398 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:47:1, col:19> col:19 referenced __gthread_t 'pthread_t':'unsigned long'
| `-TypedefType 0x1470ad0 'pthread_t' sugar
|   |-Typedef 0x145d0b0 'pthread_t'
|   `-BuiltinType 0xffd2d0 'unsigned long'
|-TypedefDecl 0x126a400 <line:48:1, col:23> col:23 referenced __gthread_key_t 'pthread_key_t':'unsigned int'
| `-TypedefType 0x12690c0 'pthread_key_t' sugar
|   |-Typedef 0x145d800 'pthread_key_t'
|   `-BuiltinType 0xffd2b0 'unsigned int'
|-TypedefDecl 0x126a468 <line:49:1, col:24> col:24 referenced __gthread_once_t 'pthread_once_t':'int'
| `-TypedefType 0x1480460 'pthread_once_t' sugar
|   |-Typedef 0x145d870 'pthread_once_t'
|   `-BuiltinType 0xffd210 'int'
|-TypedefDecl 0x126a4d0 <line:50:1, col:25> col:25 referenced __gthread_mutex_t 'pthread_mutex_t':'pthread_mutex_t'
| `-TypedefType 0x1483460 'pthread_mutex_t' sugar
|   |-Typedef 0x146d8a8 'pthread_mutex_t'
|   `-ElaboratedType 0x146d850 'union pthread_mutex_t' sugar
|     `-RecordType 0x146d560 'pthread_mutex_t'
|       `-CXXRecord 0x146d4c8 ''
|-TypedefDecl 0x126a538 <line:51:1, col:25> col:25 referenced __gthread_recursive_mutex_t 'pthread_mutex_t':'pthread_mutex_t'
| `-TypedefType 0x1483460 'pthread_mutex_t' sugar
|   |-Typedef 0x146d8a8 'pthread_mutex_t'
|   `-ElaboratedType 0x146d850 'union pthread_mutex_t' sugar
|     `-RecordType 0x146d560 'pthread_mutex_t'
|       `-CXXRecord 0x146d4c8 ''
|-TypedefDecl 0x126a5a0 <line:52:1, col:24> col:24 referenced __gthread_cond_t 'pthread_cond_t':'pthread_cond_t'
| `-TypedefType 0x12638c0 'pthread_cond_t' sugar
|   |-Typedef 0x146dcf8 'pthread_cond_t'
|   `-ElaboratedType 0x146dca0 'union pthread_cond_t' sugar
|     `-RecordType 0x146d9b0 'pthread_cond_t'
|       `-CXXRecord 0x146d918 ''
|-TypedefDecl 0x126a618 <line:53:1, col:25> col:25 referenced __gthread_time_t 'struct timespec':'timespec'
| `-ElaboratedType 0x1425850 'struct timespec' sugar
|   `-RecordType 0x1422560 'timespec'
|     `-CXXRecord 0x14224c8 'timespec'
|-FunctionDecl 0x126a798 <line:90:3, line:91:58> <scratch space>:151:1 used __gthrw_pthread_once 'typeof (pthread_once)':'int (pthread_once_t *, void (*)())' static
| |-ParmVarDecl 0x148b1b0 <col:1> col:1 implicit 'pthread_once_t *'
| |-ParmVarDecl 0x148b248 <col:1> col:1 implicit 'void (*)()'
| |-AliasAttr 0x148b2c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_once"
| `-WeakRefAttr 0x148b330 <col:21, col:39> ""
|-FunctionDecl 0x148b498 <line:90:3, line:91:58> <scratch space>:153:1 used __gthrw_pthread_getspecific 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' static
| |-ParmVarDecl 0x148b548 <col:1> col:1 implicit 'pthread_key_t':'unsigned int'
| |-AliasAttr 0x148b5b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_getspecific"
| `-WeakRefAttr 0x148b630 <col:21, col:39> ""
|-FunctionDecl 0x148b718 <line:90:3, line:91:58> <scratch space>:155:1 used __gthrw_pthread_setspecific 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' static
| |-ParmVarDecl 0x148b7c8 <col:1> col:1 implicit 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x148b848 <col:1> col:1 implicit 'const void *'
| |-AliasAttr 0x148b8c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_setspecific"
| `-WeakRefAttr 0x148b938 <col:21, col:39> ""
|-FunctionDecl 0x148ba98 <line:90:3, line:91:58> <scratch space>:157:1 used __gthrw_pthread_create 'typeof (pthread_create)':'int (pthread_t *__restrict, const pthread_attr_t *__restrict, void *(*)(void *), void *__restrict) throw()' static
| |-ParmVarDecl 0x148bb48 <col:1> col:1 implicit 'pthread_t *__restrict'
| |-ParmVarDecl 0x148bbc0 <col:1> col:1 implicit 'const pthread_attr_t *__restrict'
| |-ParmVarDecl 0x148bc68 <col:1> col:1 implicit 'void *(*)(void *)'
| |-ParmVarDecl 0x148bce8 <col:1> col:1 implicit 'void *__restrict'
| |-AliasAttr 0x148bd70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_create"
| `-WeakRefAttr 0x148bde0 <col:21, col:39> ""
|-FunctionDecl 0x148bec8 <line:90:3, line:91:58> <scratch space>:159:1 used __gthrw_pthread_join 'typeof (pthread_join)':'int (pthread_t, void **)' static
| |-ParmVarDecl 0x148bf78 <col:1> col:1 implicit 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x148bff8 <col:1> col:1 implicit 'void **'
| |-AliasAttr 0x148c070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_join"
| `-WeakRefAttr 0x148c0e0 <col:21, col:39> ""
|-FunctionDecl 0x148c238 <line:90:3, line:91:58> <scratch space>:161:1 used __gthrw_pthread_equal 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' static
| |-ParmVarDecl 0x148c2e8 <col:1> col:1 implicit 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x148c360 <col:1> col:1 implicit 'pthread_t':'unsigned long'
| |-AliasAttr 0x148c3d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_equal"
| `-WeakRefAttr 0x148c448 <col:21, col:39> ""
|-FunctionDecl 0x148c528 <line:90:3, line:91:58> <scratch space>:163:1 used __gthrw_pthread_self 'typeof (pthread_self)':'pthread_t () throw()' static
| |-AliasAttr 0x148c5c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_self"
| `-WeakRefAttr 0x148c638 <col:21, col:39> ""
|-FunctionDecl 0x148c718 <line:90:3, line:91:58> <scratch space>:165:1 used __gthrw_pthread_detach 'typeof (pthread_detach)':'int (pthread_t) throw()' static
| |-ParmVarDecl 0x148c7c8 <col:1> col:1 implicit 'pthread_t':'unsigned long'
| |-AliasAttr 0x148c838 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_detach"
| `-WeakRefAttr 0x148c8a8 <col:21, col:39> ""
|-FunctionDecl 0x148c988 <line:90:3, line:91:58> <scratch space>:167:1 __gthrw_pthread_cancel 'typeof (pthread_cancel)':'int (pthread_t)' static
| |-ParmVarDecl 0x148ca38 <col:1> col:1 implicit 'pthread_t':'unsigned long'
| |-AliasAttr 0x148caa8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cancel"
| `-WeakRefAttr 0x148cb18 <col:21, col:39> ""
|-FunctionDecl 0x148cc78 <line:90:3, line:91:58> <scratch space>:169:1 used __gthrw_sched_yield 'typeof (sched_yield)':'int () throw()' static
| |-AliasAttr 0x148cd18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "sched_yield"
| `-WeakRefAttr 0x148cd88 <col:21, col:39> ""
|-FunctionDecl 0x148cef8 <line:90:3, line:91:58> <scratch space>:171:1 used __gthrw_pthread_mutex_lock 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' static
| |-ParmVarDecl 0x148cfa8 <col:1> col:1 implicit 'pthread_mutex_t *'
| |-AliasAttr 0x148d018 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_lock"
| `-WeakRefAttr 0x148d090 <col:21, col:39> ""
|-FunctionDecl 0x148d1f8 <line:90:3, line:91:58> <scratch space>:173:1 used __gthrw_pthread_mutex_trylock 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' static
| |-ParmVarDecl 0x148d2a8 <col:1> col:1 implicit 'pthread_mutex_t *'
| |-AliasAttr 0x148d318 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_trylock"
| `-WeakRefAttr 0x148d390 <col:21, col:39> ""
|-FunctionDecl 0x148d4f8 <line:90:3, line:91:58> <scratch space>:175:1 used __gthrw_pthread_mutex_timedlock 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *__restrict, const struct timespec *__restrict) throw()' static
| |-ParmVarDecl 0x148d5a8 <col:1> col:1 implicit 'pthread_mutex_t *__restrict'
| |-ParmVarDecl 0x148d638 <col:1> col:1 implicit 'const struct timespec *__restrict'
| |-AliasAttr 0x148d6b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_timedlock"
| `-WeakRefAttr 0x148d728 <col:21, col:39> ""
|-FunctionDecl 0x148d898 <line:90:3, line:91:58> <scratch space>:177:1 used __gthrw_pthread_mutex_unlock 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' static
| |-ParmVarDecl 0x148d948 <col:1> col:1 implicit 'pthread_mutex_t *'
| |-AliasAttr 0x148d9b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_unlock"
| `-WeakRefAttr 0x148da30 <col:21, col:39> ""
|-FunctionDecl 0x148db18 <line:90:3, line:91:58> <scratch space>:179:1 used __gthrw_pthread_mutex_init 'typeof (pthread_mutex_init)':'int (pthread_mutex_t *, const pthread_mutexattr_t *) throw()' static
| |-ParmVarDecl 0x148dbc8 <col:1> col:1 implicit 'pthread_mutex_t *'
| |-ParmVarDecl 0x148dc40 <col:1> col:1 implicit 'const pthread_mutexattr_t *'
| |-AliasAttr 0x148dcb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_init"
| `-WeakRefAttr 0x148dd30 <col:21, col:39> ""
|-FunctionDecl 0x148de18 <line:90:3, line:91:58> <scratch space>:181:1 used __gthrw_pthread_mutex_destroy 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' static
| |-ParmVarDecl 0x148dec8 <col:1> col:1 implicit 'pthread_mutex_t *'
| |-AliasAttr 0x148df38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutex_destroy"
| `-WeakRefAttr 0x148dfb0 <col:21, col:39> ""
|-FunctionDecl 0x148e098 <line:90:3, line:91:58> <scratch space>:183:1 __gthrw_pthread_cond_init 'typeof (pthread_cond_init)':'int (pthread_cond_t *__restrict, const pthread_condattr_t *__restrict) throw()' static
| |-ParmVarDecl 0x148e148 <col:1> col:1 implicit 'pthread_cond_t *__restrict'
| |-ParmVarDecl 0x148e1c0 <col:1> col:1 implicit 'const pthread_condattr_t *__restrict'
| |-AliasAttr 0x148e238 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_init"
| `-WeakRefAttr 0x148e2b0 <col:21, col:39> ""
|-FunctionDecl 0x148e398 <line:90:3, line:91:58> <scratch space>:185:1 used __gthrw_pthread_cond_broadcast 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' static
| |-ParmVarDecl 0x148e448 <col:1> col:1 implicit 'pthread_cond_t *'
| |-AliasAttr 0x148e4b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_broadcast"
| `-WeakRefAttr 0x148e530 <col:21, col:39> ""
|-FunctionDecl 0x148e618 <line:90:3, line:91:58> <scratch space>:187:1 used __gthrw_pthread_cond_signal 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' static
| |-ParmVarDecl 0x148e6c8 <col:1> col:1 implicit 'pthread_cond_t *'
| |-AliasAttr 0x148e738 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_signal"
| `-WeakRefAttr 0x148e7b0 <col:21, col:39> ""
|-FunctionDecl 0x148e898 <line:90:3, line:91:58> <scratch space>:189:1 used __gthrw_pthread_cond_wait 'typeof (pthread_cond_wait)':'int (pthread_cond_t *__restrict, pthread_mutex_t *__restrict)' static
| |-ParmVarDecl 0x148e948 <col:1> col:1 implicit 'pthread_cond_t *__restrict'
| |-ParmVarDecl 0x148e9c0 <col:1> col:1 implicit 'pthread_mutex_t *__restrict'
| |-AliasAttr 0x148ea38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_wait"
| `-WeakRefAttr 0x148eab0 <col:21, col:39> ""
|-FunctionDecl 0x148eb98 <line:90:3, line:91:58> <scratch space>:191:1 used __gthrw_pthread_cond_timedwait 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *__restrict, pthread_mutex_t *__restrict, const struct timespec *__restrict)' static
| |-ParmVarDecl 0x148ec48 <col:1> col:1 implicit 'pthread_cond_t *__restrict'
| |-ParmVarDecl 0x148ecc0 <col:1> col:1 implicit 'pthread_mutex_t *__restrict'
| |-ParmVarDecl 0x148ed50 <col:1> col:1 implicit 'const struct timespec *__restrict'
| |-AliasAttr 0x148edd0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_timedwait"
| `-WeakRefAttr 0x148ee48 <col:21, col:39> ""
|-FunctionDecl 0x148ef38 <line:90:3, line:91:58> <scratch space>:193:1 used __gthrw_pthread_cond_destroy 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' static
| |-ParmVarDecl 0x148efe8 <col:1> col:1 implicit 'pthread_cond_t *'
| |-AliasAttr 0x148f058 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_cond_destroy"
| `-WeakRefAttr 0x148f0d0 <col:21, col:39> ""
|-FunctionDecl 0x133b818 <line:90:3, line:91:58> <scratch space>:195:1 used __gthrw_pthread_key_create 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' static
| |-ParmVarDecl 0x133b8c8 <col:1> col:1 implicit 'pthread_key_t *'
| |-ParmVarDecl 0x133b968 <col:1> col:1 implicit 'void (*)(void *)'
| |-AliasAttr 0x133b9e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_key_create"
| `-WeakRefAttr 0x133ba58 <col:21, col:39> ""
|-FunctionDecl 0x133bb48 <line:90:3, line:91:58> <scratch space>:197:1 used __gthrw_pthread_key_delete 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' static
| |-ParmVarDecl 0x133bbf8 <col:1> col:1 implicit 'pthread_key_t':'unsigned int'
| |-AliasAttr 0x133bc68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_key_delete"
| `-WeakRefAttr 0x133bce0 <col:21, col:39> ""
|-FunctionDecl 0x133bdc8 <line:90:3, line:91:58> <scratch space>:199:1 __gthrw_pthread_mutexattr_init 'typeof (pthread_mutexattr_init)':'int (pthread_mutexattr_t *) throw()' static
| |-ParmVarDecl 0x133be78 <col:1> col:1 implicit 'pthread_mutexattr_t *'
| |-AliasAttr 0x133bee8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutexattr_init"
| `-WeakRefAttr 0x133bf60 <col:21, col:39> ""
|-FunctionDecl 0x133c0c8 <line:90:3, line:91:58> <scratch space>:201:1 __gthrw_pthread_mutexattr_settype 'typeof (pthread_mutexattr_settype)':'int (pthread_mutexattr_t *, int) throw()' static
| |-ParmVarDecl 0x133c178 <col:1> col:1 implicit 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x133c1f8 <col:1> col:1 implicit 'int'
| |-AliasAttr 0x133c270 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutexattr_settype"
| `-WeakRefAttr 0x133c2f0 <col:21, col:39> ""
|-FunctionDecl 0x133c3e8 <line:90:3, line:91:58> <scratch space>:203:1 __gthrw_pthread_mutexattr_destroy 'typeof (pthread_mutexattr_destroy)':'int (pthread_mutexattr_t *) throw()' static
| |-ParmVarDecl 0x133c498 <col:1> col:1 implicit 'pthread_mutexattr_t *'
| |-AliasAttr 0x133c508 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "pthread_mutexattr_destroy"
| `-WeakRefAttr 0x133c588 <col:21, col:39> ""
|-FunctionDecl 0x133c678 <line:90:3, line:91:58> <scratch space>:205:1 used __gthrw___pthread_key_create 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' static
| |-ParmVarDecl 0x133c728 <col:1> col:1 implicit 'pthread_key_t *'
| |-ParmVarDecl 0x133c7c8 <col:1> col:1 implicit 'void (*)(void *)'
| |-AliasAttr 0x133c840 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:91:21, col:39> "__pthread_key_create"
| `-WeakRefAttr 0x133c8b8 <col:21, col:39> ""
|-FunctionDecl 0x133c988 <line:247:1, line:253:1> line:248:1 used __gthread_active_p 'int ()' static inline
| `-CompoundStmt 0x133ccc0 <line:249:1, line:253:1>
|   |-DeclStmt 0x133cb98 <line:250:3, line:251:48>
|   | `-VarDecl 0x133ca40 <line:250:3, <scratch space>:207:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:250:22 used __gthread_active_ptr 'void *const' static cinit
|   |   `-UnaryOperator 0x133cb80 <line:251:7, <scratch space>:207:1> 'void *' prefix '__extension__' cannot overflow
|   |     `-CStyleCastExpr 0x133cb58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:251:21, <scratch space>:207:1> 'void *' <BitCast>
|   |       `-UnaryOperator 0x133cb28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:251:30, <scratch space>:207:1> 'typeof (pthread_key_create) *' prefix '&' cannot overflow
|   |         `-DeclRefExpr 0x133caa8 <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x133c678 '__gthrw___pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'
|   `-ReturnStmt 0x133ccb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:252:3, col:34>
|     `-ImplicitCastExpr 0x133cc40 <col:10, col:34> 'int' <IntegralCast>
|       `-BinaryOperator 0x133cc20 <col:10, col:34> 'bool' '!='
|         |-ImplicitCastExpr 0x133cbf0 <col:10> 'void *' <LValueToRValue>
|         | `-DeclRefExpr 0x133cbb0 <col:10> 'void *const' lvalue Var 0x133ca40 '__gthread_active_ptr' 'void *const'
|         `-ImplicitCastExpr 0x133cc08 <col:34> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x133cbd0 <col:34> 'int' 0
|-FunctionDecl 0x133d010 <line:659:1, line:664:1> line:660:1 __gthread_create 'int (__gthread_t *, void *(*)(void *), void *)' static inline
| |-ParmVarDecl 0x133cd38 <col:19, col:32> col:32 used __threadid '__gthread_t *'
| |-ParmVarDecl 0x133ce60 <col:44, col:66> col:52 used __func 'void *(*)(void *)'
| |-ParmVarDecl 0x133cee0 <line:661:5, col:11> col:11 used __args 'void *'
| `-CompoundStmt 0x133d2d0 <line:662:1, line:664:1>
|   `-ReturnStmt 0x133d2c0 <line:663:3, col:68>
|     `-CallExpr 0x133d220 <<scratch space>:208:1, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:663:68> 'int'
|       |-ImplicitCastExpr 0x133d208 <<scratch space>:208:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x133d188 <col:1> 'typeof (pthread_create)':'int (pthread_t *__restrict, const pthread_attr_t *__restrict, void *(*)(void *), void *__restrict) throw()' lvalue Function 0x148ba98 '_